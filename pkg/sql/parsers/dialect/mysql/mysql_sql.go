// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const LOWER_THAN_ORDER = 57352
const ORDER = 57353
const SELECT = 57354
const INSERT = 57355
const UPDATE = 57356
const DELETE = 57357
const FROM = 57358
const WHERE = 57359
const GROUP = 57360
const HAVING = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const AFTER = 57388
const INSTANT = 57389
const INPLACE = 57390
const COPY = 57391
const DISABLE = 57392
const ENABLE = 57393
const UNDEFINED = 57394
const MERGE = 57395
const TEMPTABLE = 57396
const DEFINER = 57397
const INVOKER = 57398
const SQL = 57399
const SECURITY = 57400
const CASCADED = 57401
const VALUES = 57402
const NEXT = 57403
const VALUE = 57404
const SHARE = 57405
const MODE = 57406
const SQL_NO_CACHE = 57407
const SQL_CACHE = 57408
const JOIN = 57409
const STRAIGHT_JOIN = 57410
const LEFT = 57411
const RIGHT = 57412
const INNER = 57413
const OUTER = 57414
const CROSS = 57415
const NATURAL = 57416
const USE = 57417
const FORCE = 57418
const LOWER_THAN_ON = 57419
const ON = 57420
const USING = 57421
const SUBQUERY_AS_EXPR = 57422
const LOWER_THAN_STRING = 57423
const ID = 57424
const AT_ID = 57425
const AT_AT_ID = 57426
const STRING = 57427
const VALUE_ARG = 57428
const LIST_ARG = 57429
const COMMENT = 57430
const COMMENT_KEYWORD = 57431
const QUOTE_ID = 57432
const STAGE = 57433
const CREDENTIALS = 57434
const STAGES = 57435
const INTEGRAL = 57436
const HEX = 57437
const BIT_LITERAL = 57438
const FLOAT = 57439
const HEXNUM = 57440
const NULL = 57441
const TRUE = 57442
const FALSE = 57443
const LOWER_THAN_CHARSET = 57444
const CHARSET = 57445
const UNIQUE = 57446
const KEY = 57447
const OR = 57448
const PIPE_CONCAT = 57449
const XOR = 57450
const AND = 57451
const NOT = 57452
const BETWEEN = 57453
const CASE = 57454
const WHEN = 57455
const THEN = 57456
const ELSE = 57457
const END = 57458
const ELSEIF = 57459
const LOWER_THAN_EQ = 57460
const LE = 57461
const GE = 57462
const NE = 57463
const NULL_SAFE_EQUAL = 57464
const IS = 57465
const LIKE = 57466
const REGEXP = 57467
const IN = 57468
const ASSIGNMENT = 57469
const ILIKE = 57470
const SHIFT_LEFT = 57471
const SHIFT_RIGHT = 57472
const DIV = 57473
const MOD = 57474
const UNARY = 57475
const COLLATE = 57476
const BINARY = 57477
const UNDERSCORE_BINARY = 57478
const INTERVAL = 57479
const OUT = 57480
const INOUT = 57481
const BEGIN = 57482
const START = 57483
const TRANSACTION = 57484
const COMMIT = 57485
const ROLLBACK = 57486
const WORK = 57487
const CONSISTENT = 57488
const SNAPSHOT = 57489
const CHAIN = 57490
const NO = 57491
const RELEASE = 57492
const PRIORITY = 57493
const QUICK = 57494
const BIT = 57495
const TINYINT = 57496
const SMALLINT = 57497
const MEDIUMINT = 57498
const INT = 57499
const INTEGER = 57500
const BIGINT = 57501
const INTNUM = 57502
const REAL = 57503
const DOUBLE = 57504
const FLOAT_TYPE = 57505
const DECIMAL = 57506
const NUMERIC = 57507
const DECIMAL_VALUE = 57508
const TIME = 57509
const TIMESTAMP = 57510
const DATETIME = 57511
const YEAR = 57512
const CHAR = 57513
const VARCHAR = 57514
const BOOL = 57515
const CHARACTER = 57516
const VARBINARY = 57517
const NCHAR = 57518
const TEXT = 57519
const TINYTEXT = 57520
const MEDIUMTEXT = 57521
const LONGTEXT = 57522
const BLOB = 57523
const TINYBLOB = 57524
const MEDIUMBLOB = 57525
const LONGBLOB = 57526
const JSON = 57527
const ENUM = 57528
const UUID = 57529
const VECF32 = 57530
const VECF64 = 57531
const GEOMETRY = 57532
const POINT = 57533
const LINESTRING = 57534
const POLYGON = 57535
const GEOMETRYCOLLECTION = 57536
const MULTIPOINT = 57537
const MULTILINESTRING = 57538
const MULTIPOLYGON = 57539
const INT1 = 57540
const INT2 = 57541
const INT3 = 57542
const INT4 = 57543
const INT8 = 57544
const S3OPTION = 57545
const SQL_SMALL_RESULT = 57546
const SQL_BIG_RESULT = 57547
const SQL_BUFFER_RESULT = 57548
const LOW_PRIORITY = 57549
const HIGH_PRIORITY = 57550
const DELAYED = 57551
const CREATE = 57552
const ALTER = 57553
const DROP = 57554
const RENAME = 57555
const ANALYZE = 57556
const ADD = 57557
const RETURNS = 57558
const SCHEMA = 57559
const TABLE = 57560
const SEQUENCE = 57561
const INDEX = 57562
const VIEW = 57563
const TO = 57564
const IGNORE = 57565
const IF = 57566
const PRIMARY = 57567
const COLUMN = 57568
const CONSTRAINT = 57569
const SPATIAL = 57570
const FULLTEXT = 57571
const FOREIGN = 57572
const KEY_BLOCK_SIZE = 57573
const SHOW = 57574
const DESCRIBE = 57575
const EXPLAIN = 57576
const DATE = 57577
const ESCAPE = 57578
const REPAIR = 57579
const OPTIMIZE = 57580
const TRUNCATE = 57581
const MAXVALUE = 57582
const PARTITION = 57583
const REORGANIZE = 57584
const LESS = 57585
const THAN = 57586
const PROCEDURE = 57587
const TRIGGER = 57588
const STATUS = 57589
const VARIABLES = 57590
const ROLE = 57591
const PROXY = 57592
const AVG_ROW_LENGTH = 57593
const STORAGE = 57594
const DISK = 57595
const MEMORY = 57596
const CHECKSUM = 57597
const COMPRESSION = 57598
const DATA = 57599
const DIRECTORY = 57600
const DELAY_KEY_WRITE = 57601
const ENCRYPTION = 57602
const ENGINE = 57603
const MAX_ROWS = 57604
const MIN_ROWS = 57605
const PACK_KEYS = 57606
const ROW_FORMAT = 57607
const STATS_AUTO_RECALC = 57608
const STATS_PERSISTENT = 57609
const STATS_SAMPLE_PAGES = 57610
const DYNAMIC = 57611
const COMPRESSED = 57612
const REDUNDANT = 57613
const COMPACT = 57614
const FIXED = 57615
const COLUMN_FORMAT = 57616
const AUTO_RANDOM = 57617
const ENGINE_ATTRIBUTE = 57618
const SECONDARY_ENGINE_ATTRIBUTE = 57619
const INSERT_METHOD = 57620
const RESTRICT = 57621
const CASCADE = 57622
const ACTION = 57623
const PARTIAL = 57624
const SIMPLE = 57625
const CHECK = 57626
const ENFORCED = 57627
const RANGE = 57628
const LIST = 57629
const ALGORITHM = 57630
const LINEAR = 57631
const PARTITIONS = 57632
const SUBPARTITION = 57633
const SUBPARTITIONS = 57634
const CLUSTER = 57635
const TYPE = 57636
const ANY = 57637
const SOME = 57638
const EXTERNAL = 57639
const LOCALFILE = 57640
const URL = 57641
const PREPARE = 57642
const DEALLOCATE = 57643
const RESET = 57644
const EXTENSION = 57645
const INCREMENT = 57646
const CYCLE = 57647
const MINVALUE = 57648
const PUBLICATION = 57649
const SUBSCRIPTIONS = 57650
const PUBLICATIONS = 57651
const PROPERTIES = 57652
const PARSER = 57653
const VISIBLE = 57654
const INVISIBLE = 57655
const BTREE = 57656
const HASH = 57657
const RTREE = 57658
const BSI = 57659
const ZONEMAP = 57660
const LEADING = 57661
const BOTH = 57662
const TRAILING = 57663
const UNKNOWN = 57664
const EXPIRE = 57665
const ACCOUNT = 57666
const ACCOUNTS = 57667
const UNLOCK = 57668
const DAY = 57669
const NEVER = 57670
const PUMP = 57671
const MYSQL_COMPATIBILITY_MODE = 57672
const MODIFY = 57673
const CHANGE = 57674
const SECOND = 57675
const ASCII = 57676
const COALESCE = 57677
const COLLATION = 57678
const HOUR = 57679
const MICROSECOND = 57680
const MINUTE = 57681
const MONTH = 57682
const QUARTER = 57683
const REPEAT = 57684
const REVERSE = 57685
const ROW_COUNT = 57686
const WEEK = 57687
const REVOKE = 57688
const FUNCTION = 57689
const PRIVILEGES = 57690
const TABLESPACE = 57691
const EXECUTE = 57692
const SUPER = 57693
const GRANT = 57694
const OPTION = 57695
const REFERENCES = 57696
const REPLICATION = 57697
const SLAVE = 57698
const CLIENT = 57699
const USAGE = 57700
const RELOAD = 57701
const FILE = 57702
const TEMPORARY = 57703
const ROUTINE = 57704
const EVENT = 57705
const SHUTDOWN = 57706
const NULLX = 57707
const AUTO_INCREMENT = 57708
const APPROXNUM = 57709
const SIGNED = 57710
const UNSIGNED = 57711
const ZEROFILL = 57712
const ENGINES = 57713
const LOW_CARDINALITY = 57714
const AUTOEXTEND_SIZE = 57715
const ADMIN_NAME = 57716
const RANDOM = 57717
const SUSPEND = 57718
const ATTRIBUTE = 57719
const HISTORY = 57720
const REUSE = 57721
const CURRENT = 57722
const OPTIONAL = 57723
const FAILED_LOGIN_ATTEMPTS = 57724
const PASSWORD_LOCK_TIME = 57725
const UNBOUNDED = 57726
const SECONDARY = 57727
const RESTRICTED = 57728
const USER = 57729
const IDENTIFIED = 57730
const CIPHER = 57731
const ISSUER = 57732
const X509 = 57733
const SUBJECT = 57734
const SAN = 57735
const REQUIRE = 57736
const SSL = 57737
const NONE = 57738
const PASSWORD = 57739
const SHARED = 57740
const EXCLUSIVE = 57741
const MAX_QUERIES_PER_HOUR = 57742
const MAX_UPDATES_PER_HOUR = 57743
const MAX_CONNECTIONS_PER_HOUR = 57744
const MAX_USER_CONNECTIONS = 57745
const FORMAT = 57746
const VERBOSE = 57747
const CONNECTION = 57748
const TRIGGERS = 57749
const PROFILES = 57750
const LOAD = 57751
const INLINE = 57752
const INFILE = 57753
const TERMINATED = 57754
const OPTIONALLY = 57755
const ENCLOSED = 57756
const ESCAPED = 57757
const STARTING = 57758
const LINES = 57759
const ROWS = 57760
const IMPORT = 57761
const DISCARD = 57762
const MODUMP = 57763
const OVER = 57764
const PRECEDING = 57765
const FOLLOWING = 57766
const GROUPS = 57767
const DATABASES = 57768
const TABLES = 57769
const SEQUENCES = 57770
const EXTENDED = 57771
const FULL = 57772
const PROCESSLIST = 57773
const FIELDS = 57774
const COLUMNS = 57775
const OPEN = 57776
const ERRORS = 57777
const WARNINGS = 57778
const INDEXES = 57779
const SCHEMAS = 57780
const NODE = 57781
const LOCKS = 57782
const ROLES = 57783
const TABLE_NUMBER = 57784
const COLUMN_NUMBER = 57785
const TABLE_VALUES = 57786
const TABLE_SIZE = 57787
const NAMES = 57788
const GLOBAL = 57789
const PERSIST = 57790
const SESSION = 57791
const ISOLATION = 57792
const LEVEL = 57793
const READ = 57794
const WRITE = 57795
const ONLY = 57796
const REPEATABLE = 57797
const COMMITTED = 57798
const UNCOMMITTED = 57799
const SERIALIZABLE = 57800
const LOCAL = 57801
const EVENTS = 57802
const PLUGINS = 57803
const CURRENT_TIMESTAMP = 57804
const DATABASE = 57805
const CURRENT_TIME = 57806
const LOCALTIME = 57807
const LOCALTIMESTAMP = 57808
const UTC_DATE = 57809
const UTC_TIME = 57810
const UTC_TIMESTAMP = 57811
const REPLACE = 57812
const CONVERT = 57813
const SEPARATOR = 57814
const TIMESTAMPDIFF = 57815
const CURRENT_DATE = 57816
const CURRENT_USER = 57817
const CURRENT_ROLE = 57818
const SECOND_MICROSECOND = 57819
const MINUTE_MICROSECOND = 57820
const MINUTE_SECOND = 57821
const HOUR_MICROSECOND = 57822
const HOUR_SECOND = 57823
const HOUR_MINUTE = 57824
const DAY_MICROSECOND = 57825
const DAY_SECOND = 57826
const DAY_MINUTE = 57827
const DAY_HOUR = 57828
const YEAR_MONTH = 57829
const SQL_TSI_HOUR = 57830
const SQL_TSI_DAY = 57831
const SQL_TSI_WEEK = 57832
const SQL_TSI_MONTH = 57833
const SQL_TSI_QUARTER = 57834
const SQL_TSI_YEAR = 57835
const SQL_TSI_SECOND = 57836
const SQL_TSI_MINUTE = 57837
const RECURSIVE = 57838
const CONFIG = 57839
const DRAINER = 57840
const SOURCE = 57841
const STREAM = 57842
const HEADERS = 57843
const CONNECTOR = 57844
const MATCH = 57845
const AGAINST = 57846
const BOOLEAN = 57847
const LANGUAGE = 57848
const WITH = 57849
const QUERY = 57850
const EXPANSION = 57851
const WITHOUT = 57852
const VALIDATION = 57853
const ADDDATE = 57854
const BIT_AND = 57855
const BIT_OR = 57856
const BIT_XOR = 57857
const CAST = 57858
const COUNT = 57859
const APPROX_COUNT = 57860
const APPROX_COUNT_DISTINCT = 57861
const APPROX_PERCENTILE = 57862
const CURDATE = 57863
const CURTIME = 57864
const DATE_ADD = 57865
const DATE_SUB = 57866
const EXTRACT = 57867
const GROUP_CONCAT = 57868
const MAX = 57869
const MID = 57870
const MIN = 57871
const NOW = 57872
const POSITION = 57873
const SESSION_USER = 57874
const STD = 57875
const STDDEV = 57876
const MEDIAN = 57877
const STDDEV_POP = 57878
const STDDEV_SAMP = 57879
const SUBDATE = 57880
const SUBSTR = 57881
const SUBSTRING = 57882
const SUM = 57883
const SYSDATE = 57884
const SYSTEM_USER = 57885
const TRANSLATE = 57886
const TRIM = 57887
const VARIANCE = 57888
const VAR_POP = 57889
const VAR_SAMP = 57890
const AVG = 57891
const RANK = 57892
const ROW_NUMBER = 57893
const DENSE_RANK = 57894
const BIT_CAST = 57895
const NEXTVAL = 57896
const SETVAL = 57897
const CURRVAL = 57898
const LASTVAL = 57899
const ARROW = 57900
const ROW = 57901
const OUTFILE = 57902
const HEADER = 57903
const MAX_FILE_SIZE = 57904
const FORCE_QUOTE = 57905
const PARALLEL = 57906
const UNUSED = 57907
const BINDINGS = 57908
const DO = 57909
const DECLARE = 57910
const LOOP = 57911
const WHILE = 57912
const LEAVE = 57913
const ITERATE = 57914
const UNTIL = 57915
const CALL = 57916
const SPBEGIN = 57917
const BACKEND = 57918
const SERVERS = 57919
const HANDLER = 57920
const KILL = 57921
const BACKUP = 57922
const FILESYSTEM = 57923
const QUERY_RESULT = 57924

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"LOWER_THAN_ORDER",
	"ORDER",
	"SELECT",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"AFTER",
	"INSTANT",
	"INPLACE",
	"COPY",
	"DISABLE",
	"ENABLE",
	"UNDEFINED",
	"MERGE",
	"TEMPTABLE",
	"DEFINER",
	"INVOKER",
	"SQL",
	"SECURITY",
	"CASCADED",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"QUOTE_ID",
	"STAGE",
	"CREDENTIALS",
	"STAGES",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"ELSEIF",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"ILIKE",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"OUT",
	"INOUT",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"VECF32",
	"VECF64",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"S3OPTION",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"RETURNS",
	"SCHEMA",
	"TABLE",
	"SEQUENCE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"ENGINE_ATTRIBUTE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"INSERT_METHOD",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"CLUSTER",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"RESET",
	"EXTENSION",
	"INCREMENT",
	"CYCLE",
	"MINVALUE",
	"PUBLICATION",
	"SUBSCRIPTIONS",
	"PUBLICATIONS",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"ACCOUNTS",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"MYSQL_COMPATIBILITY_MODE",
	"MODIFY",
	"CHANGE",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"AUTOEXTEND_SIZE",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"RESTRICTED",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"SHARED",
	"EXCLUSIVE",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INLINE",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"DISCARD",
	"MODUMP",
	"OVER",
	"PRECEDING",
	"FOLLOWING",
	"GROUPS",
	"DATABASES",
	"TABLES",
	"SEQUENCES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NODE",
	"LOCKS",
	"ROLES",
	"TABLE_NUMBER",
	"COLUMN_NUMBER",
	"TABLE_VALUES",
	"TABLE_SIZE",
	"NAMES",
	"GLOBAL",
	"PERSIST",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"SOURCE",
	"STREAM",
	"HEADERS",
	"CONNECTOR",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"MEDIAN",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"RANK",
	"ROW_NUMBER",
	"DENSE_RANK",
	"BIT_CAST",
	"NEXTVAL",
	"SETVAL",
	"CURRVAL",
	"LASTVAL",
	"ARROW",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"PARALLEL",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"LOOP",
	"WHILE",
	"LEAVE",
	"ITERATE",
	"UNTIL",
	"CALL",
	"SPBEGIN",
	"BACKEND",
	"SERVERS",
	"HANDLER",
	"KILL",
	"BACKUP",
	"FILESYSTEM",
	"QUERY_RESULT",
	"';'",
	"'{'",
	"'}'",
	"':'",
	"'@'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:10440

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 115,
	21, 698,
	-2, 679,
	-1, 132,
	235, 1038,
	237, 960,
	-2, 1001,
	-1, 155,
	42, 517,
	237, 517,
	264, 524,
	265, 524,
	454, 517,
	-2, 550,
	-1, 191,
	603, 1754,
	-2, 433,
	-1, 528,
	316, 133,
	427, 133,
	428, 133,
	-2, 1664,
	-1, 592,
	81, 1459,
	-2, 1808,
	-1, 593,
	81, 1477,
	-2, 1779,
	-1, 597,
	81, 1478,
	-2, 1807,
	-1, 623,
	81, 1389,
	-2, 1876,
	-1, 624,
	81, 1390,
	-2, 1875,
	-1, 625,
	81, 1391,
	-2, 1865,
	-1, 626,
	81, 1839,
	-2, 1860,
	-1, 627,
	81, 1840,
	-2, 1861,
	-1, 628,
	81, 1841,
	-2, 1867,
	-1, 629,
	81, 1842,
	-2, 1849,
	-1, 630,
	81, 1843,
	-2, 1858,
	-1, 631,
	81, 1844,
	-2, 1868,
	-1, 632,
	81, 1845,
	-2, 1869,
	-1, 633,
	81, 1846,
	-2, 1874,
	-1, 634,
	81, 1847,
	-2, 1879,
	-1, 635,
	81, 1848,
	-2, 1880,
	-1, 637,
	81, 1456,
	-2, 1652,
	-1, 641,
	81, 1461,
	-2, 1665,
	-1, 644,
	81, 1465,
	-2, 1683,
	-1, 648,
	81, 1469,
	-2, 1725,
	-1, 649,
	81, 1470,
	-2, 1803,
	-1, 657,
	81, 1480,
	-2, 1788,
	-1, 658,
	81, 1481,
	-2, 1832,
	-1, 659,
	81, 1482,
	-2, 1798,
	-1, 660,
	81, 1483,
	-2, 1822,
	-1, 671,
	81, 1367,
	-2, 1870,
	-1, 672,
	81, 1368,
	-2, 1871,
	-1, 673,
	81, 1369,
	-2, 1872,
	-1, 677,
	21, 699,
	-2, 662,
	-1, 757,
	449, 550,
	450, 550,
	-2, 518,
	-1, 801,
	122, 1652,
	133, 1652,
	153, 1652,
	-2, 1627,
	-1, 907,
	21, 699,
	-2, 662,
	-1, 1007,
	21, 698,
	-2, 1264,
	-1, 1125,
	364, 1002,
	516, 1002,
	517, 1002,
	-2, 878,
	-1, 1383,
	81, 1527,
	-2, 1805,
	-1, 1384,
	81, 1528,
	-2, 1806,
	-1, 1523,
	82, 845,
	-2, 851,
	-1, 1919,
	105, 995,
	149, 995,
	188, 995,
	191, 995,
	277, 995,
	-2, 988,
	-1, 2056,
	21, 698,
	-2, 792,
	-1, 2089,
	82, 1613,
	154, 1613,
	-2, 1790,
	-1, 2090,
	82, 1613,
	154, 1613,
	-2, 1789,
	-1, 2091,
	82, 1589,
	154, 1589,
	-2, 1776,
	-1, 2092,
	82, 1590,
	154, 1590,
	-2, 1781,
	-1, 2093,
	82, 1591,
	154, 1591,
	-2, 1713,
	-1, 2094,
	82, 1592,
	154, 1592,
	-2, 1707,
	-1, 2095,
	82, 1593,
	154, 1593,
	-2, 1643,
	-1, 2096,
	82, 1594,
	154, 1594,
	-2, 1778,
	-1, 2097,
	82, 1595,
	154, 1595,
	-2, 1711,
	-1, 2098,
	82, 1596,
	154, 1596,
	-2, 1706,
	-1, 2099,
	82, 1597,
	154, 1597,
	-2, 1697,
	-1, 2100,
	82, 1613,
	154, 1613,
	-2, 1698,
	-1, 2101,
	82, 1613,
	154, 1613,
	-2, 1699,
	-1, 2103,
	82, 1602,
	154, 1602,
	-2, 1822,
	-1, 2104,
	82, 1580,
	154, 1580,
	-2, 1808,
	-1, 2105,
	82, 1611,
	154, 1611,
	-2, 1779,
	-1, 2106,
	82, 1611,
	154, 1611,
	-2, 1807,
	-1, 2107,
	82, 1611,
	154, 1611,
	-2, 1666,
	-1, 2108,
	82, 1609,
	154, 1609,
	-2, 1798,
	-1, 2109,
	82, 1606,
	154, 1606,
	-2, 1688,
	-1, 2110,
	81, 1561,
	82, 1561,
	154, 1561,
	385, 1561,
	386, 1561,
	387, 1561,
	-2, 1642,
	-1, 2111,
	81, 1562,
	82, 1562,
	154, 1562,
	385, 1562,
	386, 1562,
	387, 1562,
	-2, 1644,
	-1, 2112,
	81, 1565,
	82, 1565,
	154, 1565,
	385, 1565,
	386, 1565,
	387, 1565,
	-2, 1780,
	-1, 2113,
	81, 1567,
	82, 1567,
	154, 1567,
	385, 1567,
	386, 1567,
	387, 1567,
	-2, 1763,
	-1, 2114,
	81, 1569,
	82, 1569,
	154, 1569,
	385, 1569,
	386, 1569,
	387, 1569,
	-2, 1712,
	-1, 2115,
	81, 1571,
	82, 1571,
	154, 1571,
	385, 1571,
	386, 1571,
	387, 1571,
	-2, 1693,
	-1, 2116,
	81, 1572,
	82, 1572,
	154, 1572,
	385, 1572,
	386, 1572,
	387, 1572,
	-2, 1694,
	-1, 2117,
	81, 1574,
	82, 1574,
	154, 1574,
	385, 1574,
	386, 1574,
	387, 1574,
	-2, 1641,
	-1, 2118,
	82, 1616,
	154, 1616,
	385, 1616,
	386, 1616,
	387, 1616,
	-2, 1671,
	-1, 2119,
	82, 1616,
	154, 1616,
	385, 1616,
	386, 1616,
	387, 1616,
	-2, 1684,
	-1, 2120,
	82, 1619,
	154, 1619,
	385, 1619,
	386, 1619,
	387, 1619,
	-2, 1667,
	-1, 2121,
	82, 1619,
	154, 1619,
	385, 1619,
	386, 1619,
	387, 1619,
	-2, 1728,
	-1, 2122,
	82, 1616,
	154, 1616,
	385, 1616,
	386, 1616,
	387, 1616,
	-2, 1748,
	-1, 2296,
	105, 995,
	149, 995,
	188, 995,
	191, 995,
	277, 995,
	-2, 989,
	-1, 2312,
	79, 608,
	154, 608,
	-2, 1151,
	-1, 2650,
	191, 995,
	301, 1232,
	-2, 1204,
	-1, 2792,
	105, 995,
	149, 995,
	188, 995,
	191, 995,
	-2, 1094,
	-1, 2794,
	105, 995,
	149, 995,
	188, 995,
	191, 995,
	-2, 1094,
	-1, 2804,
	79, 608,
	154, 608,
	-2, 1152,
	-1, 2812,
	191, 995,
	301, 1232,
	-2, 1205,
	-1, 2942,
	105, 995,
	149, 995,
	188, 995,
	191, 995,
	-2, 1095,
	-1, 3313,
	82, 1056,
	154, 1056,
	-2, 995,
	-1, 3317,
	82, 1056,
	154, 1056,
	-2, 995,
	-1, 3331,
	82, 1060,
	154, 1060,
	-2, 995,
	-1, 3336,
	82, 1061,
	154, 1061,
	-2, 995,
}

const yyPrivate = 57344

const yyLast = 38822

var yyAct = [...]int{
	559, 1603, 3317, 3316, 3325, 3296, 182, 1363, 537, 3183,
	539, 3245, 3266, 532, 3115, 561, 3209, 3191, 2668, 3192,
	547, 2888, 3100, 2982, 2826, 1040, 1883, 2930, 1219, 2733,
	1359, 1160, 3091, 1301, 3017, 2933, 3119, 2893, 2734, 2932,
	444, 589, 3052, 678, 1291, 541, 800, 2891, 2266, 2761,
	451, 3007, 456, 456, 3101, 3103, 1557, 2937, 456, 472,
	481, 2780, 2944, 481, 2813, 2315, 1958, 2941, 2766, 1366,
	2581, 2883, 2428, 1692, 2611, 167, 2429, 2769, 2411, 2351,
	2087, 2421, 2665, 2654, 2427, 2731, 2301, 2085, 2647, 492,
	1787, 2579, 2719, 1657, 1961, 2450, 1756, 2424, 2700, 2287,
	2592, 2595, 486, 2590, 2050, 2653, 1111, 1689, 1704, 2582,
	1929, 901, 530, 2034, 2297, 1887, 2489, 1212, 1135, 1287,
	1886, 536, 1765, 1764, 1757, 1988, 2331, 1896, 1503, 2472,
	2138, 1292, 2527, 36, 1730, 733, 1685, 1782, 2051, 2231,
	1660, 1783, 806, 1658, 2039, 1586, 531, 1295, 2271, 2333,
	1959, 1595, 2276, 178, 8, 177, 7, 6, 1928, 444,
	1534, 1511, 1280, 2155, 2083, 853, 1784, 2201, 1357, 2078,
	1254, 1228, 1133, 1910, 1816, 1198, 114, 794, 1794, 540,
	529, 2232, 182, 2584, 182, 1413, 844, 845, 35, 2583,
	548, 1397, 478, 838, 839, 1348, 1954, 1760, 843, 1169,
	918, 1568, 764, 1763, 1261, 804, 1149, 26, 1746, 15,
	1559, 1720, 1356, 14, 450, 1569, 1168, 443, 1197, 1079,
	2058, 793, 1362, 465, 32, 1533, 13, 531, 732, 1195,
	468, 1420, 1247, 494, 675, 1419, 23, 16, 10, 1161,
	495, 168, 1253, 161, 710, 1145, 164, 730, 715, 1791,
	480, 841, 1801, 2783, 3046, 2257, 2257, 840, 677, 842,
	2257, 2726, 2190, 2144, 2142, 2141, 477, 1300, 473, 2139,
	1516, 55, 476, 1264, 1268, 837, 836, 837, 166, 1096,
	452, 1041, 3252, 474, 837, 475, 752, 1181, 1266, 976,
	977, 978, 975, 976, 977, 978, 975, 2881, 2485, 461,
	2483, 1735, 3013, 3008, 2884, 2732, 2816, 1507, 3105, 1035,
	1759, 676, 1996, 484, 165, 51, 157, 133, 3063, 686,
	8, 165, 7, 165, 835, 165, 1097, 165, 51, 157,
	133, 165, 2267, 165, 51, 157, 133, 165, 165, 807,
	2767, 1315, 538, 165, 2828, 939, 2176, 2919, 2265, 1308,
	1788, 809, 2184, 1541, 3035, 3137, 1526, 2819, 490, 1105,
	3174, 2551, 3064, 491, 1799, 1528, 1125, 2814, 1914, 2504,
	2076, 1312, 2836, 2837, 2064, 2917, 782, 2063, 2815, 1305,
	2065, 1098, 973, 162, 1702, 2497, 113, 2457, 2458, 1333,
	162, 113, 1314, 2077, 162, 1199, 162, 1201, 1349, 2456,
	1307, 1353, 162, 1670, 1671, 679, 162, 162, 954, 1517,
	1518, 955, 162, 1669, 1177, 2820, 666, 1178, 665, 667,
	668, 687, 669, 670, 2156, 1352, 3228, 1166, 1167, 773,
	1157, 2273, 1582, 966, 810, 3195, 3196, 947, 1164, 957,
	949, 2274, 1163, 1166, 1167, 1365, 971, 803, 3226, 802,
	2902, 3108, 1440, 3108, 3168, 456, 3107, 3167, 3106, 3166,
	3107, 3106, 1874, 3170, 3015, 456, 911, 2490, 950, 3213,
	3214, 3018, 3019, 3020, 3021, 2735, 3093, 2735, 2491, 3093,
	2492, 3096, 3011, 481, 481, 921, 456, 2171, 912, 2272,
	1369, 1803, 1686, 3112, 2744, 2367, 2770, 1795, 2028, 2604,
	1676, 1344, 2606, 1180, 1354, 906, 908, 2777, 2835, 1909,
	1962, 1107, 1106, 3041, 952, 1267, 1265, 3173, 778, 1743,
	2517, 777, 959, 847, 721, 960, 2924, 1351, 2260, 132,
	2181, 163, 1665, 1274, 1273, 2824, 1994, 942, 2838, 969,
	970, 3111, 1454, 943, 2279, 2596, 2515, 979, 968, 2882,
	2415, 155, 2484, 962, 2601, 2602, 1008, 2821, 2825, 2823,
	2822, 2031, 921, 2030, 1017, 3044, 2035, 805, 945, 905,
	2603, 2921, 2291, 2292, 2293, 2294, 1009, 953, 3221, 934,
	948, 951, 2901, 3194, 455, 455, 2620, 1024, 483, 2903,
	463, 911, 910, 2629, 3030, 2830, 2831, 3031, 3176, 3177,
	3060, 1368, 1367, 478, 478, 907, 944, 783, 3125, 1436,
	2308, 1800, 3025, 482, 2600, 1433, 2420, 2850, 2843, 1435,
	1432, 1434, 1438, 1439, 779, 1155, 1916, 1437, 958, 1700,
	1701, 1189, 3230, 2666, 2667, 3225, 1044, 2838, 964, 965,
	3120, 3185, 3310, 1350, 3326, 3257, 3264, 1144, 807, 2817,
	3033, 3181, 3182, 956, 3185, 2829, 2853, 1095, 3040, 1179,
	809, 2973, 2670, 1805, 1807, 1808, 963, 3290, 2005, 1680,
	2004, 3030, 2894, 925, 3031, 923, 922, 477, 477, 473,
	473, 3032, 946, 476, 476, 2395, 723, 781, 724, 2285,
	2968, 961, 2025, 2026, 474, 474, 475, 475, 1103, 451,
	914, 915, 3045, 2747, 2521, 1208, 1207, 932, 2256, 2962,
	456, 1142, 1375, 1378, 1379, 1789, 1789, 1045, 1076, 807,
	1789, 1141, 525, 1376, 1140, 527, 2598, 3033, 931, 3327,
	526, 809, 733, 927, 928, 1159, 1158, 916, 3333, 1110,
	1015, 479, 837, 810, 837, 837, 3062, 479, 2080, 837,
	3297, 3053, 923, 922, 837, 902, 3061, 837, 3032, 2568,
	3269, 2796, 1817, 780, 3321, 2140, 1802, 1957, 1790, 1269,
	1443, 1444, 1445, 1446, 1447, 1448, 1441, 1442, 2879, 456,
	1112, 1191, 490, 1162, 2834, 3090, 1964, 444, 444, 1196,
	1165, 2267, 2918, 3175, 1166, 1167, 444, 444, 2452, 2454,
	1223, 1223, 52, 456, 676, 2662, 2177, 2607, 52, 1113,
	1114, 1115, 1116, 1117, 810, 1119, 1166, 1167, 3042, 1687,
	1124, 2068, 481, 1248, 451, 2518, 134, 1257, 1257, 1225,
	1221, 1221, 1992, 134, 1792, 134, 1230, 134, 182, 134,
	1256, 1256, 1156, 134, 2833, 134, 2278, 444, 2597, 134,
	134, 2920, 2669, 933, 1138, 134, 2185, 3231, 1974, 1143,
	2983, 2984, 2985, 2987, 2986, 3171, 1153, 805, 2368, 1108,
	2369, 2370, 939, 1118, 1171, 1172, 2520, 1174, 1175, 1176,
	1053, 1054, 1677, 1345, 2925, 2756, 1011, 1012, 1013, 1014,
	2467, 2468, 3320, 1967, 1123, 3026, 3270, 1275, 1299, 3027,
	1302, 1806, 2282, 2283, 1977, 1310, 2666, 2667, 1122, 1121,
	1957, 1979, 485, 1104, 3332, 1217, 1218, 2281, 1081, 2599,
	2969, 2970, 1963, 2663, 2975, 1331, 1083, 1965, 727, 728,
	729, 2396, 2398, 2399, 2400, 2397, 722, 1804, 1316, 1223,
	2365, 1223, 911, 1146, 1150, 1150, 1150, 1964, 1967, 1109,
	1377, 677, 1151, 1152, 1130, 2964, 2259, 938, 1890, 2963,
	1101, 2529, 2528, 2453, 1203, 1205, 1146, 1146, 1978, 2386,
	2387, 1520, 3026, 1215, 1216, 1521, 3102, 1892, 1891, 1132,
	1889, 1966, 1099, 1100, 828, 833, 834, 903, 1370, 1371,
	1372, 1373, 1374, 1519, 1289, 1290, 1190, 909, 1385, 1386,
	1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396,
	1326, 1327, 1182, 1183, 1408, 1409, 689, 1278, 930, 1281,
	1282, 2017, 1418, 1968, 1270, 1294, 3267, 3268, 1298, 1206,
	1283, 1284, 1415, 1416, 1417, 1306, 1467, 690, 1249, 1313,
	1451, 1170, 2949, 1297, 1173, 725, 1849, 3294, 1461, 1848,
	478, 1679, 1231, 1346, 461, 976, 977, 978, 975, 1476,
	1340, 1241, 680, 1973, 1457, 1458, 1459, 1971, 1364, 1560,
	1258, 3272, 1246, 3339, 1899, 974, 2697, 1473, 1968, 1259,
	1474, 1560, 1361, 1963, 1957, 1962, 2313, 1960, 1965, 939,
	936, 2385, 1505, 1483, 1484, 2158, 1509, 1900, 1901, 1512,
	3338, 2549, 1330, 1380, 693, 774, 1248, 3249, 1501, 1342,
	1329, 1723, 456, 3329, 1532, 1223, 1536, 1537, 774, 1539,
	1540, 974, 2664, 2048, 477, 456, 473, 1317, 1223, 937,
	476, 2693, 733, 1881, 1339, 1558, 1336, 3311, 2758, 2634,
	1223, 474, 1966, 475, 3306, 974, 1191, 1322, 1318, 1991,
	677, 472, 1504, 1335, 1347, 692, 2746, 680, 1466, 695,
	694, 1358, 2618, 1338, 1337, 1334, 937, 1912, 3300, 1877,
	1581, 1355, 974, 810, 830, 831, 832, 810, 1587, 1587,
	1360, 1191, 3299, 1191, 1191, 3330, 3277, 456, 776, 1532,
	1532, 775, 1399, 1223, 1654, 1655, 1667, 3247, 1531, 3203,
	3197, 776, 2176, 784, 775, 974, 2049, 1538, 3147, 1797,
	444, 1585, 1223, 1525, 2314, 1527, 3307, 3084, 2697, 976,
	977, 978, 975, 3083, 2314, 3079, 1505, 3078, 1542, 1543,
	1544, 1505, 1505, 3077, 3076, 3048, 2672, 456, 1532, 1223,
	1797, 1709, 1120, 456, 456, 1713, 1714, 2049, 2049, 1721,
	1605, 1147, 1718, 1719, 1797, 2910, 2857, 1725, 1797, 2681,
	1566, 1567, 2470, 1452, 182, 1880, 2262, 182, 182, 3248,
	182, 3204, 3049, 1649, 1650, 2163, 1733, 1576, 1577, 1736,
	3049, 1911, 1739, 2621, 2447, 1741, 1589, 1478, 2080, 3085,
	2619, 2238, 939, 1449, 1450, 1933, 1453, 3049, 1681, 3049,
	1077, 1508, 1788, 2230, 1468, 3049, 3049, 3049, 1467, 1467,
	1767, 1187, 1502, 1668, 1952, 1467, 1467, 1475, 1882, 1477,
	1774, 1673, 1706, 1675, 1588, 1695, 1696, 2911, 2080, 1708,
	1853, 2682, 1779, 1693, 1694, 1229, 2191, 1535, 1524, 1734,
	1146, 1698, 1737, 1738, 1558, 1740, 1406, 1407, 1223, 1786,
	1550, 1711, 1712, 1688, 1575, 2622, 2049, 2174, 1131, 1554,
	1555, 2208, 1563, 974, 1574, 1150, 1570, 1148, 1572, 1573,
	2167, 2165, 1579, 1828, 1571, 974, 1411, 2160, 1209, 1580,
	2153, 1578, 1583, 1584, 1591, 1592, 1565, 2151, 904, 896,
	892, 893, 894, 895, 2149, 2213, 1590, 2212, 2211, 2209,
	1780, 2147, 976, 977, 978, 975, 1932, 2776, 974, 1768,
	1878, 1859, 2807, 1814, 1815, 1535, 1656, 1858, 1653, 2635,
	1847, 1672, 2474, 1674, 2316, 1820, 1838, 2179, 1824, 1933,
	1762, 1682, 2178, 2170, 1810, 1949, 1844, 1762, 1829, 1778,
	1728, 2996, 2161, 2166, 1837, 1836, 1796, 2639, 1827, 2161,
	1703, 1707, 2154, 1716, 1319, 1323, 1021, 478, 2060, 2152,
	924, 1358, 904, 2210, 899, 1731, 2148, 897, 1835, 2855,
	1729, 1697, 991, 2148, 1456, 1455, 1842, 3126, 1933, 1561,
	1562, 2512, 1877, 974, 807, 1456, 1455, 3286, 2950, 974,
	2799, 807, 974, 3273, 1855, 1748, 809, 2797, 974, 1860,
	1861, 1862, 1989, 809, 1865, 1866, 1867, 1868, 1869, 1870,
	1871, 1872, 1769, 1854, 1147, 1856, 974, 974, 1797, 1771,
	1136, 3127, 1863, 530, 1137, 1777, 456, 1324, 456, 1213,
	904, 477, 2951, 473, 2800, 1211, 1772, 476, 1773, 2139,
	1214, 2798, 1781, 456, 456, 456, 3047, 3022, 474, 2966,
	475, 1405, 2965, 2782, 1776, 1930, 992, 993, 994, 995,
	996, 997, 998, 991, 2698, 1937, 1191, 1402, 1404, 1401,
	2691, 1403, 1809, 2686, 1934, 2630, 1942, 807, 2683, 810,
	2613, 2417, 1818, 2289, 1489, 2258, 810, 2189, 2164, 809,
	1191, 2070, 1399, 1811, 1127, 1482, 2214, 2215, 1822, 1479,
	1480, 1481, 2724, 1984, 1485, 1486, 1487, 1488, 1490, 1491,
	1492, 1493, 1494, 1495, 1496, 1497, 989, 999, 1000, 992,
	993, 994, 995, 996, 997, 998, 991, 562, 572, 1126,
	1148, 913, 2198, 1904, 1210, 2133, 563, 1732, 571, 564,
	568, 567, 565, 566, 1529, 994, 995, 996, 997, 998,
	991, 2631, 1990, 1414, 1262, 1823, 1732, 1545, 976, 977,
	978, 975, 691, 2053, 2053, 1667, 2053, 1414, 2476, 2727,
	978, 975, 810, 489, 1530, 976, 977, 978, 975, 2223,
	1873, 1875, 1876, 3165, 444, 444, 2143, 1505, 975, 1505,
	2978, 569, 911, 2977, 2493, 2632, 2357, 1945, 1223, 456,
	2356, 2339, 1906, 1893, 2337, 2927, 2928, 1505, 1505, 2957,
	3315, 456, 1023, 3303, 1913, 3258, 911, 2123, 451, 1593,
	1471, 2288, 1257, 570, 1667, 1022, 3253, 2128, 2074, 2130,
	3187, 3156, 3128, 182, 1472, 1256, 1995, 1044, 1997, 1998,
	1999, 2000, 2001, 2002, 2003, 1812, 1813, 2006, 2007, 2008,
	2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2057, 2018,
	2019, 2020, 2021, 2022, 3069, 2023, 1951, 1938, 2055, 1705,
	2059, 976, 977, 978, 975, 1705, 1705, 1939, 1940, 2172,
	1956, 2066, 1786, 2067, 696, 1150, 1955, 1943, 1944, 1223,
	3289, 1223, 1948, 1223, 1969, 1970, 1946, 1975, 911, 1947,
	2922, 2071, 2072, 3065, 3009, 1950, 2953, 2952, 2134, 982,
	983, 984, 985, 986, 987, 988, 980, 2127, 1045, 2082,
	2781, 2182, 976, 977, 978, 975, 2801, 2032, 2773, 1223,
	2217, 2725, 976, 977, 978, 975, 2605, 2199, 2508, 2488,
	1262, 807, 2088, 2487, 2061, 2224, 2218, 2219, 3188, 2390,
	1223, 3288, 2389, 809, 2221, 2222, 2923, 2216, 2774, 1221,
	2226, 1203, 1205, 976, 977, 978, 975, 2227, 2388, 2407,
	2075, 2405, 2200, 2403, 976, 977, 978, 975, 2225, 2542,
	1221, 999, 1000, 992, 993, 994, 995, 996, 997, 998,
	991, 1505, 2126, 2392, 2251, 2252, 1512, 1832, 2228, 911,
	2380, 2374, 2373, 911, 2372, 456, 2202, 2202, 976, 977,
	978, 975, 1223, 2371, 2775, 2286, 1751, 2135, 1750, 1749,
	1745, 1532, 2302, 2188, 2186, 2406, 1744, 2404, 2312, 2402,
	2183, 2125, 2124, 1320, 2318, 1094, 810, 2422, 2541, 2591,
	2132, 2196, 2169, 976, 977, 978, 975, 3276, 2175, 2391,
	2327, 2249, 1263, 525, 3220, 911, 527, 2180, 3218, 2173,
	2889, 526, 3215, 2336, 976, 977, 978, 975, 3134, 3114,
	911, 911, 911, 1587, 3118, 2931, 911, 3099, 2347, 2348,
	2349, 911, 2298, 2353, 2354, 3088, 2355, 2192, 2193, 976,
	977, 978, 975, 2207, 2205, 3073, 3068, 3067, 2233, 2234,
	976, 977, 978, 975, 2239, 2299, 3043, 2309, 3010, 2053,
	2959, 1358, 2940, 2926, 2887, 1605, 2885, 2864, 1884, 1885,
	2861, 2859, 2412, 2408, 3130, 2263, 2319, 2772, 2771, 2088,
	1840, 444, 2768, 2752, 2692, 2275, 1532, 911, 1667, 1667,
	1667, 1667, 2688, 2250, 2253, 976, 977, 978, 975, 911,
	1667, 2679, 2678, 2053, 2614, 2334, 2575, 2320, 1903, 2334,
	1905, 2574, 2573, 1826, 2330, 2324, 2325, 2264, 2335, 1223,
	1888, 2522, 2284, 2519, 1825, 1922, 1923, 1924, 2269, 2341,
	2486, 456, 456, 2461, 2896, 8, 2311, 7, 2401, 2317,
	976, 977, 978, 975, 2393, 2383, 1839, 2342, 2343, 2381,
	2895, 3328, 2346, 2377, 2329, 3023, 2376, 2352, 1941, 2332,
	976, 977, 978, 975, 2338, 2375, 2363, 2364, 2345, 622,
	621, 2443, 976, 977, 978, 975, 976, 977, 978, 975,
	2378, 2379, 1879, 1753, 1535, 1747, 182, 976, 977, 978,
	975, 182, 2322, 1515, 1514, 1321, 1052, 2382, 976, 977,
	978, 975, 2321, 2480, 2414, 2482, 2323, 1048, 1047, 900,
	2195, 688, 1467, 2430, 1467, 2326, 2914, 2503, 2847, 2471,
	2794, 2507, 2793, 1505, 2749, 2430, 2413, 1223, 1505, 2792,
	2514, 2431, 2432, 2433, 2434, 2418, 165, 2757, 157, 133,
	2444, 2446, 2442, 2545, 976, 977, 978, 975, 2751, 677,
	976, 977, 978, 975, 2739, 2730, 2459, 2462, 2416, 2729,
	2716, 2477, 2715, 2544, 2525, 2640, 2481, 2578, 2543, 976,
	977, 978, 975, 2445, 2547, 2540, 1289, 1290, 2532, 2531,
	2526, 1229, 2469, 1504, 2261, 2150, 2146, 2546, 2502, 976,
	977, 978, 975, 1705, 976, 977, 978, 975, 2145, 1864,
	1857, 1294, 2247, 1282, 1298, 162, 2535, 1852, 2537, 2500,
	1850, 1846, 2475, 1283, 1284, 2506, 911, 2511, 2479, 1297,
	2246, 2478, 1845, 1843, 2516, 1834, 2594, 1831, 976, 977,
	978, 975, 1830, 2494, 2499, 1752, 2609, 2501, 2496, 1500,
	1499, 456, 1498, 2245, 2498, 1470, 976, 977, 978, 975,
	1469, 2505, 1460, 1235, 1233, 911, 911, 911, 3285, 3279,
	3265, 2523, 3262, 3260, 1667, 1930, 2524, 2638, 2510, 976,
	977, 978, 975, 2642, 2244, 3155, 1042, 3086, 2455, 3075,
	165, 3070, 2536, 1277, 2652, 2991, 2655, 2530, 2655, 2655,
	2976, 2972, 2872, 911, 2577, 2617, 2870, 2538, 2539, 2845,
	976, 977, 978, 975, 2659, 2844, 2841, 2674, 2840, 2298,
	2784, 2587, 2586, 1288, 1223, 1223, 1279, 2569, 2671, 2552,
	2553, 2533, 2534, 2572, 1293, 2554, 2555, 2556, 2557, 2673,
	2558, 2559, 2560, 2561, 2562, 2563, 2564, 2565, 1296, 1285,
	2576, 1134, 2675, 2676, 1221, 1221, 2625, 2626, 2627, 162,
	2610, 2409, 2340, 2306, 2589, 2305, 2304, 2636, 2248, 2159,
	456, 2616, 2650, 2069, 2024, 2594, 1931, 2651, 1921, 1902,
	3146, 2243, 2633, 1400, 162, 2637, 1532, 1532, 2623, 2624,
	2660, 1715, 810, 1523, 1343, 1309, 1286, 2268, 2242, 810,
	1078, 1075, 1074, 2656, 2657, 2645, 2658, 976, 977, 978,
	975, 1186, 2661, 1188, 2241, 1192, 1193, 1194, 1073, 1072,
	2310, 1071, 2646, 1070, 976, 977, 978, 975, 1069, 1068,
	1067, 911, 1066, 3144, 2240, 2217, 1065, 1064, 1063, 1062,
	976, 977, 978, 975, 2728, 1236, 1237, 1238, 1239, 1240,
	1061, 1242, 1243, 1244, 1245, 1060, 1059, 1058, 1251, 1252,
	976, 977, 978, 975, 1057, 574, 115, 1056, 1055, 1051,
	1050, 115, 2237, 1049, 1046, 2685, 3142, 2684, 2680, 2690,
	2689, 456, 1039, 2694, 2695, 2236, 1038, 1036, 1035, 1034,
	1033, 2641, 2705, 1032, 2687, 2643, 2644, 1031, 976, 977,
	978, 975, 810, 1030, 1029, 2709, 1028, 2712, 2713, 2714,
	1027, 976, 977, 978, 975, 1026, 2748, 2235, 2717, 1025,
	1020, 462, 1019, 2750, 115, 1018, 941, 898, 2723, 3140,
	990, 989, 999, 1000, 992, 993, 994, 995, 996, 997,
	998, 991, 2842, 976, 977, 978, 975, 2762, 911, 1851,
	2229, 2701, 2702, 1936, 2740, 2707, 1918, 2088, 2220, 2742,
	810, 2741, 2743, 2197, 681, 682, 683, 684, 2036, 680,
	2753, 929, 3236, 2464, 2465, 1410, 976, 977, 978, 975,
	3234, 2788, 3193, 2302, 976, 977, 978, 975, 2704, 976,
	977, 978, 975, 2290, 2053, 1667, 2804, 2081, 1755, 2696,
	940, 976, 977, 978, 975, 2041, 2044, 2045, 2046, 2042,
	911, 2043, 2047, 2439, 2708, 2755, 2437, 2706, 2440, 2652,
	2874, 2438, 2441, 911, 2045, 2046, 2436, 2875, 808, 2790,
	2791, 2435, 115, 911, 3314, 2168, 2162, 1128, 1223, 2764,
	1234, 1552, 1553, 1547, 1548, 1549, 2612, 115, 453, 115,
	2255, 100, 2779, 54, 1532, 53, 1993, 2648, 911, 2649,
	2852, 1505, 2570, 2571, 2806, 2718, 2856, 1641, 1221, 2789,
	1271, 2157, 1505, 2832, 2187, 2869, 2873, 2839, 2871, 2759,
	1884, 1885, 2765, 1080, 1303, 1907, 182, 1717, 2803, 2041,
	2044, 2045, 2046, 2042, 2877, 2043, 2047, 935, 2802, 911,
	2866, 457, 2846, 2785, 2786, 2787, 2851, 458, 2588, 459,
	2848, 460, 2854, 2585, 2711, 2878, 2328, 2270, 1926, 911,
	2359, 2858, 1556, 2860, 2876, 2863, 1522, 2360, 2361, 2362,
	1456, 1455, 2868, 3206, 2867, 3072, 2810, 2677, 2865, 1092,
	1093, 1090, 1091, 1088, 1089, 911, 1223, 1223, 2904, 2849,
	1086, 1087, 2033, 2029, 2943, 2862, 2943, 1652, 1185, 2352,
	1184, 2880, 967, 2079, 1775, 1139, 2908, 1082, 3280, 3179,
	3162, 2890, 3160, 3121, 2936, 3098, 1221, 2938, 3097, 3095,
	3087, 1223, 3004, 2615, 2430, 2958, 3003, 2905, 2886, 2909,
	2754, 2737, 2736, 2721, 2915, 1980, 1085, 2907, 2720, 456,
	2473, 911, 911, 1560, 2509, 911, 911, 2805, 3238, 3237,
	3237, 2938, 1920, 2808, 1833, 926, 2809, 810, 3238, 2994,
	810, 2974, 2947, 2946, 2738, 2430, 2993, 2988, 2463, 680,
	2806, 1558, 1154, 3001, 62, 2832, 3304, 2956, 2960, 2839,
	2980, 2981, 3005, 3006, 2989, 2990, 169, 3, 2912, 2913,
	2, 2897, 681, 682, 683, 684, 3250, 680, 2998, 990,
	989, 999, 1000, 992, 993, 994, 995, 996, 997, 998,
	991, 2934, 2762, 3251, 1200, 1710, 2062, 1699, 1227, 1,
	1513, 3029, 685, 2448, 2449, 2997, 2710, 2999, 2451, 990,
	989, 999, 1000, 992, 993, 994, 995, 996, 997, 998,
	991, 1793, 1705, 2419, 3055, 2027, 3283, 1908, 2608, 3051,
	1129, 726, 1462, 1328, 827, 3024, 3028, 3034, 3037, 3038,
	920, 3036, 1325, 3039, 919, 917, 1412, 2934, 2934, 576,
	1758, 2934, 2934, 2410, 2384, 115, 115, 808, 3000, 3050,
	3205, 2995, 3244, 3154, 3208, 1341, 560, 3089, 3014, 3158,
	3058, 3056, 911, 3016, 3057, 2892, 1223, 1798, 3066, 990,
	989, 999, 1000, 992, 993, 994, 995, 996, 997, 998,
	991, 972, 2495, 2954, 2955, 748, 3071, 613, 587, 1037,
	1311, 1304, 2550, 829, 3081, 586, 1221, 2778, 2280, 2466,
	3059, 3080, 826, 749, 1742, 3012, 3110, 1272, 1276, 1002,
	2948, 1006, 2795, 2628, 2307, 3324, 3104, 1024, 1007, 3313,
	911, 3094, 3295, 2745, 3092, 3278, 3122, 1003, 1005, 1001,
	3184, 1004, 990, 989, 999, 1000, 992, 993, 994, 995,
	996, 997, 998, 991, 3113, 3309, 911, 3117, 3224, 3263,
	2900, 2898, 2899, 1223, 3131, 3116, 3149, 3152, 3256, 3180,
	496, 3139, 3141, 3143, 3145, 3124, 1678, 3132, 3129, 442,
	791, 2992, 1754, 497, 1935, 3172, 3074, 707, 1917, 3153,
	708, 3148, 699, 1221, 2296, 3138, 2295, 3161, 2934, 3163,
	3164, 3157, 3082, 1381, 1223, 3159, 981, 736, 1398, 2566,
	2567, 1016, 535, 1821, 3189, 2277, 2827, 2460, 61, 60,
	59, 58, 1724, 190, 578, 3178, 189, 2929, 3151, 3210,
	558, 557, 3186, 556, 1221, 555, 3212, 554, 2040, 2038,
	2037, 1662, 1661, 1722, 3198, 2350, 3199, 2344, 3200, 1976,
	3201, 3211, 3202, 1981, 1594, 3190, 2934, 3135, 3136, 2971,
	911, 2394, 3123, 1546, 3216, 1084, 3104, 1972, 3217, 1440,
	1611, 2366, 1608, 1607, 2358, 2967, 735, 2961, 3133, 1638,
	2300, 2760, 2934, 2942, 2811, 3243, 774, 3232, 2812, 2818,
	3235, 3233, 1925, 3239, 3240, 3241, 3242, 3246, 852, 3227,
	3229, 848, 3254, 850, 911, 851, 849, 2206, 1953, 2580,
	1898, 3255, 1897, 1895, 1894, 3259, 1102, 3261, 3109, 3169,
	2906, 2086, 2084, 2703, 2699, 1766, 1510, 2254, 1663, 3212,
	3275, 3271, 1659, 1919, 2916, 1551, 700, 1915, 98, 147,
	48, 911, 89, 911, 3211, 3274, 88, 97, 3282, 145,
	3284, 47, 174, 173, 3287, 176, 175, 172, 2136, 2137,
	171, 1260, 170, 3246, 3291, 2945, 911, 3293, 674, 776,
	3298, 38, 775, 3302, 37, 3305, 33, 12, 3308, 3219,
	11, 34, 21, 22, 20, 1332, 3222, 19, 25, 31,
	30, 1232, 108, 3312, 107, 3319, 462, 29, 106, 3323,
	3281, 3322, 105, 104, 103, 102, 28, 3331, 761, 18,
	42, 41, 40, 3319, 3336, 3335, 737, 2548, 3323, 976,
	977, 978, 975, 115, 9, 96, 1436, 94, 27, 95,
	1364, 92, 1433, 93, 90, 73, 1435, 1432, 1434, 1438,
	1439, 72, 3334, 739, 1437, 71, 86, 3337, 85, 84,
	83, 2979, 82, 990, 989, 999, 1000, 992, 993, 994,
	995, 996, 997, 998, 991, 81, 79, 1364, 80, 1364,
	990, 989, 999, 1000, 992, 993, 994, 995, 996, 997,
	998, 991, 747, 70, 69, 68, 67, 115, 66, 91,
	77, 115, 1364, 87, 78, 76, 75, 74, 1440, 65,
	64, 63, 115, 131, 130, 128, 760, 759, 129, 127,
	126, 125, 115, 124, 123, 122, 43, 44, 45, 46,
	141, 140, 142, 758, 2194, 144, 146, 143, 138, 136,
	139, 137, 135, 56, 734, 17, 24, 4, 0, 0,
	0, 0, 0, 0, 0, 738, 769, 0, 990, 989,
	999, 1000, 992, 993, 994, 995, 996, 997, 998, 991,
	870, 0, 0, 0, 0, 0, 0, 0, 0, 765,
	0, 0, 0, 0, 0, 0, 1421, 1422, 1423, 1424,
	1425, 1426, 1427, 1428, 1429, 1430, 1431, 1443, 1444, 1445,
	1446, 1447, 1448, 1441, 1442, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 766, 770, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	825, 0, 0, 0, 755, 0, 753, 757, 773, 0,
	0, 0, 754, 751, 750, 0, 756, 741, 742, 740,
	743, 744, 745, 746, 0, 771, 0, 772, 0, 0,
	0, 0, 0, 0, 0, 1436, 0, 1819, 767, 768,
	0, 1433, 0, 0, 0, 1435, 1432, 1434, 1438, 1439,
	0, 0, 0, 1437, 0, 0, 0, 0, 0, 0,
	856, 990, 989, 999, 1000, 992, 993, 994, 995, 996,
	997, 998, 991, 0, 0, 763, 0, 0, 0, 0,
	878, 882, 884, 886, 888, 889, 891, 0, 896, 892,
	893, 894, 895, 0, 873, 874, 875, 876, 854, 855,
	879, 0, 857, 0, 858, 859, 860, 861, 862, 863,
	864, 865, 866, 869, 871, 867, 868, 877, 0, 0,
	0, 0, 0, 0, 0, 881, 883, 885, 887, 890,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 820, 816, 811, 815, 818, 0, 0, 0, 0,
	0, 0, 0, 0, 762, 0, 0, 0, 0, 0,
	0, 1666, 872, 0, 0, 0, 0, 0, 0, 823,
	0, 0, 0, 814, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1421, 1422, 1423, 1424, 1425,
	1426, 1427, 1428, 1429, 1430, 1431, 1443, 1444, 1445, 1446,
	1447, 1448, 1441, 1442, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 821, 0, 0, 0, 0, 115,
	0, 824, 115, 115, 0, 115, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 812, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 594, 0,
	0, 822, 0, 808, 0, 0, 0, 336, 0, 0,
	808, 0, 0, 0, 0, 0, 0, 0, 0, 115,
	549, 0, 0, 0, 279, 2203, 2204, 306, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	437, 813, 438, 0, 0, 585, 0, 0, 365, 320,
	0, 0, 0, 0, 645, 653, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 542, 0, 0, 575,
	622, 621, 562, 572, 0, 0, 256, 188, 439, 0,
	440, 563, 0, 571, 564, 568, 567, 565, 566, 0,
	637, 0, 0, 0, 0, 0, 1007, 533, 546, 0,
	550, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 819, 0, 0,
	0, 0, 0, 0, 543, 544, 0, 0, 0, 0,
	595, 0, 545, 0, 0, 590, 569, 573, 0, 0,
	0, 0, 247, 370, 386, 257, 361, 399, 262, 368,
	252, 335, 358, 0, 817, 249, 384, 367, 317, 298,
	299, 248, 880, 353, 277, 290, 274, 333, 570, 593,
	597, 273, 659, 591, 394, 251, 0, 393, 332, 380,
	385, 318, 312, 250, 382, 316, 311, 302, 281, 660,
	303, 304, 294, 344, 310, 345, 295, 322, 321, 323,
	0, 0, 0, 0, 0, 422, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 588,
	0, 0, 0, 396, 0, 0, 643, 0, 0, 0,
	369, 0, 0, 305, 0, 0, 0, 592, 0, 356,
	338, 656, 534, 0, 354, 308, 381, 346, 387, 371,
	395, 350, 347, 242, 372, 276, 319, 253, 255, 271,
	278, 280, 282, 283, 328, 329, 341, 360, 373, 374,
	375, 275, 263, 355, 264, 292, 265, 243, 268, 267,
	269, 362, 270, 245, 342, 379, 0, 288, 351, 315,
	246, 314, 343, 378, 377, 254, 403, 409, 410, 0,
	0, 415, 0, 0, 0, 423, 428, 429, 430, 432,
	433, 434, 435, 0, 0, 0, 0, 417, 0, 0,
	0, 1464, 1463, 1465, 408, 286, 239, 240, 448, 641,
	334, 0, 0, 0, 0, 655, 636, 638, 639, 642,
	646, 647, 648, 649, 650, 652, 654, 658, 447, 0,
	0, 0, 0, 0, 446, 340, 0, 359, 0, 0,
	2056, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	366, 389, 401, 418, 421, 0, 0, 0, 0, 244,
	420, 0, 0, 0, 0, 0, 0, 0, 0, 657,
	0, 0, 0, 400, 0, 0, 0, 0, 0, 596,
	0, 0, 324, 325, 326, 327, 644, 0, 261, 419,
	349, 0, 0, 0, 0, 0, 0, 0, 0, 1666,
	0, 0, 0, 0, 0, 0, 0, 0, 115, 413,
	414, 285, 291, 431, 293, 260, 339, 287, 398, 300,
	0, 424, 0, 425, 0, 0, 0, 0, 331, 296,
	297, 363, 301, 309, 352, 397, 337, 357, 258, 388,
	364, 313, 0, 0, 666, 640, 665, 667, 668, 664,
	669, 670, 651, 553, 0, 600, 662, 661, 663, 0,
	870, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 376, 0, 237, 266, 0, 241, 0, 307, 0,
	348, 284, 0, 0, 629, 606, 607, 608, 551, 609,
	603, 604, 605, 630, 598, 626, 627, 577, 601, 610,
	625, 611, 628, 631, 632, 671, 672, 617, 673, 614,
	633, 624, 623, 612, 599, 634, 635, 584, 579, 615,
	616, 602, 618, 619, 620, 552, 580, 581, 582, 583,
	0, 0, 0, 404, 405, 406, 427, 390, 0, 445,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 449, 441, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	856, 0, 0, 0, 846, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	878, 882, 884, 886, 888, 889, 891, 115, 896, 892,
	893, 894, 895, 870, 873, 874, 875, 876, 854, 855,
	879, 0, 857, 0, 858, 859, 860, 861, 862, 863,
	864, 865, 866, 869, 871, 867, 868, 877, 0, 0,
	0, 0, 0, 0, 0, 881, 883, 885, 887, 890,
	0, 0, 0, 0, 507, 506, 513, 503, 0, 0,
	0, 0, 0, 0, 0, 0, 510, 511, 0, 512,
	516, 0, 0, 498, 0, 0, 0, 0, 0, 0,
	0, 0, 872, 521, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1666, 1666, 1666, 1666, 0, 0, 0,
	0, 0, 0, 0, 0, 1666, 525, 0, 0, 527,
	0, 0, 0, 856, 526, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 878, 882, 884, 886, 888, 889, 891,
	0, 896, 892, 893, 894, 895, 0, 873, 874, 875,
	876, 854, 855, 879, 0, 857, 0, 858, 859, 860,
	861, 862, 863, 864, 865, 866, 869, 871, 867, 868,
	877, 0, 0, 0, 0, 0, 0, 0, 881, 883,
	885, 887, 890, 0, 0, 0, 0, 0, 0, 0,
	0, 115, 0, 0, 0, 0, 115, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 872, 115, 0, 0, 0,
	0, 0, 0, 115, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 499,
	501, 500, 0, 0, 0, 0, 0, 0, 0, 505,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 509, 0, 0, 594, 0, 0, 0, 524, 0,
	0, 0, 0, 336, 0, 502, 0, 0, 0, 493,
	0, 0, 0, 0, 0, 0, 549, 0, 0, 0,
	279, 1506, 0, 306, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 437, 0, 438, 0,
	0, 585, 0, 0, 365, 320, 115, 0, 0, 0,
	645, 653, 880, 0, 0, 0, 0, 0, 0, 1690,
	0, 0, 542, 0, 0, 575, 622, 621, 562, 572,
	0, 0, 256, 188, 439, 0, 440, 563, 0, 571,
	564, 568, 567, 565, 566, 0, 637, 0, 0, 1666,
	0, 0, 0, 533, 546, 0, 550, 0, 0, 0,
	0, 0, 0, 0, 115, 0, 0, 0, 0, 504,
	508, 514, 0, 515, 517, 0, 0, 518, 519, 520,
	543, 544, 522, 523, 0, 0, 595, 0, 545, 0,
	0, 1691, 569, 573, 0, 0, 0, 0, 247, 370,
	386, 257, 361, 399, 262, 368, 252, 335, 358, 0,
	0, 249, 384, 367, 317, 298, 299, 248, 0, 353,
	277, 290, 274, 333, 570, 593, 597, 273, 659, 591,
	394, 251, 0, 393, 332, 380, 385, 318, 312, 250,
	382, 316, 311, 302, 281, 660, 303, 304, 294, 344,
	310, 345, 295, 322, 321, 323, 0, 0, 0, 0,
	0, 422, 0, 0, 0, 880, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 588, 0, 0, 0, 396,
	0, 0, 643, 0, 0, 0, 369, 0, 0, 305,
	0, 0, 0, 592, 0, 356, 338, 656, 534, 0,
	354, 308, 381, 346, 387, 371, 395, 350, 347, 242,
	372, 276, 319, 253, 255, 271, 278, 280, 282, 283,
	328, 329, 341, 360, 373, 374, 375, 275, 263, 355,
	264, 292, 265, 243, 268, 267, 269, 362, 270, 245,
	342, 379, 0, 288, 351, 315, 246, 314, 343, 378,
	377, 254, 403, 409, 410, 0, 0, 415, 0, 0,
	0, 423, 428, 429, 430, 432, 433, 434, 435, 0,
	0, 0, 0, 417, 0, 0, 0, 0, 0, 0,
	408, 286, 239, 240, 448, 641, 334, 0, 0, 0,
	0, 655, 636, 638, 639, 642, 646, 647, 648, 649,
	650, 652, 654, 658, 447, 0, 0, 0, 0, 0,
	446, 340, 0, 359, 0, 0, 0, 0, 0, 0,
	0, 115, 0, 0, 115, 0, 366, 389, 401, 418,
	421, 0, 0, 0, 0, 244, 420, 0, 0, 0,
	0, 0, 0, 0, 0, 657, 0, 0, 0, 400,
	0, 0, 0, 0, 0, 596, 0, 0, 324, 325,
	326, 327, 644, 0, 261, 419, 349, 0, 0, 0,
	1666, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 413, 414, 285, 291, 431,
	293, 260, 339, 287, 398, 300, 0, 424, 0, 425,
	0, 0, 0, 0, 331, 296, 297, 363, 301, 309,
	352, 397, 337, 357, 258, 388, 364, 313, 0, 0,
	666, 640, 665, 667, 668, 664, 669, 670, 651, 553,
	0, 600, 662, 661, 663, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 376, 0, 237,
	266, 115, 241, 0, 307, 0, 348, 284, 0, 0,
	629, 606, 607, 608, 551, 609, 603, 604, 605, 630,
	598, 626, 627, 577, 601, 610, 625, 611, 628, 631,
	632, 671, 672, 617, 673, 614, 633, 624, 623, 612,
	599, 634, 635, 584, 579, 615, 616, 602, 618, 619,
	620, 552, 580, 581, 582, 583, 0, 165, 594, 404,
	405, 406, 427, 390, 0, 445, 0, 336, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 449, 441,
	549, 0, 0, 0, 279, 0, 0, 306, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	437, 0, 438, 0, 0, 1010, 0, 0, 365, 320,
	0, 0, 0, 0, 645, 653, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 542, 0, 0, 575,
	622, 621, 562, 572, 0, 0, 256, 188, 439, 0,
	440, 563, 0, 571, 564, 568, 567, 565, 566, 0,
	637, 0, 0, 0, 0, 0, 0, 533, 546, 0,
	550, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 543, 544, 0, 0, 0, 0,
	595, 0, 545, 0, 0, 590, 569, 573, 0, 0,
	0, 0, 247, 370, 386, 257, 361, 399, 262, 368,
	252, 335, 358, 0, 0, 249, 384, 367, 317, 298,
	299, 248, 0, 353, 277, 290, 274, 333, 570, 593,
	597, 273, 659, 591, 394, 251, 0, 393, 332, 380,
	385, 318, 312, 250, 382, 316, 311, 302, 281, 660,
	303, 304, 294, 344, 310, 345, 295, 322, 321, 323,
	0, 0, 0, 0, 0, 422, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 588,
	0, 0, 0, 396, 0, 0, 643, 0, 0, 0,
	369, 0, 0, 305, 0, 0, 0, 592, 0, 356,
	338, 656, 534, 0, 354, 308, 381, 346, 387, 371,
	395, 350, 347, 242, 372, 276, 319, 253, 255, 271,
	278, 280, 282, 283, 328, 329, 341, 360, 373, 374,
	375, 275, 263, 355, 264, 292, 265, 243, 268, 267,
	269, 362, 270, 245, 342, 379, 0, 288, 351, 315,
	246, 314, 343, 378, 377, 254, 403, 409, 410, 0,
	0, 415, 0, 0, 0, 423, 428, 429, 430, 432,
	433, 434, 435, 0, 0, 0, 0, 417, 0, 0,
	0, 0, 0, 0, 408, 286, 239, 240, 448, 641,
	334, 0, 0, 0, 0, 655, 636, 638, 639, 642,
	646, 647, 648, 649, 650, 652, 654, 658, 447, 0,
	0, 0, 0, 0, 446, 340, 0, 359, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	366, 389, 401, 418, 421, 0, 0, 0, 0, 244,
	420, 0, 0, 0, 0, 0, 0, 0, 0, 657,
	0, 0, 0, 400, 0, 0, 0, 0, 0, 596,
	0, 0, 324, 325, 326, 327, 644, 0, 261, 419,
	349, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 413,
	414, 285, 291, 431, 293, 260, 339, 287, 398, 300,
	0, 424, 0, 425, 0, 0, 0, 0, 331, 296,
	297, 363, 301, 309, 352, 397, 337, 357, 258, 388,
	364, 313, 0, 0, 666, 640, 665, 667, 668, 664,
	669, 670, 651, 553, 0, 600, 662, 661, 663, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 376, 0, 237, 266, 0, 241, 0, 307, 134,
	348, 284, 0, 0, 629, 606, 607, 608, 551, 609,
	603, 604, 605, 630, 598, 626, 627, 577, 601, 610,
	625, 611, 628, 631, 632, 671, 672, 617, 673, 614,
	633, 624, 623, 612, 599, 634, 635, 584, 579, 615,
	616, 602, 618, 619, 620, 552, 580, 581, 582, 583,
	0, 0, 594, 404, 405, 406, 427, 390, 0, 445,
	0, 336, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 449, 441, 549, 0, 0, 0, 279, 3292,
	0, 306, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 437, 0, 438, 0, 0, 585,
	0, 0, 365, 320, 0, 0, 0, 0, 645, 653,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	542, 0, 0, 575, 622, 621, 562, 572, 0, 0,
	256, 188, 439, 0, 440, 563, 0, 571, 564, 568,
	567, 565, 566, 0, 637, 0, 0, 0, 0, 0,
	0, 533, 546, 0, 550, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 543, 544,
	0, 0, 0, 0, 595, 0, 545, 0, 0, 590,
	569, 573, 0, 0, 0, 0, 247, 370, 386, 257,
	361, 399, 262, 368, 252, 335, 358, 0, 0, 249,
	384, 367, 317, 298, 299, 248, 0, 353, 277, 290,
	274, 333, 570, 593, 597, 273, 659, 591, 394, 251,
	0, 393, 332, 380, 385, 318, 312, 250, 382, 316,
	311, 302, 281, 660, 303, 304, 294, 344, 310, 345,
	295, 322, 321, 323, 0, 0, 0, 0, 0, 422,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 588, 0, 0, 0, 396, 0, 0,
	643, 0, 0, 0, 369, 0, 0, 305, 0, 0,
	0, 592, 0, 356, 338, 656, 534, 0, 354, 308,
	381, 346, 387, 371, 395, 350, 347, 242, 372, 276,
	319, 253, 255, 271, 278, 280, 282, 283, 328, 329,
	341, 360, 373, 374, 375, 275, 263, 355, 264, 292,
	265, 243, 268, 267, 269, 362, 270, 245, 342, 379,
	0, 288, 351, 315, 246, 314, 343, 378, 377, 254,
	403, 409, 410, 0, 0, 415, 0, 0, 0, 423,
	428, 429, 430, 432, 433, 434, 435, 0, 0, 0,
	0, 417, 0, 0, 0, 0, 0, 0, 408, 286,
	239, 240, 448, 641, 334, 0, 0, 0, 0, 655,
	636, 638, 639, 642, 646, 647, 648, 649, 650, 652,
	654, 658, 447, 0, 0, 0, 0, 0, 446, 340,
	0, 359, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 366, 389, 401, 418, 421, 0,
	0, 0, 0, 244, 420, 0, 0, 0, 0, 0,
	0, 0, 0, 657, 0, 0, 0, 400, 0, 0,
	0, 0, 0, 596, 0, 0, 324, 325, 326, 327,
	644, 0, 261, 419, 349, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 414, 285, 291, 431, 293, 260,
	339, 287, 398, 300, 0, 424, 0, 425, 0, 0,
	0, 0, 331, 296, 297, 363, 301, 309, 352, 397,
	337, 357, 258, 388, 364, 313, 0, 0, 666, 640,
	665, 667, 668, 664, 669, 670, 651, 553, 0, 600,
	662, 661, 663, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 376, 0, 237, 266, 0,
	241, 0, 307, 0, 348, 284, 0, 0, 629, 606,
	607, 608, 551, 609, 603, 604, 605, 630, 598, 626,
	627, 577, 601, 610, 625, 611, 628, 631, 632, 671,
	672, 617, 673, 614, 633, 624, 623, 612, 599, 634,
	635, 584, 579, 615, 616, 602, 618, 619, 620, 552,
	580, 581, 582, 583, 0, 0, 594, 404, 405, 406,
	427, 390, 0, 445, 0, 336, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 449, 441, 549, 0,
	0, 0, 279, 1506, 0, 306, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 437, 0,
	438, 0, 0, 585, 0, 0, 365, 320, 0, 0,
	0, 0, 645, 653, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 542, 0, 0, 575, 622, 621,
	562, 572, 0, 0, 256, 188, 439, 0, 440, 563,
	0, 571, 564, 568, 567, 565, 566, 0, 637, 0,
	0, 0, 0, 0, 0, 533, 546, 0, 550, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 543, 544, 0, 0, 0, 0, 595, 0,
	545, 0, 0, 590, 569, 573, 0, 0, 0, 0,
	247, 370, 386, 257, 361, 399, 262, 368, 252, 335,
	358, 0, 0, 249, 384, 367, 317, 298, 299, 248,
	0, 353, 277, 290, 274, 333, 570, 593, 597, 273,
	659, 591, 394, 251, 0, 393, 332, 380, 385, 318,
	312, 250, 382, 316, 311, 302, 281, 660, 303, 304,
	294, 344, 310, 345, 295, 322, 321, 323, 0, 0,
	0, 0, 0, 422, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 588, 0, 0,
	0, 396, 0, 0, 643, 0, 0, 0, 369, 0,
	0, 305, 0, 0, 0, 592, 0, 356, 338, 656,
	534, 0, 354, 308, 381, 346, 387, 371, 395, 350,
	347, 242, 372, 276, 319, 253, 255, 271, 278, 280,
	282, 283, 328, 329, 341, 360, 373, 374, 375, 275,
	263, 355, 264, 292, 265, 243, 268, 267, 269, 362,
	270, 245, 342, 379, 0, 288, 351, 315, 246, 314,
	343, 378, 377, 254, 403, 409, 410, 0, 0, 415,
	0, 0, 0, 423, 428, 429, 430, 432, 433, 434,
	435, 0, 0, 0, 0, 417, 0, 0, 0, 0,
	0, 0, 408, 286, 239, 240, 448, 641, 334, 0,
	0, 0, 0, 655, 636, 638, 639, 642, 646, 647,
	648, 649, 650, 652, 654, 658, 447, 0, 0, 0,
	0, 0, 446, 340, 0, 359, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 366, 389,
	401, 418, 421, 0, 0, 0, 0, 244, 420, 0,
	0, 0, 0, 0, 0, 0, 0, 657, 0, 0,
	0, 400, 0, 0, 0, 0, 0, 596, 0, 0,
	324, 325, 326, 327, 644, 0, 261, 419, 349, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 413, 414, 285,
	291, 431, 293, 260, 339, 287, 398, 300, 0, 424,
	0, 425, 0, 0, 0, 0, 331, 296, 297, 363,
	301, 309, 352, 397, 337, 357, 258, 388, 364, 313,
	0, 0, 666, 640, 665, 667, 668, 664, 669, 670,
	651, 553, 0, 600, 662, 661, 663, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 376,
	0, 237, 266, 0, 241, 0, 307, 0, 348, 284,
	0, 0, 629, 606, 607, 608, 551, 609, 603, 604,
	605, 630, 598, 626, 627, 577, 601, 610, 625, 611,
	628, 631, 632, 671, 672, 617, 673, 614, 633, 624,
	623, 612, 599, 634, 635, 584, 579, 615, 616, 602,
	618, 619, 620, 552, 580, 581, 582, 583, 0, 0,
	594, 404, 405, 406, 427, 390, 0, 445, 0, 336,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	449, 441, 549, 0, 0, 0, 279, 0, 0, 306,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 437, 0, 438, 0, 0, 585, 0, 0,
	365, 320, 0, 0, 0, 0, 645, 653, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 542, 0,
	0, 575, 622, 621, 562, 572, 0, 0, 256, 188,
	439, 0, 440, 563, 0, 571, 564, 568, 567, 565,
	566, 0, 637, 0, 0, 0, 0, 0, 0, 533,
	546, 0, 550, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 543, 544, 1255, 0,
	0, 0, 595, 0, 545, 0, 0, 590, 569, 573,
	0, 0, 0, 0, 247, 370, 386, 257, 361, 399,
	262, 368, 252, 335, 358, 0, 0, 249, 384, 367,
	317, 298, 299, 248, 0, 353, 277, 290, 274, 333,
	570, 593, 597, 273, 659, 591, 394, 251, 0, 393,
	332, 380, 385, 318, 312, 250, 382, 316, 311, 302,
	281, 660, 303, 304, 294, 344, 310, 345, 295, 322,
	321, 323, 0, 0, 0, 0, 0, 422, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 588, 0, 0, 0, 396, 0, 0, 643, 0,
	0, 0, 369, 0, 0, 305, 0, 0, 0, 592,
	0, 356, 338, 656, 534, 0, 354, 308, 381, 346,
	387, 371, 395, 350, 347, 242, 372, 276, 319, 253,
	255, 271, 278, 280, 282, 283, 328, 329, 341, 360,
	373, 374, 375, 275, 263, 355, 264, 292, 265, 243,
	268, 267, 269, 362, 270, 245, 342, 379, 0, 288,
	351, 315, 246, 314, 343, 378, 377, 254, 403, 409,
	410, 0, 0, 415, 0, 0, 0, 423, 428, 429,
	430, 432, 433, 434, 435, 0, 0, 0, 0, 417,
	0, 0, 0, 0, 0, 0, 408, 286, 239, 240,
	448, 641, 334, 0, 0, 0, 0, 655, 636, 638,
	639, 642, 646, 647, 648, 649, 650, 652, 654, 658,
	447, 0, 0, 0, 0, 0, 446, 340, 0, 359,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 366, 389, 401, 418, 421, 0, 0, 0,
	0, 244, 420, 0, 0, 0, 0, 0, 0, 0,
	0, 657, 0, 0, 0, 400, 0, 0, 0, 0,
	0, 596, 0, 0, 324, 325, 326, 327, 644, 0,
	261, 419, 349, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 413, 414, 285, 291, 431, 293, 260, 339, 287,
	398, 300, 0, 424, 0, 425, 0, 0, 0, 0,
	331, 296, 297, 363, 301, 309, 352, 397, 337, 357,
	258, 388, 364, 313, 0, 0, 666, 640, 665, 667,
	668, 664, 669, 670, 651, 553, 0, 600, 662, 661,
	663, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 376, 0, 237, 266, 0, 241, 0,
	307, 0, 348, 284, 0, 0, 629, 606, 607, 608,
	551, 609, 603, 604, 605, 630, 598, 626, 627, 577,
	601, 610, 625, 611, 628, 631, 632, 671, 672, 617,
	673, 614, 633, 624, 623, 612, 599, 634, 635, 584,
	579, 615, 616, 602, 618, 619, 620, 552, 580, 581,
	582, 583, 0, 0, 0, 404, 405, 406, 427, 390,
	594, 445, 0, 1841, 0, 0, 0, 0, 0, 336,
	0, 0, 0, 0, 449, 441, 0, 0, 0, 0,
	0, 0, 549, 0, 0, 0, 279, 0, 0, 306,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 437, 0, 438, 0, 0, 585, 0, 0,
	365, 320, 0, 0, 0, 0, 645, 653, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 542, 0,
	0, 575, 622, 621, 562, 572, 0, 0, 256, 188,
	439, 0, 440, 563, 0, 571, 564, 568, 567, 565,
	566, 0, 637, 0, 0, 0, 0, 0, 0, 533,
	546, 0, 550, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 543, 544, 0, 0,
	0, 0, 595, 0, 545, 0, 0, 590, 569, 573,
	0, 0, 0, 0, 247, 370, 386, 257, 361, 399,
	262, 368, 252, 335, 358, 0, 0, 249, 384, 367,
	317, 298, 299, 248, 0, 353, 277, 290, 274, 333,
	570, 593, 597, 273, 659, 591, 394, 251, 0, 393,
	332, 380, 385, 318, 312, 250, 382, 316, 311, 302,
	281, 660, 303, 304, 294, 344, 310, 345, 295, 322,
	321, 323, 0, 0, 0, 0, 0, 422, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 588, 0, 0, 0, 396, 0, 0, 643, 0,
	0, 0, 369, 0, 0, 305, 0, 0, 0, 592,
	0, 356, 338, 656, 534, 0, 354, 308, 381, 346,
	387, 371, 395, 350, 347, 242, 372, 276, 319, 253,
	255, 271, 278, 280, 282, 283, 328, 329, 341, 360,
	373, 374, 375, 275, 263, 355, 264, 292, 265, 243,
	268, 267, 269, 362, 270, 245, 342, 379, 0, 288,
	351, 315, 246, 314, 343, 378, 377, 254, 403, 409,
	410, 0, 0, 415, 0, 0, 0, 423, 428, 429,
	430, 432, 433, 434, 435, 0, 0, 0, 0, 417,
	0, 0, 0, 0, 0, 0, 408, 286, 239, 240,
	448, 641, 334, 0, 0, 0, 0, 655, 636, 638,
	639, 642, 646, 647, 648, 649, 650, 652, 654, 658,
	447, 0, 0, 0, 0, 0, 446, 340, 0, 359,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 366, 389, 401, 418, 421, 0, 0, 0,
	0, 244, 420, 0, 0, 0, 0, 0, 0, 0,
	0, 657, 0, 0, 0, 400, 0, 0, 0, 0,
	0, 596, 0, 0, 324, 325, 326, 327, 644, 0,
	261, 419, 349, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 413, 414, 285, 291, 431, 293, 260, 339, 287,
	398, 300, 0, 424, 0, 425, 0, 0, 0, 0,
	331, 296, 297, 363, 301, 309, 352, 397, 337, 357,
	258, 388, 364, 313, 0, 0, 666, 640, 665, 667,
	668, 664, 669, 670, 651, 553, 0, 600, 662, 661,
	663, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 376, 0, 237, 266, 0, 241, 0,
	307, 0, 348, 284, 0, 0, 629, 606, 607, 608,
	551, 609, 603, 604, 605, 630, 598, 626, 627, 577,
	601, 610, 625, 611, 628, 631, 632, 671, 672, 617,
	673, 614, 633, 624, 623, 612, 599, 634, 635, 584,
	579, 615, 616, 602, 618, 619, 620, 552, 580, 581,
	582, 583, 0, 0, 594, 404, 405, 406, 427, 390,
	0, 445, 0, 336, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 449, 441, 549, 0, 0, 0,
	279, 0, 0, 306, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 437, 0, 438, 0,
	0, 585, 0, 0, 365, 320, 0, 0, 0, 0,
	645, 653, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 542, 0, 0, 575, 622, 621, 562, 572,
	0, 0, 256, 188, 439, 0, 440, 563, 0, 571,
	564, 568, 567, 565, 566, 0, 637, 0, 0, 0,
	0, 0, 0, 533, 546, 0, 550, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	543, 544, 0, 0, 0, 0, 595, 0, 545, 0,
	0, 590, 569, 573, 0, 0, 0, 0, 247, 370,
	386, 257, 361, 399, 262, 368, 252, 335, 358, 0,
	0, 249, 384, 367, 317, 298, 299, 248, 0, 353,
	277, 290, 274, 333, 570, 593, 597, 273, 659, 591,
	394, 251, 0, 393, 332, 380, 385, 318, 312, 250,
	382, 316, 311, 302, 281, 660, 303, 304, 294, 344,
	310, 345, 295, 322, 321, 323, 0, 0, 0, 0,
	0, 422, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 588, 0, 0, 0, 396,
	0, 0, 643, 0, 0, 0, 369, 0, 0, 305,
	0, 0, 0, 592, 0, 356, 338, 656, 534, 0,
	354, 308, 381, 346, 387, 371, 395, 350, 347, 242,
	372, 276, 319, 253, 255, 271, 278, 280, 282, 283,
	328, 329, 341, 360, 373, 374, 375, 275, 263, 355,
	264, 292, 265, 243, 268, 267, 269, 362, 270, 245,
	342, 379, 0, 288, 351, 315, 246, 314, 343, 378,
	377, 254, 403, 409, 410, 0, 0, 415, 0, 0,
	0, 423, 428, 429, 430, 432, 433, 434, 435, 0,
	0, 0, 0, 417, 0, 0, 0, 0, 0, 0,
	408, 286, 239, 240, 448, 641, 334, 0, 0, 0,
	0, 655, 636, 638, 639, 642, 646, 647, 648, 649,
	650, 652, 654, 658, 447, 0, 0, 0, 0, 0,
	446, 340, 0, 359, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 366, 389, 401, 418,
	421, 0, 0, 0, 0, 244, 420, 0, 0, 0,
	0, 0, 0, 0, 0, 657, 0, 0, 0, 400,
	0, 0, 0, 0, 0, 596, 0, 0, 324, 325,
	326, 327, 644, 0, 261, 419, 349, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 413, 414, 285, 291, 431,
	293, 260, 339, 287, 398, 300, 0, 424, 0, 425,
	0, 0, 0, 0, 331, 296, 297, 363, 301, 309,
	352, 397, 337, 357, 258, 388, 364, 313, 0, 0,
	666, 640, 665, 667, 668, 664, 669, 670, 651, 553,
	0, 600, 662, 661, 663, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 376, 0, 237,
	266, 0, 241, 0, 307, 0, 348, 284, 0, 0,
	629, 606, 607, 608, 551, 609, 603, 604, 605, 630,
	598, 626, 627, 577, 601, 610, 625, 611, 628, 631,
	632, 671, 672, 617, 673, 614, 633, 624, 623, 612,
	599, 634, 635, 584, 579, 615, 616, 602, 618, 619,
	620, 552, 580, 581, 582, 583, 0, 0, 594, 404,
	405, 406, 427, 390, 0, 445, 0, 336, 0, 0,
	0, 0, 0, 0, 0, 0, 1382, 0, 449, 441,
	549, 0, 0, 0, 279, 0, 0, 306, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	437, 0, 438, 0, 0, 585, 0, 0, 365, 320,
	0, 0, 0, 0, 645, 653, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 542, 0, 0, 575,
	622, 621, 562, 572, 0, 0, 256, 188, 439, 0,
	440, 563, 0, 571, 564, 568, 567, 565, 566, 0,
	637, 0, 0, 0, 0, 0, 0, 0, 546, 0,
	550, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 543, 544, 0, 0, 0, 0,
	595, 0, 545, 0, 0, 590, 569, 573, 0, 0,
	0, 0, 247, 370, 386, 257, 361, 399, 262, 368,
	252, 335, 358, 0, 0, 249, 384, 367, 317, 298,
	299, 248, 0, 353, 277, 290, 274, 333, 570, 593,
	597, 273, 659, 591, 394, 251, 0, 393, 332, 380,
	385, 318, 312, 250, 382, 316, 311, 302, 281, 660,
	303, 304, 294, 344, 310, 345, 295, 322, 321, 323,
	0, 0, 0, 0, 0, 422, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 588,
	0, 0, 0, 396, 0, 0, 643, 0, 0, 0,
	369, 0, 0, 305, 0, 0, 0, 592, 0, 356,
	338, 656, 0, 0, 354, 308, 381, 346, 387, 371,
	395, 350, 347, 242, 372, 276, 319, 253, 255, 271,
	278, 280, 282, 283, 328, 329, 341, 360, 373, 374,
	375, 275, 263, 355, 264, 292, 265, 243, 268, 267,
	269, 362, 270, 245, 342, 379, 0, 288, 351, 315,
	246, 314, 343, 378, 377, 254, 403, 1383, 1384, 0,
	0, 415, 0, 0, 0, 423, 428, 429, 430, 432,
	433, 434, 435, 0, 0, 0, 0, 417, 0, 0,
	0, 0, 0, 0, 408, 286, 239, 240, 448, 641,
	334, 0, 0, 0, 0, 655, 636, 638, 639, 642,
	646, 647, 648, 649, 650, 652, 654, 658, 447, 0,
	0, 0, 0, 0, 446, 340, 0, 359, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	366, 389, 401, 418, 421, 0, 0, 0, 0, 244,
	420, 0, 0, 0, 0, 0, 0, 0, 0, 657,
	0, 0, 0, 400, 0, 0, 0, 0, 0, 596,
	0, 0, 324, 325, 326, 327, 644, 0, 261, 419,
	349, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 413,
	414, 285, 291, 431, 293, 260, 339, 287, 398, 300,
	0, 424, 0, 425, 0, 0, 0, 0, 331, 296,
	297, 363, 301, 309, 352, 397, 337, 357, 258, 388,
	364, 313, 0, 0, 666, 640, 665, 667, 668, 664,
	669, 670, 651, 553, 0, 600, 662, 661, 663, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 376, 0, 237, 266, 0, 241, 0, 307, 0,
	348, 284, 0, 0, 629, 606, 607, 608, 551, 609,
	603, 604, 605, 630, 598, 626, 627, 577, 601, 610,
	625, 611, 628, 631, 632, 671, 672, 617, 673, 614,
	633, 624, 623, 612, 599, 634, 635, 584, 579, 615,
	616, 602, 618, 619, 620, 552, 580, 581, 582, 583,
	0, 0, 594, 404, 405, 406, 427, 390, 0, 445,
	0, 336, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 449, 441, 549, 0, 0, 0, 279, 0,
	0, 306, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 437, 0, 438, 0, 0, 585,
	0, 0, 365, 320, 0, 0, 0, 0, 645, 653,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 575, 622, 621, 562, 572, 0, 0,
	256, 188, 439, 0, 440, 563, 0, 571, 564, 568,
	567, 565, 566, 0, 637, 0, 0, 0, 0, 0,
	0, 533, 546, 0, 550, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 543, 544,
	0, 0, 0, 0, 595, 0, 545, 0, 0, 590,
	569, 573, 0, 0, 0, 0, 247, 370, 386, 257,
	361, 399, 262, 368, 252, 335, 358, 0, 0, 249,
	384, 367, 317, 298, 299, 248, 0, 353, 277, 290,
	274, 333, 570, 593, 597, 273, 659, 591, 394, 251,
	0, 393, 332, 380, 385, 318, 312, 250, 382, 316,
	311, 302, 281, 660, 303, 304, 294, 344, 310, 345,
	295, 322, 321, 323, 0, 0, 0, 0, 0, 422,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 588, 0, 0, 0, 396, 0, 0,
	643, 0, 0, 0, 369, 0, 0, 305, 0, 0,
	0, 592, 0, 356, 338, 656, 534, 0, 354, 308,
	381, 346, 387, 371, 395, 350, 347, 242, 372, 276,
	319, 253, 255, 271, 278, 280, 282, 283, 328, 329,
	341, 360, 373, 374, 375, 275, 263, 355, 264, 292,
	265, 243, 268, 267, 269, 362, 270, 245, 342, 379,
	0, 288, 351, 315, 246, 314, 343, 378, 377, 254,
	403, 409, 410, 0, 0, 415, 0, 0, 0, 423,
	428, 429, 430, 432, 433, 434, 435, 0, 0, 0,
	0, 417, 0, 0, 0, 0, 0, 0, 408, 286,
	239, 240, 448, 641, 334, 0, 0, 0, 0, 655,
	636, 638, 639, 642, 646, 647, 648, 649, 650, 652,
	654, 658, 447, 0, 0, 0, 0, 0, 446, 340,
	0, 359, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 366, 389, 401, 418, 421, 0,
	0, 0, 0, 244, 420, 0, 0, 0, 0, 0,
	0, 0, 0, 657, 0, 0, 0, 400, 0, 0,
	0, 0, 0, 596, 0, 0, 324, 325, 326, 327,
	644, 0, 261, 419, 349, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 414, 285, 291, 431, 293, 260,
	339, 287, 398, 300, 0, 424, 0, 425, 0, 0,
	0, 0, 331, 296, 297, 363, 301, 309, 352, 397,
	337, 357, 258, 388, 364, 313, 0, 0, 666, 640,
	665, 667, 668, 664, 669, 670, 651, 553, 0, 600,
	662, 661, 663, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 376, 0, 237, 266, 0,
	241, 0, 307, 0, 348, 284, 0, 0, 629, 606,
	607, 608, 551, 609, 603, 604, 605, 630, 598, 626,
	627, 577, 601, 610, 625, 611, 628, 631, 632, 671,
	672, 617, 673, 614, 633, 624, 623, 612, 599, 634,
	635, 584, 579, 615, 616, 602, 618, 619, 620, 552,
	580, 581, 582, 583, 0, 0, 594, 404, 405, 406,
	427, 390, 0, 445, 0, 336, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 449, 441, 549, 0,
	0, 0, 279, 0, 0, 306, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 437, 0,
	438, 0, 0, 585, 0, 0, 365, 320, 0, 0,
	0, 0, 645, 653, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 542, 0, 0, 575, 622, 621,
	562, 572, 0, 0, 256, 188, 439, 0, 440, 563,
	0, 571, 564, 568, 567, 565, 566, 0, 637, 0,
	0, 0, 0, 0, 0, 0, 546, 0, 550, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 543, 544, 0, 0, 0, 0, 595, 0,
	545, 0, 0, 590, 569, 573, 0, 0, 0, 0,
	247, 370, 386, 257, 361, 399, 262, 368, 252, 335,
	358, 0, 0, 249, 384, 367, 317, 298, 299, 248,
	0, 353, 277, 290, 274, 333, 570, 593, 597, 273,
	659, 591, 394, 251, 0, 393, 332, 380, 385, 318,
	312, 250, 382, 316, 311, 302, 281, 660, 303, 304,
	294, 344, 310, 345, 295, 322, 321, 323, 0, 0,
	0, 0, 0, 422, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 588, 0, 0,
	0, 396, 0, 0, 643, 0, 0, 0, 369, 0,
	0, 305, 0, 0, 0, 592, 0, 356, 338, 656,
	0, 0, 354, 308, 381, 346, 387, 371, 395, 350,
	347, 242, 372, 276, 319, 253, 255, 271, 278, 280,
	282, 283, 328, 329, 341, 360, 373, 374, 375, 275,
	263, 355, 264, 292, 265, 243, 268, 267, 269, 362,
	270, 245, 342, 379, 0, 288, 351, 315, 246, 314,
	343, 378, 377, 254, 403, 409, 410, 0, 0, 415,
	0, 0, 0, 423, 428, 429, 430, 432, 433, 434,
	435, 0, 0, 0, 0, 417, 0, 0, 0, 0,
	0, 0, 408, 286, 239, 240, 448, 641, 334, 0,
	0, 0, 0, 655, 636, 638, 639, 642, 646, 647,
	648, 649, 650, 652, 654, 658, 447, 0, 0, 0,
	0, 0, 446, 340, 0, 359, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 366, 389,
	401, 418, 421, 0, 0, 0, 0, 244, 420, 0,
	0, 0, 0, 0, 0, 0, 0, 657, 0, 0,
	0, 400, 0, 0, 0, 0, 0, 596, 0, 0,
	324, 325, 326, 327, 644, 0, 261, 419, 349, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 413, 414, 285,
	291, 431, 293, 260, 339, 287, 398, 300, 0, 424,
	0, 425, 0, 0, 0, 0, 331, 296, 297, 363,
	301, 309, 352, 397, 337, 357, 258, 388, 364, 313,
	0, 0, 666, 640, 665, 667, 668, 664, 669, 670,
	651, 553, 0, 600, 662, 661, 663, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 376,
	0, 237, 266, 0, 241, 0, 307, 0, 348, 284,
	0, 0, 629, 606, 607, 608, 551, 609, 603, 604,
	605, 630, 598, 626, 627, 577, 601, 610, 625, 611,
	628, 631, 632, 671, 672, 617, 673, 614, 633, 624,
	623, 612, 599, 634, 635, 584, 579, 615, 616, 602,
	618, 619, 620, 552, 580, 581, 582, 583, 0, 0,
	0, 404, 405, 406, 427, 390, 0, 445, 165, 51,
	157, 133, 0, 0, 0, 0, 0, 0, 336, 0,
	449, 441, 0, 0, 0, 0, 158, 0, 0, 0,
	0, 0, 0, 150, 0, 279, 0, 159, 306, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 437, 0, 438, 0, 0, 113, 0, 0, 365,
	320, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 101, 0, 0, 0, 0, 0, 162, 0, 0,
	187, 0, 0, 0, 0, 0, 0, 256, 188, 439,
	0, 440, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 179, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 370, 386, 257, 361, 399, 262,
	368, 252, 335, 358, 0, 0, 249, 384, 367, 317,
	298, 299, 248, 0, 353, 277, 290, 274, 333, 0,
	383, 411, 273, 402, 0, 394, 251, 0, 393, 332,
	380, 385, 318, 312, 250, 382, 316, 311, 302, 281,
	426, 303, 304, 294, 344, 310, 345, 295, 322, 321,
	323, 0, 0, 0, 0, 0, 422, 0, 0, 0,
	0, 0, 0, 132, 156, 163, 0, 99, 0, 0,
	0, 0, 0, 0, 396, 0, 0, 180, 0, 0,
	0, 369, 0, 0, 305, 155, 149, 148, 412, 0,
	356, 338, 57, 0, 0, 354, 308, 381, 346, 387,
	371, 395, 350, 347, 242, 372, 276, 319, 253, 255,
	271, 278, 280, 282, 283, 328, 329, 341, 360, 373,
	374, 375, 275, 263, 355, 264, 292, 265, 243, 268,
	267, 269, 362, 270, 245, 342, 379, 0, 288, 351,
	315, 246, 314, 343, 378, 377, 254, 403, 409, 410,
	0, 0, 415, 151, 152, 153, 423, 428, 429, 430,
	432, 433, 434, 435, 0, 0, 0, 0, 417, 0,
	0, 0, 0, 0, 0, 408, 286, 239, 240, 391,
	272, 334, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 330, 407, 183, 0, 0, 436, 191,
	0, 0, 0, 154, 0, 192, 340, 0, 359, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 366, 389, 401, 418, 421, 0, 0, 0, 0,
	244, 420, 0, 0, 0, 0, 0, 0, 0, 0,
	392, 0, 0, 0, 400, 0, 0, 0, 0, 0,
	416, 0, 0, 324, 325, 326, 327, 289, 0, 261,
	419, 349, 111, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 50, 0, 0, 0, 0, 0,
	413, 414, 285, 291, 431, 293, 260, 339, 287, 398,
	300, 0, 424, 0, 425, 0, 0, 0, 0, 331,
	296, 297, 363, 301, 309, 352, 397, 337, 357, 258,
	388, 364, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 52, 0, 0, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 376, 0, 237, 266, 0, 241, 0, 307,
	134, 348, 284, 0, 0, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 0, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 0, 0, 0, 238, 233, 234, 235,
	236, 0, 0, 0, 404, 405, 406, 427, 390, 336,
	193, 39, 181, 184, 186, 185, 0, 49, 5, 0,
	0, 0, 116, 194, 441, 0, 279, 0, 0, 306,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 437, 0, 438, 0, 0, 0, 0, 0,
	365, 320, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1043, 0,
	0, 187, 0, 0, 562, 572, 0, 0, 256, 188,
	439, 0, 440, 563, 0, 571, 564, 568, 567, 565,
	566, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 569, 0,
	0, 0, 0, 0, 247, 370, 386, 257, 361, 399,
	262, 368, 252, 335, 358, 0, 0, 249, 384, 367,
	317, 298, 299, 248, 0, 353, 277, 290, 274, 333,
	570, 383, 411, 273, 402, 0, 394, 251, 0, 393,
	332, 380, 385, 318, 312, 250, 382, 316, 311, 302,
	281, 426, 303, 304, 294, 344, 310, 345, 295, 322,
	321, 323, 0, 0, 0, 0, 0, 422, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 396, 0, 0, 0, 0,
	0, 0, 369, 0, 0, 305, 0, 0, 0, 412,
	0, 356, 338, 0, 0, 0, 354, 308, 381, 346,
	387, 371, 395, 350, 347, 242, 372, 276, 319, 253,
	255, 271, 278, 280, 282, 283, 328, 329, 341, 360,
	373, 374, 375, 275, 263, 355, 264, 292, 265, 243,
	268, 267, 269, 362, 270, 245, 342, 379, 0, 288,
	351, 315, 246, 314, 343, 378, 377, 254, 403, 409,
	410, 0, 0, 415, 0, 0, 0, 423, 428, 429,
	430, 432, 433, 434, 435, 0, 0, 0, 0, 417,
	0, 0, 0, 0, 0, 0, 408, 286, 239, 240,
	448, 272, 334, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 330, 407, 0, 0, 0, 436,
	447, 0, 0, 0, 0, 0, 446, 340, 0, 359,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 366, 389, 401, 418, 421, 0, 0, 0,
	0, 244, 420, 0, 0, 0, 0, 0, 0, 0,
	0, 392, 0, 0, 0, 400, 0, 0, 0, 0,
	0, 416, 0, 0, 324, 325, 326, 327, 289, 0,
	261, 419, 349, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 413, 414, 285, 291, 431, 293, 260, 339, 287,
	398, 300, 0, 424, 0, 425, 0, 0, 0, 0,
	331, 296, 297, 363, 301, 309, 352, 397, 337, 357,
	258, 388, 364, 313, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 376, 0, 237, 266, 0, 241, 0,
	307, 0, 348, 284, 0, 0, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 0,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 231, 0, 0, 0, 238, 233, 234,
	235, 236, 0, 0, 0, 404, 405, 406, 427, 390,
	0, 445, 165, 51, 157, 133, 0, 0, 0, 0,
	0, 0, 336, 466, 449, 441, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	0, 0, 306, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 437, 0, 438, 0, 0,
	0, 0, 0, 365, 320, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 471, 0, 0, 187, 0, 0, 0, 0, 0,
	0, 256, 188, 439, 0, 440, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 370, 386,
	257, 361, 399, 262, 368, 252, 335, 358, 0, 0,
	249, 384, 367, 317, 298, 299, 248, 0, 353, 277,
	290, 274, 333, 0, 383, 411, 273, 402, 0, 394,
	251, 0, 393, 332, 380, 385, 318, 312, 250, 382,
	316, 311, 302, 281, 426, 303, 304, 294, 344, 310,
	345, 295, 322, 321, 323, 0, 0, 0, 0, 0,
	422, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 470, 0, 0, 0, 0, 0, 0, 396, 0,
	0, 0, 0, 0, 0, 369, 0, 0, 305, 0,
	0, 0, 412, 0, 356, 338, 0, 0, 0, 354,
	308, 381, 346, 387, 371, 395, 350, 347, 242, 372,
	276, 319, 253, 255, 271, 278, 280, 282, 283, 328,
	329, 341, 360, 373, 374, 375, 275, 263, 355, 264,
	292, 265, 243, 268, 267, 269, 362, 270, 245, 342,
	379, 0, 288, 351, 315, 246, 314, 343, 378, 377,
	254, 403, 409, 410, 0, 0, 415, 0, 0, 0,
	423, 428, 429, 430, 432, 433, 434, 435, 0, 0,
	0, 0, 417, 0, 0, 0, 0, 0, 0, 408,
	286, 239, 240, 448, 272, 334, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 330, 407, 0,
	0, 0, 436, 447, 0, 0, 0, 0, 0, 446,
	340, 0, 359, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 366, 389, 401, 418, 421,
	0, 0, 0, 0, 244, 420, 0, 0, 0, 0,
	0, 0, 0, 0, 392, 0, 0, 0, 400, 0,
	0, 0, 0, 0, 416, 0, 0, 324, 325, 326,
	327, 467, 469, 261, 419, 349, 479, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 413, 414, 285, 291, 431, 293,
	260, 339, 287, 398, 300, 0, 424, 0, 425, 0,
	0, 0, 0, 331, 296, 297, 363, 301, 309, 352,
	397, 337, 357, 258, 388, 364, 313, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 52, 0, 0,
	232, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 376, 0, 237, 266,
	0, 241, 0, 307, 134, 348, 284, 0, 0, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 0, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 229, 230, 231, 0, 336, 0,
	238, 233, 234, 235, 236, 0, 870, 0, 404, 405,
	406, 427, 390, 0, 445, 279, 0, 0, 306, 0,
	0, 0, 0, 0, 0, 0, 0, 449, 441, 0,
	0, 437, 0, 438, 0, 0, 0, 0, 0, 365,
	320, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 0, 0, 0, 0, 0, 0, 256, 188, 439,
	0, 440, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 856, 0, 0, 0,
	0, 0, 0, 247, 370, 386, 257, 361, 399, 262,
	368, 252, 335, 358, 0, 0, 2110, 2112, 2113, 2114,
	2115, 2116, 2117, 0, 2122, 2118, 2119, 2120, 2121, 0,
	2105, 2106, 2107, 2108, 854, 2089, 2111, 0, 2090, 332,
	2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2102,
	2103, 2100, 2101, 2109, 344, 310, 345, 295, 322, 321,
	323, 881, 883, 885, 887, 890, 422, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 396, 0, 0, 0, 0, 0,
	0, 369, 0, 0, 305, 0, 0, 0, 2104, 0,
	356, 338, 0, 0, 0, 354, 308, 381, 346, 387,
	371, 395, 350, 347, 242, 372, 276, 319, 253, 255,
	271, 278, 280, 282, 283, 328, 329, 341, 360, 373,
	374, 375, 275, 263, 355, 264, 292, 265, 243, 268,
	267, 269, 362, 270, 245, 342, 379, 0, 288, 351,
	315, 246, 314, 343, 378, 377, 254, 403, 409, 410,
	0, 0, 415, 0, 0, 0, 423, 428, 429, 430,
	432, 433, 434, 435, 0, 0, 0, 0, 417, 0,
	0, 0, 0, 0, 0, 408, 286, 239, 240, 448,
	272, 334, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 330, 407, 0, 0, 0, 436, 447,
	0, 0, 0, 0, 0, 446, 340, 0, 359, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 366, 389, 401, 418, 421, 0, 0, 0, 0,
	244, 420, 0, 0, 0, 0, 0, 0, 0, 0,
	392, 0, 0, 0, 400, 0, 0, 0, 0, 0,
	416, 0, 0, 324, 325, 326, 327, 289, 0, 261,
	419, 349, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	413, 414, 285, 291, 431, 293, 260, 339, 287, 398,
	300, 0, 424, 0, 425, 0, 0, 0, 0, 331,
	296, 297, 363, 301, 309, 352, 397, 337, 357, 258,
	388, 364, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 376, 0, 237, 266, 0, 241, 880, 307,
	0, 348, 284, 0, 0, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 0, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 0, 336, 0, 238, 233, 234, 235,
	236, 0, 0, 0, 404, 405, 406, 427, 390, 0,
	445, 279, 0, 0, 306, 0, 0, 0, 0, 0,
	0, 0, 0, 449, 441, 0, 0, 437, 0, 438,
	0, 0, 0, 0, 0, 365, 320, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 0, 0, 0,
	0, 0, 0, 256, 188, 439, 0, 440, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 1964, 1967,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	370, 386, 257, 361, 399, 262, 368, 252, 335, 358,
	0, 0, 249, 384, 367, 317, 298, 299, 248, 0,
	353, 277, 290, 274, 333, 0, 383, 411, 273, 402,
	0, 394, 251, 0, 393, 332, 380, 385, 318, 312,
	250, 382, 316, 311, 302, 281, 426, 303, 304, 294,
	344, 310, 345, 295, 322, 321, 323, 0, 0, 0,
	0, 0, 422, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1968,
	396, 0, 0, 0, 1963, 0, 1962, 369, 1960, 1965,
	305, 0, 0, 0, 412, 0, 356, 338, 0, 0,
	0, 354, 308, 381, 346, 387, 371, 395, 350, 347,
	242, 372, 276, 319, 253, 255, 271, 278, 280, 282,
	283, 328, 329, 341, 360, 373, 374, 375, 275, 263,
	355, 264, 292, 265, 243, 268, 267, 269, 362, 270,
	245, 342, 379, 1966, 288, 351, 315, 246, 314, 343,
	378, 377, 254, 403, 409, 410, 0, 0, 415, 0,
	0, 0, 423, 428, 429, 430, 432, 433, 434, 435,
	0, 0, 0, 0, 417, 0, 0, 0, 0, 0,
	0, 408, 286, 239, 240, 448, 272, 334, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 330,
	407, 0, 0, 0, 436, 447, 0, 0, 0, 0,
	0, 446, 340, 0, 359, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 366, 389, 401,
	418, 421, 0, 0, 0, 0, 244, 420, 0, 0,
	0, 0, 0, 0, 0, 0, 392, 0, 0, 0,
	400, 0, 0, 0, 0, 0, 416, 0, 0, 324,
	325, 326, 327, 289, 0, 261, 419, 349, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 413, 414, 285, 291,
	431, 293, 260, 339, 287, 398, 300, 0, 424, 0,
	425, 0, 0, 0, 0, 331, 296, 297, 363, 301,
	309, 352, 397, 337, 357, 258, 388, 364, 313, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 232, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 376, 0,
	237, 266, 0, 241, 0, 307, 0, 348, 284, 0,
	0, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 0, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 229, 230, 231, 0,
	0, 0, 238, 233, 234, 235, 236, 336, 0, 0,
	404, 405, 406, 427, 390, 0, 445, 0, 0, 1726,
	0, 0, 0, 0, 279, 0, 0, 306, 0, 449,
	441, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	437, 0, 438, 0, 0, 0, 0, 0, 365, 320,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	0, 0, 1727, 0, 0, 0, 256, 188, 439, 0,
	440, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 976, 977, 978, 975, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 370, 386, 257, 361, 399, 262, 368,
	252, 335, 358, 0, 0, 249, 384, 367, 317, 298,
	299, 248, 0, 353, 277, 290, 274, 333, 0, 383,
	411, 273, 402, 0, 394, 251, 0, 393, 332, 380,
	385, 318, 312, 250, 382, 316, 311, 302, 281, 426,
	303, 304, 294, 344, 310, 345, 295, 322, 321, 323,
	0, 0, 0, 0, 0, 422, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 396, 0, 0, 0, 0, 0, 0,
	369, 0, 0, 305, 0, 0, 0, 412, 0, 356,
	338, 0, 0, 0, 354, 308, 381, 346, 387, 371,
	395, 350, 347, 242, 372, 276, 319, 253, 255, 271,
	278, 280, 282, 283, 328, 329, 341, 360, 373, 374,
	375, 275, 263, 355, 264, 292, 265, 243, 268, 267,
	269, 362, 270, 245, 342, 379, 0, 288, 351, 315,
	246, 314, 343, 378, 377, 254, 403, 409, 410, 0,
	0, 415, 0, 0, 0, 423, 428, 429, 430, 432,
	433, 434, 435, 0, 0, 0, 0, 417, 0, 0,
	0, 0, 0, 0, 408, 286, 239, 240, 448, 272,
	334, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 330, 407, 0, 0, 0, 436, 447, 0,
	0, 0, 0, 0, 446, 340, 0, 359, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	366, 389, 401, 418, 421, 0, 0, 0, 0, 244,
	420, 0, 0, 0, 0, 0, 0, 0, 0, 392,
	0, 0, 0, 400, 0, 0, 0, 0, 0, 416,
	0, 0, 324, 325, 326, 327, 289, 0, 261, 419,
	349, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 413,
	414, 285, 291, 431, 293, 260, 339, 287, 398, 300,
	0, 424, 0, 425, 0, 0, 0, 0, 331, 296,
	297, 363, 301, 309, 352, 397, 337, 357, 258, 388,
	364, 313, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 376, 0, 237, 266, 0, 241, 0, 307, 0,
	348, 284, 0, 0, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 0, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 0, 336, 0, 238, 233, 234, 235, 236,
	0, 0, 0, 404, 405, 406, 427, 390, 0, 445,
	279, 790, 0, 306, 0, 0, 0, 0, 0, 0,
	0, 0, 449, 441, 0, 0, 437, 0, 438, 0,
	0, 0, 0, 0, 365, 320, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 797, 798, 0, 0,
	0, 0, 256, 188, 439, 0, 440, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 801, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 370,
	785, 257, 361, 399, 262, 368, 252, 335, 358, 0,
	0, 249, 384, 367, 317, 298, 299, 248, 0, 353,
	277, 290, 274, 333, 0, 383, 411, 273, 402, 776,
	394, 251, 775, 393, 332, 380, 385, 318, 312, 250,
	382, 316, 311, 302, 281, 426, 303, 304, 294, 344,
	310, 345, 295, 322, 321, 323, 0, 0, 0, 0,
	0, 422, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 396,
	0, 0, 0, 0, 0, 0, 369, 0, 0, 305,
	0, 0, 0, 412, 0, 356, 338, 0, 0, 0,
	354, 308, 381, 346, 387, 371, 395, 788, 347, 242,
	372, 276, 319, 253, 255, 271, 278, 280, 282, 283,
	328, 329, 341, 360, 373, 374, 375, 275, 263, 355,
	264, 292, 265, 243, 268, 267, 269, 362, 270, 245,
	342, 379, 0, 288, 351, 315, 246, 314, 343, 378,
	377, 254, 403, 409, 410, 0, 0, 415, 0, 0,
	0, 423, 428, 429, 430, 432, 433, 434, 435, 0,
	0, 0, 0, 417, 0, 0, 0, 0, 0, 0,
	408, 286, 239, 240, 448, 272, 334, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 407,
	0, 0, 0, 436, 447, 0, 0, 0, 0, 0,
	446, 340, 0, 359, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 366, 389, 401, 418,
	421, 0, 0, 0, 0, 244, 420, 0, 0, 0,
	0, 0, 0, 789, 0, 392, 0, 0, 0, 400,
	0, 0, 0, 0, 0, 792, 0, 0, 324, 325,
	326, 327, 289, 0, 261, 419, 349, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 413, 414, 285, 291, 431,
	293, 260, 339, 287, 398, 300, 0, 424, 0, 425,
	0, 0, 0, 0, 799, 786, 795, 787, 301, 309,
	352, 397, 337, 357, 258, 388, 364, 796, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 376, 0, 237,
	266, 0, 241, 0, 307, 0, 348, 284, 0, 0,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 0, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 228, 229, 230, 231, 0, 336,
	0, 238, 233, 234, 235, 236, 0, 0, 0, 404,
	405, 406, 427, 390, 0, 445, 279, 0, 0, 306,
	0, 0, 0, 0, 0, 0, 0, 0, 449, 441,
	0, 0, 437, 0, 438, 0, 0, 0, 0, 0,
	365, 320, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 0, 0, 0, 0, 0, 0, 256, 188,
	439, 0, 440, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 1983, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 370, 386, 257, 361, 399,
	262, 368, 252, 335, 358, 0, 0, 249, 384, 367,
	317, 298, 299, 248, 0, 353, 277, 290, 274, 333,
	0, 383, 411, 273, 402, 0, 394, 251, 0, 393,
	332, 380, 385, 318, 312, 250, 382, 316, 311, 302,
	281, 426, 303, 304, 294, 344, 310, 345, 295, 322,
	321, 323, 0, 0, 0, 0, 0, 422, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1982, 396, 0, 0, 0, 1987,
	1985, 0, 369, 0, 1986, 305, 0, 0, 0, 412,
	0, 356, 338, 0, 0, 0, 354, 308, 381, 346,
	387, 371, 395, 350, 347, 242, 372, 276, 319, 253,
	255, 271, 278, 280, 282, 283, 328, 329, 341, 360,
	373, 374, 375, 275, 263, 355, 264, 292, 265, 243,
	268, 267, 269, 362, 270, 245, 342, 379, 0, 288,
	351, 315, 246, 314, 343, 378, 377, 254, 403, 409,
	410, 0, 0, 415, 0, 0, 0, 423, 428, 429,
	430, 432, 433, 434, 435, 0, 0, 0, 0, 417,
	0, 0, 0, 0, 0, 0, 408, 286, 239, 240,
	448, 272, 334, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 330, 407, 0, 0, 0, 436,
	447, 0, 0, 0, 0, 0, 446, 340, 0, 359,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 366, 389, 401, 418, 421, 0, 0, 0,
	0, 244, 420, 0, 0, 0, 0, 0, 0, 0,
	0, 392, 0, 0, 0, 400, 0, 0, 0, 0,
	0, 416, 0, 0, 324, 325, 326, 327, 289, 0,
	261, 419, 349, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 413, 414, 285, 291, 431, 293, 260, 339, 287,
	398, 300, 0, 424, 0, 425, 0, 0, 0, 0,
	331, 296, 297, 363, 301, 309, 352, 397, 337, 357,
	258, 388, 364, 313, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 376, 0, 237, 266, 0, 241, 0,
	307, 0, 348, 284, 0, 0, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 0,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 231, 0, 0, 0, 238, 233, 234,
	235, 236, 165, 0, 0, 404, 405, 406, 427, 390,
	0, 445, 336, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 449, 441, 0, 0, 0, 279,
	0, 0, 306, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 437, 0, 438, 0, 0,
	113, 0, 0, 365, 320, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 162, 1770, 0, 187, 0, 0, 0, 0, 0,
	0, 256, 188, 439, 0, 440, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 370, 386,
	257, 361, 399, 262, 368, 252, 335, 358, 0, 0,
	249, 384, 367, 317, 298, 299, 248, 0, 353, 277,
	290, 274, 333, 0, 383, 411, 273, 402, 0, 394,
	251, 0, 393, 332, 380, 385, 318, 312, 250, 382,
	316, 311, 302, 281, 426, 303, 304, 294, 344, 310,
	345, 295, 322, 321, 323, 0, 0, 0, 0, 0,
	422, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 396, 0,
	0, 0, 0, 0, 0, 369, 0, 0, 305, 0,
	0, 0, 412, 0, 356, 338, 0, 0, 0, 354,
	308, 381, 346, 387, 371, 395, 350, 347, 242, 372,
	276, 319, 253, 255, 271, 278, 280, 282, 283, 328,
	329, 341, 360, 373, 374, 375, 275, 263, 355, 264,
	292, 265, 243, 268, 267, 269, 362, 270, 245, 342,
	379, 0, 288, 351, 315, 246, 314, 343, 378, 377,
	254, 403, 409, 410, 0, 0, 415, 0, 0, 0,
	423, 428, 429, 430, 432, 433, 434, 435, 0, 0,
	0, 0, 417, 0, 0, 0, 0, 0, 0, 408,
	286, 239, 240, 448, 272, 334, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 330, 407, 0,
	0, 0, 436, 447, 0, 0, 0, 0, 0, 446,
	340, 0, 359, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 366, 389, 401, 418, 421,
	0, 0, 0, 0, 244, 420, 0, 0, 0, 0,
	0, 0, 0, 0, 392, 0, 0, 0, 400, 0,
	0, 0, 0, 0, 416, 0, 0, 324, 325, 326,
	327, 289, 0, 261, 419, 349, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 413, 414, 285, 291, 431, 293,
	260, 339, 287, 398, 300, 0, 424, 0, 425, 0,
	0, 0, 0, 331, 296, 297, 363, 301, 309, 352,
	397, 337, 357, 258, 388, 364, 313, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	232, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 376, 0, 237, 266,
	0, 241, 0, 307, 134, 348, 284, 0, 0, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 0, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 229, 230, 231, 0, 0, 0,
	238, 233, 234, 235, 236, 165, 0, 0, 404, 405,
	406, 427, 390, 0, 445, 336, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 449, 441, 0,
	0, 0, 279, 0, 0, 306, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 437, 0,
	438, 0, 0, 113, 0, 0, 365, 320, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 162, 1761, 0, 187, 0, 0,
	0, 0, 0, 0, 256, 188, 439, 0, 440, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 370, 386, 257, 361, 399, 262, 368, 252, 335,
	358, 0, 0, 249, 384, 367, 317, 298, 299, 248,
	0, 353, 277, 290, 274, 333, 0, 383, 411, 273,
	402, 0, 394, 251, 0, 393, 332, 380, 385, 318,
	312, 250, 382, 316, 311, 302, 281, 426, 303, 304,
	294, 344, 310, 345, 295, 322, 321, 323, 0, 0,
	0, 0, 0, 422, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 396, 0, 0, 0, 0, 0, 0, 369, 0,
	0, 305, 0, 0, 0, 412, 0, 356, 338, 0,
	0, 0, 354, 308, 381, 346, 387, 371, 395, 350,
	347, 242, 372, 276, 319, 253, 255, 271, 278, 280,
	282, 283, 328, 329, 341, 360, 373, 374, 375, 275,
	263, 355, 264, 292, 265, 243, 268, 267, 269, 362,
	270, 245, 342, 379, 0, 288, 351, 315, 246, 314,
	343, 378, 377, 254, 403, 409, 410, 0, 0, 415,
	0, 0, 0, 423, 428, 429, 430, 432, 433, 434,
	435, 0, 0, 0, 0, 417, 0, 0, 0, 0,
	0, 0, 408, 286, 239, 240, 448, 272, 334, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	330, 407, 0, 0, 0, 436, 447, 0, 0, 0,
	0, 0, 446, 340, 0, 359, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 366, 389,
	401, 418, 421, 0, 0, 0, 0, 244, 420, 0,
	0, 0, 0, 0, 0, 0, 0, 392, 0, 0,
	0, 400, 0, 0, 0, 0, 0, 416, 0, 0,
	324, 325, 326, 327, 289, 0, 261, 419, 349, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 413, 414, 285,
	291, 431, 293, 260, 339, 287, 398, 300, 0, 424,
	0, 425, 0, 0, 0, 0, 331, 296, 297, 363,
	301, 309, 352, 397, 337, 357, 258, 388, 364, 313,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 376,
	0, 237, 266, 0, 241, 0, 307, 134, 348, 284,
	0, 0, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 0, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	0, 0, 0, 238, 233, 234, 235, 236, 165, 0,
	0, 404, 405, 406, 427, 390, 0, 445, 336, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	449, 441, 0, 0, 0, 279, 0, 0, 306, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 437, 0, 438, 0, 0, 113, 0, 0, 365,
	320, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1664, 0, 0,
	187, 0, 0, 0, 0, 0, 0, 256, 188, 439,
	0, 440, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 370, 386, 257, 361, 399, 262,
	368, 252, 335, 358, 0, 0, 249, 384, 367, 317,
	298, 299, 248, 0, 353, 277, 290, 274, 333, 0,
	383, 411, 273, 402, 0, 394, 251, 0, 393, 332,
	380, 385, 318, 312, 250, 382, 316, 311, 302, 281,
	426, 303, 304, 294, 344, 310, 345, 295, 322, 321,
	323, 0, 0, 0, 0, 0, 422, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 396, 0, 0, 0, 0, 0,
	0, 369, 0, 0, 305, 0, 0, 0, 412, 0,
	356, 338, 0, 0, 0, 354, 308, 381, 346, 387,
	371, 395, 350, 347, 242, 372, 276, 319, 253, 255,
	271, 278, 280, 282, 283, 328, 329, 341, 360, 373,
	374, 375, 275, 263, 355, 264, 292, 265, 243, 268,
	267, 269, 362, 270, 245, 342, 379, 0, 288, 351,
	315, 246, 314, 343, 378, 377, 254, 403, 409, 410,
	0, 0, 415, 0, 0, 0, 423, 428, 429, 430,
	432, 433, 434, 435, 0, 0, 0, 0, 417, 0,
	0, 0, 0, 0, 0, 408, 286, 239, 240, 448,
	272, 334, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 330, 407, 0, 0, 0, 436, 447,
	0, 0, 0, 0, 0, 446, 340, 0, 359, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 366, 389, 401, 418, 421, 0, 0, 0, 0,
	244, 420, 0, 0, 0, 0, 0, 0, 0, 0,
	392, 0, 0, 0, 400, 0, 0, 0, 0, 0,
	416, 0, 0, 324, 325, 326, 327, 289, 0, 261,
	419, 349, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	413, 414, 285, 291, 431, 293, 260, 339, 287, 398,
	300, 0, 424, 0, 425, 0, 0, 0, 0, 331,
	296, 297, 363, 301, 309, 352, 397, 337, 357, 258,
	388, 364, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 376, 0, 237, 266, 0, 241, 0, 307,
	134, 348, 284, 0, 0, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 0, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 0, 336, 0, 238, 233, 234, 235,
	236, 0, 0, 0, 404, 405, 406, 427, 390, 0,
	445, 279, 0, 0, 306, 0, 0, 0, 0, 0,
	0, 0, 0, 449, 441, 0, 0, 437, 0, 438,
	0, 0, 0, 0, 0, 365, 320, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 797, 798, 0,
	0, 0, 0, 256, 188, 439, 0, 440, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 801, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	370, 386, 257, 361, 399, 262, 368, 252, 335, 358,
	0, 0, 249, 384, 367, 317, 298, 299, 248, 0,
	353, 277, 290, 274, 333, 0, 383, 411, 273, 402,
	776, 394, 251, 775, 393, 332, 380, 385, 318, 312,
	250, 382, 316, 311, 302, 281, 426, 303, 304, 294,
	344, 310, 345, 295, 322, 321, 323, 0, 0, 0,
	0, 0, 422, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	396, 0, 0, 0, 0, 0, 0, 369, 0, 0,
	305, 0, 0, 0, 412, 0, 356, 338, 0, 0,
	0, 354, 308, 381, 346, 387, 371, 395, 350, 347,
	242, 372, 276, 319, 253, 255, 271, 278, 280, 282,
	283, 328, 329, 341, 360, 373, 374, 375, 275, 263,
	355, 264, 292, 265, 243, 268, 267, 269, 362, 270,
	245, 342, 379, 0, 288, 351, 315, 246, 314, 343,
	378, 377, 254, 403, 409, 410, 0, 0, 415, 0,
	0, 0, 423, 428, 429, 430, 432, 433, 434, 435,
	0, 0, 0, 0, 417, 0, 0, 0, 0, 0,
	0, 408, 286, 239, 240, 448, 272, 334, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 330,
	407, 0, 0, 0, 436, 447, 0, 0, 0, 0,
	0, 446, 340, 0, 359, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 366, 389, 401,
	418, 421, 0, 0, 0, 0, 244, 420, 0, 0,
	0, 0, 0, 0, 0, 0, 392, 0, 0, 0,
	400, 0, 0, 0, 0, 0, 416, 0, 0, 324,
	325, 326, 327, 289, 0, 261, 419, 349, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 413, 414, 285, 291,
	431, 293, 260, 339, 287, 398, 300, 0, 424, 0,
	425, 0, 0, 0, 0, 799, 1683, 795, 1684, 301,
	309, 352, 397, 337, 357, 258, 388, 364, 796, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 232, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 376, 0,
	237, 266, 0, 241, 0, 307, 0, 348, 284, 0,
	0, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 0, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 229, 230, 231, 0,
	336, 0, 238, 233, 234, 235, 236, 0, 0, 2423,
	404, 405, 406, 427, 390, 0, 445, 279, 0, 0,
	306, 0, 0, 0, 0, 0, 0, 0, 0, 449,
	441, 0, 0, 437, 0, 438, 0, 0, 0, 0,
	0, 365, 320, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 0, 0, 0, 0, 256,
	188, 439, 0, 440, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 370, 386, 257, 361,
	399, 262, 368, 252, 335, 358, 0, 0, 249, 384,
	367, 317, 298, 299, 248, 0, 353, 277, 290, 274,
	333, 0, 383, 411, 273, 402, 0, 394, 251, 0,
	393, 332, 380, 385, 318, 312, 250, 382, 316, 311,
	302, 281, 426, 303, 304, 294, 344, 310, 345, 295,
	322, 321, 323, 0, 0, 0, 0, 0, 422, 0,
	0, 0, 0, 0, 0, 0, 0, 2426, 0, 0,
	2425, 0, 0, 0, 0, 0, 396, 0, 0, 0,
	0, 0, 0, 369, 0, 0, 305, 0, 0, 0,
	412, 0, 356, 338, 0, 0, 0, 354, 308, 381,
	346, 387, 371, 395, 350, 347, 242, 372, 276, 319,
	253, 255, 271, 278, 280, 282, 283, 328, 329, 341,
	360, 373, 374, 375, 275, 263, 355, 264, 292, 265,
	243, 268, 267, 269, 362, 270, 245, 342, 379, 0,
	288, 351, 315, 246, 314, 343, 378, 377, 254, 403,
	409, 410, 0, 0, 415, 0, 0, 0, 423, 428,
	429, 430, 432, 433, 434, 435, 0, 0, 0, 0,
	417, 0, 0, 0, 0, 0, 0, 408, 286, 239,
	240, 448, 272, 334, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 330, 407, 0, 0, 0,
	436, 447, 0, 0, 0, 0, 0, 446, 340, 0,
	359, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 366, 389, 401, 418, 421, 0, 0,
	0, 0, 244, 420, 0, 0, 0, 0, 0, 0,
	0, 0, 392, 0, 0, 0, 400, 0, 0, 0,
	0, 0, 416, 0, 0, 324, 325, 326, 327, 289,
	0, 261, 419, 349, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 413, 414, 285, 291, 431, 293, 260, 339,
	287, 398, 300, 0, 424, 0, 425, 0, 0, 0,
	0, 331, 296, 297, 363, 301, 309, 352, 397, 337,
	357, 258, 388, 364, 313, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 232, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 376, 0, 237, 266, 0, 241,
	0, 307, 0, 348, 284, 0, 0, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	0, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 229, 230, 231, 0, 336, 0, 238, 233,
	234, 235, 236, 0, 0, 0, 404, 405, 406, 427,
	390, 0, 445, 279, 1226, 0, 306, 0, 0, 0,
	0, 0, 0, 0, 0, 449, 441, 0, 0, 437,
	0, 438, 0, 0, 0, 0, 0, 365, 320, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 0,
	0, 1224, 0, 0, 0, 256, 188, 439, 0, 440,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1222, 0, 0, 0, 0, 0,
	0, 247, 370, 386, 257, 361, 399, 262, 368, 252,
	335, 358, 0, 0, 249, 384, 367, 317, 298, 299,
	248, 0, 353, 277, 290, 274, 333, 0, 383, 411,
	273, 402, 0, 394, 251, 0, 393, 332, 380, 385,
	318, 312, 250, 382, 316, 311, 302, 281, 426, 303,
	304, 294, 344, 310, 345, 295, 322, 321, 323, 0,
	0, 0, 0, 0, 422, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 396, 0, 0, 0, 0, 0, 0, 369,
	0, 0, 305, 0, 0, 0, 412, 0, 356, 338,
	0, 0, 0, 354, 308, 381, 346, 387, 371, 395,
	350, 347, 242, 372, 276, 319, 253, 255, 271, 278,
	280, 282, 283, 328, 329, 341, 360, 373, 374, 375,
	275, 263, 355, 264, 292, 265, 243, 268, 267, 269,
	362, 270, 245, 342, 379, 0, 288, 351, 315, 246,
	314, 343, 378, 377, 254, 403, 409, 410, 0, 0,
	415, 0, 0, 0, 423, 428, 429, 430, 432, 433,
	434, 435, 0, 0, 0, 0, 417, 0, 0, 0,
	0, 0, 0, 408, 286, 239, 240, 448, 272, 334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 330, 407, 0, 0, 0, 436, 447, 0, 0,
	0, 0, 0, 446, 340, 0, 359, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 366,
	389, 401, 418, 421, 0, 0, 0, 0, 244, 420,
	0, 0, 0, 0, 0, 0, 0, 0, 392, 0,
	0, 0, 400, 0, 0, 0, 0, 0, 416, 0,
	0, 324, 325, 326, 327, 289, 0, 261, 419, 349,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 413, 414,
	285, 291, 431, 293, 260, 339, 287, 398, 300, 0,
	424, 0, 425, 0, 0, 0, 0, 331, 296, 297,
	363, 301, 309, 352, 397, 337, 357, 258, 388, 364,
	313, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 232, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	376, 0, 237, 266, 0, 241, 0, 307, 0, 348,
	284, 0, 0, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 0, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	231, 0, 336, 0, 238, 233, 234, 235, 236, 0,
	0, 0, 404, 405, 406, 427, 390, 0, 445, 279,
	1220, 0, 306, 0, 0, 0, 0, 0, 0, 0,
	0, 449, 441, 0, 0, 437, 0, 438, 0, 0,
	0, 0, 0, 365, 320, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 0, 0, 1224, 0, 0,
	0, 256, 188, 439, 0, 440, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1222, 0, 0, 0, 0, 0, 0, 247, 370, 386,
	257, 361, 399, 262, 368, 252, 335, 358, 0, 0,
	249, 384, 367, 317, 298, 299, 248, 0, 353, 277,
	290, 274, 333, 0, 383, 411, 273, 402, 0, 394,
	251, 0, 393, 332, 380, 385, 318, 312, 250, 382,
	316, 311, 302, 281, 426, 303, 304, 294, 344, 310,
	345, 295, 322, 321, 323, 0, 0, 0, 0, 0,
	422, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 396, 0,
	0, 0, 0, 0, 0, 369, 0, 0, 305, 0,
	0, 0, 412, 0, 356, 338, 0, 0, 0, 354,
	308, 381, 346, 387, 371, 395, 350, 347, 242, 372,
	276, 319, 253, 255, 271, 278, 280, 282, 283, 328,
	329, 341, 360, 373, 374, 375, 275, 263, 355, 264,
	292, 265, 243, 268, 267, 269, 362, 270, 245, 342,
	379, 0, 288, 351, 315, 246, 314, 343, 378, 377,
	254, 403, 409, 410, 0, 0, 415, 0, 0, 0,
	423, 428, 429, 430, 432, 433, 434, 435, 0, 0,
	0, 0, 417, 0, 0, 0, 0, 0, 0, 408,
	286, 239, 240, 448, 272, 334, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 330, 407, 0,
	0, 0, 436, 447, 0, 0, 0, 0, 0, 446,
	340, 0, 359, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 366, 389, 401, 418, 421,
	0, 0, 0, 0, 244, 420, 0, 0, 0, 0,
	0, 0, 0, 0, 392, 0, 0, 0, 400, 0,
	0, 0, 0, 0, 416, 0, 0, 324, 325, 326,
	327, 289, 0, 261, 419, 349, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 413, 414, 285, 291, 431, 293,
	260, 339, 287, 398, 300, 0, 424, 0, 425, 0,
	0, 0, 0, 331, 296, 297, 363, 301, 309, 352,
	397, 337, 357, 258, 388, 364, 313, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	232, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 376, 0, 237, 266,
	0, 241, 0, 307, 0, 348, 284, 0, 0, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 0, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 229, 230, 231, 0, 336, 0,
	238, 233, 234, 235, 236, 0, 0, 0, 404, 405,
	406, 427, 390, 0, 445, 279, 0, 0, 306, 0,
	0, 0, 0, 0, 0, 0, 0, 449, 441, 0,
	0, 437, 0, 438, 0, 0, 0, 0, 0, 365,
	320, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3207, 0,
	187, 622, 0, 0, 0, 0, 0, 256, 188, 439,
	0, 440, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 370, 386, 257, 361, 399, 262,
	368, 252, 335, 358, 0, 0, 249, 384, 367, 317,
	298, 299, 248, 0, 353, 277, 290, 274, 333, 0,
	383, 411, 273, 402, 0, 394, 251, 0, 393, 332,
	380, 385, 318, 312, 250, 382, 316, 311, 302, 281,
	426, 303, 304, 294, 344, 310, 345, 295, 322, 321,
	323, 0, 0, 0, 0, 0, 422, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 396, 0, 0, 0, 0, 0,
	0, 369, 0, 0, 305, 0, 0, 0, 412, 0,
	356, 338, 0, 0, 0, 354, 308, 381, 346, 387,
	371, 395, 350, 347, 242, 372, 276, 319, 253, 255,
	271, 278, 280, 282, 283, 328, 329, 341, 360, 373,
	374, 375, 275, 263, 355, 264, 292, 265, 243, 268,
	267, 269, 362, 270, 245, 342, 379, 0, 288, 351,
	315, 246, 314, 343, 378, 377, 254, 403, 409, 410,
	0, 0, 415, 0, 0, 0, 423, 428, 429, 430,
	432, 433, 434, 435, 0, 0, 0, 0, 417, 0,
	0, 0, 0, 0, 0, 408, 286, 239, 240, 448,
	272, 334, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 330, 407, 0, 0, 0, 436, 447,
	0, 0, 0, 0, 0, 446, 340, 0, 359, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 366, 389, 401, 418, 421, 0, 0, 0, 0,
	244, 420, 0, 0, 0, 0, 0, 0, 0, 0,
	392, 0, 0, 0, 400, 0, 0, 0, 0, 0,
	416, 0, 0, 324, 325, 326, 327, 289, 0, 261,
	419, 349, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	413, 414, 285, 291, 431, 293, 260, 339, 287, 398,
	300, 0, 424, 0, 425, 0, 0, 0, 0, 331,
	296, 297, 363, 301, 309, 352, 397, 337, 357, 258,
	388, 364, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 376, 0, 237, 266, 0, 241, 0, 307,
	0, 348, 284, 0, 0, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 0, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 0, 336, 0, 238, 233, 234, 235,
	236, 0, 0, 0, 404, 405, 406, 427, 390, 0,
	445, 279, 0, 0, 306, 0, 0, 0, 0, 0,
	0, 0, 0, 449, 441, 0, 0, 437, 0, 438,
	0, 0, 0, 0, 0, 365, 320, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 0, 0, 1224,
	0, 0, 0, 256, 188, 439, 0, 440, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1222, 0, 0, 0, 0, 0, 0, 247,
	370, 386, 257, 361, 399, 262, 368, 252, 335, 358,
	0, 0, 249, 384, 367, 317, 298, 299, 248, 0,
	353, 277, 290, 274, 333, 0, 383, 411, 273, 402,
	0, 394, 251, 0, 393, 332, 380, 385, 318, 312,
	250, 382, 316, 311, 302, 281, 426, 303, 304, 294,
	344, 310, 345, 295, 322, 321, 323, 0, 0, 0,
	0, 0, 422, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	396, 0, 0, 0, 0, 0, 0, 369, 0, 0,
	305, 0, 0, 0, 412, 0, 356, 338, 0, 0,
	0, 354, 308, 381, 346, 387, 371, 395, 350, 347,
	242, 372, 276, 319, 253, 255, 271, 278, 280, 282,
	283, 328, 329, 341, 360, 373, 374, 375, 275, 263,
	355, 264, 292, 265, 243, 268, 267, 269, 362, 270,
	245, 342, 379, 0, 288, 351, 315, 246, 314, 343,
	378, 377, 254, 403, 409, 410, 0, 0, 415, 0,
	0, 0, 423, 428, 429, 430, 432, 433, 434, 435,
	0, 0, 0, 0, 417, 0, 0, 0, 0, 0,
	0, 408, 286, 239, 240, 448, 272, 334, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 330,
	407, 0, 0, 0, 436, 447, 0, 0, 0, 0,
	0, 446, 340, 0, 359, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 366, 389, 401,
	418, 421, 0, 0, 0, 0, 244, 420, 0, 0,
	0, 0, 0, 0, 0, 0, 392, 0, 0, 0,
	400, 0, 0, 0, 0, 0, 416, 0, 0, 324,
	325, 326, 327, 289, 0, 261, 419, 349, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 413, 414, 285, 291,
	431, 293, 260, 339, 287, 398, 300, 0, 424, 0,
	425, 0, 0, 0, 0, 331, 296, 297, 363, 301,
	309, 352, 397, 337, 357, 258, 388, 364, 313, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 232, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 376, 0,
	237, 266, 0, 241, 0, 307, 0, 348, 284, 0,
	0, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 0, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 229, 230, 231, 0,
	336, 0, 238, 233, 234, 235, 236, 0, 0, 0,
	404, 405, 406, 427, 390, 0, 445, 279, 0, 0,
	306, 0, 0, 0, 0, 0, 0, 0, 0, 449,
	441, 0, 0, 437, 0, 438, 0, 0, 0, 0,
	0, 365, 320, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 1224, 0, 0, 0, 256,
	188, 439, 0, 440, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2939, 0,
	0, 0, 0, 0, 0, 247, 370, 386, 257, 361,
	399, 262, 368, 252, 335, 358, 0, 0, 249, 384,
	367, 317, 298, 299, 248, 0, 353, 277, 290, 274,
	333, 0, 383, 411, 273, 402, 0, 394, 251, 0,
	393, 332, 380, 385, 318, 312, 250, 382, 316, 311,
	302, 281, 426, 303, 304, 294, 344, 310, 345, 295,
	322, 321, 323, 0, 0, 0, 0, 0, 422, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 396, 0, 0, 0,
	0, 0, 0, 369, 0, 0, 305, 0, 0, 0,
	412, 0, 356, 338, 0, 0, 0, 354, 308, 381,
	346, 387, 371, 395, 350, 347, 242, 372, 276, 319,
	253, 255, 271, 278, 280, 282, 283, 328, 329, 341,
	360, 373, 374, 375, 275, 263, 355, 264, 292, 265,
	243, 268, 267, 269, 362, 270, 245, 342, 379, 0,
	288, 351, 315, 246, 314, 343, 378, 377, 254, 403,
	409, 410, 0, 0, 415, 0, 0, 0, 423, 428,
	429, 430, 432, 433, 434, 435, 0, 0, 0, 0,
	417, 0, 0, 0, 0, 0, 0, 408, 286, 239,
	240, 448, 272, 334, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 330, 407, 0, 0, 0,
	436, 447, 0, 0, 0, 0, 0, 446, 340, 0,
	359, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 366, 389, 401, 418, 421, 0, 0,
	0, 0, 244, 420, 0, 0, 0, 0, 0, 0,
	0, 0, 392, 0, 0, 0, 400, 0, 0, 0,
	0, 0, 416, 0, 0, 324, 325, 326, 327, 289,
	0, 261, 419, 349, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 413, 414, 285, 291, 431, 293, 260, 339,
	287, 398, 300, 0, 424, 0, 425, 0, 0, 0,
	0, 331, 296, 297, 363, 301, 309, 352, 397, 337,
	357, 258, 388, 364, 313, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 232, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 376, 0, 237, 266, 0, 241,
	0, 307, 0, 348, 284, 0, 0, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	0, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 229, 230, 231, 0, 0, 0, 238, 233,
	234, 235, 236, 336, 0, 0, 404, 405, 406, 427,
	390, 0, 445, 0, 0, 2052, 0, 0, 0, 0,
	279, 0, 0, 306, 0, 449, 441, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 437, 0, 438, 0,
	0, 0, 0, 0, 365, 320, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 0, 0, 2054, 0,
	0, 0, 256, 188, 439, 0, 440, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 370,
	386, 257, 361, 399, 262, 368, 252, 335, 358, 0,
	0, 249, 384, 367, 317, 298, 299, 248, 0, 353,
	277, 290, 274, 333, 0, 383, 411, 273, 402, 0,
	394, 251, 0, 393, 332, 380, 385, 318, 312, 250,
	382, 316, 311, 302, 281, 426, 303, 304, 294, 344,
	310, 345, 295, 322, 321, 323, 0, 0, 0, 0,
	0, 422, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 396,
	0, 0, 0, 0, 0, 0, 369, 0, 0, 305,
	0, 0, 0, 412, 0, 356, 338, 0, 0, 0,
	354, 308, 381, 346, 387, 371, 395, 350, 347, 242,
	372, 276, 319, 253, 255, 271, 278, 280, 282, 283,
	328, 329, 341, 360, 373, 374, 375, 275, 263, 355,
	264, 292, 265, 243, 268, 267, 269, 362, 270, 245,
	342, 379, 0, 288, 351, 315, 246, 314, 343, 378,
	377, 254, 403, 409, 410, 0, 0, 415, 0, 0,
	0, 423, 428, 429, 430, 432, 433, 434, 435, 0,
	0, 0, 0, 417, 0, 0, 0, 0, 0, 0,
	408, 286, 239, 240, 448, 272, 334, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 407,
	0, 0, 0, 436, 447, 0, 0, 0, 0, 0,
	446, 340, 0, 359, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 366, 389, 401, 418,
	421, 0, 0, 0, 0, 244, 420, 0, 0, 0,
	0, 0, 0, 0, 0, 392, 0, 0, 0, 400,
	0, 0, 0, 0, 0, 416, 0, 0, 324, 325,
	326, 327, 289, 0, 261, 419, 349, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 413, 414, 285, 291, 431,
	293, 260, 339, 287, 398, 300, 0, 424, 0, 425,
	0, 0, 0, 0, 331, 296, 297, 363, 301, 309,
	352, 397, 337, 357, 258, 388, 364, 313, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 376, 0, 237,
	266, 0, 241, 0, 307, 0, 348, 284, 0, 0,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 0, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 228, 229, 230, 231, 0, 336,
	0, 238, 233, 234, 235, 236, 0, 0, 0, 404,
	405, 406, 427, 390, 0, 445, 279, 2073, 0, 306,
	0, 0, 0, 0, 0, 0, 0, 0, 449, 441,
	0, 0, 437, 0, 438, 0, 0, 0, 0, 0,
	365, 320, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 0, 0, 1224, 0, 0, 0, 256, 188,
	439, 0, 440, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 370, 386, 257, 361, 399,
	262, 368, 252, 335, 358, 0, 0, 249, 384, 367,
	317, 298, 299, 248, 0, 353, 277, 290, 274, 333,
	0, 383, 411, 273, 402, 0, 394, 251, 0, 393,
	332, 380, 385, 318, 312, 250, 382, 316, 311, 302,
	281, 426, 303, 304, 294, 344, 310, 345, 295, 322,
	321, 323, 0, 0, 0, 0, 0, 422, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 396, 0, 0, 0, 0,
	0, 0, 369, 0, 0, 305, 0, 0, 0, 412,
	0, 356, 338, 0, 0, 0, 354, 308, 381, 346,
	387, 371, 395, 350, 347, 242, 372, 276, 319, 253,
	255, 271, 278, 280, 282, 283, 328, 329, 341, 360,
	373, 374, 375, 275, 263, 355, 264, 292, 265, 243,
	268, 267, 269, 362, 270, 245, 342, 379, 0, 288,
	351, 315, 246, 314, 343, 378, 377, 254, 403, 409,
	410, 0, 0, 415, 0, 0, 0, 423, 428, 429,
	430, 432, 433, 434, 435, 0, 0, 0, 0, 417,
	0, 0, 0, 0, 0, 0, 408, 286, 239, 240,
	448, 272, 334, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 330, 407, 0, 0, 0, 436,
	447, 0, 0, 0, 0, 0, 446, 340, 0, 359,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 366, 389, 401, 418, 421, 0, 0, 0,
	0, 244, 420, 0, 0, 0, 0, 0, 0, 0,
	0, 392, 0, 0, 0, 400, 0, 0, 0, 0,
	0, 416, 0, 0, 324, 325, 326, 327, 289, 0,
	261, 419, 349, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 413, 414, 285, 291, 431, 293, 260, 339, 287,
	398, 300, 0, 424, 0, 425, 0, 0, 0, 0,
	331, 296, 297, 363, 301, 309, 352, 397, 337, 357,
	258, 388, 364, 313, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 376, 0, 237, 266, 0, 241, 0,
	307, 0, 348, 284, 0, 0, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 0,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 231, 0, 336, 0, 238, 233, 234,
	235, 236, 0, 0, 0, 404, 405, 406, 427, 390,
	0, 445, 279, 0, 0, 306, 0, 0, 0, 0,
	0, 0, 0, 0, 449, 441, 0, 0, 437, 0,
	438, 0, 0, 0, 0, 0, 365, 320, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3301, 0, 187, 0, 0,
	0, 0, 0, 0, 256, 188, 439, 0, 440, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 370, 386, 257, 361, 399, 262, 368, 252, 335,
	358, 0, 0, 249, 384, 367, 317, 298, 299, 248,
	0, 353, 277, 290, 274, 333, 0, 383, 411, 273,
	402, 0, 394, 251, 0, 393, 332, 380, 385, 318,
	312, 250, 382, 316, 311, 302, 281, 426, 303, 304,
	294, 344, 310, 345, 295, 322, 321, 323, 0, 0,
	0, 0, 0, 422, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 396, 0, 0, 0, 0, 0, 0, 369, 0,
	0, 305, 0, 0, 0, 412, 0, 356, 338, 0,
	0, 0, 354, 308, 381, 346, 387, 371, 395, 350,
	347, 242, 372, 276, 319, 253, 255, 271, 278, 280,
	282, 283, 328, 329, 341, 360, 373, 374, 375, 275,
	263, 355, 264, 292, 265, 243, 268, 267, 269, 362,
	270, 245, 342, 379, 0, 288, 351, 315, 246, 314,
	343, 378, 377, 254, 403, 409, 410, 0, 0, 415,
	0, 0, 0, 423, 428, 429, 430, 432, 433, 434,
	435, 0, 0, 0, 0, 417, 0, 0, 0, 0,
	0, 0, 408, 286, 239, 240, 448, 272, 334, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	330, 407, 0, 0, 0, 436, 447, 0, 0, 0,
	0, 0, 446, 340, 0, 359, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 366, 389,
	401, 418, 421, 0, 0, 0, 0, 244, 420, 0,
	0, 0, 0, 0, 0, 0, 0, 392, 0, 0,
	0, 400, 0, 0, 0, 0, 0, 416, 0, 0,
	324, 325, 326, 327, 289, 0, 261, 419, 349, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 413, 414, 285,
	291, 431, 293, 260, 339, 287, 398, 300, 0, 424,
	0, 425, 0, 0, 0, 0, 331, 296, 297, 363,
	301, 309, 352, 397, 337, 357, 258, 388, 364, 313,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 376,
	0, 237, 266, 0, 241, 0, 307, 0, 348, 284,
	0, 0, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 0, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	0, 336, 0, 238, 233, 234, 235, 236, 0, 0,
	0, 404, 405, 406, 427, 390, 0, 445, 279, 0,
	0, 306, 0, 0, 0, 0, 0, 0, 0, 0,
	449, 441, 0, 0, 437, 0, 438, 0, 0, 0,
	0, 0, 365, 320, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 622, 0, 0, 0, 0, 0,
	256, 188, 439, 0, 440, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 370, 386, 257,
	361, 399, 262, 368, 252, 335, 358, 0, 0, 249,
	384, 367, 317, 298, 299, 248, 0, 353, 277, 290,
	274, 333, 0, 383, 411, 273, 402, 0, 394, 251,
	0, 393, 332, 380, 385, 318, 312, 250, 382, 316,
	311, 302, 281, 426, 303, 304, 294, 344, 310, 345,
	295, 322, 321, 323, 0, 0, 0, 0, 0, 422,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 396, 0, 0,
	0, 0, 0, 0, 369, 0, 0, 305, 0, 0,
	0, 412, 0, 356, 338, 0, 0, 0, 354, 308,
	381, 346, 387, 371, 395, 350, 347, 242, 372, 276,
	319, 253, 255, 271, 278, 280, 282, 283, 328, 329,
	341, 360, 373, 374, 375, 275, 263, 355, 264, 292,
	265, 243, 268, 267, 269, 362, 270, 245, 342, 379,
	0, 288, 351, 315, 246, 314, 343, 378, 377, 254,
	403, 409, 410, 0, 0, 415, 0, 0, 0, 423,
	428, 429, 430, 432, 433, 434, 435, 0, 0, 0,
	0, 417, 0, 0, 0, 0, 0, 0, 408, 286,
	239, 240, 448, 272, 334, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 330, 407, 0, 0,
	0, 436, 447, 0, 0, 0, 0, 0, 446, 340,
	0, 359, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 366, 389, 401, 418, 421, 0,
	0, 0, 0, 244, 420, 0, 0, 0, 0, 0,
	0, 0, 0, 392, 0, 0, 0, 400, 0, 0,
	0, 0, 0, 416, 0, 0, 324, 325, 326, 327,
	289, 0, 261, 419, 349, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 414, 285, 291, 431, 293, 260,
	339, 287, 398, 300, 0, 424, 0, 425, 0, 0,
	0, 0, 331, 296, 297, 363, 301, 309, 352, 397,
	337, 357, 258, 388, 364, 313, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 376, 0, 237, 266, 0,
	241, 0, 307, 0, 348, 284, 0, 0, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 0, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 228, 229, 230, 231, 0, 336, 0, 238,
	233, 234, 235, 236, 0, 0, 0, 404, 405, 406,
	427, 390, 0, 445, 279, 0, 0, 306, 0, 0,
	0, 0, 0, 0, 0, 0, 449, 441, 0, 0,
	437, 0, 438, 0, 0, 0, 0, 0, 365, 320,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3223, 0, 0, 187,
	0, 0, 0, 0, 0, 0, 256, 188, 439, 0,
	440, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 370, 386, 257, 361, 399, 262, 368,
	252, 335, 358, 0, 0, 249, 384, 367, 317, 298,
	299, 248, 0, 353, 277, 290, 274, 333, 0, 383,
	411, 273, 402, 0, 394, 251, 0, 393, 332, 380,
	385, 318, 312, 250, 382, 316, 311, 302, 281, 426,
	303, 304, 294, 344, 310, 345, 295, 322, 321, 323,
	0, 0, 0, 0, 0, 422, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 396, 0, 0, 0, 0, 0, 0,
	369, 0, 0, 305, 0, 0, 0, 412, 0, 356,
	338, 0, 0, 0, 354, 308, 381, 346, 387, 371,
	395, 350, 347, 242, 372, 276, 319, 253, 255, 271,
	278, 280, 282, 283, 328, 329, 341, 360, 373, 374,
	375, 275, 263, 355, 264, 292, 265, 243, 268, 267,
	269, 362, 270, 245, 342, 379, 0, 288, 351, 315,
	246, 314, 343, 378, 377, 254, 403, 409, 410, 0,
	0, 415, 0, 0, 0, 423, 428, 429, 430, 432,
	433, 434, 435, 0, 0, 0, 0, 417, 0, 0,
	0, 0, 0, 0, 408, 286, 239, 240, 448, 272,
	334, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 330, 407, 0, 0, 0, 436, 447, 0,
	0, 0, 0, 0, 446, 340, 0, 359, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	366, 389, 401, 418, 421, 0, 0, 0, 0, 244,
	420, 0, 0, 0, 0, 0, 0, 0, 0, 392,
	0, 0, 0, 400, 0, 0, 0, 0, 0, 416,
	0, 0, 324, 325, 326, 327, 289, 0, 261, 419,
	349, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 413,
	414, 285, 291, 431, 293, 260, 339, 287, 398, 300,
	0, 424, 0, 425, 0, 0, 0, 0, 331, 296,
	297, 363, 301, 309, 352, 397, 337, 357, 258, 388,
	364, 313, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 376, 0, 237, 266, 0, 241, 0, 307, 0,
	348, 284, 0, 0, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 0, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 0, 336, 0, 238, 233, 234, 235, 236,
	0, 0, 0, 404, 405, 406, 427, 390, 0, 445,
	279, 0, 0, 306, 0, 0, 0, 0, 0, 0,
	0, 0, 449, 441, 0, 0, 437, 0, 438, 0,
	0, 0, 0, 0, 365, 320, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 0, 0, 0, 0,
	0, 0, 256, 188, 439, 0, 440, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 370,
	386, 257, 361, 399, 262, 368, 252, 335, 358, 0,
	0, 249, 384, 367, 317, 298, 299, 248, 0, 353,
	277, 290, 274, 333, 0, 383, 411, 273, 402, 0,
	394, 251, 0, 393, 332, 380, 385, 318, 312, 250,
	382, 316, 311, 302, 281, 426, 303, 304, 294, 344,
	310, 345, 295, 322, 321, 323, 0, 0, 0, 0,
	0, 422, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 396,
	0, 0, 0, 3150, 0, 0, 369, 0, 0, 305,
	0, 0, 0, 412, 0, 356, 338, 0, 0, 0,
	354, 308, 381, 346, 387, 371, 395, 350, 347, 242,
	372, 276, 319, 253, 255, 271, 278, 280, 282, 283,
	328, 329, 341, 360, 373, 374, 375, 275, 263, 355,
	264, 292, 265, 243, 268, 267, 269, 362, 270, 245,
	342, 379, 0, 288, 351, 315, 246, 314, 343, 378,
	377, 254, 403, 409, 410, 0, 0, 415, 0, 0,
	0, 423, 428, 429, 430, 432, 433, 434, 435, 0,
	0, 0, 0, 417, 0, 0, 0, 0, 0, 0,
	408, 286, 239, 240, 448, 272, 334, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 407,
	0, 0, 0, 436, 447, 0, 0, 0, 0, 0,
	446, 340, 0, 359, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 366, 389, 401, 418,
	421, 0, 0, 0, 0, 244, 420, 0, 0, 0,
	0, 0, 0, 0, 0, 392, 0, 0, 0, 400,
	0, 0, 0, 0, 0, 416, 0, 0, 324, 325,
	326, 327, 289, 0, 261, 419, 349, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 413, 414, 285, 291, 431,
	293, 260, 339, 287, 398, 300, 0, 424, 0, 425,
	0, 0, 0, 0, 331, 296, 297, 363, 301, 309,
	352, 397, 337, 357, 258, 388, 364, 313, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 376, 0, 237,
	266, 0, 241, 0, 307, 0, 348, 284, 0, 0,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 0, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 228, 229, 230, 231, 0, 336,
	0, 238, 233, 234, 235, 236, 0, 0, 0, 404,
	405, 406, 427, 390, 0, 445, 279, 0, 0, 306,
	0, 0, 0, 0, 0, 0, 0, 0, 449, 441,
	0, 0, 437, 0, 438, 0, 0, 0, 0, 0,
	365, 320, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2935, 0,
	0, 187, 0, 0, 0, 0, 0, 0, 256, 188,
	439, 0, 440, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 370, 386, 257, 361, 399,
	262, 368, 252, 335, 358, 0, 0, 249, 384, 367,
	317, 298, 299, 248, 0, 353, 277, 290, 274, 333,
	0, 383, 411, 273, 402, 0, 394, 251, 0, 393,
	332, 380, 385, 318, 312, 250, 382, 316, 311, 302,
	281, 426, 303, 304, 294, 344, 310, 345, 295, 322,
	321, 323, 0, 0, 0, 0, 0, 422, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 396, 0, 0, 0, 0,
	0, 0, 369, 0, 0, 305, 0, 0, 0, 412,
	0, 356, 338, 0, 0, 0, 354, 308, 381, 346,
	387, 371, 395, 350, 347, 242, 372, 276, 319, 253,
	255, 271, 278, 280, 282, 283, 328, 329, 341, 360,
	373, 374, 375, 275, 263, 355, 264, 292, 265, 243,
	268, 267, 269, 362, 270, 245, 342, 379, 0, 288,
	351, 315, 246, 314, 343, 378, 377, 254, 403, 409,
	410, 0, 0, 415, 0, 0, 0, 423, 428, 429,
	430, 432, 433, 434, 435, 0, 0, 0, 0, 417,
	0, 0, 0, 0, 0, 0, 408, 286, 239, 240,
	448, 272, 334, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 330, 407, 0, 0, 0, 436,
	447, 0, 0, 0, 0, 0, 446, 340, 0, 359,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 366, 389, 401, 418, 421, 0, 0, 0,
	0, 244, 420, 0, 0, 0, 0, 0, 0, 0,
	0, 392, 0, 0, 0, 400, 0, 0, 0, 0,
	0, 416, 0, 0, 324, 325, 326, 327, 289, 0,
	261, 419, 349, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 413, 414, 285, 291, 431, 293, 260, 339, 287,
	398, 300, 0, 424, 0, 425, 0, 0, 0, 0,
	331, 296, 297, 363, 301, 309, 352, 397, 337, 357,
	258, 388, 364, 313, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 376, 0, 237, 266, 0, 241, 0,
	307, 0, 348, 284, 0, 0, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 0,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 231, 0, 336, 0, 238, 233, 234,
	235, 236, 0, 0, 0, 404, 405, 406, 427, 390,
	0, 445, 279, 0, 0, 306, 0, 0, 0, 0,
	0, 0, 0, 0, 449, 441, 0, 0, 437, 0,
	438, 0, 0, 0, 0, 0, 365, 320, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 0, 0,
	2763, 0, 0, 0, 256, 188, 439, 0, 440, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 370, 386, 257, 361, 399, 262, 368, 252, 335,
	358, 0, 0, 249, 384, 367, 317, 298, 299, 248,
	0, 353, 277, 290, 274, 333, 0, 383, 411, 273,
	402, 0, 394, 251, 0, 393, 332, 380, 385, 318,
	312, 250, 382, 316, 311, 302, 281, 426, 303, 304,
	294, 344, 310, 345, 295, 322, 321, 323, 0, 0,
	0, 0, 0, 422, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 396, 0, 0, 0, 0, 0, 0, 369, 0,
	0, 305, 0, 0, 0, 412, 0, 356, 338, 0,
	0, 0, 354, 308, 381, 346, 387, 371, 395, 350,
	347, 242, 372, 276, 319, 253, 255, 271, 278, 280,
	282, 283, 328, 329, 341, 360, 373, 374, 375, 275,
	263, 355, 264, 292, 265, 243, 268, 267, 269, 362,
	270, 245, 342, 379, 0, 288, 351, 315, 246, 314,
	343, 378, 377, 254, 403, 409, 410, 0, 0, 415,
	0, 0, 0, 423, 428, 429, 430, 432, 433, 434,
	435, 0, 0, 0, 0, 417, 0, 0, 0, 0,
	0, 0, 408, 286, 239, 240, 448, 272, 334, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	330, 407, 0, 0, 0, 436, 447, 0, 0, 0,
	0, 0, 446, 340, 0, 359, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 366, 389,
	401, 418, 421, 0, 0, 0, 0, 244, 420, 0,
	0, 0, 0, 0, 0, 0, 0, 392, 0, 0,
	0, 400, 0, 0, 0, 0, 0, 416, 0, 0,
	324, 325, 326, 327, 289, 0, 261, 419, 349, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 413, 414, 285,
	291, 431, 293, 260, 339, 287, 398, 300, 0, 424,
	0, 425, 0, 0, 0, 0, 331, 296, 297, 363,
	301, 309, 352, 397, 337, 357, 258, 388, 364, 313,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 376,
	0, 237, 266, 0, 241, 0, 307, 0, 348, 284,
	0, 0, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 0, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	0, 336, 0, 238, 233, 234, 235, 236, 0, 0,
	0, 404, 405, 406, 427, 390, 0, 445, 279, 0,
	0, 306, 0, 0, 0, 0, 0, 0, 0, 0,
	449, 441, 0, 0, 437, 0, 438, 0, 0, 0,
	0, 0, 365, 320, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 0, 0, 0, 0, 0, 0,
	256, 188, 439, 0, 440, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 370, 386, 257,
	361, 399, 262, 368, 252, 335, 358, 0, 0, 249,
	384, 367, 317, 298, 299, 248, 0, 353, 277, 290,
	274, 333, 0, 383, 411, 273, 402, 0, 394, 251,
	0, 393, 332, 380, 385, 318, 312, 250, 382, 316,
	311, 302, 281, 426, 303, 304, 294, 344, 310, 345,
	295, 322, 321, 323, 0, 0, 0, 0, 0, 422,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 396, 0, 0,
	0, 3002, 0, 0, 369, 0, 0, 305, 0, 0,
	0, 412, 0, 356, 338, 0, 0, 0, 354, 308,
	381, 346, 387, 371, 395, 350, 347, 242, 372, 276,
	319, 253, 255, 271, 278, 280, 282, 283, 328, 329,
	341, 360, 373, 374, 375, 275, 263, 355, 264, 292,
	265, 243, 268, 267, 269, 362, 270, 245, 342, 379,
	0, 288, 351, 315, 246, 314, 343, 378, 377, 254,
	403, 409, 410, 0, 0, 415, 0, 0, 0, 423,
	428, 429, 430, 432, 433, 434, 435, 0, 0, 0,
	0, 417, 0, 0, 0, 0, 0, 0, 408, 286,
	239, 240, 448, 272, 334, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 330, 407, 0, 0,
	0, 436, 447, 0, 0, 0, 0, 0, 446, 340,
	0, 359, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 366, 389, 401, 418, 421, 0,
	0, 0, 0, 244, 420, 0, 0, 0, 0, 0,
	0, 0, 0, 392, 0, 0, 0, 400, 0, 0,
	0, 0, 0, 416, 0, 0, 324, 325, 326, 327,
	289, 0, 261, 419, 349, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 414, 285, 291, 431, 293, 260,
	339, 287, 398, 300, 0, 424, 0, 425, 0, 0,
	0, 0, 331, 296, 297, 363, 301, 309, 352, 397,
	337, 357, 258, 388, 364, 313, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 376, 0, 237, 266, 0,
	241, 0, 307, 0, 348, 284, 0, 0, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 0, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 228, 229, 230, 231, 0, 336, 0, 238,
	233, 234, 235, 236, 0, 0, 0, 404, 405, 406,
	427, 390, 0, 445, 279, 0, 0, 306, 0, 0,
	0, 0, 0, 0, 0, 0, 449, 441, 0, 0,
	437, 0, 438, 0, 0, 0, 0, 0, 365, 320,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	0, 0, 0, 0, 0, 0, 256, 188, 439, 0,
	440, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2639, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 370, 386, 257, 361, 399, 262, 368,
	252, 335, 358, 0, 0, 249, 384, 367, 317, 298,
	299, 248, 0, 353, 277, 290, 274, 333, 0, 383,
	411, 273, 402, 0, 394, 251, 0, 393, 332, 380,
	385, 318, 312, 250, 382, 316, 311, 302, 281, 426,
	303, 304, 294, 344, 310, 345, 295, 322, 321, 323,
	0, 0, 0, 0, 0, 422, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 396, 0, 0, 0, 0, 0, 0,
	369, 0, 0, 305, 0, 0, 0, 412, 0, 356,
	338, 0, 0, 0, 354, 308, 381, 346, 387, 371,
	395, 350, 347, 242, 372, 276, 319, 253, 255, 271,
	278, 280, 282, 283, 328, 329, 341, 360, 373, 374,
	375, 275, 263, 355, 264, 292, 265, 243, 268, 267,
	269, 362, 270, 245, 342, 379, 0, 288, 351, 315,
	246, 314, 343, 378, 377, 254, 403, 409, 410, 0,
	0, 415, 0, 0, 0, 423, 428, 429, 430, 432,
	433, 434, 435, 0, 0, 0, 0, 417, 0, 0,
	0, 0, 0, 0, 408, 286, 239, 240, 448, 272,
	334, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 330, 407, 0, 0, 0, 436, 447, 0,
	0, 0, 0, 0, 446, 340, 0, 359, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	366, 389, 401, 418, 421, 0, 0, 0, 0, 244,
	420, 0, 0, 0, 0, 0, 0, 0, 0, 392,
	0, 0, 0, 400, 0, 0, 0, 0, 0, 416,
	0, 0, 324, 325, 326, 327, 289, 0, 261, 419,
	349, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 413,
	414, 285, 291, 431, 293, 260, 339, 287, 398, 300,
	0, 424, 0, 425, 0, 0, 0, 0, 331, 296,
	297, 363, 301, 309, 352, 397, 337, 357, 258, 388,
	364, 313, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 376, 0, 237, 266, 0, 241, 0, 307, 0,
	348, 284, 0, 0, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 0, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 0, 336, 0, 238, 233, 234, 235, 236,
	0, 0, 0, 404, 405, 406, 427, 390, 0, 445,
	279, 0, 0, 306, 0, 0, 0, 0, 0, 0,
	0, 0, 449, 441, 0, 0, 437, 0, 438, 0,
	0, 0, 0, 0, 365, 320, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1664, 0, 0, 187, 0, 0, 0, 0,
	0, 0, 256, 188, 439, 0, 440, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 370,
	386, 257, 361, 399, 262, 368, 252, 335, 358, 0,
	0, 249, 384, 367, 317, 298, 299, 248, 0, 353,
	277, 290, 274, 333, 0, 383, 411, 273, 402, 0,
	394, 251, 0, 393, 332, 380, 385, 318, 312, 250,
	382, 316, 311, 302, 281, 426, 303, 304, 294, 344,
	310, 345, 295, 322, 321, 323, 0, 0, 0, 0,
	0, 422, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 396,
	0, 0, 0, 0, 0, 0, 369, 0, 0, 305,
	0, 0, 0, 412, 0, 356, 338, 0, 0, 0,
	354, 308, 381, 346, 387, 371, 395, 350, 347, 242,
	372, 276, 319, 253, 255, 271, 278, 280, 282, 283,
	328, 329, 341, 360, 373, 374, 375, 275, 263, 355,
	264, 292, 265, 243, 268, 267, 269, 362, 270, 245,
	342, 379, 0, 288, 351, 315, 246, 314, 343, 378,
	377, 254, 403, 409, 410, 0, 0, 415, 0, 0,
	0, 423, 428, 429, 430, 432, 433, 434, 435, 0,
	0, 0, 0, 417, 0, 0, 0, 0, 0, 0,
	408, 286, 239, 240, 448, 272, 334, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 407,
	0, 0, 0, 436, 447, 0, 0, 0, 0, 0,
	446, 340, 0, 359, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 366, 389, 401, 418,
	421, 0, 0, 0, 0, 244, 420, 0, 0, 0,
	0, 0, 0, 0, 0, 392, 0, 0, 0, 400,
	0, 0, 0, 0, 0, 416, 0, 0, 324, 325,
	326, 327, 289, 0, 261, 419, 349, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 413, 414, 285, 291, 431,
	293, 260, 339, 287, 398, 300, 0, 424, 0, 425,
	0, 0, 0, 0, 331, 296, 297, 363, 301, 309,
	352, 397, 337, 357, 258, 388, 364, 313, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 376, 0, 237,
	266, 0, 241, 0, 307, 0, 348, 284, 0, 0,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 0, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 228, 229, 230, 231, 0, 336,
	0, 238, 233, 234, 235, 236, 0, 0, 0, 404,
	405, 406, 427, 390, 0, 445, 279, 0, 0, 306,
	0, 0, 0, 0, 0, 0, 0, 0, 449, 441,
	0, 0, 437, 0, 438, 0, 0, 0, 0, 0,
	365, 320, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 0, 0, 2303, 0, 0, 0, 256, 188,
	439, 0, 440, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 370, 386, 257, 361, 399,
	262, 368, 252, 335, 358, 0, 0, 249, 384, 367,
	317, 298, 299, 248, 0, 353, 277, 290, 274, 333,
	0, 383, 411, 273, 402, 0, 394, 251, 0, 393,
	332, 380, 385, 318, 312, 250, 382, 316, 311, 302,
	281, 426, 303, 304, 294, 344, 310, 345, 295, 322,
	321, 323, 0, 0, 0, 0, 0, 422, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 396, 0, 0, 0, 0,
	0, 0, 369, 0, 0, 305, 0, 0, 0, 412,
	0, 356, 338, 0, 0, 0, 354, 308, 381, 346,
	387, 371, 395, 350, 347, 242, 372, 276, 319, 253,
	255, 271, 278, 280, 282, 283, 328, 329, 341, 360,
	373, 374, 375, 275, 263, 355, 264, 292, 265, 243,
	268, 267, 269, 362, 270, 245, 342, 379, 0, 288,
	351, 315, 246, 314, 343, 378, 377, 254, 403, 409,
	410, 0, 0, 415, 0, 0, 0, 423, 428, 429,
	430, 432, 433, 434, 435, 0, 0, 0, 0, 417,
	0, 0, 0, 0, 0, 0, 408, 286, 239, 240,
	448, 272, 334, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 330, 407, 0, 0, 0, 436,
	447, 0, 0, 0, 0, 0, 446, 340, 0, 359,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 366, 389, 401, 418, 421, 0, 0, 0,
	0, 244, 420, 0, 0, 0, 0, 0, 0, 0,
	0, 392, 0, 0, 0, 400, 0, 0, 0, 0,
	0, 416, 0, 0, 324, 325, 326, 327, 289, 0,
	261, 419, 349, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 413, 414, 285, 291, 431, 293, 260, 339, 287,
	398, 300, 0, 424, 0, 425, 0, 0, 0, 0,
	331, 296, 297, 363, 301, 309, 352, 397, 337, 357,
	258, 388, 364, 313, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 376, 0, 237, 266, 0, 241, 0,
	307, 0, 348, 284, 0, 0, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 0,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 231, 0, 336, 0, 238, 233, 234,
	235, 236, 0, 0, 0, 404, 405, 406, 427, 390,
	0, 445, 279, 0, 0, 306, 0, 0, 0, 0,
	0, 0, 0, 0, 449, 441, 0, 0, 437, 0,
	438, 0, 0, 0, 0, 0, 365, 320, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 0, 0,
	0, 0, 0, 0, 256, 188, 439, 0, 440, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2722, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 370, 386, 257, 361, 399, 262, 368, 252, 335,
	358, 0, 0, 249, 384, 367, 317, 298, 299, 248,
	0, 353, 277, 290, 274, 333, 0, 383, 411, 273,
	402, 0, 394, 251, 0, 393, 332, 380, 385, 318,
	312, 250, 382, 316, 311, 302, 281, 426, 303, 304,
	294, 344, 310, 345, 295, 322, 321, 323, 0, 0,
	0, 0, 0, 422, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 396, 0, 0, 0, 0, 0, 0, 369, 0,
	0, 305, 0, 0, 0, 412, 0, 356, 338, 0,
	0, 0, 354, 308, 381, 346, 387, 371, 395, 350,
	347, 242, 372, 276, 319, 253, 255, 271, 278, 280,
	282, 283, 328, 329, 341, 360, 373, 374, 375, 275,
	263, 355, 264, 292, 265, 243, 268, 267, 269, 362,
	270, 245, 342, 379, 0, 288, 351, 315, 246, 314,
	343, 378, 377, 254, 403, 409, 410, 0, 0, 415,
	0, 0, 0, 423, 428, 429, 430, 432, 433, 434,
	435, 0, 0, 0, 0, 417, 0, 0, 0, 0,
	0, 0, 408, 286, 239, 240, 448, 272, 334, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	330, 407, 0, 0, 0, 436, 447, 0, 0, 0,
	0, 0, 446, 340, 0, 359, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 366, 389,
	401, 418, 421, 0, 0, 0, 0, 244, 420, 0,
	0, 0, 0, 0, 0, 0, 0, 392, 0, 0,
	0, 400, 0, 0, 0, 0, 0, 416, 0, 0,
	324, 325, 326, 327, 289, 0, 261, 419, 349, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 413, 414, 285,
	291, 431, 293, 260, 339, 287, 398, 300, 0, 424,
	0, 425, 0, 0, 0, 0, 331, 296, 297, 363,
	301, 309, 352, 397, 337, 357, 258, 388, 364, 313,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 376,
	0, 237, 266, 0, 241, 0, 307, 0, 348, 284,
	0, 0, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 0, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	0, 336, 0, 238, 233, 234, 235, 236, 0, 0,
	0, 404, 405, 406, 427, 390, 0, 445, 279, 0,
	0, 306, 0, 0, 0, 0, 0, 0, 0, 0,
	449, 441, 0, 0, 437, 0, 438, 0, 0, 0,
	0, 0, 365, 320, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 0, 0, 2593, 0, 0, 0,
	256, 188, 439, 0, 440, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 370, 386, 257,
	361, 399, 262, 368, 252, 335, 358, 0, 0, 249,
	384, 367, 317, 298, 299, 248, 0, 353, 277, 290,
	274, 333, 0, 383, 411, 273, 402, 0, 394, 251,
	0, 393, 332, 380, 385, 318, 312, 250, 382, 316,
	311, 302, 281, 426, 303, 304, 294, 344, 310, 345,
	295, 322, 321, 323, 0, 0, 0, 0, 0, 422,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 396, 0, 0,
	0, 0, 0, 0, 369, 0, 0, 305, 0, 0,
	0, 412, 0, 356, 338, 0, 0, 0, 354, 308,
	381, 346, 387, 371, 395, 350, 347, 242, 372, 276,
	319, 253, 255, 271, 278, 280, 282, 283, 328, 329,
	341, 360, 373, 374, 375, 275, 263, 355, 264, 292,
	265, 243, 268, 267, 269, 362, 270, 245, 342, 379,
	0, 288, 351, 315, 246, 314, 343, 378, 377, 254,
	403, 409, 410, 0, 0, 415, 0, 0, 0, 423,
	428, 429, 430, 432, 433, 434, 435, 0, 0, 0,
	0, 417, 0, 0, 0, 0, 0, 0, 408, 286,
	239, 240, 448, 272, 334, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 330, 407, 0, 0,
	0, 436, 447, 0, 0, 0, 0, 0, 446, 340,
	0, 359, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 366, 389, 401, 418, 421, 0,
	0, 0, 0, 244, 420, 0, 0, 0, 0, 0,
	0, 0, 0, 392, 0, 0, 0, 400, 0, 0,
	0, 0, 0, 416, 0, 0, 324, 325, 326, 327,
	289, 0, 261, 419, 349, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 414, 285, 291, 431, 293, 260,
	339, 287, 398, 300, 0, 424, 0, 425, 0, 0,
	0, 0, 331, 296, 297, 363, 301, 309, 352, 397,
	337, 357, 258, 388, 364, 313, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 376, 0, 237, 266, 0,
	241, 0, 307, 0, 348, 284, 0, 0, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 0, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 228, 229, 230, 231, 0, 336, 0, 238,
	233, 234, 235, 236, 0, 0, 0, 404, 405, 406,
	427, 390, 0, 445, 279, 0, 0, 306, 0, 0,
	0, 0, 0, 0, 0, 0, 449, 441, 0, 0,
	437, 0, 438, 0, 0, 0, 0, 0, 365, 320,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	0, 0, 0, 0, 0, 0, 256, 188, 439, 0,
	440, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2513, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 370, 386, 257, 361, 399, 262, 368,
	252, 335, 358, 0, 0, 249, 384, 367, 317, 298,
	299, 248, 0, 353, 277, 290, 274, 333, 0, 383,
	411, 273, 402, 0, 394, 251, 0, 393, 332, 380,
	385, 318, 312, 250, 382, 316, 311, 302, 281, 426,
	303, 304, 294, 344, 310, 345, 295, 322, 321, 323,
	0, 0, 0, 0, 0, 422, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 396, 0, 0, 0, 0, 0, 0,
	369, 0, 0, 305, 0, 0, 0, 412, 0, 356,
	338, 0, 0, 0, 354, 308, 381, 346, 387, 371,
	395, 350, 347, 242, 372, 276, 319, 253, 255, 271,
	278, 280, 282, 283, 328, 329, 341, 360, 373, 374,
	375, 275, 263, 355, 264, 292, 265, 243, 268, 267,
	269, 362, 270, 245, 342, 379, 0, 288, 351, 315,
	246, 314, 343, 378, 377, 254, 403, 409, 410, 0,
	0, 415, 0, 0, 0, 423, 428, 429, 430, 432,
	433, 434, 435, 0, 0, 0, 0, 417, 0, 0,
	0, 0, 0, 0, 408, 286, 239, 240, 448, 272,
	334, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 330, 407, 0, 0, 0, 436, 447, 0,
	0, 0, 0, 0, 446, 340, 0, 359, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	366, 389, 401, 418, 421, 0, 0, 0, 0, 244,
	420, 0, 0, 0, 0, 0, 0, 0, 0, 392,
	0, 0, 0, 400, 0, 0, 0, 0, 0, 416,
	0, 0, 324, 325, 326, 327, 289, 0, 261, 419,
	349, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 413,
	414, 285, 291, 431, 293, 260, 339, 287, 398, 300,
	0, 424, 0, 425, 0, 0, 0, 0, 331, 296,
	297, 363, 301, 309, 352, 397, 337, 357, 258, 388,
	364, 313, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 376, 0, 237, 266, 0, 241, 0, 307, 0,
	348, 284, 0, 0, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 0, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 0, 336, 0, 238, 233, 234, 235, 236,
	0, 0, 0, 404, 405, 406, 427, 390, 0, 445,
	279, 0, 0, 306, 0, 0, 0, 0, 0, 0,
	0, 0, 449, 441, 0, 0, 437, 0, 438, 0,
	0, 0, 0, 0, 365, 320, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 0, 0, 1224, 0,
	0, 0, 256, 188, 439, 0, 440, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 370,
	386, 257, 361, 399, 262, 368, 252, 335, 358, 0,
	0, 249, 384, 367, 317, 298, 299, 248, 0, 353,
	277, 290, 274, 333, 0, 383, 411, 273, 402, 0,
	394, 251, 0, 393, 332, 380, 385, 318, 312, 250,
	382, 316, 311, 302, 281, 426, 303, 304, 294, 344,
	310, 345, 295, 322, 321, 323, 0, 0, 0, 0,
	0, 422, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 396,
	0, 0, 0, 0, 0, 0, 369, 0, 0, 305,
	0, 0, 0, 412, 0, 356, 338, 0, 0, 0,
	354, 308, 381, 346, 387, 371, 395, 350, 347, 242,
	372, 276, 319, 253, 255, 271, 278, 280, 282, 283,
	328, 329, 341, 360, 373, 374, 375, 275, 263, 355,
	264, 292, 265, 243, 268, 267, 269, 362, 270, 245,
	342, 379, 0, 288, 351, 315, 246, 314, 343, 378,
	377, 254, 403, 409, 410, 0, 0, 415, 0, 0,
	0, 423, 428, 429, 430, 432, 433, 434, 435, 0,
	0, 0, 0, 417, 0, 0, 0, 0, 0, 0,
	408, 286, 239, 240, 448, 272, 334, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 407,
	0, 0, 0, 436, 447, 0, 0, 0, 0, 0,
	446, 340, 0, 359, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 366, 389, 401, 418,
	421, 0, 0, 0, 0, 244, 420, 0, 0, 0,
	0, 0, 0, 0, 0, 392, 0, 0, 0, 400,
	0, 0, 0, 0, 0, 416, 0, 0, 324, 325,
	326, 327, 289, 0, 261, 419, 349, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 413, 414, 285, 291, 431,
	293, 260, 339, 287, 398, 300, 0, 424, 0, 425,
	0, 0, 0, 0, 331, 296, 297, 363, 301, 309,
	352, 397, 337, 357, 258, 388, 364, 313, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 376, 0, 237,
	266, 0, 241, 0, 307, 0, 348, 284, 0, 0,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 0, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 228, 229, 230, 231, 0, 336,
	0, 238, 233, 234, 235, 236, 0, 0, 0, 404,
	405, 406, 427, 390, 0, 445, 279, 0, 0, 306,
	0, 0, 0, 0, 0, 0, 0, 0, 449, 441,
	0, 0, 437, 0, 438, 0, 0, 0, 0, 0,
	365, 320, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 0, 0, 2054, 0, 0, 0, 256, 188,
	439, 0, 440, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 370, 386, 257, 361, 399,
	262, 368, 252, 335, 358, 0, 0, 249, 384, 367,
	317, 298, 299, 248, 0, 353, 277, 290, 274, 333,
	0, 383, 411, 273, 402, 0, 394, 251, 0, 393,
	332, 380, 385, 318, 312, 250, 382, 316, 311, 302,
	281, 426, 303, 304, 294, 344, 310, 345, 295, 322,
	321, 323, 0, 0, 0, 0, 0, 422, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 396, 0, 0, 0, 0,
	0, 0, 369, 0, 0, 305, 0, 0, 0, 412,
	0, 356, 338, 0, 0, 0, 354, 308, 381, 346,
	387, 371, 395, 350, 347, 242, 372, 276, 319, 253,
	255, 271, 278, 280, 282, 283, 328, 329, 341, 360,
	373, 374, 375, 275, 263, 355, 264, 292, 265, 243,
	268, 267, 269, 362, 270, 245, 342, 379, 0, 288,
	351, 315, 246, 314, 343, 378, 377, 254, 403, 409,
	410, 0, 0, 415, 0, 0, 0, 423, 428, 429,
	430, 432, 433, 434, 435, 0, 0, 0, 0, 417,
	0, 0, 0, 0, 0, 0, 408, 286, 239, 240,
	448, 272, 334, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 330, 407, 0, 0, 0, 436,
	447, 0, 0, 0, 0, 0, 446, 340, 0, 359,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 366, 389, 401, 418, 421, 0, 0, 0,
	0, 244, 420, 0, 0, 0, 0, 0, 0, 0,
	0, 392, 0, 0, 0, 400, 0, 0, 0, 0,
	0, 416, 0, 0, 324, 325, 326, 327, 289, 0,
	261, 419, 349, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 413, 414, 285, 291, 431, 293, 260, 339, 287,
	398, 300, 0, 424, 0, 425, 0, 0, 0, 0,
	331, 296, 297, 363, 301, 309, 352, 397, 337, 357,
	258, 388, 364, 313, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 376, 0, 237, 266, 0, 241, 0,
	307, 0, 348, 284, 0, 0, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 0,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 231, 0, 336, 0, 238, 233, 234,
	235, 236, 0, 0, 0, 404, 405, 406, 427, 390,
	0, 445, 279, 0, 0, 306, 0, 0, 0, 0,
	0, 0, 0, 0, 449, 441, 0, 0, 437, 0,
	438, 0, 0, 0, 0, 0, 365, 320, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 0, 0,
	0, 0, 0, 0, 256, 188, 439, 0, 440, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1785, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 370, 386, 257, 361, 399, 262, 368, 252, 335,
	358, 0, 0, 249, 384, 367, 317, 298, 299, 248,
	0, 353, 277, 290, 274, 333, 0, 383, 411, 273,
	402, 0, 394, 251, 0, 393, 332, 380, 385, 318,
	312, 250, 382, 316, 311, 302, 281, 426, 303, 304,
	294, 344, 310, 345, 295, 322, 321, 323, 0, 0,
	0, 0, 0, 422, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 396, 0, 0, 0, 0, 0, 0, 369, 0,
	0, 305, 0, 0, 0, 412, 0, 356, 338, 0,
	0, 0, 354, 308, 381, 346, 387, 371, 395, 350,
	347, 242, 372, 276, 319, 253, 255, 271, 278, 280,
	282, 283, 328, 329, 341, 360, 373, 374, 375, 275,
	263, 355, 264, 292, 265, 243, 268, 267, 269, 362,
	270, 245, 342, 379, 0, 288, 351, 315, 246, 314,
	343, 378, 377, 254, 403, 409, 410, 0, 0, 415,
	0, 0, 0, 423, 428, 429, 430, 432, 433, 434,
	435, 0, 0, 0, 0, 417, 0, 0, 0, 0,
	0, 0, 408, 286, 239, 240, 448, 272, 334, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	330, 407, 0, 0, 0, 436, 447, 0, 0, 0,
	0, 0, 446, 340, 0, 359, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 366, 389,
	401, 418, 421, 0, 0, 0, 0, 244, 420, 0,
	0, 0, 0, 0, 0, 0, 0, 392, 0, 0,
	0, 400, 0, 0, 0, 0, 0, 416, 0, 0,
	324, 325, 326, 327, 289, 0, 261, 419, 349, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 413, 414, 285,
	291, 431, 293, 260, 339, 287, 398, 300, 0, 424,
	0, 425, 0, 0, 0, 0, 331, 296, 297, 363,
	301, 309, 352, 397, 337, 357, 258, 388, 364, 313,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 376,
	0, 237, 266, 0, 241, 0, 307, 0, 348, 284,
	0, 0, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 0, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	0, 336, 0, 238, 233, 234, 235, 236, 0, 0,
	0, 404, 405, 406, 427, 390, 0, 445, 279, 0,
	0, 306, 0, 0, 0, 0, 0, 0, 0, 0,
	449, 441, 0, 0, 437, 0, 438, 0, 0, 0,
	0, 0, 365, 320, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 0, 0, 0, 0, 0, 0,
	256, 188, 439, 0, 440, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2131, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 370, 386, 257,
	361, 399, 262, 368, 252, 335, 358, 0, 0, 249,
	384, 367, 317, 298, 299, 248, 0, 353, 277, 290,
	274, 333, 0, 383, 411, 273, 402, 0, 394, 251,
	0, 393, 332, 380, 385, 318, 312, 250, 382, 316,
	311, 302, 281, 426, 303, 304, 294, 344, 310, 345,
	295, 322, 321, 323, 0, 0, 0, 0, 0, 422,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 396, 0, 0,
	0, 0, 0, 0, 369, 0, 0, 305, 0, 0,
	0, 412, 0, 356, 338, 0, 0, 0, 354, 308,
	381, 346, 387, 371, 395, 350, 347, 242, 372, 276,
	319, 253, 255, 271, 278, 280, 282, 283, 328, 329,
	341, 360, 373, 374, 375, 275, 263, 355, 264, 292,
	265, 243, 268, 267, 269, 362, 270, 245, 342, 379,
	0, 288, 351, 315, 246, 314, 343, 378, 377, 254,
	403, 409, 410, 0, 0, 415, 0, 0, 0, 423,
	428, 429, 430, 432, 433, 434, 435, 0, 0, 0,
	0, 417, 0, 0, 0, 0, 0, 0, 408, 286,
	239, 240, 448, 272, 334, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 330, 407, 0, 0,
	0, 436, 447, 0, 0, 0, 0, 0, 446, 340,
	0, 359, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 366, 389, 401, 418, 421, 0,
	0, 0, 0, 244, 420, 0, 0, 0, 0, 0,
	0, 0, 0, 392, 0, 0, 0, 400, 0, 0,
	0, 0, 0, 416, 0, 0, 324, 325, 326, 327,
	289, 0, 261, 419, 349, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 414, 285, 291, 431, 293, 260,
	339, 287, 398, 300, 0, 424, 0, 425, 0, 0,
	0, 0, 331, 296, 297, 363, 301, 309, 352, 397,
	337, 357, 258, 388, 364, 313, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 376, 0, 237, 266, 0,
	241, 0, 307, 0, 348, 284, 0, 0, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 0, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 228, 229, 230, 231, 0, 336, 0, 238,
	233, 234, 235, 236, 0, 0, 0, 404, 405, 406,
	427, 390, 0, 445, 279, 0, 0, 306, 0, 0,
	0, 0, 0, 0, 0, 0, 449, 441, 0, 0,
	437, 0, 438, 0, 0, 0, 0, 0, 365, 320,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	0, 0, 2129, 0, 0, 0, 256, 188, 439, 0,
	440, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 370, 386, 257, 361, 399, 262, 368,
	252, 335, 358, 0, 0, 249, 384, 367, 317, 298,
	299, 248, 0, 353, 277, 290, 274, 333, 0, 383,
	411, 273, 402, 0, 394, 251, 0, 393, 332, 380,
	385, 318, 312, 250, 382, 316, 311, 302, 281, 426,
	303, 304, 294, 344, 310, 345, 295, 322, 321, 323,
	0, 0, 0, 0, 0, 422, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 396, 0, 0, 0, 0, 0, 0,
	369, 0, 0, 305, 0, 0, 0, 412, 0, 356,
	338, 0, 0, 0, 354, 308, 381, 346, 387, 371,
	395, 350, 347, 242, 372, 276, 319, 253, 255, 271,
	278, 280, 282, 283, 328, 329, 341, 360, 373, 374,
	375, 275, 263, 355, 264, 292, 265, 243, 268, 267,
	269, 362, 270, 245, 342, 379, 0, 288, 351, 315,
	246, 314, 343, 378, 377, 254, 403, 409, 410, 0,
	0, 415, 0, 0, 0, 423, 428, 429, 430, 432,
	433, 434, 435, 0, 0, 0, 0, 417, 0, 0,
	0, 0, 0, 0, 408, 286, 239, 240, 448, 272,
	334, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 330, 407, 0, 0, 0, 436, 447, 0,
	0, 0, 0, 0, 446, 340, 0, 359, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	366, 389, 401, 418, 421, 0, 0, 0, 0, 244,
	420, 0, 0, 0, 0, 0, 0, 0, 0, 392,
	0, 0, 0, 400, 0, 0, 0, 0, 0, 416,
	0, 0, 324, 325, 326, 327, 289, 0, 261, 419,
	349, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 413,
	414, 285, 291, 431, 293, 260, 339, 287, 398, 300,
	0, 424, 0, 425, 0, 0, 0, 0, 331, 296,
	297, 363, 301, 309, 352, 397, 337, 357, 258, 388,
	364, 313, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 376, 0, 237, 266, 0, 241, 0, 307, 0,
	348, 284, 0, 0, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 0, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 0, 0, 1927, 238, 233, 234, 235, 236,
	336, 0, 0, 404, 405, 406, 427, 390, 0, 445,
	0, 0, 0, 0, 0, 0, 0, 279, 0, 0,
	306, 0, 449, 441, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 437, 0, 438, 0, 0, 0, 0,
	0, 365, 320, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 0, 0, 0, 0, 256,
	188, 439, 0, 440, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 370, 386, 257, 361,
	399, 262, 368, 252, 335, 358, 0, 0, 249, 384,
	367, 317, 298, 299, 248, 0, 353, 277, 290, 274,
	333, 0, 383, 411, 273, 402, 0, 394, 251, 0,
	393, 332, 380, 385, 318, 312, 250, 382, 316, 311,
	302, 281, 426, 303, 304, 294, 344, 310, 345, 295,
	322, 321, 323, 0, 0, 0, 0, 0, 422, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 396, 0, 0, 0,
	0, 0, 0, 369, 0, 0, 305, 0, 0, 0,
	412, 0, 356, 338, 0, 0, 0, 354, 308, 381,
	346, 387, 371, 395, 350, 347, 242, 372, 276, 319,
	253, 255, 271, 278, 280, 282, 283, 328, 329, 341,
	360, 373, 374, 375, 275, 263, 355, 264, 292, 265,
	243, 268, 267, 269, 362, 270, 245, 342, 379, 0,
	288, 351, 315, 246, 314, 343, 378, 377, 254, 403,
	409, 410, 0, 0, 415, 0, 0, 0, 423, 428,
	429, 430, 432, 433, 434, 435, 0, 0, 0, 0,
	417, 0, 0, 0, 0, 0, 0, 408, 286, 239,
	240, 448, 272, 334, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 330, 407, 0, 0, 0,
	436, 447, 0, 0, 0, 0, 0, 446, 340, 0,
	359, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 366, 389, 401, 418, 421, 0, 0,
	0, 0, 244, 420, 0, 0, 0, 0, 0, 0,
	0, 0, 392, 0, 0, 0, 400, 0, 0, 0,
	0, 0, 416, 0, 0, 324, 325, 326, 327, 289,
	0, 261, 419, 349, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 413, 414, 285, 291, 431, 293, 260, 339,
	287, 398, 300, 0, 424, 0, 425, 0, 0, 0,
	0, 331, 296, 297, 363, 301, 309, 352, 397, 337,
	357, 258, 388, 364, 313, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 232, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 376, 0, 237, 266, 0, 241,
	0, 307, 0, 348, 284, 0, 0, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	0, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 229, 230, 231, 0, 336, 0, 238, 233,
	234, 235, 236, 0, 1651, 0, 404, 405, 406, 427,
	390, 0, 445, 279, 0, 0, 306, 0, 0, 0,
	0, 0, 0, 0, 0, 449, 441, 0, 0, 437,
	0, 438, 0, 0, 0, 0, 0, 365, 320, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 0,
	0, 0, 0, 0, 0, 256, 188, 439, 0, 440,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 370, 386, 257, 361, 399, 262, 368, 252,
	335, 358, 0, 0, 249, 384, 367, 317, 298, 299,
	248, 0, 353, 277, 290, 274, 333, 0, 383, 411,
	273, 402, 0, 394, 251, 0, 393, 332, 380, 385,
	318, 312, 250, 382, 316, 311, 302, 281, 426, 303,
	304, 294, 344, 310, 345, 295, 322, 321, 323, 0,
	0, 0, 0, 0, 422, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 396, 0, 0, 0, 0, 0, 0, 369,
	0, 0, 305, 0, 0, 0, 412, 0, 356, 338,
	0, 0, 0, 354, 308, 381, 346, 387, 371, 395,
	350, 347, 242, 372, 276, 319, 253, 255, 271, 278,
	280, 282, 283, 328, 329, 341, 360, 373, 374, 375,
	275, 263, 355, 264, 292, 265, 243, 268, 267, 269,
	362, 270, 245, 342, 379, 0, 288, 351, 315, 246,
	314, 343, 378, 377, 254, 403, 409, 410, 0, 0,
	415, 0, 0, 0, 423, 428, 429, 430, 432, 433,
	434, 435, 0, 0, 0, 0, 417, 0, 0, 0,
	0, 0, 0, 408, 286, 239, 240, 448, 272, 334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 330, 407, 0, 0, 0, 436, 447, 0, 0,
	0, 0, 0, 446, 340, 0, 359, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 366,
	389, 401, 418, 421, 0, 0, 0, 0, 244, 420,
	0, 0, 0, 0, 0, 0, 0, 0, 392, 0,
	0, 0, 400, 0, 0, 0, 0, 0, 416, 0,
	0, 324, 325, 326, 327, 289, 0, 261, 419, 349,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 413, 414,
	285, 291, 431, 293, 260, 339, 287, 398, 300, 0,
	424, 0, 425, 0, 0, 0, 0, 331, 296, 297,
	363, 301, 309, 352, 397, 337, 357, 258, 388, 364,
	313, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 232, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	376, 0, 237, 266, 0, 241, 0, 307, 0, 348,
	284, 0, 0, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 0, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	231, 0, 336, 0, 238, 233, 234, 235, 236, 0,
	0, 0, 404, 405, 406, 427, 390, 0, 445, 279,
	0, 0, 306, 0, 0, 0, 0, 0, 0, 0,
	0, 449, 441, 0, 0, 437, 0, 438, 0, 0,
	0, 0, 0, 365, 320, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 0, 0, 1224, 0, 0,
	0, 256, 188, 439, 0, 440, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 370, 386,
	257, 361, 399, 262, 368, 252, 335, 358, 0, 0,
	249, 384, 367, 317, 298, 299, 248, 0, 353, 277,
	290, 274, 333, 0, 383, 411, 273, 402, 0, 394,
	251, 0, 393, 332, 380, 385, 318, 312, 250, 382,
	316, 311, 302, 281, 426, 303, 304, 294, 344, 310,
	345, 295, 322, 321, 323, 0, 0, 0, 0, 0,
	422, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 396, 0,
	0, 0, 0, 0, 0, 369, 0, 0, 305, 0,
	0, 0, 412, 0, 356, 338, 0, 0, 0, 354,
	308, 381, 346, 387, 371, 395, 1564, 347, 242, 372,
	276, 319, 253, 255, 271, 278, 280, 282, 283, 328,
	329, 341, 360, 373, 374, 375, 275, 263, 355, 264,
	292, 265, 243, 268, 267, 269, 362, 270, 245, 342,
	379, 0, 288, 351, 315, 246, 314, 343, 378, 377,
	254, 403, 409, 410, 0, 0, 415, 0, 0, 0,
	423, 428, 429, 430, 432, 433, 434, 435, 0, 0,
	0, 0, 417, 0, 0, 0, 0, 0, 0, 408,
	286, 239, 240, 448, 272, 334, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 330, 407, 0,
	0, 0, 436, 447, 0, 0, 0, 0, 0, 446,
	340, 0, 359, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 366, 389, 401, 418, 421,
	0, 0, 0, 0, 244, 420, 0, 0, 0, 0,
	0, 0, 0, 0, 392, 0, 0, 0, 400, 0,
	0, 0, 0, 0, 416, 0, 0, 324, 325, 326,
	327, 289, 0, 261, 419, 349, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 413, 414, 285, 291, 431, 293,
	260, 339, 287, 398, 300, 0, 424, 0, 425, 0,
	0, 0, 0, 331, 296, 297, 363, 301, 309, 352,
	397, 337, 357, 258, 388, 364, 313, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	232, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 376, 0, 237, 266,
	0, 241, 0, 307, 0, 348, 284, 0, 0, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 0, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 229, 230, 231, 0, 336, 0,
	238, 233, 234, 235, 236, 0, 0, 0, 404, 405,
	406, 427, 390, 0, 445, 279, 0, 0, 306, 0,
	0, 0, 0, 0, 0, 0, 0, 449, 441, 0,
	0, 437, 0, 438, 0, 0, 0, 0, 0, 365,
	320, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 0, 0, 0, 0, 0, 0, 256, 188, 439,
	0, 440, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 370, 386, 257, 361, 399, 262,
	368, 252, 335, 358, 0, 0, 249, 384, 367, 317,
	298, 299, 248, 0, 353, 277, 290, 274, 333, 0,
	383, 411, 273, 402, 0, 394, 251, 0, 393, 332,
	380, 385, 318, 312, 250, 382, 316, 311, 302, 281,
	426, 303, 304, 294, 344, 310, 345, 295, 322, 321,
	323, 0, 0, 0, 0, 0, 422, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 396, 0, 0, 1250, 0, 0,
	0, 369, 0, 0, 305, 0, 0, 0, 412, 0,
	356, 338, 0, 0, 0, 354, 308, 381, 346, 387,
	371, 395, 350, 347, 242, 372, 276, 319, 253, 255,
	271, 278, 280, 282, 283, 328, 329, 341, 360, 373,
	374, 375, 275, 263, 355, 264, 292, 265, 243, 268,
	267, 269, 362, 270, 245, 342, 379, 0, 288, 351,
	315, 246, 314, 343, 378, 377, 254, 403, 409, 410,
	0, 0, 415, 0, 0, 0, 423, 428, 429, 430,
	432, 433, 434, 435, 0, 0, 0, 0, 417, 0,
	0, 0, 0, 0, 0, 408, 286, 239, 240, 448,
	272, 334, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 330, 407, 0, 0, 0, 436, 447,
	0, 0, 0, 0, 0, 446, 340, 0, 359, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 366, 389, 401, 418, 421, 0, 0, 0, 0,
	244, 420, 0, 0, 0, 0, 0, 0, 0, 0,
	392, 0, 0, 0, 400, 0, 0, 0, 0, 0,
	416, 0, 0, 324, 325, 326, 327, 289, 0, 261,
	419, 349, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	413, 414, 285, 291, 431, 293, 260, 339, 287, 398,
	300, 0, 424, 0, 425, 0, 0, 0, 0, 331,
	296, 297, 363, 301, 309, 352, 397, 337, 357, 258,
	388, 364, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 376, 0, 237, 266, 0, 241, 0, 307,
	0, 348, 284, 0, 0, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 0, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 0, 336, 0, 238, 233, 234, 235,
	236, 0, 0, 0, 404, 405, 406, 427, 390, 0,
	445, 279, 0, 0, 306, 0, 0, 0, 0, 0,
	0, 0, 0, 449, 441, 0, 0, 437, 0, 438,
	0, 0, 0, 0, 0, 365, 320, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 0, 0, 0,
	0, 0, 0, 256, 188, 439, 0, 440, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	370, 386, 257, 361, 399, 262, 368, 252, 335, 358,
	0, 0, 249, 384, 367, 317, 298, 299, 248, 0,
	353, 277, 290, 274, 333, 0, 383, 411, 273, 402,
	0, 394, 251, 0, 393, 332, 380, 385, 318, 312,
	250, 382, 316, 311, 302, 281, 426, 303, 304, 294,
	344, 310, 345, 295, 322, 321, 323, 0, 0, 0,
	0, 0, 422, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	396, 0, 0, 0, 0, 0, 0, 369, 0, 0,
	305, 0, 0, 0, 412, 0, 356, 338, 0, 0,
	0, 354, 308, 381, 346, 387, 371, 395, 350, 347,
	242, 372, 276, 319, 253, 255, 271, 278, 280, 282,
	283, 328, 329, 341, 360, 373, 374, 375, 275, 263,
	355, 264, 292, 265, 243, 268, 267, 269, 362, 270,
	245, 342, 379, 0, 288, 351, 315, 246, 314, 343,
	378, 377, 254, 403, 409, 410, 0, 0, 415, 0,
	0, 0, 423, 428, 429, 430, 432, 433, 434, 435,
	0, 0, 0, 0, 417, 0, 0, 0, 0, 0,
	0, 408, 286, 239, 240, 448, 272, 334, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 330,
	407, 0, 0, 0, 436, 447, 0, 0, 0, 0,
	0, 446, 340, 0, 359, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 366, 389, 401,
	418, 421, 0, 0, 0, 0, 244, 420, 0, 0,
	0, 0, 0, 0, 0, 0, 392, 0, 0, 0,
	400, 0, 0, 0, 0, 0, 416, 0, 0, 324,
	325, 326, 327, 289, 0, 261, 419, 349, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 413, 414, 285, 291,
	431, 293, 260, 339, 287, 398, 300, 0, 424, 0,
	425, 0, 0, 0, 0, 331, 296, 297, 363, 301,
	309, 352, 397, 337, 357, 258, 388, 364, 313, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 232, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 731, 0, 0, 376, 0,
	237, 266, 0, 241, 0, 307, 0, 348, 284, 0,
	0, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 0, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 229, 230, 231, 0,
	336, 0, 238, 233, 234, 235, 236, 0, 0, 0,
	404, 405, 406, 427, 390, 0, 445, 279, 0, 0,
	306, 0, 0, 0, 0, 0, 0, 0, 0, 449,
	441, 0, 0, 437, 0, 438, 0, 0, 0, 0,
	0, 365, 320, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 0, 0, 0, 0, 256,
	188, 439, 0, 440, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 370, 386, 257, 361,
	399, 262, 368, 252, 335, 358, 0, 0, 249, 384,
	367, 317, 298, 299, 248, 0, 353, 277, 290, 274,
	333, 0, 383, 411, 273, 402, 0, 394, 251, 0,
	393, 332, 380, 385, 318, 312, 250, 382, 316, 311,
	302, 281, 426, 303, 304, 294, 344, 310, 345, 295,
	322, 321, 323, 0, 0, 0, 0, 0, 422, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 396, 0, 0, 0,
	0, 0, 0, 369, 0, 0, 305, 0, 0, 0,
	412, 0, 356, 338, 0, 0, 0, 354, 308, 381,
	346, 387, 371, 395, 487, 347, 242, 372, 276, 319,
	253, 255, 271, 278, 280, 282, 283, 328, 329, 341,
	360, 373, 374, 375, 275, 263, 355, 264, 292, 265,
	243, 268, 267, 269, 362, 270, 245, 342, 379, 0,
	288, 351, 315, 246, 314, 343, 378, 377, 254, 403,
	409, 410, 0, 0, 415, 0, 0, 0, 423, 428,
	429, 430, 432, 433, 434, 435, 0, 0, 0, 0,
	417, 0, 0, 0, 0, 0, 0, 408, 286, 239,
	240, 448, 272, 334, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 330, 407, 0, 0, 0,
	436, 447, 0, 0, 0, 0, 0, 446, 340, 0,
	359, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 366, 389, 401, 418, 421, 0, 0,
	0, 0, 244, 420, 0, 0, 0, 0, 0, 0,
	488, 0, 392, 0, 0, 0, 400, 0, 0, 0,
	0, 0, 416, 0, 0, 324, 325, 326, 327, 289,
	0, 261, 419, 349, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 413, 414, 285, 291, 431, 293, 260, 339,
	287, 398, 300, 0, 424, 0, 425, 0, 0, 0,
	0, 331, 296, 297, 363, 301, 309, 352, 397, 337,
	357, 258, 388, 364, 313, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 232, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 376, 0, 237, 266, 0, 241,
	0, 307, 0, 348, 284, 0, 0, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	0, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 229, 230, 231, 0, 336, 0, 238, 233,
	234, 235, 236, 0, 0, 0, 404, 405, 406, 427,
	390, 0, 445, 279, 0, 0, 306, 0, 0, 0,
	0, 0, 0, 0, 0, 449, 441, 0, 0, 437,
	0, 438, 0, 0, 0, 0, 0, 365, 320, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 0,
	0, 0, 0, 0, 0, 256, 188, 439, 0, 440,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 370, 386, 257, 361, 399, 262, 368, 252,
	335, 358, 0, 0, 249, 384, 367, 317, 298, 299,
	248, 0, 353, 277, 290, 274, 333, 0, 383, 411,
	273, 402, 0, 394, 251, 0, 393, 332, 380, 385,
	318, 312, 250, 382, 316, 311, 302, 281, 426, 303,
	304, 294, 344, 310, 345, 295, 322, 321, 323, 0,
	0, 0, 0, 0, 422, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 464,
	0, 0, 396, 0, 0, 0, 0, 0, 0, 369,
	0, 0, 305, 0, 0, 0, 412, 0, 356, 338,
	0, 0, 0, 354, 308, 381, 346, 387, 371, 395,
	350, 347, 242, 372, 276, 319, 253, 255, 271, 278,
	280, 282, 283, 328, 329, 341, 360, 373, 374, 375,
	275, 263, 355, 264, 292, 265, 243, 268, 267, 269,
	362, 270, 245, 342, 379, 0, 288, 351, 315, 246,
	314, 343, 378, 377, 254, 403, 409, 410, 0, 0,
	415, 0, 0, 0, 423, 428, 429, 430, 432, 433,
	434, 435, 0, 0, 0, 0, 417, 0, 0, 0,
	0, 0, 0, 408, 286, 239, 240, 448, 272, 334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 330, 407, 0, 0, 0, 436, 447, 0, 0,
	0, 0, 0, 446, 340, 0, 359, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 366,
	389, 401, 418, 421, 0, 0, 0, 0, 244, 420,
	0, 0, 0, 0, 0, 0, 0, 0, 392, 0,
	0, 0, 400, 0, 0, 0, 0, 0, 416, 0,
	0, 324, 325, 326, 327, 289, 0, 261, 419, 349,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 413, 414,
	285, 291, 431, 293, 260, 339, 287, 398, 300, 0,
	424, 0, 425, 0, 0, 0, 0, 331, 296, 297,
	363, 301, 309, 352, 397, 337, 357, 258, 388, 364,
	313, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 232, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	376, 0, 237, 266, 0, 241, 0, 307, 0, 348,
	284, 0, 0, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 0, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	231, 0, 0, 336, 238, 233, 234, 235, 236, 0,
	0, 0, 404, 405, 406, 427, 390, 0, 445, 454,
	279, 0, 0, 306, 0, 0, 0, 0, 0, 0,
	0, 449, 441, 0, 0, 0, 437, 0, 438, 0,
	0, 0, 0, 0, 365, 320, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 0, 0, 0, 0,
	0, 0, 256, 188, 439, 0, 440, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 370,
	386, 257, 361, 399, 262, 368, 252, 335, 358, 0,
	0, 249, 384, 367, 317, 298, 299, 248, 0, 353,
	277, 290, 274, 333, 0, 383, 411, 273, 402, 0,
	394, 251, 0, 393, 332, 380, 385, 318, 312, 250,
	382, 316, 311, 302, 281, 426, 303, 304, 294, 344,
	310, 345, 295, 322, 321, 323, 0, 0, 0, 0,
	0, 422, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 396,
	0, 0, 0, 0, 0, 0, 369, 0, 0, 305,
	0, 0, 0, 412, 0, 356, 338, 0, 0, 0,
	354, 308, 381, 346, 387, 371, 395, 350, 347, 242,
	372, 276, 319, 253, 255, 271, 278, 280, 282, 283,
	328, 329, 341, 360, 373, 374, 375, 275, 263, 355,
	264, 292, 265, 243, 268, 267, 269, 362, 270, 245,
	342, 379, 0, 288, 351, 315, 246, 314, 343, 378,
	377, 254, 403, 409, 410, 0, 0, 415, 0, 0,
	0, 423, 428, 429, 430, 432, 433, 434, 435, 0,
	0, 0, 0, 417, 0, 0, 0, 0, 0, 0,
	408, 286, 239, 240, 448, 272, 334, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 407,
	0, 0, 0, 436, 447, 0, 0, 0, 0, 0,
	446, 340, 0, 359, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 366, 389, 401, 418,
	421, 0, 0, 0, 0, 244, 420, 0, 0, 0,
	0, 0, 0, 0, 0, 392, 0, 0, 0, 400,
	0, 0, 0, 0, 0, 416, 0, 0, 324, 325,
	326, 327, 289, 0, 261, 419, 349, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 413, 414, 285, 291, 431,
	293, 260, 339, 287, 398, 300, 0, 424, 0, 425,
	0, 0, 0, 0, 331, 296, 297, 363, 301, 309,
	352, 397, 337, 357, 258, 388, 364, 313, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 376, 0, 237,
	266, 0, 241, 0, 307, 0, 348, 284, 0, 0,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 0, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 228, 229, 230, 231, 0, 336,
	0, 238, 233, 234, 235, 236, 0, 0, 0, 404,
	405, 406, 427, 390, 0, 445, 279, 0, 0, 306,
	0, 0, 0, 0, 0, 0, 0, 0, 449, 441,
	0, 0, 437, 0, 438, 0, 0, 0, 0, 0,
	365, 320, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 0, 0, 0, 0, 0, 0, 256, 188,
	439, 0, 440, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 370, 386, 257, 361, 399,
	262, 368, 252, 335, 358, 0, 0, 249, 384, 367,
	317, 298, 299, 248, 0, 353, 277, 290, 274, 333,
	0, 383, 411, 273, 402, 0, 394, 251, 0, 393,
	332, 380, 385, 318, 312, 250, 382, 316, 311, 302,
	281, 426, 303, 304, 294, 344, 310, 345, 295, 322,
	321, 323, 0, 0, 0, 0, 0, 422, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 396, 0, 0, 0, 0,
	0, 0, 369, 0, 0, 305, 0, 0, 0, 412,
	0, 356, 338, 0, 0, 0, 354, 308, 381, 346,
	387, 371, 395, 350, 347, 242, 372, 276, 319, 253,
	255, 271, 278, 280, 282, 283, 328, 329, 341, 360,
	373, 374, 375, 275, 263, 355, 264, 292, 265, 243,
	268, 267, 269, 362, 270, 245, 342, 379, 0, 288,
	351, 315, 246, 314, 343, 378, 377, 254, 403, 409,
	410, 0, 0, 415, 0, 0, 0, 423, 428, 429,
	430, 432, 433, 434, 435, 0, 0, 0, 0, 417,
	0, 0, 0, 0, 0, 0, 408, 286, 239, 240,
	448, 272, 334, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 330, 407, 0, 0, 0, 436,
	447, 0, 0, 0, 0, 0, 446, 340, 0, 359,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 366, 389, 401, 418, 421, 0, 0, 0,
	0, 244, 420, 0, 0, 0, 0, 0, 0, 0,
	0, 392, 0, 0, 0, 400, 0, 0, 0, 0,
	0, 416, 0, 0, 324, 325, 326, 327, 289, 0,
	261, 419, 349, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 413, 414, 285, 291, 431, 293, 260, 339, 287,
	398, 300, 0, 424, 0, 425, 0, 0, 0, 0,
	331, 296, 297, 363, 301, 309, 352, 397, 337, 357,
	258, 388, 364, 313, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 376, 0, 237, 266, 0, 241, 0,
	307, 0, 348, 284, 0, 0, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 0,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 231, 0, 336, 0, 238, 233, 234,
	235, 236, 0, 0, 0, 404, 405, 406, 427, 390,
	0, 445, 279, 0, 0, 306, 0, 0, 0, 0,
	0, 0, 0, 0, 449, 441, 0, 0, 437, 0,
	438, 0, 0, 0, 0, 0, 365, 320, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 0, 0,
	0, 0, 0, 0, 256, 188, 439, 0, 440, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 370, 1204, 257, 361, 399, 262, 368, 252, 335,
	358, 0, 0, 249, 384, 367, 317, 298, 299, 248,
	0, 353, 277, 290, 274, 333, 0, 383, 411, 273,
	402, 0, 394, 251, 0, 393, 332, 380, 385, 318,
	312, 250, 382, 316, 311, 302, 281, 426, 303, 304,
	294, 344, 310, 345, 295, 322, 321, 323, 0, 0,
	0, 0, 0, 422, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 396, 0, 0, 0, 0, 0, 0, 369, 0,
	0, 305, 0, 0, 0, 412, 0, 356, 338, 0,
	0, 0, 354, 308, 381, 346, 387, 371, 395, 350,
	347, 242, 372, 276, 319, 253, 255, 271, 278, 280,
	282, 283, 328, 329, 341, 360, 373, 374, 375, 275,
	263, 355, 264, 292, 265, 243, 268, 267, 269, 362,
	270, 245, 342, 379, 0, 288, 351, 315, 246, 314,
	343, 378, 377, 254, 403, 409, 410, 0, 0, 415,
	0, 0, 0, 423, 428, 429, 430, 432, 433, 434,
	435, 0, 0, 0, 0, 417, 0, 0, 0, 0,
	0, 0, 408, 286, 239, 240, 448, 272, 334, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	330, 407, 0, 0, 0, 436, 447, 0, 0, 0,
	0, 0, 446, 340, 0, 359, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 366, 389,
	401, 418, 421, 0, 0, 0, 0, 244, 420, 0,
	0, 0, 0, 0, 0, 0, 0, 392, 0, 0,
	0, 400, 0, 0, 0, 0, 0, 416, 0, 0,
	324, 325, 326, 327, 289, 0, 261, 419, 349, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 413, 414, 285,
	291, 431, 293, 260, 339, 287, 398, 300, 0, 424,
	0, 425, 0, 0, 0, 0, 331, 296, 297, 363,
	301, 309, 352, 397, 337, 357, 258, 388, 364, 313,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 376,
	0, 237, 266, 0, 241, 0, 307, 0, 348, 284,
	0, 0, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 0, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	0, 336, 0, 238, 233, 234, 235, 236, 0, 0,
	0, 404, 405, 406, 427, 390, 0, 445, 279, 0,
	0, 306, 0, 0, 0, 0, 0, 0, 0, 0,
	449, 441, 0, 0, 437, 0, 438, 0, 0, 0,
	0, 0, 365, 320, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 0, 0, 0, 0, 0, 0,
	256, 188, 439, 0, 440, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 370, 1202, 257,
	361, 399, 262, 368, 252, 335, 358, 0, 0, 249,
	384, 367, 317, 298, 299, 248, 0, 353, 277, 290,
	274, 333, 0, 383, 411, 273, 402, 0, 394, 251,
	0, 393, 332, 380, 385, 318, 312, 250, 382, 316,
	311, 302, 281, 426, 303, 304, 294, 344, 310, 345,
	295, 322, 321, 323, 0, 0, 0, 0, 0, 422,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 396, 0, 0,
	0, 0, 0, 0, 369, 0, 0, 305, 0, 0,
	0, 412, 0, 356, 338, 0, 0, 0, 354, 308,
	381, 346, 387, 371, 395, 350, 347, 242, 372, 276,
	319, 253, 255, 271, 278, 280, 282, 283, 328, 329,
	341, 360, 373, 374, 375, 275, 263, 355, 264, 292,
	265, 243, 268, 267, 269, 362, 270, 245, 342, 379,
	0, 288, 351, 315, 246, 314, 343, 378, 377, 254,
	403, 409, 410, 0, 0, 415, 0, 0, 0, 423,
	428, 429, 430, 432, 433, 434, 435, 0, 0, 0,
	0, 417, 0, 0, 0, 0, 0, 0, 408, 286,
	239, 240, 448, 272, 334, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 330, 407, 0, 0,
	0, 436, 447, 0, 0, 0, 0, 0, 446, 340,
	0, 359, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 366, 389, 401, 418, 421, 0,
	0, 0, 0, 244, 420, 0, 0, 0, 0, 0,
	0, 0, 0, 392, 0, 0, 0, 400, 0, 0,
	0, 0, 0, 416, 0, 0, 324, 325, 326, 327,
	289, 0, 261, 419, 349, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 414, 285, 291, 431, 293, 260,
	339, 287, 398, 300, 0, 424, 0, 425, 0, 0,
	0, 0, 331, 296, 297, 363, 301, 309, 352, 397,
	337, 357, 258, 388, 364, 313, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 376, 0, 237, 266, 0,
	241, 0, 307, 0, 348, 284, 0, 0, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 0, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 228, 229, 230, 231, 0, 336, 0, 238,
	233, 234, 235, 236, 0, 0, 0, 404, 405, 406,
	427, 390, 0, 445, 279, 0, 0, 306, 0, 0,
	0, 0, 0, 0, 0, 0, 449, 441, 0, 0,
	437, 0, 438, 0, 0, 0, 0, 0, 365, 320,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	0, 0, 0, 0, 0, 0, 256, 188, 439, 0,
	440, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 370, 386, 257, 361, 399, 262, 368,
	252, 335, 358, 0, 0, 249, 384, 367, 317, 298,
	299, 248, 0, 353, 277, 290, 274, 333, 0, 383,
	411, 273, 402, 0, 394, 251, 0, 393, 332, 380,
	385, 318, 312, 250, 382, 316, 311, 302, 281, 426,
	303, 304, 294, 344, 310, 345, 295, 322, 321, 323,
	0, 0, 0, 0, 0, 422, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 396, 0, 0, 0, 0, 0, 0,
	369, 0, 0, 305, 0, 0, 0, 412, 0, 356,
	338, 0, 0, 0, 354, 308, 381, 346, 387, 371,
	395, 350, 347, 242, 372, 276, 319, 253, 255, 528,
	278, 280, 282, 283, 328, 329, 341, 360, 373, 374,
	375, 275, 263, 355, 264, 292, 265, 243, 268, 267,
	269, 362, 270, 245, 342, 379, 0, 288, 351, 315,
	246, 314, 343, 378, 377, 254, 403, 409, 410, 0,
	0, 415, 0, 0, 0, 423, 428, 429, 430, 432,
	433, 434, 435, 0, 0, 0, 0, 417, 0, 0,
	0, 0, 0, 0, 408, 286, 239, 240, 448, 272,
	334, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 330, 407, 0, 0, 0, 436, 447, 0,
	0, 0, 0, 0, 446, 340, 0, 359, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	366, 389, 401, 418, 421, 0, 0, 0, 0, 244,
	420, 0, 0, 0, 0, 0, 0, 0, 0, 392,
	0, 0, 0, 400, 0, 0, 0, 0, 0, 416,
	0, 0, 324, 325, 326, 327, 289, 0, 261, 419,
	349, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 723, 0, 724, 0, 413,
	414, 285, 291, 431, 293, 260, 339, 287, 398, 300,
	0, 424, 0, 425, 165, 51, 157, 133, 331, 296,
	297, 363, 301, 309, 352, 397, 337, 357, 258, 388,
	364, 313, 158, 705, 0, 0, 0, 0, 0, 150,
	0, 0, 0, 159, 0, 232, 718, 0, 714, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 113, 0, 0, 0, 0, 0, 0, 0,
	0, 376, 0, 237, 266, 0, 241, 101, 307, 0,
	348, 284, 0, 162, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 0, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 0, 0, 0, 238, 233, 234, 235, 236,
	0, 0, 0, 404, 405, 406, 427, 390, 0, 445,
	165, 51, 157, 133, 0, 0, 0, 0, 0, 0,
	0, 0, 449, 441, 0, 0, 0, 0, 158, 118,
	119, 0, 120, 121, 0, 150, 0, 0, 0, 159,
	0, 0, 0, 0, 720, 0, 713, 0, 701, 0,
	0, 0, 0, 0, 0, 717, 716, 0, 113, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 698, 101, 0, 0, 706, 0, 0, 162,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 132,
	156, 163, 0, 99, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 722, 0, 0, 0, 0,
	712, 155, 149, 148, 711, 0, 0, 0, 57, 0,
	697, 1639, 0, 0, 704, 0, 1601, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 702, 0, 0, 0, 118, 119, 0, 120, 121,
	0, 0, 0, 0, 0, 1641, 1610, 0, 0, 0,
	0, 0, 0, 0, 0, 1642, 1643, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 721, 151,
	152, 153, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1609, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 703, 160, 1616, 0, 0, 0,
	0, 0, 0, 0, 0, 132, 156, 163, 0, 99,
	0, 0, 0, 0, 0, 109, 0, 0, 0, 154,
	0, 110, 0, 0, 0, 0, 0, 155, 149, 148,
	0, 0, 0, 0, 57, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1639,
	0, 0, 0, 1632, 0, 0, 0, 0, 0, 0,
	719, 0, 0, 0, 0, 0, 0, 0, 111, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	50, 0, 0, 1641, 0, 151, 152, 153, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 709,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 160, 0, 0, 0, 0, 0, 0, 1639, 0,
	0, 0, 0, 1600, 1602, 1599, 0, 1596, 0, 52,
	0, 109, 1620, 0, 1616, 154, 0, 110, 0, 0,
	0, 0, 0, 1626, 0, 0, 0, 0, 0, 0,
	0, 0, 1641, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1614, 1648, 0, 134, 1615, 1617, 1619,
	0, 1621, 1622, 1623, 1627, 1628, 1629, 1631, 1634, 1635,
	1636, 0, 0, 0, 0, 0, 0, 0, 1624, 1633,
	1625, 0, 0, 3318, 111, 0, 0, 3054, 0, 0,
	1604, 1632, 0, 1616, 0, 0, 50, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1640, 0, 0, 0, 112, 39, 0, 0,
	0, 0, 0, 49, 5, 0, 0, 0, 116, 117,
	0, 0, 0, 1597, 1598, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 52, 0, 0, 0, 0,
	0, 1637, 0, 0, 0, 0, 1639, 0, 0, 0,
	1632, 0, 0, 0, 0, 0, 0, 0, 1613, 0,
	1620, 0, 0, 0, 0, 1612, 0, 0, 0, 0,
	0, 1626, 134, 0, 0, 0, 0, 0, 0, 0,
	1641, 0, 0, 0, 0, 0, 0, 0, 0, 1630,
	0, 1614, 1648, 0, 0, 1615, 1617, 1619, 1618, 1621,
	1622, 1623, 1627, 1628, 1629, 1631, 1634, 1635, 1636, 0,
	0, 1645, 1644, 0, 0, 0, 1624, 1633, 1625, 0,
	0, 0, 507, 506, 513, 503, 0, 0, 0, 1620,
	0, 1616, 112, 39, 510, 511, 0, 512, 516, 49,
	1626, 498, 0, 0, 116, 117, 0, 0, 0, 0,
	1640, 521, 0, 0, 0, 0, 0, 0, 0, 0,
	1614, 1648, 0, 1606, 1615, 1617, 1619, 0, 1621, 1622,
	1623, 1627, 1628, 1629, 1631, 1634, 1635, 1636, 0, 0,
	0, 0, 0, 0, 0, 1624, 1633, 1625, 0, 1637,
	0, 0, 507, 506, 513, 503, 0, 0, 1632, 1647,
	0, 0, 1646, 0, 510, 511, 1613, 512, 516, 0,
	0, 498, 0, 1612, 0, 0, 0, 0, 0, 1640,
	0, 521, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1630, 0, 0,
	0, 0, 0, 0, 0, 0, 1618, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1637, 0,
	0, 0, 0, 0, 525, 0, 0, 527, 0, 0,
	0, 0, 526, 0, 0, 1613, 0, 1620, 0, 0,
	0, 0, 1612, 0, 0, 0, 0, 0, 1626, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1630, 0, 1614, 1648,
	0, 0, 1615, 1617, 1619, 1618, 1621, 1622, 1623, 1627,
	1628, 1629, 1631, 1634, 1635, 1636, 0, 0, 0, 0,
	0, 0, 0, 1624, 1633, 1625, 0, 499, 501, 500,
	0, 0, 0, 0, 0, 0, 0, 505, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 509,
	0, 0, 0, 0, 0, 0, 524, 1640, 0, 0,
	0, 0, 0, 502, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1637, 499, 501, 500,
	0, 0, 0, 0, 0, 0, 0, 505, 0, 0,
	0, 0, 0, 1613, 0, 0, 0, 0, 0, 509,
	1612, 0, 0, 0, 0, 0, 524, 0, 0, 0,
	0, 0, 0, 502, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1630, 0, 0, 0, 0, 0,
	0, 0, 0, 1618, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 504, 508, 514,
	0, 515, 517, 0, 0, 518, 519, 520, 0, 0,
	522, 523, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 504, 508, 514,
	0, 515, 517, 0, 0, 518, 519, 520, 0, 0,
	522, 523,
}

var yyPact = [...]int{
	37682, -1000, -1000, -1000, -322, 10366, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 35597,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 35597,
	-319, 35051, 35051, -1000, -1000, 2174, -1000, 34504, 11500, 35597,
	296, 271, 35597, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 677,
	-1000, 33958, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 541,
	4472, 37235, 8101, -265, -1000, 2886, -104, 2074, 854, 878,
	993, 993, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 37620, 704, 33412, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 3101, 283, 704, 13691, 5,
	3, 2886, 326, 3447, -1000, 953, 37808, 157, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 8101,
	8101, 10366, -352, 10366, 8101, 35597, 35597, -1000, -1000, -1000,
	-1000, 541, 4472, 8101, 2074, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 3, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 4260, -1000, 1314, -1000, -1000, -1000, -1000, -1000,
	2486, 1311, 2072, 497, 35597, -1000, 1309, 497, -1000, -1000,
	-1000, 2886, 2886, -1000, 35597, 35597, 65, 1509, -1000, 321,
	315, 331, 1307, -1000, -1000, -1000, -1000, -1000, -1000, 399,
	2839, -1000, 35597, 35597, 2532, 35597, -1000, 1869, 441, 38440,
	2702, 1012, 718, 2562, -1000, -1000, 2485, -1000, 172, 202,
	173, 287, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 195,
	-1000, 2776, -1000, -1000, 178, -1000, -1000, 166, -1000, -1000,
	-1000, 2, -1000, -1000, -1000, -1000, -1000, -1000, -94, -1000,
	-1000, 921, 1937, 8101, -1000, 1687, -1000, 2927, -1000, -1000,
	-1000, -1000, 5275, 9793, 9793, 9793, 9793, -1000, -1000, 2343,
	8101, 2484, 2481, 2479, -1000, -1000, -1000, -1000, -1000, 1303,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1625,
	-1000, -1000, -1000, 9229, -1000, 2478, 2474, 2469, 2465, 2463,
	2462, 2456, 2452, 2449, 2448, 2447, 2446, 2445, 2441, 2245,
	10927, 2433, 2071, 2070, 2432, 2429, 2428, 2059, 2245, 2245,
	2427, 2426, 2423, 2416, 2415, 2414, 2409, 2398, 2397, 2396,
	2395, 2391, 2389, 2388, 2387, 2382, 2380, 2378, 2377, 2361,
	2360, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1146, -1000, 2359, 2685, 2786, 2318,
	2816, 2759, 2752, 2750, 2748, 1839, -1000, -1000, 59, -1000,
	-143, -1000, -1000, 817, -1000, 793, -1000, 35597, 35597, -5,
	631, 539, 539, 539, 539, 539, 539, 636, 539, 35597,
	674, 673, 659, 539, -121, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1507, 1472, 2619, 785, -1000, -1000, -1000, -1000,
	1204, 35597, -1000, 2310, 1390, 1390, 2782, 460, 457, 447,
	1390, 343, -1000, 1498, 1498, 1498, 1498, 1390, 388, 471,
	2786, 2786, -6, 1498, -18, 1390, 1390, -18, 1390, 1390,
	1390, 179, -307, -1000, -1000, -1000, 1498, 1498, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2770, 2768, 541, 35597, 117,
	35597, 541, 541, 541, 549, -72, 36689, 36143, 1869, 440,
	439, 1224, 1512, -1000, 1407, 35597, 35597, 1407, 1407, 18110,
	17564, -1000, 35597, -1000, 2786, 2318, -1000, 2222, 2598, 2221,
	2318, 541, 541, 541, 541, 541, 146, 541, 541, 541,
	541, 35597, 35597, 32866, 541, 541, 6967, 6967, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 10366, 1724, 1835,
	154, -71, -316, 185, -1000, -1000, 35597, 2670, 148, -1000,
	-1000, -1000, 2252, -1000, 2285, 2285, 2285, 2285, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2285, 2285, 2308,
	2355, -1000, -1000, 2282, 2282, 2282, 2252, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2293, 2293, 2307, 2307, 2293, 35597, 8101, 35597,
	2686, 319, 2354, -1000, 35597, 311, 2786, 2685, 2786, -1000,
	-1000, 1301, 1837, 2058, -1000, -1000, 321, 1373, -1000, 908,
	-1000, -1000, -1000, -1000, 35597, -94, 302, -1000, -1000, 2034,
	2353, -1000, 470, 975, 1138, -1000, 163, 38370, 28491, 1869,
	28491, 35597, -1000, -1000, -1000, -1000, -1000, -1000, 1, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 174, -1000, 8101, 8101, 8101, 8101, 8101, -1000,
	611, 8665, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 9793,
	9793, 9793, 9793, 9793, 9793, 9793, 9793, 9793, 9793, 9793,
	9793, 2342, 1437, 9793, 9793, 9793, 9793, 2598, 2533, 1222,
	228, -1000, -1000, -1000, -1000, -1000, 1551, 1937, 8101, 8101,
	8101, 35597, -1000, -1000, 3231, 8101, 8101, 3002, 8101, 2739,
	8101, 8101, 8101, 2220, 3795, 35597, 8101, -1000, 2218, 2213,
	-1000, -1000, 1638, 8101, -1000, -1000, 8101, -1000, -1000, 8101,
	9793, 8101, -1000, -1000, -1000, 265, 2739, 2739, 1454, 8101,
	8101, 2739, 2739, 2739, 1443, 2739, 2739, 2739, 2739, 2739,
	2739, 2739, 2739, 2210, 2208, 2207, 2786, -265, 6403, -1000,
	-270, 2685, 8101, -1000, -1000, 8101, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2057, 2056, -331, -61, 830, 805,
	810, -1000, 2732, -1000, 2352, 35597, 539, -161, 539, -1000,
	-122, 35597, 1562, 35597, 28491, 35597, 35597, 1869, 35597, 35597,
	-171, 539, 539, 539, 35597, -1000, 2631, 28491, 2626, 549,
	-1000, 35597, 1204, 2728, 35597, 2826, 9793, 9793, -1000, 32320,
	1498, 1390, 1390, -1000, -1000, 35597, -1000, -1000, -1000, 1498,
	35597, 1498, 1498, 2826, 1498, -1000, -1000, -1000, 1390, 1390,
	-1000, -1000, -1000, -1000, 1498, 1498, -1000, -1000, 2826, 35597,
	-12, 2826, 2826, -22, -1000, -1000, -1000, 35597, 35597, 539,
	35597, -1000, 35597, 35597, -1000, -1000, 35597, 37935, 35597, 31774,
	2767, -1000, 28491, 35597, 35597, 25761, -1000, 1159, -1000, -55,
	-1000, -67, -72, 1407, -72, 1407, -1000, 469, 638, 16472,
	405, 28491, 4711, -1000, -1000, 1407, 1407, 4711, 4711, 1322,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1187, -1000, 160,
	2685, -1000, -1000, -1000, -1000, -1000, 35597, 35597, 28491, 1869,
	35597, 541, 35597, 35597, 35597, 35597, -1000, 2350, 1300, -1000,
	2692, 35597, 35597, 1095, -1000, -1000, 13145, 1287, 1095, -1000,
	1538, -1000, 8101, 10366, -285, 8101, 10366, 10366, 8101, 10366,
	-1000, 8101, 132, -1000, -1000, -1000, -1000, 1830, -1000, 1824,
	-1000, -1000, -1000, -1000, -1000, 2048, 2048, -1000, 1823, -1000,
	-1000, -1000, -1000, 1822, -1000, -1000, 1820, -1000, -1000, -1000,
	2203, 921, -1000, 2046, 2560, -266, -1000, 15363, 35597, 35597,
	-1000, -1000, -266, -1000, 14800, 35597, 2685, -1000, 2685, 35597,
	-1000, 2781, -1000, 321, 254, -1000, -1000, -1000, -1000, -1000,
	-1000, 1286, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1178, -1000, 35597, -1000, -1000, 163, 28491, 29583, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 196, -1000, -1000, 164,
	-1000, 595, 92, 1364, -1000, -1000, 124, 165, 70, 717,
	1937, -1000, 1560, 1560, 1577, -1000, 562, -1000, -1000, -1000,
	-1000, 2343, -1000, -1000, -1000, 1744, 1480, -1000, 1504, 1504,
	1326, 1326, 1326, 1326, 1326, 1417, 1417, -1000, -1000, -1000,
	5275, 2342, 9793, 9793, 9793, 9793, 509, 509, 2764, 3466,
	-1000, 8101, 1537, -1000, 8101, 2040, 2029, 1294, 1285, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2200,
	2195, 1881, 2838, 2193, 8101, -1000, -1000, 1363, 1362, 1344,
	-1000, 2014, 7537, -1000, -1000, -1000, 2191, 1283, 2190, -1000,
	-1000, -1000, 2179, 1338, 967, 2178, 2435, 2175, 1176, 8101,
	8101, 8101, 2168, 1335, 1329, 8101, 8101, 8101, 8101, 2167,
	8101, 8101, 8101, 8101, 8101, 8101, 8101, 8101, 23, 23,
	23, -1000, -1000, 1328, -1000, 1937, -1000, 2045, -1000, 1111,
	1164, -1000, 1982, -1000, -1000, -1000, 1983, -1000, -1000, 816,
	791, 811, 35597, 942, 2338, 35597, 539, 35597, -1000, 2310,
	2690, 118, -1000, 1127, -1000, 92, -112, 310, 935, 2517,
	2836, 2337, 35597, 35597, 35597, 2724, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 31228, -1000, 2335, 1324, -1000, -1000,
	8101, -1000, -1000, 2514, 35597, 35597, 2826, 2826, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 35597, 2826, 2826, 1390, 1498,
	-1000, -1000, 1498, -1000, -1000, 1498, -1000, 1282, -1000, 35597,
	-1000, -1000, -1000, 2310, 1160, -1000, 841, 524, 524, 824,
	667, 2815, 14237, -1000, 1380, 1000, 593, 2654, 170, -1000,
	1380, -216, 1380, 1380, 1380, 1380, 1380, 1380, 1380, 395,
	393, 1380, 1380, 1380, 1380, 1380, 1380, 1380, 1380, 1380,
	1380, 1380, 862, 1380, 1380, 1380, 1380, 1380, -1000, 1380,
	2333, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 422, 107,
	2763, 216, 214, 1127, 2762, 225, 2578, 1093, -1000, -1000,
	-1000, -1000, 20301, 20301, 15926, 20301, -1000, 1377, -72, -95,
	-1000, -1000, 1159, 4711, 1159, 4711, -1000, -1000, 582, -1000,
	-1000, 935, -1000, 35597, 35597, -1000, -1000, 2332, 1469, -1000,
	-1000, 10927, -1000, 4711, 4711, -1000, -1000, 20847, 35597, -1000,
	-106, -1000, -77, 2780, 1134, -1000, -1000, 1148, 935, 2559,
	35597, 1134, 1134, -1000, -1000, 12046, 35597, 35597, -1000, -1000,
	2826, 6967, -1000, 25761, -1000, -1000, 30675, -1000, 30129, 2826,
	1516, -1000, 10366, 1800, 149, -1000, 181, -325, 145, 1567,
	144, 1937, -1000, -1000, 2166, 2154, 1319, -1000, 1312, 2153,
	1305, 1298, -1000, -25, -1000, 2672, 941, -1000, 2328, -1000,
	1295, 2616, -1000, 1121, -1000, 1466, 1289, -1000, 941, 1288,
	2615, 1121, 2780, -1000, 1280, 64, -1000, -1000, 35597, 2034,
	1275, 29583, 1048, -1000, 567, 1279, 1274, -1000, 28491, 161,
	28491, -1000, 28491, -1000, -1000, 332, -1000, 35597, 2676, -1000,
	-1000, -1000, 1983, 1465, -339, -1000, -1000, -1000, -1000, -1000,
	1254, -1000, 509, 509, 2764, 3333, -1000, 9793, -1000, 9793,
	2521, 1513, -1000, 8101, 1755, 3450, 3450, 1211, 19202, 35597,
	-1000, -1000, 8101, 8101, -1000, 2516, -1000, -1000, -1000, -1000,
	8101, 8101, 1663, -1000, 35597, -1000, -1000, -1000, -1000, 19202,
	-1000, 9793, -1000, 8101, 1051, 2508, 1221, 23, 23, 23,
	2475, 2443, 2430, 1209, 23, 2392, 2372, 2356, 2339, 2242,
	2211, 2188, 2170, -1000, 2327, -1000, -1000, 6403, -1000, -25,
	8101, 8101, 8101, 2647, -1000, -1000, 106, -1000, 1463, -1000,
	-1000, -1000, 789, 151, 2152, 1112, -1000, -1000, 35597, -1000,
	-1000, -1000, 12046, 267, 35597, 2310, 2723, -1000, 38, 1380,
	503, 28491, 423, -1000, 35597, 1627, 1461, 2555, 241, 2667,
	35597, 26307, 2325, 2324, 2322, 289, 4413, 35597, 1070, -1000,
	1271, 37808, -1000, 35597, 1937, -1000, 1869, -1000, 1390, -1000,
	-1000, 2826, 1235, -1000, -1000, 2826, 1390, 1390, 1498, 35597,
	-1000, 2722, 37935, -1000, 35597, -1000, -1000, -1000, 680, -1000,
	786, 539, 35597, 1597, 786, 1594, 2321, -1000, -1000, 35597,
	35597, 35597, 35597, -1000, -1000, 35597, -1000, 35597, 35597, 35597,
	35597, -1000, 35597, 35597, -1000, 35597, 1593, 1589, 2720, -1000,
	1380, 1380, 749, -1000, -1000, 455, -1000, 1817, 1808, 1806,
	1805, 2028, 2019, 2016, 1380, 1380, 1804, 2012, 29037, 2008,
	925, 1772, 1756, 1753, 1853, 2007, 645, -1000, 2001, 1833,
	1831, 1829, 35597, 2320, 1935, -1000, -1000, 38, 1380, 203,
	35597, 1459, 503, 300, 1846, 17018, 35597, 25761, 25761, 25761,
	25761, -1000, 2604, 2599, -1000, 2589, 2586, 2595, 35597, 25761,
	2310, -1000, 29037, -1000, -1000, -1000, 2598, 1202, 2662, 723,
	8101, -1000, -1000, -70, -86, -1000, -1000, -1000, 28491, 1996,
	405, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2854,
	35597, 35597, 594, 2150, 1108, -1000, -1000, -1000, 4413, 2285,
	2285, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2285, 2285, 2308, -1000, -1000, 2282, 2282, 2282, 2252, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2293, 2293,
	2307, 2307, 2293, -1000, -1000, 2822, -1000, 1094, -1000, -1000,
	1269, -1000, 2822, 1553, -323, 10366, 1519, 1419, -1000, 8101,
	10366, 8101, -286, 193, -289, -1000, -1000, -1000, 1993, -1000,
	-1000, -1000, 1747, -1000, 1743, 33, 49, 1587, -266, 6403,
	325, 35597, -266, 35597, 6403, -1000, 35597, 309, -266, -1000,
	35597, 1742, -1000, -1000, -1000, 2828, 28491, 1869, 1340, 27945,
	-1000, 176, -1000, 192, 433, 1986, -1000, 641, 102, 1984,
	1983, -1000, -1000, -1000, 9793, -1000, -1000, -1000, -1000, 1937,
	8101, 2148, -1000, 787, 787, 2147, 2146, -1000, 2285, 2285,
	-1000, 2252, 2282, 2252, 787, 787, 2143, -1000, 1856, 2136,
	-1000, 2131, 2111, 8101, -1000, 2142, 3255, 947, -128, 23,
	23, -1000, -1000, -1000, -1000, 23, 23, 23, 23, -1000,
	23, 23, 23, 23, 23, 23, 23, 23, 501, -1000,
	33, 1937, 1937, -1000, -1000, 2658, -1000, 1983, 1975, -1000,
	1974, 1969, 942, 4413, 2135, 12592, 2719, 2281, 2280, 2714,
	313, 1848, -1000, -1000, -1000, 27399, 454, -1000, -1000, -1000,
	574, 159, 1740, 406, -1000, 35597, 225, 2635, 1458, 1967,
	35597, -1000, -1000, -1000, -1000, -1000, 2667, -1000, 1013, 262,
	1201, -1000, 1380, 1380, 12592, 12592, 12592, 270, 1555, -1000,
	497, 1060, 1266, 25761, 35597, -1000, 25215, 2133, -1000, 935,
	2826, -1000, 35597, -1000, 2826, 2826, 1390, -1000, 313, -1000,
	2653, 4413, -1000, 35597, -1000, 35597, -1000, 35597, 35597, 539,
	8101, 2653, 35597, 566, -1000, -1000, 893, 304, 550, 550,
	1082, -1000, 2684, -1000, -1000, -1000, 35597, -1000, -1000, -1000,
	-1000, -1000, -1000, 19202, 19202, 2747, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1965, 1964,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 35597,
	1177, -1000, 1456, 1848, 27399, 1451, 1407, 1955, 454, 1627,
	1448, -1000, 1947, -1000, 977, 35597, 35597, -1000, 1064, -1000,
	1442, 2513, 2550, 2513, -1000, -1000, -1000, -1000, 2590, -1000,
	2528, -1000, -1000, 1064, -1000, -1000, -1000, -1000, -1000, 723,
	-1000, 2731, 786, 786, 786, 2130, -1000, -1000, -1000, 1048,
	2128, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	12046, 2665, 2819, 2813, 26853, 2819, -1000, -323, 1483, -1000,
	1714, 142, 1550, 35597, -1000, -1000, -1000, 2127, 2123, -273,
	48, 2812, 2811, 2850, -1000, 2122, 1015, -266, -1000, -1000,
	941, -1000, -1000, -1000, -266, -1000, 941, -1000, -1000, 1869,
	-1000, 191, -1000, -1000, -1000, -1000, -1000, -1000, 80, -1000,
	35597, -1000, 1002, 101, -1000, 1937, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 8101, -1000, -1000, -1000, 2092, -1000, -1000, 8101,
	2116, 1946, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2858, -1000, 2810, -273,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 652, 2105,
	984, -1000, -1000, -1000, -1000, 313, 24123, 12592, 313, -184,
	-1000, 1945, 91, -1000, -1000, -1000, 1941, 1940, 1732, -1000,
	-1000, 1818, 1255, 110, -1000, -1000, -1000, -1000, -1000, -1000,
	1846, 1729, 1431, -348, -1000, 2279, -1000, 1380, 1380, 1380,
	35597, -1000, 26307, 1540, 1540, 2097, 2090, 2088, 504, 1401,
	1394, -1000, 1730, 20301, 25761, 25215, 1052, -1000, 1259, -1000,
	-1000, -1000, 2826, -1000, -1000, 2826, -1000, -1000, -1000, 35597,
	266, 2277, -1000, 2275, 2503, 307, 2274, 2268, 35597, 2086,
	-1000, 2653, 35597, 577, 2660, -1000, -1000, -1000, -1000, -1000,
	354, -1000, 35597, -1000, -1000, 1320, -1000, 19202, -1000, -1000,
	1174, -1000, 1935, 1934, -1000, 91, 1933, 4711, -1000, -1000,
	2635, 1930, -1000, 35597, 977, 977, 2858, 35597, 6403, -1000,
	-1000, 8101, 2265, -1000, 8101, -1000, -1000, -1000, -1000, -1000,
	2261, 2649, -1000, -1000, -1000, -1000, -1000, -1000, 1540, -1000,
	8101, 8101, -1000, -1000, 537, 10366, -290, 190, -1000, -1000,
	-1000, -275, 1929, -1000, -1000, 2808, 1927, 1873, 35597, -1000,
	941, 941, 935, -1000, -1000, -22, 398, -1000, 2018, -1000,
	2002, 23, -1000, 147, 8101, -275, 4413, -192, 12592, -1000,
	1173, -1000, 1380, 1380, 2084, -184, -1000, 316, -1000, -1000,
	327, -1000, -1000, 227, -1000, -1000, 1760, 486, -1000, -1000,
	-1000, 1926, 1603, 1888, 23577, 19202, 19748, 1925, -1000, -1000,
	-1000, -1000, 38300, 174, 38300, 884, 1392, -1000, 1711, -1000,
	1710, -1000, 2826, 1052, 1259, -1000, -1000, 1306, -1000, -1000,
	-1000, -1000, 266, -1000, -1000, 1608, 9793, -1000, -1000, 1923,
	19748, 669, 1430, 1427, 650, 2260, -1000, 360, 2847, -1000,
	-1000, -1000, 733, 2259, -1000, 1586, 1583, -1000, 35597, -1000,
	23577, 23577, 529, 529, 23577, 23577, 2254, 550, -1000, -1000,
	9793, -1000, -1000, -1000, -1000, 1380, 1292, -1000, -1000, -1000,
	-1000, -1000, -1000, 1729, -1000, -1000, 2786, -1000, -1000, 1937,
	35597, 1937, 24669, -1000, 2806, 2802, -1000, 1937, 921, -1000,
	-323, 35597, 35597, -277, 1708, -1000, 1921, 51, -1000, -1000,
	922, -279, 30, 42, 1425, -1000, -1000, -1000, 2023, -1000,
	498, -1000, -1000, -1000, 921, -277, -169, -1000, -1000, -1000,
	-1000, 24123, 1540, 1540, -192, -1000, 357, -1000, -1000, 426,
	1919, -1000, -1000, 221, -1000, -1000, -1000, -1000, -1000, 100,
	-1000, 1424, 1153, -1000, 2252, 8101, -1000, -1000, -1000, -1000,
	-1000, 493, 38083, -1000, 1000, -1000, -22, 493, 434, 222,
	-1000, 1707, -1000, -1000, 2858, -1000, -1000, -1000, 2764, -1000,
	-1000, -1000, -1000, -1000, -1000, 1910, 1909, -1000, -1000, -1000,
	-1000, -1000, 1668, 2250, -63, 2745, 1908, -1000, -1000, 2248,
	1152, 1151, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1145,
	1143, 23577, -1000, -1000, 2764, 19202, 1380, -1000, -1000, 1141,
	1135, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2246, -1000,
	-1000, 2800, -1000, 1898, 545, 46, 42, -1000, 2799, 50,
	2798, 2795, 1890, -1000, -1000, 575, -268, 21, 20, 11,
	-1000, -1000, -1000, 8101, -1000, 35597, -1000, -1000, -1000, -1000,
	171, -1000, 79, -1000, -1000, -1000, 1888, 1882, -1000, 23577,
	2684, 1892, 330, 2793, 38300, -1000, 1380, -1000, 330, -1000,
	286, -1000, 1381, -1000, 1636, -1000, 2786, -1000, -1000, 1942,
	8101, 2245, 1380, 1886, -165, 23577, 2490, 2437, 2394, 2341,
	1126, -1000, 19202, -1000, -1000, 23031, 35597, 1873, -1000, 2244,
	1635, 48, 43, 2792, -1000, 1873, 2790, 1873, 1873, -1000,
	1572, -1000, 18, 16, 13, -1000, -1000, -1000, -1000, 429,
	-1000, -1000, -1000, -1000, -1000, 269, -1000, -1000, 2684, -1000,
	2789, 348, -1000, 19202, -1000, -1000, -1000, 1634, -1000, -1000,
	-1000, 1766, -1000, 35597, -1000, 2544, -1000, 136, 1118, 269,
	529, 269, 529, 269, 529, 269, 529, 167, -1000, -1000,
	-1000, 1117, -1000, -1000, 2743, 18656, 35, -1000, -1000, -1000,
	1875, -1000, 1873, -1000, -1000, 575, -1000, -1000, -1000, 1871,
	-1000, -1000, -1000, 1380, 1867, 250, -1000, -1000, -1000, 22485,
	328, 367, 345, -1000, 525, -1000, -1000, -1000, 550, -1000,
	-1000, 2542, 2534, 2834, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 35597, -1000, 35597, -1000, 1115, -1000,
	-1000, -1000, 954, -1000, -1000, -1000, -1000, -1000, -313, 1630,
	-1000, 35597, -1000, 35597, 337, 1619, 9793, 2232, 9793, 2231,
	341, 2229, -1000, -1000, 2844, -1000, 2835, 730, 730, 269,
	269, 269, 269, -1000, 917, -1000, 1371, -1000, 21939, 35597,
	-1000, -1000, 1860, -1000, -1000, 1104, 2228, 2788, -1000, 3238,
	35597, 2864, 35597, 2227, 1365, 9793, -1000, -1000, -1000, 1750,
	369, -1000, 35597, 5839, -1000, 894, -1000, -1000, -1000, 492,
	335, -1000, 1100, -1000, 1086, 21393, 1617, 2794, -1000, -1000,
	-1000, -1000, -1000, 1937, 35597, 1062, -1000, 35597, 333, -1000,
	-1000, -1000, 1055, -1000, -1000, -1000, -1000, 492, 2614, -1000,
	1614, -1000, -1000, 38152, 632, -1000, -1000, 38152, 336, -1000,
	468, 2020, -1000, -1000, 1031, -1000, 35597, 657, 8101, -1000,
	336, 38300, -1000, 8101, 1018, -1000, 38300, 991, -1000, -1000,
}

var yyPgo = [...]int{
	0, 157, 2886, 241, 155, 3457, 75, 238, 226, 209,
	237, 3456, 3455, 2695, 2693, 3453, 3452, 3451, 3450, 3449,
	3448, 3448, 3447, 3446, 3445, 3442, 3441, 3440, 3439, 3438,
	3437, 3436, 3435, 3434, 3433, 3431, 3430, 3429, 3428, 3425,
	3424, 3423, 236, 3421, 3420, 3419, 3417, 3416, 3415, 3414,
	3413, 3410, 3409, 3408, 3406, 3405, 3404, 3403, 3402, 3388,
	3386, 3385, 3372, 3370, 3369, 3368, 3366, 3365, 3361, 3355,
	3354, 3353, 3351, 3349, 207, 3348, 2691, 3347, 3345, 3344,
	3332, 3331, 3330, 3329, 230, 3326, 3325, 3324, 3323, 3322,
	3318, 3317, 3314, 3312, 3310, 3309, 224, 3308, 3307, 3305,
	3304, 3303, 3302, 213, 3301, 153, 188, 3300, 3297, 3296,
	3294, 3291, 3288, 234, 219, 69, 3285, 47, 3282, 204,
	3281, 134, 3280, 130, 3279, 3278, 3277, 3276, 3275, 3273,
	3272, 3271, 3269, 3267, 3266, 3262, 3260, 3259, 3258, 3257,
	81, 3256, 248, 3255, 68, 3254, 3253, 113, 133, 176,
	243, 2505, 246, 242, 170, 158, 93, 3252, 2688, 3248,
	143, 220, 140, 26, 3247, 161, 3246, 142, 43, 31,
	239, 122, 56, 172, 111, 3245, 197, 97, 98, 3244,
	3243, 169, 232, 164, 3242, 87, 3241, 3240, 3239, 3238,
	3236, 180, 214, 3234, 3233, 127, 3232, 3230, 91, 3229,
	70, 189, 150, 183, 3228, 532, 110, 108, 109, 167,
	3227, 80, 3226, 3225, 3223, 3221, 165, 3218, 3212, 132,
	64, 3209, 3208, 3204, 67, 3203, 48, 3201, 3200, 28,
	3199, 57, 3197, 3195, 3194, 3193, 3192, 3191, 3190, 3187,
	3183, 3181, 3179, 71, 3178, 3177, 12, 17, 19, 3175,
	24, 3174, 151, 3173, 3169, 3167, 88, 79, 3165, 82,
	1, 49, 86, 3163, 211, 210, 92, 129, 3162, 405,
	3161, 3160, 3159, 144, 3158, 542, 3157, 3155, 3153, 3151,
	3150, 126, 3149, 208, 51, 3148, 115, 120, 3147, 27,
	46, 215, 201, 3146, 3144, 3143, 125, 196, 104, 30,
	0, 3142, 138, 3141, 3140, 3139, 250, 3138, 223, 206,
	145, 118, 286, 216, 3137, 3136, 66, 3135, 152, 45,
	55, 121, 8, 20, 342, 3133, 13, 174, 3132, 191,
	3131, 267, 33, 124, 3130, 3129, 25, 281, 3128, 3126,
	3123, 114, 3116, 3114, 106, 62, 3112, 3110, 3108, 3107,
	39, 3106, 35, 14, 3105, 89, 3104, 240, 3103, 222,
	141, 168, 160, 137, 212, 225, 76, 72, 3102, 1662,
	136, 90, 18, 3101, 221, 3100, 177, 117, 3099, 107,
	3096, 233, 363, 195, 3090, 166, 7, 42, 36, 3089,
	9, 3088, 139, 181, 3082, 3081, 22, 54, 3080, 37,
	3079, 3078, 3075, 3060, 5, 3055, 3052, 3049, 2, 4,
	3045, 3, 190, 3044, 3043, 3042, 3040, 44, 162, 3038,
	119, 131, 147, 3037, 85, 3035, 3034, 3033, 1673, 3032,
	244, 3030, 3029, 3028, 3027, 3025, 3023, 3022, 3021, 3020,
	96, 41, 3019, 3018, 3017, 3015, 73, 128, 3012, 3011,
	2997, 2995, 34, 163, 2993, 21, 2989, 29, 32, 38,
	2988, 116, 2987, 15, 179, 2986, 2985, 16, 2984, 2983,
	10, 11, 2982, 2980, 105, 2978, 83, 23, 149, 94,
	2974, 2973, 78, 203, 123, 2970, 2969, 235, 231, 185,
	2966, 271, 228, 247, 2965, 200, 2964, 2962, 2960, 2954,
	2953, 2952, 1045, 2951, 2950, 229, 65, 84, 100, 2948,
	2947, 2945, 77, 148, 103, 101, 61, 74, 2943, 99,
	178, 2941, 173, 2928, 2926, 95, 2924, 2923, 2922, 2920,
	2919, 171, 2918, 2917, 175, 218, 2916, 2914, 2913, 2896,
	2890, 2874, 245, 199, 2872,
}

//line mysql_sql.y:10440
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accessModeUnion() tree.AccessModeType {
	v, _ := st.union.(tree.AccessModeType)
	return v
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) accountsSetOptionUnion() *tree.AccountsSetOption {
	v, _ := st.union.(*tree.AccountsSetOption)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) alterAccountAuthOptionUnion() tree.AlterAccountAuthOption {
	v, _ := st.union.(tree.AlterAccountAuthOption)
	return v
}

func (st *yySymType) alterColPositionUnion() *tree.ColumnPosition {
	v, _ := st.union.(*tree.ColumnPosition)
	return v
}

func (st *yySymType) alterColumnOrderUnion() *tree.AlterColumnOrder {
	v, _ := st.union.(*tree.AlterColumnOrder)
	return v
}

func (st *yySymType) alterColumnOrderByUnion() []*tree.AlterColumnOrder {
	v, _ := st.union.([]*tree.AlterColumnOrder)
	return v
}

func (st *yySymType) alterTableUnion() tree.AlterTable {
	v, _ := st.union.(tree.AlterTable)
	return v
}

func (st *yySymType) alterTableOptionUnion() tree.AlterTableOption {
	v, _ := st.union.(tree.AlterTableOption)
	return v
}

func (st *yySymType) alterTableOptionsUnion() tree.AlterTableOptions {
	v, _ := st.union.(tree.AlterTableOptions)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) clusterByOptionUnion() *tree.ClusterByOption {
	v, _ := st.union.(*tree.ClusterByOption)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) connectorOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cstrUnion() *tree.CStr {
	v, _ := st.union.(*tree.CStr)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) elseIfClauseUnion() *tree.ElseIfStmt {
	v, _ := st.union.(*tree.ElseIfStmt)
	return v
}

func (st *yySymType) elseIfClauseListUnion() []*tree.ElseIfStmt {
	v, _ := st.union.([]*tree.ElseIfStmt)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) frameBoundUnion() *tree.FrameBound {
	v, _ := st.union.(*tree.FrameBound)
	return v
}

func (st *yySymType) frameClauseUnion() *tree.FrameClause {
	v, _ := st.union.(*tree.FrameClause)
	return v
}

func (st *yySymType) frameTypeUnion() tree.FrameType {
	v, _ := st.union.(tree.FrameType)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcArgUnion() tree.FunctionArg {
	v, _ := st.union.(tree.FunctionArg)
	return v
}

func (st *yySymType) funcArgDeclUnion() *tree.FunctionArgDecl {
	v, _ := st.union.(*tree.FunctionArgDecl)
	return v
}

func (st *yySymType) funcArgsUnion() tree.FunctionArgs {
	v, _ := st.union.(tree.FunctionArgs)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcReturnUnion() *tree.ReturnType {
	v, _ := st.union.(*tree.ReturnType)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) functionNameUnion() *tree.FunctionName {
	v, _ := st.union.(*tree.FunctionName)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) incrementByOptionUnion() *tree.IncrementByOption {
	v, _ := st.union.(*tree.IncrementByOption)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) indexVisibilityUnion() tree.VisibleType {
	v, _ := st.union.(tree.VisibleType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) isolationLevelUnion() tree.IsolationLevelType {
	v, _ := st.union.(tree.IsolationLevelType)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) killOptionUnion() tree.KillOption {
	v, _ := st.union.(tree.KillOption)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) maxValueOptionUnion() *tree.MaxValueOption {
	v, _ := st.union.(*tree.MaxValueOption)
	return v
}

func (st *yySymType) minValueOptionUnion() *tree.MinValueOption {
	v, _ := st.union.(*tree.MinValueOption)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) procArgUnion() tree.ProcedureArg {
	v, _ := st.union.(tree.ProcedureArg)
	return v
}

func (st *yySymType) procArgDeclUnion() *tree.ProcedureArgDecl {
	v, _ := st.union.(*tree.ProcedureArgDecl)
	return v
}

func (st *yySymType) procArgTypeUnion() tree.InOutArgType {
	v, _ := st.union.(tree.InOutArgType)
	return v
}

func (st *yySymType) procArgsUnion() tree.ProcedureArgs {
	v, _ := st.union.(tree.ProcedureArgs)
	return v
}

func (st *yySymType) procNameUnion() *tree.ProcedureName {
	v, _ := st.union.(*tree.ProcedureName)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectLockInfoUnion() *tree.SelectLockInfo {
	v, _ := st.union.(*tree.SelectLockInfo)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) stageCommentUnion() tree.StageComment {
	v, _ := st.union.(tree.StageComment)
	return v
}

func (st *yySymType) stageCredentialsUnion() tree.StageCredentials {
	v, _ := st.union.(tree.StageCredentials)
	return v
}

func (st *yySymType) stageStatusUnion() tree.StageStatus {
	v, _ := st.union.(tree.StageStatus)
	return v
}

func (st *yySymType) stageUrlUnion() tree.StageUrl {
	v, _ := st.union.(tree.StageUrl)
	return v
}

func (st *yySymType) startWithOptionUnion() *tree.StartWithOption {
	v, _ := st.union.(*tree.StartWithOption)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementOptionUnion() tree.StatementOption {
	v, _ := st.union.(tree.StatementOption)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) streamOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) subscriptionOptionUnion() *tree.SubscriptionOption {
	v, _ := st.union.(*tree.SubscriptionOption)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableLockUnion() tree.TableLock {
	v, _ := st.union.(tree.TableLock)
	return v
}

func (st *yySymType) tableLockTypeUnion() tree.TableLockType {
	v, _ := st.union.(tree.TableLockType)
	return v
}

func (st *yySymType) tableLocksUnion() []tree.TableLock {
	v, _ := st.union.([]tree.TableLock)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) transactionCharacteristicUnion() *tree.TransactionCharacteristic {
	v, _ := st.union.(*tree.TransactionCharacteristic)
	return v
}

func (st *yySymType) transactionCharacteristicListUnion() []*tree.TransactionCharacteristic {
	v, _ := st.union.([]*tree.TransactionCharacteristic)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClause2Union() *tree.WhenStmt {
	v, _ := st.union.(*tree.WhenStmt)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whenClauseList2Union() []*tree.WhenStmt {
	v, _ := st.union.([]*tree.WhenStmt)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) windowSpecUnion() *tree.WindowSpec {
	v, _ := st.union.(*tree.WindowSpec)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 530, 540, 540, 5, 5, 2, 6, 6, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 111, 111, 110, 528, 528, 528, 529,
	529, 107, 128, 127, 130, 130, 129, 129, 126, 126,
	122, 125, 125, 124, 124, 123, 118, 120, 120, 119,
	121, 121, 108, 96, 109, 473, 473, 472, 472, 471,
	471, 425, 425, 470, 470, 470, 469, 469, 469, 468,
	468, 467, 467, 466, 466, 464, 464, 465, 463, 462,
	462, 462, 460, 460, 460, 456, 456, 458, 457, 457,
	459, 451, 451, 454, 454, 452, 452, 452, 452, 455,
	450, 450, 450, 449, 449, 95, 95, 95, 371, 371,
	94, 94, 385, 385, 385, 385, 385, 383, 383, 383,
	383, 383, 383, 382, 382, 381, 381, 386, 386, 384,
	384, 384, 384, 384, 384, 384, 384, 384, 384, 384,
	384, 384, 384, 384, 384, 384, 384, 384, 384, 384,
	384, 384, 384, 384, 384, 384, 384, 384, 384, 384,
	384, 384, 384, 384, 384, 384, 384, 384, 384, 384,
	384, 384, 384, 384, 384, 384, 384, 384, 384, 85,
	85, 85, 85, 85, 90, 90, 90, 535, 535, 534,
	534, 536, 536, 536, 536, 537, 537, 88, 88, 88,
	89, 380, 380, 380, 86, 87, 87, 370, 370, 375,
	375, 374, 374, 374, 374, 374, 374, 374, 374, 374,
	374, 374, 374, 374, 379, 379, 379, 377, 377, 376,
	376, 378, 378, 79, 79, 79, 82, 81, 369, 369,
	369, 369, 369, 369, 369, 369, 369, 80, 80, 80,
	80, 80, 80, 75, 75, 75, 75, 75, 74, 74,
	76, 76, 367, 367, 366, 91, 91, 92, 532, 532,
	531, 533, 533, 533, 533, 93, 99, 99, 99, 99,
	99, 99, 99, 98, 98, 101, 101, 100, 102, 84,
	84, 84, 84, 84, 84, 83, 83, 83, 83, 83,
	83, 83, 83, 83, 498, 498, 498, 500, 500, 304,
	305, 541, 307, 303, 303, 303, 494, 494, 495, 496,
	497, 497, 497, 97, 11, 11, 11, 11, 11, 11,
	11, 73, 78, 251, 251, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 239, 239, 239,
	234, 234, 234, 234, 235, 235, 236, 236, 237, 237,
	237, 237, 238, 238, 297, 297, 256, 256, 256, 258,
	258, 257, 255, 253, 253, 253, 253, 253, 253, 254,
	254, 254, 259, 259, 71, 77, 77, 77, 511, 511,
	72, 522, 522, 428, 428, 318, 318, 317, 317, 317,
	317, 317, 317, 317, 317, 317, 317, 317, 317, 317,
	317, 317, 317, 433, 434, 314, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 49, 52, 48, 48, 48,
	356, 356, 47, 542, 542, 292, 292, 60, 59, 51,
	61, 62, 63, 64, 65, 66, 46, 58, 58, 58,
	58, 58, 58, 58, 58, 69, 69, 445, 445, 544,
	544, 544, 67, 68, 427, 427, 427, 57, 56, 55,
	54, 53, 53, 45, 45, 44, 44, 50, 134, 135,
	311, 311, 311, 313, 313, 309, 543, 543, 399, 399,
	312, 312, 43, 43, 43, 43, 70, 310, 310, 291,
	308, 308, 308, 12, 12, 10, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 24,
	25, 27, 364, 364, 361, 26, 18, 17, 17, 21,
	20, 16, 16, 19, 22, 23, 23, 9, 9, 9,
	9, 13, 13, 14, 155, 155, 206, 206, 506, 506,
	502, 502, 503, 503, 503, 504, 504, 505, 505, 103,
	439, 439, 439, 439, 439, 439, 8, 177, 177, 438,
	438, 438, 438, 438, 438, 368, 368, 483, 483, 483,
	484, 176, 176, 171, 171, 440, 440, 333, 485, 485,
	448, 448, 447, 447, 446, 446, 174, 174, 175, 175,
	158, 158, 114, 114, 453, 453, 453, 453, 461, 461,
	424, 424, 243, 243, 284, 284, 285, 285, 148, 148,
	149, 149, 149, 149, 149, 149, 491, 491, 493, 493,
	492, 173, 173, 169, 169, 170, 170, 170, 168, 168,
	167, 166, 166, 165, 163, 163, 163, 164, 164, 164,
	181, 181, 151, 151, 151, 150, 150, 150, 150, 150,
	269, 269, 269, 269, 269, 269, 269, 269, 269, 269,
	269, 269, 152, 152, 499, 499, 499, 429, 429, 429,
	436, 436, 266, 266, 267, 267, 265, 265, 153, 153,
	154, 154, 154, 154, 264, 264, 263, 156, 156, 162,
	161, 161, 157, 157, 157, 157, 274, 274, 273, 273,
	273, 273, 106, 112, 112, 113, 180, 180, 272, 271,
	271, 271, 179, 179, 178, 178, 172, 172, 160, 160,
	160, 160, 270, 159, 268, 527, 527, 526, 526, 525,
	523, 523, 523, 524, 524, 524, 524, 475, 475, 475,
	475, 475, 298, 298, 298, 302, 302, 301, 301, 301,
	301, 301, 306, 7, 7, 7, 7, 7, 7, 31,
	31, 31, 31, 31, 31, 31, 31, 31, 31, 37,
	190, 191, 38, 192, 192, 193, 193, 194, 194, 195,
	196, 197, 197, 197, 197, 36, 182, 182, 183, 183,
	184, 184, 185, 186, 186, 186, 189, 187, 188, 188,
	539, 539, 538, 35, 35, 28, 141, 141, 142, 142,
	142, 142, 144, 144, 240, 240, 240, 143, 143, 145,
	145, 145, 507, 510, 508, 508, 512, 512, 512, 513,
	513, 513, 513, 514, 514, 29, 131, 136, 517, 517,
	517, 516, 516, 518, 518, 519, 519, 288, 288, 289,
	289, 139, 140, 140, 138, 133, 147, 147, 147, 147,
	147, 132, 137, 509, 515, 515, 515, 365, 365, 362,
	363, 363, 360, 359, 359, 359, 521, 521, 520, 520,
	520, 299, 299, 30, 355, 355, 357, 358, 358, 358,
	349, 349, 349, 349, 34, 353, 353, 354, 354, 354,
	354, 354, 350, 350, 352, 352, 348, 348, 348, 348,
	348, 33, 146, 146, 347, 347, 344, 344, 342, 342,
	343, 343, 341, 341, 341, 345, 345, 41, 40, 40,
	40, 346, 346, 32, 32, 32, 116, 115, 115, 115,
	115, 287, 287, 286, 286, 117, 39, 218, 218, 413,
	413, 413, 413, 413, 431, 431, 431, 414, 414, 414,
	415, 415, 415, 416, 416, 416, 416, 416, 430, 430,
	432, 432, 432, 387, 387, 388, 388, 388, 391, 391,
	405, 405, 406, 406, 404, 404, 411, 411, 410, 410,
	409, 409, 408, 408, 407, 407, 407, 407, 402, 402,
	401, 401, 389, 389, 389, 389, 389, 390, 390, 390,
	400, 400, 403, 403, 228, 228, 262, 262, 226, 226,
	227, 227, 261, 261, 224, 224, 225, 225, 225, 260,
	260, 260, 260, 260, 260, 260, 260, 260, 260, 260,
	260, 260, 260, 260, 260, 260, 260, 260, 260, 260,
	260, 260, 260, 260, 260, 260, 260, 260, 260, 260,
	260, 260, 260, 260, 481, 481, 482, 230, 230, 241,
	241, 241, 241, 241, 241, 229, 229, 231, 231, 207,
	207, 205, 205, 198, 198, 199, 199, 200, 200, 200,
	204, 204, 203, 203, 203, 203, 201, 201, 202, 202,
	202, 202, 202, 202, 373, 373, 478, 478, 479, 479,
	474, 474, 474, 477, 477, 477, 477, 477, 480, 480,
	480, 476, 476, 208, 282, 282, 282, 300, 300, 300,
	300, 281, 281, 281, 223, 223, 222, 222, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	372, 372, 315, 315, 316, 316, 250, 249, 249, 249,
	249, 249, 247, 248, 246, 246, 246, 246, 246, 245,
	245, 244, 244, 244, 351, 351, 242, 242, 233, 233,
	233, 232, 232, 232, 412, 322, 322, 322, 322, 322,
	322, 322, 322, 322, 322, 322, 322, 322, 324, 324,
	324, 324, 324, 324, 324, 324, 324, 324, 324, 324,
	324, 324, 324, 324, 324, 324, 324, 324, 324, 324,
	280, 280, 280, 325, 325, 330, 330, 490, 490, 489,
	209, 209, 209, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 219, 219, 219, 396, 396, 396, 396, 397,
	397, 397, 397, 398, 398, 398, 394, 394, 395, 395,
	334, 335, 335, 437, 437, 392, 392, 393, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 444, 444, 444,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 501, 501, 501, 486,
	486, 486, 487, 487, 487, 487, 487, 487, 487, 487,
	487, 487, 487, 487, 488, 488, 488, 488, 488, 488,
	488, 488, 488, 488, 488, 488, 488, 488, 488, 488,
	488, 278, 278, 278, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 336,
	336, 337, 337, 441, 441, 441, 441, 441, 441, 442,
	442, 443, 443, 443, 443, 435, 435, 435, 435, 435,
	435, 435, 435, 435, 435, 435, 435, 435, 435, 435,
	435, 435, 435, 435, 435, 435, 435, 435, 435, 435,
	435, 435, 435, 435, 323, 275, 275, 275, 338, 331,
	331, 332, 332, 326, 326, 326, 326, 326, 326, 326,
	328, 328, 328, 328, 328, 328, 328, 328, 328, 328,
	328, 321, 321, 321, 321, 321, 321, 321, 321, 321,
	321, 321, 327, 327, 329, 329, 340, 340, 340, 339,
	339, 339, 339, 339, 339, 339, 221, 221, 221, 221,
	320, 320, 320, 319, 319, 319, 319, 319, 319, 319,
	319, 319, 319, 319, 319, 211, 211, 211, 211, 215,
	215, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 216, 216, 216, 216, 216,
	214, 214, 214, 214, 214, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 104, 105, 105, 213, 283, 283, 417,
	417, 420, 420, 418, 418, 419, 421, 421, 421, 422,
	422, 422, 423, 423, 423, 426, 426, 290, 290, 290,
	296, 296, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293,
}

var yyR2 = [...]int{
	0, 1, 1, 1, 1, 3, 3, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 6, 4, 0, 1, 1, 0,
	1, 5, 2, 2, 6, 9, 6, 9, 4, 7,
	8, 0, 1, 1, 2, 4, 6, 1, 2, 4,
	0, 2, 10, 10, 2, 0, 2, 1, 3, 3,
	3, 0, 2, 1, 3, 5, 0, 2, 3, 1,
	3, 1, 1, 1, 3, 1, 1, 1, 1, 0,
	3, 3, 0, 3, 3, 0, 1, 3, 0, 1,
	3, 0, 2, 1, 2, 3, 4, 3, 3, 1,
	0, 1, 1, 0, 1, 8, 5, 7, 0, 3,
	8, 5, 1, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 4, 1, 3, 1,
	2, 2, 2, 2, 2, 2, 1, 2, 2, 2,
	2, 1, 1, 2, 2, 1, 1, 1, 1, 1,
	2, 2, 2, 1, 2, 1, 2, 2, 1, 2,
	1, 1, 2, 2, 1, 1, 1, 3, 2, 2,
	2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 4, 4, 1, 3, 3,
	1, 2, 2, 2, 1, 2, 2, 3, 4, 4,
	6, 1, 1, 1, 2, 4, 6, 1, 4, 1,
	3, 3, 4, 4, 4, 4, 3, 3, 2, 4,
	4, 2, 2, 2, 1, 1, 1, 1, 1, 1,
	3, 1, 3, 1, 1, 1, 2, 2, 0, 1,
	4, 2, 4, 1, 5, 3, 2, 1, 2, 2,
	4, 4, 5, 2, 1, 3, 4, 4, 1, 2,
	9, 7, 1, 3, 3, 1, 1, 3, 1, 3,
	2, 1, 2, 1, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 4, 4, 2, 4, 3, 3, 1,
	1, 1, 1, 1, 1, 2, 3, 4, 7, 2,
	3, 3, 4, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 2, 1,
	1, 1, 1, 6, 1, 1, 1, 1, 1, 1,
	1, 7, 4, 1, 3, 2, 4, 5, 5, 6,
	5, 5, 3, 2, 2, 1, 3, 4, 3, 7,
	5, 8, 2, 2, 1, 3, 2, 0, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 0, 1, 2, 1,
	3, 2, 1, 2, 2, 1, 2, 3, 2, 3,
	3, 3, 1, 1, 7, 7, 8, 8, 0, 4,
	7, 0, 3, 0, 2, 0, 1, 1, 1, 1,
	4, 2, 2, 3, 3, 4, 5, 3, 4, 4,
	2, 2, 2, 3, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 4, 3, 2, 5, 5,
	0, 2, 7, 0, 1, 0, 1, 5, 5, 3,
	3, 2, 4, 4, 4, 4, 4, 1, 1, 1,
	3, 3, 1, 1, 1, 6, 8, 0, 1, 1,
	1, 1, 5, 5, 0, 1, 1, 3, 3, 3,
	4, 6, 7, 4, 4, 7, 8, 3, 3, 3,
	0, 2, 2, 0, 2, 2, 1, 1, 1, 1,
	0, 1, 4, 4, 5, 4, 3, 1, 3, 1,
	1, 3, 5, 2, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 4,
	4, 4, 1, 3, 1, 4, 6, 6, 4, 4,
	4, 4, 4, 3, 6, 3, 5, 1, 1, 2,
	2, 11, 8, 9, 1, 3, 2, 4, 0, 2,
	0, 1, 1, 1, 1, 0, 1, 0, 1, 4,
	2, 1, 5, 4, 4, 2, 5, 1, 3, 2,
	1, 5, 4, 4, 2, 0, 5, 0, 1, 3,
	3, 1, 3, 1, 3, 1, 3, 4, 0, 1,
	0, 1, 1, 3, 1, 1, 0, 4, 1, 3,
	2, 1, 0, 8, 0, 4, 7, 4, 0, 2,
	0, 2, 0, 2, 0, 4, 1, 3, 1, 1,
	5, 3, 4, 6, 4, 5, 2, 3, 1, 3,
	6, 0, 3, 0, 1, 2, 4, 4, 0, 1,
	3, 1, 3, 3, 0, 1, 1, 0, 2, 2,
	0, 2, 3, 3, 3, 1, 3, 3, 3, 3,
	1, 2, 2, 1, 2, 2, 1, 2, 2, 1,
	2, 2, 7, 7, 1, 1, 1, 0, 1, 1,
	1, 1, 0, 2, 0, 3, 0, 2, 1, 3,
	1, 2, 3, 5, 0, 1, 2, 1, 3, 1,
	1, 1, 4, 4, 4, 3, 2, 2, 2, 3,
	2, 3, 4, 1, 3, 4, 0, 2, 1, 1,
	2, 2, 0, 1, 2, 4, 1, 3, 1, 3,
	2, 3, 1, 4, 3, 0, 1, 1, 2, 5,
	2, 2, 2, 0, 2, 3, 3, 0, 1, 3,
	1, 3, 0, 1, 2, 1, 1, 0, 1, 2,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 7,
	1, 1, 7, 1, 3, 0, 1, 1, 3, 1,
	3, 0, 1, 1, 1, 14, 1, 3, 0, 1,
	1, 3, 1, 1, 2, 4, 1, 1, 1, 1,
	0, 1, 2, 9, 8, 7, 1, 2, 2, 3,
	3, 3, 0, 4, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 4, 1, 1, 3, 4, 3, 0,
	1, 1, 1, 0, 2, 7, 8, 8, 0, 3,
	3, 0, 2, 0, 3, 0, 5, 1, 3, 0,
	3, 3, 0, 2, 9, 6, 0, 2, 2, 3,
	3, 4, 4, 1, 0, 2, 2, 1, 3, 2,
	1, 3, 2, 1, 3, 2, 0, 1, 3, 4,
	3, 1, 1, 4, 1, 3, 1, 1, 1, 1,
	0, 1, 1, 1, 11, 0, 2, 3, 2, 3,
	1, 1, 1, 3, 3, 4, 0, 2, 2, 2,
	2, 6, 0, 4, 1, 1, 0, 3, 0, 1,
	1, 2, 4, 4, 4, 0, 1, 7, 9, 10,
	8, 0, 2, 11, 9, 11, 2, 2, 8, 4,
	5, 1, 3, 0, 3, 5, 10, 0, 2, 0,
	3, 2, 4, 3, 0, 2, 1, 0, 2, 3,
	0, 2, 3, 0, 3, 2, 4, 3, 0, 1,
	0, 1, 1, 0, 6, 0, 3, 5, 0, 4,
	0, 3, 1, 3, 4, 5, 0, 3, 1, 3,
	2, 3, 1, 2, 0, 4, 6, 5, 0, 2,
	0, 2, 4, 5, 4, 5, 1, 5, 6, 5,
	0, 3, 0, 1, 1, 3, 3, 3, 0, 4,
	1, 3, 3, 3, 0, 1, 1, 3, 2, 3,
	3, 3, 4, 4, 3, 3, 3, 3, 4, 4,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 1, 5, 4, 1, 3, 3, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 1, 3, 0, 1, 1, 3, 1, 1, 1,
	1, 1, 7, 9, 7, 9, 2, 1, 7, 9,
	7, 9, 8, 5, 0, 1, 0, 1, 1, 1,
	1, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 1, 3, 1, 3, 5, 1, 1, 1,
	1, 1, 3, 5, 0, 1, 1, 2, 1, 2,
	2, 1, 1, 2, 2, 2, 3, 3, 2, 2,
	1, 5, 6, 4, 1, 1, 1, 5, 4, 1,
	1, 2, 0, 1, 1, 2, 5, 0, 1, 1,
	2, 2, 3, 3, 1, 1, 2, 2, 2, 0,
	1, 2, 2, 2, 0, 3, 0, 3, 1, 1,
	1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 1, 1, 1,
	1, 3, 5, 2, 2, 2, 2, 1, 1, 2,
	5, 6, 6, 6, 6, 1, 1, 1, 1, 1,
	4, 4, 4, 0, 2, 0, 1, 1, 2, 4,
	1, 2, 2, 1, 2, 2, 1, 2, 2, 2,
	2, 2, 0, 1, 1, 1, 2, 2, 2, 2,
	2, 2, 2, 1, 1, 1, 2, 5, 0, 1,
	3, 0, 1, 0, 2, 0, 1, 6, 8, 6,
	6, 5, 5, 5, 6, 6, 6, 6, 5, 6,
	6, 6, 6, 6, 6, 6, 6, 1, 1, 1,
	4, 4, 6, 8, 6, 4, 5, 4, 4, 4,
	3, 4, 6, 6, 7, 4, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 8, 4, 2, 3, 2, 4, 2,
	2, 4, 6, 2, 2, 4, 6, 4, 2, 0,
	1, 2, 3, 1, 1, 1, 1, 1, 1, 0,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 0, 1, 1, 3, 0,
	1, 1, 3, 3, 3, 3, 3, 2, 1, 1,
	3, 4, 3, 4, 3, 4, 3, 4, 3, 4,
	1, 3, 4, 4, 5, 4, 5, 3, 4, 5,
	6, 1, 0, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 1, 1, 1, 2, 3, 1, 1, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 2, 2, 2,
	1, 2, 2, 2, 2, 2, 2, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	4, 4, 1, 2, 3, 5, 1, 1, 3, 0,
	1, 0, 3, 0, 3, 3, 0, 3, 5, 0,
	3, 5, 0, 1, 1, 0, 1, 1, 2, 2,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1,
}

var yyChk = [...]int{
	-1000, -530, -540, -2, -5, 592, -1, -4, -105, -79,
	-7, -107, -108, -8, -103, -9, -10, -12, -83, -98,
	-100, -102, -101, -42, -11, -97, -74, -75, -85, -91,
	-94, -95, -96, -109, -104, -106, -148, -110, -111, 585,
	-80, -81, -82, -31, -30, -29, -28, -131, -136, 591,
	438, 13, 487, -13, -14, -491, -15, 256, -303, -304,
	-305, -307, -541, -43, -44, -45, -53, -54, -55, -56,
	-57, -67, -68, -69, -46, -47, -48, -51, -49, -60,
	-59, -61, -62, -63, -64, -65, -66, -50, -134, -135,
	-70, -52, -72, -71, -77, -73, -78, -133, -138, 231,
	-76, 75, -86, -87, -88, -89, -90, -92, -93, 363,
	369, 426, 584, 60, -149, -151, 596, 597, 157, 158,
	160, 161, -32, -33, -34, -35, -36, -37, -39, -38,
	-40, -41, 227, 15, 524, -16, -19, -17, -20, -18,
	-26, -27, -25, -22, -24, -132, -23, -137, 251, 250,
	37, 317, 318, 319, 367, 249, 228, 14, 30, 41,
	343, -150, 81, 229, -152, 12, 600, -6, -3, -2,
	-118, -122, -126, -129, -130, -127, -128, -4, -105, 115,
	241, 586, -300, 359, 587, 589, 588, 84, 92, -293,
	-295, 363, 369, 584, 597, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 540, 541, 542, 543,
	544, 545, 546, 547, 548, 549, 550, 551, 553, 554,
	555, 556, 557, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 490, 571, 572, 573, 574, 518, 570, 341,
	342, 521, 268, 292, 394, 298, 305, 157, 176, 170,
	198, 190, 165, 272, 310, 273, 91, 160, 473, 105,
	450, 423, 163, 287, 289, 291, 519, 294, 293, 295,
	297, 274, 344, 186, 181, 286, 270, 179, 275, 39,
	276, 203, 277, 278, 526, 446, 340, 452, 302, 421,
	180, 447, 290, 449, 207, 211, 464, 465, 174, 175,
	454, 467, 202, 205, 206, 248, 42, 523, 260, 468,
	209, 201, 197, 476, 306, 304, 200, 173, 196, 271,
	64, 213, 212, 214, 417, 418, 419, 420, 279, 280,
	357, 463, 193, 182, 345, 166, 22, 471, 255, 451,
	370, 281, 299, 307, 208, 210, 262, 267, 525, 425,
	266, 303, 469, 178, 259, 288, 254, 472, 167, 372,
	282, 161, 296, 466, 475, 63, 385, 172, 164, 245,
	158, 264, 269, 283, 284, 285, 516, 309, 308, 300,
	194, 261, 199, 184, 171, 195, 159, 263, 474, 386,
	582, 343, 404, 192, 189, 265, 238, 470, 453, 162,
	408, 387, 187, 311, 578, 579, 580, 358, 339, 312,
	313, 185, 252, 444, 445, 316, 414, 332, 388, 424,
	395, 389, 220, 320, 456, 458, 204, 581, 321, 322,
	323, 448, 324, 325, 326, 327, 362, 55, 57, 93,
	95, 598, -378, -376, -300, 584, 369, 363, 343, 597,
	-192, -300, 599, -158, 38, -205, -300, -158, -76, -14,
	-13, -150, -151, -205, 235, -308, 23, 421, -84, 422,
	231, 81, -300, -9, -96, -8, -103, -74, -148, 426,
	-306, -300, 317, 317, -306, 235, -300, 266, 402, -428,
	241, -382, -355, 267, -381, -357, -384, -358, 31, 227,
	229, 228, 263, 15, 367, 237, 13, 12, 368, 249,
	24, 25, 27, 14, 369, 371, 28, 372, 375, 376,
	377, 41, 380, 381, 256, 84, 92, 87, 274, -191,
	-300, -332, -326, 112, 257, -328, -321, -322, -324, -470,
	-464, -319, 81, 139, 140, 147, 113, -323, -412, 35,
	115, 533, 570, 488, -276, -277, -278, -279, -280, -300,
	-465, -463, 87, 96, 99, 102, 103, 101, 100, 151,
	183, 98, 88, 152, -151, 84, -486, 542, -294, 563,
	571, 572, 573, 574, 562, 60, -435, -443, 234, -441,
	150, 188, 252, 184, 13, 145, 414, 185, 539, 559,
	490, 543, 566, 535, 536, 537, 530, 531, 532, 534,
	544, 546, 558, -444, 554, 564, 565, 552, 567, 568,
	569, 86, 85, 557, 556, 545, 540, 541, 547, 529,
	538, 548, 549, 555, 560, 561, 351, 105, 352, 353,
	480, 344, 354, 241, 421, 69, 355, 356, 357, 358,
	359, 487, 360, 70, 361, 350, 256, 404, 362, 187,
	204, 492, 491, 493, 484, 481, 479, 482, 483, 485,
	486, 550, 551, 553, -112, -113, 576, -167, -168, -269,
	11, 6, 7, 8, 9, -528, 423, 525, 87, 162,
	159, -369, 162, 111, 167, 166, -369, 320, 262, -346,
	-141, 238, 341, 404, 324, 93, 266, -349, -347, 519,
	-430, 314, 310, 236, 108, -142, 246, 245, 106, 480,
	234, 378, 305, 55, 57, -502, -503, 224, 225, 226,
	-493, 513, -492, -300, 353, 95, 26, 235, 364, 262,
	458, 456, 457, 459, 460, 461, 462, -58, -445, -427,
	453, 452, -312, 445, 451, 443, 455, 446, 342, 326,
	325, 227, 593, 514, -290, 388, 424, 477, 478, 365,
	425, 464, 466, 447, 105, 191, 188, 238, 235, 341,
	480, 404, 93, 324, -502, 159, 464, 466, 266, 402,
	40, -375, 414, -374, -376, 465, 476, 85, 86, 463,
	-290, 105, 444, 444, -168, -269, -167, -149, -151, -106,
	-491, 236, 341, 404, 266, 237, 235, 517, 238, 480,
	234, 317, 364, 262, 324, 93, -429, -499, 31, -436,
	221, 222, 223, 32, 33, -1, 119, 600, -326, -326,
	-6, 603, -6, -326, -300, -300, 154, -211, -215, -212,
	-214, -213, -217, -216, 188, 189, 150, 192, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 205, 206, 203,
	30, 204, 252, 184, 185, 186, 187, 207, 170, 190,
	522, 215, 171, 216, 172, 217, 173, 218, 174, 175,
	219, 176, 179, 180, 181, 182, 178, 153, 81, 153,
	87, -174, 258, -205, 153, -174, -168, -167, -168, -205,
	-281, -300, 423, 122, -84, -84, 422, -494, -495, -496,
	-498, 231, 422, 421, 153, 274, 16, -306, -306, 79,
	-205, -357, 266, -382, -355, 35, 78, 154, 239, 154,
	78, 81, 365, 341, 404, 366, 480, 235, 378, 238,
	266, 379, 341, 404, 235, 238, 480, 266, 341, 235,
	238, 404, 266, 379, 443, 444, 238, 26, 370, 373,
	374, 444, -449, 476, 154, 111, 108, 109, 110, -326,
	129, -339, 122, 123, 124, 125, 126, 127, 128, 136,
	135, 146, 139, 140, 141, 142, 143, 144, 145, 137,
	138, 132, 112, 130, 134, 131, 114, -151, -326, -332,
	60, -324, -324, -324, -324, -412, -330, -326, 81, 81,
	81, 153, 100, 87, -326, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, -442, 81, 81,
	-336, -337, 81, 81, -319, -281, 81, 87, 87, 81,
	81, 81, 87, -337, -337, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, -168, 154, 81, -114,
	38, -170, 21, -152, -151, 20, 31, 32, 31, 32,
	31, 32, 31, 32, 96, 598, 220, 469, 524, 165,
	166, 167, -190, -300, -192, 364, 517, 516, 238, -142,
	108, -344, 241, -344, -344, -344, -344, -344, 237, -344,
	-205, 235, 235, 235, -344, 487, 122, 122, 58, -504,
	169, 154, -493, -173, 81, -311, 130, 134, -311, 23,
	264, 264, 264, -311, 304, -542, -543, 16, 132, -309,
	-543, -309, -309, -311, -544, 237, 454, 42, 265, 264,
	-169, -170, -169, 448, 444, -399, 449, 450, -313, -543,
	-312, -311, -311, -312, -311, -311, -311, 235, 238, 480,
	324, 594, -542, -542, 30, 30, -428, -205, -428, 514,
	-291, -300, -428, -428, -428, -505, 240, -535, -534, 467,
	-537, 469, 159, -376, 159, -376, -357, 266, 266, 154,
	122, 23, -377, 122, 133, -376, -376, -377, -377, -229,
	40, -299, 150, -300, 87, -229, 40, -532, -531, -205,
	-169, -152, -151, 82, 82, 82, -428, -428, -428, -428,
	-428, -430, -428, -428, -428, -428, -306, -182, -300, -192,
	241, -428, -428, -153, -154, 141, -326, -300, -153, -3,
	-120, -119, 116, 117, 119, 587, 359, 586, 590, 584,
	-376, 40, -423, 386, 385, -417, -419, 81, -418, 81,
	-418, -418, -418, -418, -418, 81, 81, -420, 81, -420,
	-420, -417, -421, 81, -421, -422, 81, -422, -421, -300,
	-331, -332, -300, 38, -438, 60, -148, 81, 30, 81,
	-300, -439, 60, -148, 81, 30, -169, -114, -170, 153,
	96, 87, -84, 82, 154, -497, 102, 103, -500, 202,
	194, -300, -99, 87, -7, -8, -9, -10, -42, -74,
	-148, -466, -464, 81, 31, 413, 78, 16, -383, 235,
	480, 364, 262, 238, 341, -381, -364, -361, -359, -299,
	-357, -360, -359, -386, -281, 444, -115, 428, 427, 316,
	-326, -326, -326, -326, -326, 101, 112, 339, 102, 103,
	-321, -340, 31, 312, 313, -322, -322, -322, -322, -322,
	-322, -322, -322, -322, -322, -322, -322, -329, -338, -412,
	81, 132, 130, 134, 131, 114, -324, -324, -322, -322,
	82, 154, -490, -489, 116, -326, -326, -326, -300, -487,
	-488, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 355, 350, 356, 354, 344, 362, 357, 358,
	187, 511, 512, 505, 506, 507, 508, 509, 510, -331,
	-331, -326, -487, -331, -275, 32, 31, -332, -332, -332,
	82, -326, -501, 337, 336, 338, -171, -300, -331, 82,
	82, 82, 96, -332, -332, -331, -322, -331, -488, -275,
	-275, -275, 141, -332, -332, -275, -275, -275, -275, 141,
	-275, -275, -275, -275, -275, -275, -275, -275, 82, 82,
	82, -169, -113, -447, -446, -326, 40, 577, -114, -326,
	-166, -165, -326, -529, 87, 87, 601, 470, 471, 163,
	166, 165, 34, 81, -182, -344, 517, -344, 487, -205,
	112, -507, -300, -365, -362, -359, -300, -300, -355, -300,
	-300, 524, -344, -344, -344, -205, -240, 52, 53, 54,
	-359, -143, 55, 56, -505, -492, 34, -172, -300, -265,
	17, -324, -324, -359, 266, -542, -311, -311, -292, -291,
	-313, -308, -313, -313, -265, -543, -311, -311, -313, -309,
	-265, -300, 444, -265, -265, -399, -310, -300, -310, -344,
	-291, -292, -292, -205, -251, -252, 232, 348, 349, 230,
	228, 11, 229, -260, 305, -345, 488, -235, -236, 76,
	41, -238, 390, 383, 268, 272, 91, 273, 423, 274,
	237, 276, 277, 278, 293, 295, 248, 279, 280, 281,
	414, 282, 158, 294, 283, 284, 285, 366, -230, 6,
	327, 40, 50, 51, 437, 436, 527, 524, 269, -507,
	-507, 30, 30, -365, -300, -300, -161, -156, -160, -157,
	-162, -268, -270, -159, 81, -205, -151, -300, 154, 468,
	470, 471, -535, -377, -535, -377, 31, 413, -380, 413,
	31, -355, -374, 464, 466, -370, 87, 414, -360, -379,
	78, 150, -446, -377, -377, -379, -379, 149, 154, -533,
	469, 470, 224, -114, -207, -205, -507, -364, -355, -300,
	-428, -207, -207, -300, -300, 81, 153, 35, -300, -300,
	-264, 154, -263, 16, -301, -300, 34, 87, 153, -264,
	-121, -119, 118, -326, -6, 586, -326, -6, -6, -326,
	-6, -326, -426, 387, 96, 96, -283, 87, -283, 96,
	96, 96, 82, 87, -368, 78, -440, -333, -485, 576,
	-176, 82, -171, -483, -484, -171, -175, -300, -440, -176,
	82, -483, -114, -114, -300, 23, -84, -495, 153, 154,
	-172, -383, -363, -360, -385, 141, -300, -371, 154, 524,
	604, 85, 239, -521, -520, 405, 82, 154, -450, 240,
	487, 87, 601, 421, 220, 101, 339, 102, 103, -412,
	-332, -329, -324, -324, -322, -322, -327, 253, -327, 111,
	-326, -325, -489, 118, -326, 34, 34, 154, 79, 153,
	82, 82, 16, 16, 82, -326, 82, 82, 82, 82,
	16, 16, -326, 82, 153, 82, 82, 82, 82, 79,
	82, 154, 82, 154, -332, -326, -332, 82, 82, 82,
	-326, -326, -326, -332, 82, -326, -326, -326, -326, -326,
	-326, -326, -326, -393, 439, -393, -393, 154, 82, 87,
	154, 22, 154, -163, 36, 37, -287, -286, 87, 164,
	167, 167, 166, -191, -193, -194, -195, -196, -197, 132,
	155, 156, 81, -205, -344, -205, -173, 35, -510, 391,
	-522, 154, 40, -520, 480, -139, 316, -348, 79, -146,
	16, 81, -205, -205, -205, -218, 34, 16, -155, -206,
	-300, 81, 82, 154, -326, -356, 79, -300, -292, -265,
	-265, -205, -300, -265, -265, -311, -313, -313, -309, 153,
	-291, -173, 154, -204, -297, -201, -203, 243, -316, -202,
	246, -479, 244, 242, 106, 247, 301, 107, 237, -297,
	-297, 243, -239, 239, 34, -297, -254, 237, 301, 244,
	20, -253, 237, 107, -300, 243, 247, 242, -296, 122,
	-290, 149, 239, 42, 366, -296, 528, -296, -296, -296,
	-296, -296, -296, -296, 275, 275, -296, -296, -296, -296,
	-296, -296, -296, -296, -296, -296, -296, 159, -296, -296,
	-296, -296, -296, -296, 81, 270, 271, -511, 391, 30,
	347, 347, -522, 30, -147, 341, 30, -271, -272, -273,
	-274, 67, 71, 73, 68, 69, 70, 74, 30, 154,
	-298, -302, 34, -300, 87, -298, -151, -156, -161, -298,
	81, -534, -536, 472, 469, 475, -379, -379, 239, 81,
	122, -379, -379, 40, -299, -531, 476, 470, -181, 23,
	154, 78, -207, -183, -184, -185, -186, -211, -281, 189,
	192, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	205, 206, 203, 204, 252, 184, 185, 186, 187, 207,
	170, 190, 171, 172, 173, 174, 175, 176, 179, 180,
	181, 182, 178, -300, -192, -265, -154, -156, -300, 87,
	-300, 141, -265, 119, -6, 117, -125, -124, -123, 120,
	584, 590, 119, 119, 119, 82, 82, 82, 154, 82,
	82, 82, 154, 82, 154, -453, 449, 39, 154, 81,
	82, 154, 60, 154, 122, 82, 154, 82, 60, -181,
	153, 423, -300, -464, 82, -385, 154, 239, 153, 153,
	-361, 369, -299, -363, 20, 524, -281, 38, -287, 122,
	601, 82, -327, -327, 111, -324, -321, 82, 119, -326,
	117, -209, -211, 385, 386, -209, -210, -216, 150, 188,
	252, 187, 186, 184, 385, 386, -229, -300, -326, -326,
	82, -326, -326, 16, -300, -229, -322, -326, -168, 82,
	82, -392, -393, -392, -392, 82, 82, 82, 82, -392,
	82, 82, 82, 82, 82, 82, 82, 82, 81, -446,
	-453, -326, -326, -165, -164, 43, 602, 154, 122, 167,
	377, 82, 154, -281, -183, 81, -226, 524, -205, -173,
	34, -513, 451, 393, 403, -296, -318, -317, 343, 41,
	-433, 414, 399, 400, -362, 266, -300, -519, 94, 122,
	78, 331, 332, 333, 334, -342, -343, -341, -345, -507,
	-228, -262, -300, 87, 81, 81, 81, -413, 321, -211,
	-205, -155, -300, 16, 154, -506, 153, -1, -300, -355,
	-311, -265, -543, -265, -311, -311, -313, -300, 34, -252,
	-208, -281, -202, -478, -479, -344, -300, 107, -478, 107,
	81, -208, -281, -281, -255, -310, -281, -300, -300, -300,
	-258, -257, -281, -300, -300, -300, 107, 107, -234, 40,
	47, 48, 49, -296, -296, 191, -237, 40, 413, 415,
	416, 96, 96, 96, 96, 87, 87, 87, -296, -296,
	96, 87, -302, 87, -480, 166, 44, 45, 96, 96,
	96, 96, 40, 87, -241, 40, 286, 290, 287, 288,
	289, 87, 96, 40, 96, 40, 96, 40, -300, 81,
	-481, -482, 87, -513, -296, 347, -376, 122, -318, -518,
	316, -140, 91, 31, -177, 232, 229, -507, -367, -366,
	-281, -160, -160, -160, -160, 67, 67, 67, 72, 67,
	72, 67, -273, -367, -162, -173, -302, 82, -527, -526,
	-525, -523, 75, 240, 76, -331, 469, 473, 474, -363,
	-314, 87, -370, 14, -205, -205, -432, 296, 297, 82,
	154, -211, -267, 18, 153, -267, 115, -6, -121, -123,
	-326, -6, -326, 586, 359, 587, 87, 96, 96, -461,
	434, 429, 431, 107, -333, -448, -447, 60, -148, -171,
	-440, -484, -446, -300, 60, -148, -440, -300, 96, 16,
	-360, -355, 141, 141, -300, 370, -371, 87, 392, 87,
	235, 602, 87, -287, -321, -326, 82, -219, 175, 174,
	-219, 82, 82, -418, -418, -417, -420, -417, -219, -219,
	82, 82, 23, 82, 82, 82, -326, 82, 82, 154,
	-437, 489, -392, -392, -392, -392, -392, -392, -392, -392,
	-392, -392, -392, -392, -392, -392, -335, -334, 258, -461,
	44, 45, -286, 87, 87, 87, -195, -211, 82, -198,
	-199, -200, -208, -201, -203, 34, 81, 81, 34, -148,
	-514, 91, -508, 87, -300, -515, 91, 394, 152, 345,
	40, 395, 396, 411, 340, 96, 96, 401, -509, -300,
	-147, -517, 51, 122, 87, -205, -341, -290, 149, 277,
	324, 82, 154, -296, -296, -198, -198, -198, -414, 323,
	20, 96, 140, -174, 79, 153, -156, -206, -300, 141,
	82, -265, -300, -265, -265, -311, -148, -256, 44, 46,
	-211, -476, -300, -474, -476, -300, -474, -474, -344, -326,
	-256, -208, 239, 30, 229, -259, 329, 330, -372, 302,
	112, -372, 154, -163, -300, -229, -229, 30, 87, 87,
	-207, 82, 154, 122, -514, -508, 122, -377, 87, -515,
	-519, 122, 87, 154, -177, -177, -265, 154, 122, -179,
	-178, 78, 79, -180, 78, -178, 67, 67, -265, -525,
	-524, 23, -479, -479, -479, 82, 82, -185, 40, -266,
	19, 20, 141, -266, 119, 117, 119, 119, -300, 82,
	82, -424, 578, -457, -459, 429, 20, 20, 14, 82,
	-440, -440, -355, -371, 414, -205, 154, 602, -326, 82,
	-326, 82, 87, -168, 20, -424, 233, 82, 154, -148,
	-227, -261, -300, 87, -198, -148, -144, 524, 87, -512,
	405, 87, 87, 96, 40, 96, 152, 397, -434, -140,
	-516, 91, 122, 601, 81, -296, -296, -296, -300, -262,
	-319, -319, 82, 82, 82, -415, 257, 96, 140, 96,
	140, 96, -298, -156, -300, -265, -506, 153, -265, -265,
	-281, -223, -222, -220, 101, 112, 40, 383, -221, 91,
	149, 291, 294, 293, 269, 292, -250, -315, 78, 389,
	329, 330, -345, 578, 518, 242, 106, 107, 371, -316,
	81, 81, 79, 311, 81, 81, -476, 82, -256, -281,
	40, -259, 40, 302, -257, 149, -229, 82, -482, 87,
	-512, 87, -379, -517, 87, -507, -168, -366, -446, -326,
	81, -326, 81, 67, 11, 18, -319, -326, -332, 241,
	-6, 587, 359, -243, 579, 87, 20, 87, -455, 87,
	-367, -117, -451, -399, 274, 82, 82, -392, -395, -394,
	-398, 435, 303, 442, -332, -243, -187, -211, -226, -200,
	82, 154, -296, -296, 82, -144, -145, 59, 476, 20,
	524, 344, 40, 96, 40, 398, 87, 102, 103, -288,
	-289, 87, -350, -352, -281, 81, -229, -231, -299, 150,
	87, -224, -225, -260, -345, -116, -115, -224, -416, 158,
	96, 140, 96, 96, -265, -265, -220, 101, -322, 87,
	-231, -232, 40, 290, 286, 122, 122, -233, 40, 270,
	271, -242, 81, 301, 14, 191, 81, 107, 107, -205,
	-350, -350, -477, 331, 332, 333, 335, 334, -477, -350,
	-350, 81, -373, -372, -322, -296, 149, -516, -169, -172,
	-475, -300, 242, 20, 20, -300, -300, -284, 580, 96,
	87, 431, -425, 581, -460, 434, -454, -452, 429, 430,
	431, 432, 122, 82, -397, 114, 397, 401, -320, -323,
	96, 99, 183, 152, -284, 523, -261, -319, -319, -226,
	301, 87, 392, 87, 344, 602, 154, 122, 82, 154,
	-417, -326, -387, 258, 154, -260, -290, -117, -387, -431,
	166, 322, 524, 96, 140, 96, -168, 87, 87, 96,
	81, -441, 30, 87, -351, 81, 82, 82, 82, 82,
	-350, -229, -296, 82, 82, 154, 81, 20, 87, -462,
	240, -458, -459, 433, -452, 20, 431, 20, 20, 87,
	-396, -397, 401, -320, -323, 576, 440, 440, 440, -189,
	-300, 370, 414, -289, 87, -353, -352, -163, 82, -388,
	310, 20, -260, -296, -388, 322, 96, 140, 96, -169,
	82, -326, -336, -296, 82, -245, -244, 520, -350, -353,
	79, -353, 79, -353, 79, -353, 79, 82, -229, -300,
	242, -285, -300, -455, -469, 81, 96, -457, -456, -458,
	20, -455, 20, -455, -455, 111, 441, 441, 441, -188,
	34, 436, -354, 248, 91, 524, 329, 330, -163, 20,
	-389, 303, 304, -390, -403, 306, -229, 96, 82, -300,
	-249, -247, -248, 78, 447, 299, 300, 82, -477, -477,
	-477, -477, -250, 82, 154, -473, 30, 82, -468, -467,
	-282, -463, -300, 434, 435, 87, -455, -396, 87, -296,
	87, 328, -281, 81, -401, 307, 81, -399, 81, -399,
	107, 332, -372, -248, 78, -247, 78, 15, 14, -353,
	-353, -353, -353, -300, -472, -471, -470, 82, 154, 153,
	-539, -538, 595, 96, -300, -386, -391, 308, 96, -322,
	81, -322, 81, -400, 305, 81, -246, 296, 297, 30,
	166, -246, 154, 122, -467, -300, 87, 82, -405, 81,
	20, 82, -386, 82, -386, 81, 122, -322, 101, 40,
	298, -471, 40, -326, 153, -406, -404, 258, -390, 82,
	82, 82, -386, 96, 82, -300, 82, 154, -300, -402,
	309, 82, -404, -407, 60, 96, -411, -408, 81, -260,
	260, 132, -411, -260, -410, -409, 308, 261, 81, 82,
	154, -300, 257, 81, -332, -409, -408, -332, 82, 82,
}

var yyDef = [...]int{
	23, -2, 1, 2, 3, 19, 4, 20, 21, 22,
	24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
	34, 35, 36, 37, 38, 39, 40, 41, 42, 43,
	44, 45, 46, 47, 48, 49, 50, 51, 52, 0,
	263, 264, 265, 823, 824, 825, 826, 827, 828, 0,
	0, 0, 0, 597, 598, 0, 565, 0, 0, 0,
	0, 0, 0, 456, 457, 458, 459, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	483, 484, 354, 355, 356, 357, 358, 359, 360, 0,
	288, 284, 209, 210, 211, 212, 213, 295, 296, 433,
	0, 0, 0, 0, 678, -2, 56, 0, 277, 0,
	268, 268, 829, 830, 831, 832, 833, 834, 835, 836,
	837, 838, -2, 610, 0, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 343, 344,
	345, 339, 340, 342, 341, -2, 0, 610, 0, 0,
	0, 698, 0, 0, 715, 737, 23, 0, 7, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 0,
	0, 19, 0, 19, 0, 0, 0, 1197, 1198, 1199,
	1200, -2, 1692, 1670, 1837, 1849, 1850, 1851, 1852, 1853,
	1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863,
	1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873,
	1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883,
	1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1632,
	1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642,
	1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652,
	1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662,
	1663, 1664, 1665, 1666, 1667, 1668, 1669, 1671, 1672, 1673,
	1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683,
	1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1693, 1694,
	1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704,
	1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714,
	1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724,
	1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734,
	1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744,
	1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1755,
	1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765,
	1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775,
	1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785,
	1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795,
	1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805,
	1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815,
	1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825,
	1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835,
	1836, 1838, 0, 261, 259, 1670, 1692, 1754, 1787, 1837,
	0, 843, 0, 656, 0, 661, 1151, 656, 289, 599,
	600, 698, 698, 563, 0, 325, 0, 1683, 329, 0,
	0, 0, 560, 319, 320, 321, 322, 323, 324, 0,
	0, 822, 0, 0, 315, 0, 283, 1745, 0, 0,
	0, 0, 0, 0, 153, 954, 155, 956, 159, 166,
	0, 0, 171, 172, 175, 176, 177, 178, 179, 0,
	183, 0, 185, 188, 0, 190, 191, 0, 194, 195,
	196, 0, 206, 207, 208, 957, 958, 959, -2, 84,
	841, 1603, 1491, 0, 1498, 1499, 1510, 1521, 1277, 1278,
	1279, 1280, 0, 0, 0, 0, 0, 1287, 1288, 0,
	1305, 1853, 1892, 0, 1295, 1296, 1297, 1298, 1299, 93,
	105, 106, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 0,
	1551, 1552, 1553, 1464, 1264, 1197, 0, 1862, 0, 1882,
	1887, 1888, 1889, 1890, 1881, 0, 0, 1449, 0, 1439,
	0, 0, -2, -2, 0, 0, 1812, -2, 1859, 1878,
	1886, 1863, 1885, 1855, 1856, 1857, 1850, 1851, 1852, 1854,
	1864, 1866, 1877, 0, 1873, 1883, 1884, 0, 0, 0,
	0, 107, 108, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, 1455, -2, 1457, 1458,
	1460, -2, 1462, 1463, -2, 1466, 1467, 1468, -2, -2,
	1471, 1472, 1473, 1474, 1475, 1476, 1479, -2, -2, -2,
	-2, 1451, 1452, 1453, 1454, 1443, 1444, 1445, 1446, 1447,
	1448, -2, -2, -2, 698, 773, 0, -2, 0, 0,
	0, 720, 723, 726, 729, 0, 57, 58, 0, 278,
	279, 267, 269, 0, 273, 0, 266, 0, 0, 0,
	0, 986, 986, 986, 986, 986, 986, 0, 986, 0,
	0, 0, 0, 986, 0, 876, 961, 962, 963, 984,
	985, 1039, 0, 0, 0, 615, 611, 612, 613, 614,
	686, 0, 688, 691, 540, 540, 487, 0, 0, 0,
	540, 0, 501, 493, 0, 0, 0, 540, 0, 0,
	693, 693, 0, 543, 550, 540, 540, -2, 540, 540,
	540, 0, 0, 507, 508, 509, 493, 493, 512, 513,
	514, 525, 526, 551, 1627, 0, 0, 433, 0, 433,
	0, 433, 433, 433, 617, 1782, 1690, 1759, 1745, 0,
	0, 234, 1812, 239, 0, 1691, 1708, 0, 0, 1726,
	0, -2, 0, 305, 693, 0, 699, 0, 698, 0,
	0, 433, 433, 433, 433, 433, 1038, 433, 433, 433,
	433, 0, 0, 0, 433, 433, 0, 0, 738, 739,
	734, 735, 736, 740, 741, 5, 6, 19, 0, 0,
	0, 0, 0, 0, 63, 62, 0, 1604, 1622, 1556,
	1557, 1558, 1609, 1560, 1613, 1613, 1613, 1613, 1589, 1590,
	1591, 1592, 1593, 1594, 1595, 1596, 1597, 1613, 1613, 0,
	0, 1602, 1580, 1611, 1611, 1611, 1609, 1606, 1561, 1562,
	1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572,
	1573, 1574, 1616, 1616, 1619, 1619, 1616, 0, 1489, 0,
	0, 0, 0, 660, 0, 0, 693, -2, 0, 564,
	326, 1201, 0, 0, 330, 331, 0, 0, 346, 0,
	349, 334, 335, 336, 0, 133, 0, 317, 318, 0,
	0, 285, 0, 0, 0, 434, 0, 0, 0, 0,
	0, 0, 163, 160, 167, 170, 180, 187, 0, 199,
	201, 204, 161, 168, 173, 174, 181, 202, 162, 164,
	165, 169, 203, 205, 182, 186, 200, 184, 189, 192,
	193, 198, 0, 134, 0, 0, 0, 0, 0, 1497,
	0, 0, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 1491, 0,
	0, 1283, 1284, 1285, 1286, 1289, 0, 1306, 0, 0,
	0, 0, 1550, 1554, 0, 1489, 1489, 0, 1489, 1485,
	0, 0, 0, 0, 0, 0, 1489, 1425, 0, 0,
	1427, 1440, 0, 0, 1429, 1430, 0, 1433, 1434, 1489,
	0, 1489, 1438, 1421, 1422, 0, 1485, 1485, 1485, 0,
	0, 1485, 1485, 1485, 1485, 1485, 1485, 1485, 1485, 1485,
	1485, 1485, 1485, 0, 0, 0, 693, 0, 0, 681,
	0, 662, 0, 717, 719, 0, 721, 722, 724, 725,
	727, 728, 730, 731, 59, 0, 0, 0, 0, 271,
	0, 276, 0, 840, 0, 0, 986, 0, 986, 877,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 986, 986, 986, 0, -2, 0, 0, 0, 617,
	616, 0, 687, 0, 0, 746, 0, 0, 486, 0,
	493, 540, 540, 499, 500, 495, 494, 546, 547, 543,
	0, 543, 543, 746, 0, 519, 520, 521, 540, 540,
	527, 694, 528, 529, 543, 0, 548, 549, 746, 0,
	0, 746, 746, 0, 537, 538, 539, 0, 0, 986,
	0, 556, 495, 495, 1628, 1629, 0, 995, 0, 0,
	0, 559, 0, 0, 0, 0, 618, 214, 217, 0,
	220, 0, 1782, 0, 1782, 0, 227, 0, 0, 0,
	0, 0, 0, 257, 258, 0, 0, 0, 0, 248,
	251, 1145, 1146, 951, 952, 252, 253, 297, 298, 0,
	662, 716, 718, 712, 713, 714, 0, 0, 0, 0,
	0, 433, 0, 0, 0, 0, 593, 0, 856, 595,
	0, 0, 0, 754, 748, 750, 817, 93, 754, 8,
	80, 77, 0, 19, 0, 0, 19, 19, 0, 19,
	262, 0, 1625, 1623, 1624, 1559, 1610, 0, 1585, 0,
	1586, 1587, 1588, 1598, 1599, 0, 0, 1581, 0, 1582,
	1583, 1584, 1575, 0, 1576, 1577, 0, 1578, 1579, 260,
	0, 1490, 844, 0, 635, 648, 630, 0, 637, 0,
	1152, 619, 648, 621, 0, 637, 662, 684, 662, 0,
	327, 0, 332, 0, 0, 348, 350, 351, 352, 337,
	338, 561, 313, 314, 306, 307, 308, 309, 310, 311,
	312, 316, 103, 0, 286, 287, 0, 0, 0, 147,
	148, 149, 150, 151, 152, 154, 138, 582, 584, 943,
	955, 0, 946, 0, 157, 197, 130, 0, 0, 0,
	1492, 1493, 1494, 1495, 1496, 1500, 0, 1502, 1504, 1506,
	1508, 0, 1526, -2, -2, 1265, 1266, 1267, 1268, 1269,
	1270, 1271, 1272, 1273, 1274, 1275, 1276, 1511, 1524, 1525,
	0, 0, 0, 0, 0, 0, 1522, 1522, 1517, 0,
	1281, 0, 1303, 1307, 0, 0, 0, 0, 94, 1484,
	1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401,
	1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411,
	1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 0,
	0, 1491, 0, 0, 0, 1486, 1487, 0, 0, 0,
	1380, 0, 0, 1386, 1387, 1388, 0, 643, 0, 1450,
	1426, 1441, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 772, 774, 0, 652, 654, 655, 0, 682, 695,
	700, 701, 704, 55, 60, 53, 1013, 280, 281, 0,
	0, 275, 0, -2, 0, 0, 986, 0, 878, 691,
	0, 0, 892, 431, 937, 0, 0, 0, 953, 976,
	982, 0, 0, 0, 0, 1017, 879, 884, 885, 886,
	880, 881, 887, 888, 0, 689, 0, 0, 786, 485,
	0, 541, 542, 490, 1745, 495, 746, 746, 502, 496,
	503, 545, 504, 505, 506, 0, 746, 746, 540, 543,
	530, 544, 543, 533, 534, 0, 552, 557, 553, 0,
	555, 510, 511, 691, 362, 363, 404, 404, 404, 387,
	404, 0, 0, 375, 1630, 0, 0, 0, 0, 384,
	1630, 0, 1630, 1630, 1630, 1630, 1630, 1630, 1630, 0,
	0, 1630, 1630, 1630, 1630, 1630, 1630, 1630, 1630, 1630,
	1630, 1630, 0, 1630, 1630, 1630, 1630, 1630, 1131, 1630,
	0, 996, 394, 395, 396, 397, 402, 403, 0, 428,
	0, 0, 0, 431, 0, 926, 759, 0, 760, 761,
	757, 788, 812, 812, 0, 812, 792, 1151, 0, 0,
	225, 226, 215, 0, 216, 0, 228, 229, 0, 231,
	232, 233, 240, 1690, 1759, 235, 237, 0, 0, 241,
	254, 255, 256, 0, 0, 246, 247, 0, 0, 300,
	301, 303, 0, 710, 579, 1149, 580, 581, 585, 0,
	0, 588, 590, 591, 592, 858, 0, 0, 931, 932,
	746, 0, 755, 0, 751, 818, 0, 820, 0, 746,
	0, 78, 19, 0, 71, 68, 0, 0, 0, 0,
	0, 1605, 1555, 1626, 0, 0, 0, 1607, 0, 0,
	0, 0, 61, 664, 626, 0, 629, 645, 0, 649,
	0, 0, 641, 634, 638, 0, 0, 658, 620, 0,
	0, 625, 710, 685, 1202, 0, 333, 347, 0, 0,
	0, 0, 141, 940, 0, 142, 146, 136, 0, 0,
	0, 945, 0, 942, 947, 0, 156, 0, 0, 131,
	132, 1007, 1013, 0, 0, 1501, 1503, 1505, 1507, 1509,
	0, 1512, 1522, 1522, 1518, 0, 1513, 0, 1515, 0,
	1492, 0, 1308, 0, 0, 0, 0, 0, 0, 0,
	1370, 1371, 0, 0, 1375, 0, 1377, 1378, 1379, 1381,
	0, 0, 0, 1385, 0, 1424, 1442, 1428, 1431, 0,
	1435, 0, 1437, 0, 698, 0, 0, 1345, 1345, 1345,
	0, 0, 0, 0, 1345, 0, 0, 0, 0, 0,
	0, 0, 0, 1300, 0, 1301, 1302, 0, 775, 664,
	0, 0, 0, 707, 705, 706, 0, 1011, 0, 282,
	270, 272, 0, 0, 0, 846, 847, 849, 0, 852,
	853, 854, 858, 1088, 0, 691, 0, 987, 899, 1630,
	435, 0, 0, 939, 0, 915, 0, 0, 0, -2,
	0, 0, 0, 0, 0, 1019, 0, 0, 0, 604,
	608, 23, 692, 0, 747, 488, 0, 489, 540, 497,
	498, 746, 1151, 522, 523, 746, 540, 540, 543, 0,
	554, 0, 995, 365, 0, 1160, 1161, 405, 0, 1167,
	1176, 986, 1234, 0, 1176, 0, 0, 1178, 1179, 0,
	0, 0, 0, 388, 389, 0, 374, 0, 0, 0,
	0, 373, 0, 0, 415, 0, 0, 0, 0, 1631,
	1630, 1630, 0, 382, 383, 0, 386, 0, 0, 0,
	0, 0, 0, 0, 1630, 1630, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1122, 0, 0,
	0, 0, 0, 0, 0, 1137, 1138, 899, 1630, 0,
	0, 0, 435, 913, 922, 0, 0, 0, 0, 0,
	0, 779, 0, 0, 778, 0, 0, 0, 0, 0,
	691, 813, 0, 815, 816, 790, -2, 0, 759, 795,
	1489, 218, 219, 0, 0, 224, 242, 244, 0, 0,
	0, 243, 245, 249, 250, 299, 302, 304, 680, 0,
	0, 0, 1040, 0, 859, 860, 862, 863, 0, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, 1675, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, 857, 596, 744, 749, 756, 819, 821,
	94, 752, 744, 0, 81, 19, 80, 72, 73, 0,
	19, 0, 0, 0, 0, 1615, 1614, 1600, 0, 1601,
	1612, 1617, 0, 1620, 0, 668, 0, 0, 648, 650,
	0, 0, 648, 0, 0, 657, 0, 0, 648, 683,
	0, 0, 562, 104, 353, 0, 0, 0, 0, 0,
	583, 0, 944, 138, 0, 0, 158, 0, 0, 0,
	1013, 1488, 1514, 1516, 0, 1523, 1519, 1282, 1290, 1304,
	0, 0, 1310, 1322, 1322, 0, 0, 1313, 1613, 1613,
	1316, 1609, 1611, 1609, 1322, 1322, 0, 95, 0, 0,
	1376, 0, 0, 0, 644, 0, 0, 0, 1343, 1345,
	1345, 1351, 1346, 1352, 1353, 1345, 1345, 1345, 1345, 1358,
	1345, 1345, 1345, 1345, 1345, 1345, 1345, 1345, 1341, 653,
	668, 696, 697, 702, 703, 0, 54, 1013, 0, 274,
	0, 0, 851, 0, 0, 1153, 0, 0, 0, 0,
	0, 903, 900, 901, 902, 0, 934, 436, 437, 438,
	439, 0, 0, 0, 938, 0, 926, 908, 0, 0,
	0, 977, 978, 979, 980, 981, -2, 990, 0, 0,
	0, 1084, 1630, 1630, 1153, 1153, 1153, 1027, 0, 1018,
	656, 0, -2, 0, 0, 606, 0, 0, 787, 491,
	746, 515, 0, 531, 746, 746, 540, 558, 0, 364,
	406, 0, 1166, 1191, 1177, 1191, 1235, 1191, 1191, 986,
	0, 406, 0, 0, 376, 412, 0, 0, 0, 0,
	372, 409, 704, 413, 414, 416, 0, 418, 378, 390,
	391, 392, 393, 0, 0, 0, 385, 398, 399, 400,
	401, 1099, 1100, 1101, 1104, 1105, 1106, 1107, 0, 0,
	1110, 1111, 1112, 1113, 1114, 1188, 1189, 1190, 1115, 1116,
	1117, 1118, 1119, 1120, 1121, 1139, 1140, 1141, 1142, 1143,
	1144, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 0,
	0, 1134, 0, 903, 0, 0, 0, 0, 934, 915,
	0, 925, 0, 927, 928, 0, 0, 627, 746, 292,
	0, 782, 776, 0, 765, 780, 781, 768, 0, 770,
	0, 766, 767, 746, 758, 789, 814, 791, 794, 796,
	797, 803, 0, 0, 0, 0, 221, 222, 223, 230,
	0, 455, 236, 711, 1150, 586, 587, 1041, 1042, 594,
	0, 864, 742, 0, 0, 742, 76, 79, 0, 74,
	0, 0, 0, 0, 66, 64, 1608, 0, 0, 670,
	118, 0, 0, 0, 646, 0, 651, 648, 633, 642,
	632, 639, 640, 659, 648, 624, 623, 1203, 328, 0,
	941, 138, 143, 144, 145, 139, 137, 948, 0, 950,
	0, 1009, 0, 0, 1520, 1309, 1291, 1311, 1323, 1324,
	1312, 1292, 1293, 1314, 1315, 1317, 1318, 1319, 1320, 1321,
	1294, 1372, 0, 1374, 1382, 1383, 0, 1432, 1436, 0,
	0, 0, 1349, 1350, 1354, 1355, 1356, 1357, 1359, 1360,
	1361, 1362, 1363, 1364, 1365, 1366, 698, 1342, 0, 670,
	708, 709, 1012, 1014, 839, 842, 848, 850, 0, 0,
	1154, 1155, 1157, 1158, 1159, 0, 0, 1153, 0, 882,
	875, 0, 0, 894, 895, 905, 0, 0, 0, 441,
	442, 0, 0, 0, 454, 450, 451, 452, 432, 933,
	922, 911, 0, 0, 921, 0, 991, 1630, 1630, 1630,
	0, 997, 0, 0, 0, 0, 0, 0, 1030, 0,
	0, 1021, 0, 812, 0, 0, 746, 605, 608, 609,
	690, 492, 746, 535, 532, 746, 361, 377, 407, 0,
	-2, 0, 1192, 0, 1180, 1192, 0, 0, 1191, 0,
	366, 406, 0, 0, 0, 419, 422, 423, 420, 1230,
	0, 421, 0, 411, 417, 1102, 1103, 0, 1108, 1109,
	0, 1133, 0, 0, 424, 0, 0, 0, 425, 430,
	908, 0, 923, 0, 929, 930, 698, 0, 0, 762,
	783, 0, 0, 763, 0, 764, 769, 771, 291, 798,
	0, 0, 800, 801, 802, 793, 238, 861, 0, 732,
	0, 0, 753, 733, 0, 19, 0, 0, 69, 1618,
	1621, 672, 0, 669, 119, 0, 0, 0, 0, 647,
	631, 622, 140, 135, 949, 121, 0, 1010, 0, 1384,
	0, 1345, 1344, 1338, 0, 672, 0, 1088, 0, 1000,
	0, 1090, 1630, 1630, 0, 882, 874, 889, 904, 893,
	0, 935, 936, 0, 443, 444, 0, 447, 453, 906,
	907, 0, 0, 919, 0, 0, 0, 0, 983, 1085,
	1086, 1087, -2, 0, -2, 1033, 0, 1028, 0, 1020,
	0, 1023, 746, 746, -2, 602, 607, 0, 516, 536,
	408, 1193, -2, 1206, 1208, 0, 996, 1211, 1212, 0,
	0, 0, 0, 0, 0, 1256, 1220, 0, 0, 1224,
	1225, 1226, 0, 0, 1229, 0, 1538, 1539, 0, 1233,
	0, 0, 0, 0, 0, 0, 0, 1174, 367, 368,
	0, 370, 371, 1231, 410, 1630, 380, 1132, 1135, 1136,
	429, 426, 427, 911, 914, 628, 693, 293, 294, 784,
	0, 777, 807, 804, 0, 0, 865, 743, 745, 70,
	75, 0, 0, 674, 0, 671, 0, 665, 667, 129,
	636, 91, 112, 0, 0, 1373, 1423, 1348, 0, 1339,
	0, 1333, 1334, 1335, 1340, 674, 0, 867, 998, 1156,
	1089, 0, 0, 0, 1088, 873, 0, 890, 891, 0,
	0, 440, 445, 0, 448, 449, 912, 909, 910, 0,
	917, 0, 0, 972, 1609, 0, 992, 993, 1147, 1148,
	994, 1043, -2, 1096, 0, 1004, 121, 1043, 1024, 0,
	1031, 0, 1029, 1022, 698, 603, 1207, 1209, 1210, 1213,
	1214, 1215, 1261, 1262, 1263, 0, 0, 1218, 1258, 1259,
	1260, 1219, 0, 0, 0, 0, 0, 1536, 1537, 1254,
	0, 0, 1181, 1183, 1184, 1185, 1186, 1187, 1182, 0,
	0, 0, 1173, 1175, 369, 0, 1630, 924, 290, 0,
	0, 808, 810, 805, 806, 65, 67, 82, 0, 673,
	120, 0, 83, 0, 109, 0, 122, 123, 0, 0,
	0, 0, 0, 1347, 1336, 0, 0, 0, 0, 0,
	1540, 1541, 1542, 0, 663, 0, 1091, 1092, 1093, 999,
	0, 896, 0, 898, 446, 916, 919, 0, 965, 0,
	704, 0, 1045, 0, 995, 1098, 1630, 1006, 1045, 1016,
	0, 1026, 0, 1035, 0, 1032, 693, 1216, 1217, 0,
	0, 1439, 1630, 0, 1249, 0, 965, 965, 965, 965,
	0, 379, 0, 785, 799, 0, 0, 0, 92, 96,
	0, 118, 115, 0, 124, 0, 0, 0, 0, 1008,
	0, 1325, 0, 0, 0, 1329, 1330, 1331, 1332, 0,
	866, 883, 897, 918, 920, 964, 973, 974, 704, 1003,
	0, 1082, 1097, 0, 1005, 1025, 1034, 0, 1037, 601,
	1257, 0, 1223, 0, 1228, 1237, 1250, 0, 0, 1162,
	0, 1164, 0, 1168, 0, 1170, 0, 0, 381, 809,
	811, 0, 676, 666, 85, 0, 0, 113, 114, 116,
	0, 125, 0, 127, 128, 0, 1326, 1327, 1328, 0,
	868, 869, 966, 1630, 0, 0, 970, 971, 975, 0,
	1070, 0, 0, 1076, 0, 1083, 1102, 1036, 1221, 1227,
	1236, 1238, 1239, 0, 1251, 1252, 1253, 1255, 965, 965,
	965, 965, 1172, 675, 0, 1015, 0, 97, 0, 99,
	101, 102, 1194, 110, 111, 117, 126, 1337, 870, 0,
	968, 0, 1046, 0, 1048, 0, 0, 0, 0, 0,
	1080, 0, 1222, 1240, 0, 1241, 0, 0, 0, 1163,
	1165, 1169, 1171, 677, 86, 87, 0, 98, 0, 0,
	855, 871, 0, 967, 969, 0, 1050, 0, 1071, 0,
	0, 0, 0, 0, 0, 0, 1242, 1244, 1245, 0,
	0, 1243, 0, 0, 100, 1195, 872, 1047, 1044, 0,
	1082, 1072, 0, 1074, 0, 0, 0, 0, 1246, 1248,
	1247, 88, 89, 90, 0, 0, 1052, 0, 1068, 1073,
	1075, 1077, 0, 1081, 1079, 1196, 1051, 0, 1064, 1049,
	0, 1078, 1053, -2, 0, 1069, 1054, -2, 0, 1062,
	0, 0, 1055, 1063, 0, 1058, 0, 0, 0, 1057,
	0, -2, 1065, 0, 0, 1059, -2, 0, 1067, 1066,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 113, 3, 3, 3, 144, 136, 3,
	81, 82, 141, 139, 154, 140, 153, 142, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 603, 600,
	123, 122, 124, 3, 604, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 146, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 601, 135, 602, 147,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 95, 96, 97, 98, 99, 100, 101, 102, 103,
	104, 105, 106, 107, 108, 109, 110, 111, 112, 114,
	115, 116, 117, 118, 119, 120, 121, 125, 126, 127,
	128, 129, 130, 131, 132, 133, 134, 137, 138, 143,
	145, 148, 149, 150, 151, 152, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:758
		{
			yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:765
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:771
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 6:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:779
		{
			yyLOCAL = tree.NewCompoundStmt(yyDollar[2].statementsUnion())
		}
		yyVAL.union = yyLOCAL
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:785
		{
			yyLOCAL = []tree.Statement{yyDollar[1].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 8:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:789
		{
			yyLOCAL = append(yyDollar[1].statementsUnion(), yyDollar[3].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:804
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 19:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:808
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:814
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:819
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 23:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:823
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:855
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:863
		{
			yyLOCAL = &tree.BackupStart{
				Timestamp: yyDollar[2].str,
				IsS3:      false,
				Dir:       yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:871
		{
			yyLOCAL = &tree.BackupStart{
				Timestamp: yyDollar[2].str,
				IsS3:      true,
				Option:    yyDollar[5].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:881
		{
			var connectionId uint64
			switch v := yyDollar[3].item.(type) {
			case uint64:
				connectionId = v
			case int64:
				connectionId = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}

			yyLOCAL = &tree.Kill{
				Option:       yyDollar[2].killOptionUnion(),
				ConnectionId: connectionId,
				StmtOption:   yyDollar[4].statementOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:901
		{
			yyLOCAL = tree.KillOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:907
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeConnection,
			}
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:914
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeQuery,
			}
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:922
		{
			yyLOCAL = tree.StatementOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:928
		{
			yyLOCAL = tree.StatementOption{
				Exist:       true,
				StatementId: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:937
		{
			yyLOCAL = &tree.CallStmt{
				Name: yyDollar[2].procNameUnion(),
				Args: yyDollar[4].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:947
		{
			yyLOCAL = &tree.LeaveStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:955
		{
			yyLOCAL = &tree.IterateStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:963
		{
			yyLOCAL = &tree.WhileStmt{
				Name: "",
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:971
		{
			yyLOCAL = &tree.WhileStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Cond: yyDollar[4].exprUnion(),
				Body: yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:981
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
				Cond: yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:989
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
				Cond: yyDollar[6].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:999
		{
			yyLOCAL = &tree.LoopStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1006
		{
			yyLOCAL = &tree.LoopStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1015
		{
			yyLOCAL = &tree.IfStmt{
				Cond:  yyDollar[2].exprUnion(),
				Body:  yyDollar[4].statementsUnion(),
				Elifs: yyDollar[5].elseIfClauseListUnion(),
				Else:  yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1025
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1029
		{
			yyLOCAL = yyDollar[1].elseIfClauseListUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1035
		{
			yyLOCAL = []*tree.ElseIfStmt{yyDollar[1].elseIfClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1039
		{
			yyLOCAL = append(yyDollar[1].elseIfClauseListUnion(), yyDollar[2].elseIfClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ElseIfStmt
//line mysql_sql.y:1045
		{
			yyLOCAL = &tree.ElseIfStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1054
		{
			yyLOCAL = &tree.CaseStmt{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseList2Union(),
				Else:  yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1064
		{
			yyLOCAL = []*tree.WhenStmt{yyDollar[1].whenClause2Union()}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1068
		{
			yyLOCAL = append(yyDollar[1].whenClauseList2Union(), yyDollar[2].whenClause2Union())
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.WhenStmt
//line mysql_sql.y:1074
		{
			yyLOCAL = &tree.WhenStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1083
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1087
		{
			yyLOCAL = yyDollar[2].statementsUnion()
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1093
		{
			ep := &tree.ExportParam{
				Outfile:     true,
				QueryId:     yyDollar[3].str,
				FilePath:    yyDollar[5].str,
				Fields:      yyDollar[6].fieldsUnion(),
				Lines:       yyDollar[7].linesUnion(),
				Header:      yyDollar[8].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[9].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[10].strsUnion(),
			}
			yyLOCAL = &tree.MoDump{
				ExportParams: ep,
			}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1114
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[9].tailParamUnion()
			yyLOCAL.(*tree.Load).Param.Parallel = yyDollar[10].unsignedOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1127
		{
			yyLOCAL = &tree.LoadExtension{
				Name: tree.Identifier(yyDollar[2].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1134
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1138
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1144
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1148
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1154
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1161
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1169
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1173
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error parallel flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1187
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1191
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1195
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1200
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1204
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1208
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1214
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1223
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1234
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1238
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1244
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1248
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1254
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1258
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1264
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1288
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1307
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1311
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1315
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1320
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1324
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1331
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[3].str,
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1339
		{
			yyVAL.str = ""
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1346
		{
			yyVAL.str = yyDollar[3].str
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1351
		{
			yyVAL.str = "\n"
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1358
		{
			yyVAL.str = yyDollar[3].str
		}
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1363
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1367
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1391
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1395
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1401
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1407
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1425
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1442
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1465
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1469
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1473
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1478
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1482
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1488
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1501
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1512
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1525
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1529
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1539
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1552
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1565
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1571
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1577
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1584
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].cstrUnion().Compare(),
				TabName: yyDollar[3].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1592
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1601
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1605
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1609
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1613
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1617
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1621
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1628
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1632
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1638
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1645
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1654
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1658
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1664
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1668
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1672
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1676
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1680
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1684
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1688
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1692
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1696
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1700
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1704
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1708
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1712
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1716
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1720
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1724
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1728
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1732
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1736
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1740
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1744
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1748
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1752
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1756
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1760
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1764
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1768
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1772
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1776
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1780
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1784
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1788
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1792
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1796
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1800
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1804
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1808
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1812
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1816
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1820
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1824
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1828
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1832
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1836
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1840
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1844
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1848
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1852
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1856
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1860
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1873
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        false,
				CharacterList: yyDollar[3].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1880
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        true,
				CharacterList: yyDollar[4].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1887
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        false,
				CharacterList: yyDollar[4].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.TransactionCharacteristic
//line mysql_sql.y:1897
		{
			yyLOCAL = []*tree.TransactionCharacteristic{yyDollar[1].transactionCharacteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.TransactionCharacteristic
//line mysql_sql.y:1901
		{
			yyLOCAL = append(yyDollar[1].transactionCharacteristicListUnion(), yyDollar[3].transactionCharacteristicUnion())
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TransactionCharacteristic
//line mysql_sql.y:1907
		{
			yyLOCAL = &tree.TransactionCharacteristic{
				IsLevel:   true,
				Isolation: yyDollar[3].isolationLevelUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TransactionCharacteristic
//line mysql_sql.y:1914
		{
			yyLOCAL = &tree.TransactionCharacteristic{
				Access: yyDollar[1].accessModeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1922
		{
			yyLOCAL = tree.ISOLATION_LEVEL_REPEATABLE_READ
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1926
		{
			yyLOCAL = tree.ISOLATION_LEVEL_READ_COMMITTED
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1930
		{
			yyLOCAL = tree.ISOLATION_LEVEL_READ_UNCOMMITTED
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1934
		{
			yyLOCAL = tree.ISOLATION_LEVEL_SERIALIZABLE
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccessModeType
//line mysql_sql.y:1940
		{
			yyLOCAL = tree.ACCESS_MODE_READ_WRITE
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccessModeType
//line mysql_sql.y:1944
		{
			yyLOCAL = tree.ACCESS_MODE_READ_ONLY
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1950
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1957
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1964
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1973
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:2003
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:2007
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:2011
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2017
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2023
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2027
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:2034
		{
			yyVAL.str = yyDollar[3].str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:2040
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:2044
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2050
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2058
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2067
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2076
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2084
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2092
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2115
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2138
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2145
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2152
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     strings.ToLower(yyDollar[1].str),
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2160
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2167
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2174
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2183
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2187
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2191
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2197
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2201
		{
			yyVAL.str = yyDollar[1].str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2207
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2211
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare() + "." + yyDollar[3].cstrUnion().Compare()
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2217
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2221
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2232
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2238
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2243
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2247
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2251
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2255
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2259
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2263
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2267
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2271
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2275
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2281
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2285
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2289
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2293
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2298
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2303
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2309
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].cstrUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2316
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2322
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2329
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2336
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2346
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2353
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2364
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2375
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2379
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:2385
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2395
		{
			yyLOCAL = &tree.LockTableStmt{TableLocks: yyDollar[3].tableLocksUnion()}
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2401
		{
			yyLOCAL = []tree.TableLock{yyDollar[1].tableLockUnion()}
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2405
		{
			yyLOCAL = append(yyDollar[1].tableLocksUnion(), yyDollar[3].tableLockUnion())
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLock
//line mysql_sql.y:2411
		{
			yyLOCAL = tree.TableLock{Table: *yyDollar[1].tableNameUnion(), LockType: yyDollar[2].tableLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2417
		{
			yyLOCAL = tree.TableLockRead
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2421
		{
			yyLOCAL = tree.TableLockReadLocal
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2425
		{
			yyLOCAL = tree.TableLockWrite
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2429
		{
			yyLOCAL = tree.TableLockLowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2435
		{
			yyLOCAL = &tree.UnLockTableStmt{}
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2447
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2453
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2457
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2463
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2467
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2473
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2479
		{
			yyLOCAL = tree.NewReset(tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2490
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2496
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2500
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2504
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2508
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2512
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2516
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2524
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2532
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2542
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2583
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2587
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:2593
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2599
		{
			yyVAL.str = yyDollar[1].str
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2604
		{
			yyVAL.str = "true"
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2605
		{
			yyVAL.str = "false"
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2606
		{
			yyVAL.str = yyDollar[1].str
		}
	case 353:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2611
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2627
		{
			yyLOCAL = &tree.AlterView{
				Name:     yyDollar[4].tableNameUnion(),
				ColNames: yyDollar[5].identifierListUnion(),
				AsSource: yyDollar[7].selectUnion(),
				IfExists: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2638
		{
			yyLOCAL = &tree.AlterTable{
				Table:   yyDollar[3].tableNameUnion(),
				Options: yyDollar[4].alterTableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2647
		{
			yyLOCAL = []tree.AlterTableOption{yyDollar[1].alterTableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2651
		{
			yyLOCAL = append(yyDollar[1].alterTableOptionsUnion(), yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2657
		{
			opt := &tree.AlterOptionAdd{
				Def: yyDollar[2].tableDefUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2664
		{
			opt := &tree.AlterTableModifyColumnClause{
				Typ:       tree.AlterTableModifyColumn,
				NewColumn: yyDollar[3].columnTableDefUnion(),
				Position:  yyDollar[4].alterColPositionUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2673
		{
			opt := &tree.AlterTableChangeColumnClause{
				Typ:           tree.AlterTableChangeColumn,
				OldColumnName: yyDollar[3].unresolvedNameUnion(),
				NewColumn:     yyDollar[4].columnTableDefUnion(),
				Position:      yyDollar[5].alterColPositionUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2683
		{
			opt := &tree.AlterTableRenameColumnClause{
				Typ:           tree.AlterTableRenameColumn,
				OldColumnName: yyDollar[3].unresolvedNameUnion(),
				NewColumnName: yyDollar[5].unresolvedNameUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2692
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:         tree.AlterTableAlterColumn,
				ColumnName:  yyDollar[3].unresolvedNameUnion(),
				DefalutExpr: tree.NewAttributeDefault(yyDollar[6].exprUnion()),
				OptionType:  tree.AlterColumnOptionSetDefault,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2702
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:        tree.AlterTableAlterColumn,
				ColumnName: yyDollar[3].unresolvedNameUnion(),
				Visibility: yyDollar[5].indexVisibilityUnion(),
				OptionType: tree.AlterColumnOptionSetVisibility,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2712
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:        tree.AlterTableAlterColumn,
				ColumnName: yyDollar[3].unresolvedNameUnion(),
				OptionType: tree.AlterColumnOptionDropDefault,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2721
		{
			opt := &tree.AlterTableOrderByColumnClause{
				Typ:              tree.AlterTableOrderByColumn,
				AlterOrderByList: yyDollar[3].alterColumnOrderByUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2729
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2733
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2737
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[1].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2741
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2745
		{
			yyLOCAL = tree.AlterTableOption(
				&tree.AlterAddCol{
					Column:   yyDollar[3].columnTableDefUnion(),
					Position: yyDollar[4].alterColPositionUnion(),
				},
			)
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2754
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2760
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2764
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2768
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2772
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2776
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2780
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2784
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2788
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2793
		{
			yyVAL.str = ""
		}
	case 404:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2824
		{
			yyVAL.str = ""
		}
	case 405:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2828
		{
			yyVAL.str = string("COLUMN")
		}
	case 406:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2833
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ: tree.ColumnPositionNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2839
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ: tree.ColumnPositionFirst,
			}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2845
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ:            tree.ColumnPositionAfter,
				RelativeColumn: yyDollar[2].unresolvedNameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.AlterColumnOrder
//line mysql_sql.y:2854
		{
			yyLOCAL = []*tree.AlterColumnOrder{yyDollar[1].alterColumnOrderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.AlterColumnOrder
//line mysql_sql.y:2858
		{
			yyLOCAL = append(yyDollar[1].alterColumnOrderByUnion(), yyDollar[3].alterColumnOrderUnion())
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AlterColumnOrder
//line mysql_sql.y:2864
		{
			yyLOCAL = &tree.AlterColumnOrder{Column: yyDollar[1].unresolvedNameUnion(), Direction: yyDollar[2].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2871
		{
			yyLOCAL = &tree.AlterTableName{
				Name: yyDollar[1].unresolvedObjectNameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2879
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropIndex,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2886
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropKey,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2893
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[1].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2900
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2907
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropForeignKey,
				Name: tree.Identifier(yyDollar[3].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2914
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ: tree.AlterTableDropPrimaryKey,
			}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2922
		{
			yyLOCAL = &tree.AlterOptionAlterIndex{
				Visibility: yyDollar[3].indexVisibilityUnion(),
				Name:       tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2929
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type:    yyDollar[1].str,
				Enforce: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2936
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type:    yyDollar[1].str,
				Enforce: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2945
		{
			yyLOCAL = tree.VISIBLE_TYPE_VISIBLE
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2949
		{
			yyLOCAL = tree.VISIBLE_TYPE_INVISIBLE
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2956
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].alterAccountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2968
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				DbName:         yyDollar[3].str,
				UpdateConfig:   yyDollar[7].str,
				IsAccountLevel: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2976
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				AccountName:    yyDollar[4].str,
				UpdateConfig:   yyDollar[8].str,
				IsAccountLevel: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2984
		{
			assignments := []*tree.VarAssignmentExpr{
				&tree.VarAssignmentExpr{
					System: true,
					Global: true,
					Name:   yyDollar[6].str,
					Value:  yyDollar[8].exprUnion(),
				},
			}
			yyLOCAL = &tree.SetVar{Assignments: assignments}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2997
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:3003
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist:          true,
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3014
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:3025
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:3029
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3034
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3038
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3043
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3047
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3063
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3067
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3071
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3075
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3079
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3083
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3087
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3091
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3095
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3099
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3103
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3107
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3111
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3115
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3119
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3123
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3129
		{
			yyVAL.item = nil
		}
	case 454:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3134
		{
			yyVAL.item = nil
		}
	case 485:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3174
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3180
		{
			yyLOCAL = &tree.ShowStages{
				Like: yyDollar[3].comparisionExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3188
		{
			yyLOCAL = &tree.ShowGrants{ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3192
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion(), ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3196
		{
			s := &tree.ShowGrants{}
			roles := []*tree.Role{tree.NewRole(yyDollar[5].cstrUnion().Compare())}
			s.Roles = roles
			s.ShowGrantType = tree.GrantForRole
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:3205
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:3209
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3215
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3220
		{
		}
	case 495:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3224
		{
		}
	case 497:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3229
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3239
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3249
		{
			yyLOCAL = &tree.ShowRolesStmt{
				Like: yyDollar[3].comparisionExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3257
		{
			yyLOCAL = &tree.ShowNodeList{}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3263
		{
			yyLOCAL = &tree.ShowLocks{}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3269
		{
			yyLOCAL = &tree.ShowTableNumber{DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3275
		{
			yyLOCAL = &tree.ShowColumnNumber{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3281
		{
			yyLOCAL = &tree.ShowTableValues{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3287
		{
			yyLOCAL = &tree.ShowTableSize{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3293
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3302
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3306
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3310
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3314
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3318
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3322
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3326
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3330
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3336
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3343
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[7].cstrUnion().Compare()), ExplicitSchema: true}
			tbl := tree.NewTableName(tree.Identifier(yyDollar[5].cstrUnion().Compare()), prefix)
			yyLOCAL = &tree.ShowIndex{
				TableName: *tbl,
				Where:     yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3353
		{
		}
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3355
		{
		}
	case 522:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3364
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3374
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3383
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3387
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3391
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3397
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3403
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3409
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3415
		{
			yyLOCAL = &tree.ShowSequences{
				DBName: yyDollar[3].str,
				Where:  yyDollar[4].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3424
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3434
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3446
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3450
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3456
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3468
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3482
		{
			yyLOCAL = &tree.ShowAccounts{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3488
		{
			yyLOCAL = &tree.ShowPublications{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3495
		{
			yyLOCAL = &tree.ShowSubscriptions{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3500
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3504
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3508
		{
			yyLOCAL = tree.NewComparisonExpr(tree.ILIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3513
		{
			yyVAL.str = ""
		}
	case 544:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3517
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 545:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3523
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3536
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3540
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3546
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3551
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3555
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3559
		{
			yyLOCAL = &tree.ShowCreatePublications{Name: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3565
		{
			yyLOCAL = &tree.ShowBackendServers{}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3571
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3575
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3581
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3587
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3591
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3595
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3601
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3605
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3629
		{
			yyLOCAL = &tree.DropSequence{
				IfExists: yyDollar[3].boolValUnion(),
				Names:    yyDollar[4].tableNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3638
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3647
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3656
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3660
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:3666
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3675
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3684
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3694
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[4].boolValUnion(), Names: yyDollar[5].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3698
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3704
		{
			yyLOCAL = &tree.DropConnector{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3710
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3716
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3720
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3726
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3732
		{
			yyLOCAL = &tree.DropFunction{
				Name: yyDollar[3].functionNameUnion(),
				Args: yyDollar[5].funcArgsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3741
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[3].procNameUnion(),
				IfExists: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3748
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[5].procNameUnion(),
				IfExists: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3759
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3764
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3771
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3787
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3800
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3811
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3815
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3821
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3826
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3833
		{
		}
	case 609:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3835
		{
		}
	case 610:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3838
		{
		}
	case 615:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3847
		{
		}
	case 617:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3851
		{
		}
	case 619:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3856
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3865
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3872
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3878
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3886
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3893
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3900
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3920
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateExprsUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3930
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3934
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3940
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3947
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3953
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3961
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3968
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3975
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3994
		{
			yyLOCAL = []*tree.UpdateExpr{}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3998
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:4003
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:4007
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:4011
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:4017
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4026
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4030
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4036
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4040
		{
			yyVAL.str = yyDollar[3].cstrUnion().Compare()
		}
	case 645:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4046
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4050
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4056
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4061
		{
		}
	case 650:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4065
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4072
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4076
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4083
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4088
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4092
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4098
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4102
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4108
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4112
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:4117
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:4121
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4134
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4141
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4148
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4166
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:4185
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:4191
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4198
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4202
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4215
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4219
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4224
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4228
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4235
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4240
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4247
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4253
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion(), SelectLockInfo: yyDollar[5].selectLockInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4257
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4261
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4265
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), SelectLockInfo: yyDollar[6].selectLockInfoUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4269
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4273
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:4279
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:4286
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:4295
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:4299
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:4305
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4313
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4317
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4322
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4326
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4332
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4336
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4340
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4345
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4349
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4355
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4361
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4365
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:4371
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4376
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4380
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4384
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4389
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4393
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4397
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SelectLockInfo
//line mysql_sql.y:4402
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SelectLockInfo
//line mysql_sql.y:4406
		{
			yyLOCAL = &tree.SelectLockInfo{
				LockType: tree.SelectLockForUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4414
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4418
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4422
		{
			valuesStmt := yyDollar[2].statementUnion().(*tree.ValuesStatement)
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{
				Select: &tree.ValuesClause{
					Rows:    valuesStmt.Rows,
					RowWord: true,
				},
				OrderBy: valuesStmt.OrderBy,
				Limit:   valuesStmt.Limit,
			}}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4436
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4440
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4450
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4460
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4470
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4482
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4490
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4498
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4507
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4515
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4523
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4531
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4539
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4547
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4555
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4563
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4571
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4581
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4592
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4606
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 735:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4610
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 736:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4614
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 737:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4619
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4623
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4627
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4636
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4640
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4645
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4649
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4654
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4658
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4664
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4668
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4674
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4678
		{
			yyDollar[2].cstrUnion().SetConfig(0)
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].cstrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4683
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4687
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4692
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4700
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4706
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4714
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4722
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4732
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4738
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4747
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4756
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4765
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4775
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 767:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4779
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 768:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4789
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 769:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4793
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 770:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4797
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4801
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 772:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4807
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4817
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4821
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4827
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4833
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4837
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4843
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4849
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 780:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4853
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 781:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4857
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 782:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4863
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4867
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4873
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4877
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4883
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4887
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4893
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4897
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4907
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4920
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:4926
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4932
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].cstrUnion().Compare()))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:4945
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4956
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4963
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4967
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:4973
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4983
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4987
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4991
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4996
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:5000
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:5004
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:5008
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5013
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5017
		{
			yyLOCAL = []string{yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5021
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5025
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5029
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5034
		{
			yyVAL.str = ""
		}
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5038
		{
			yyVAL.str = yyDollar[1].str
		}
	case 814:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5042
		{
			yyVAL.str = yyDollar[2].str
		}
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5048
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 817:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5054
		{
			yyLOCAL = tree.NewCStr("", yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5058
		{
			yyLOCAL = yyDollar[1].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5062
		{
			yyLOCAL = yyDollar[2].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5066
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5070
		{
			yyLOCAL = tree.NewCStr(yyDollar[2].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5076
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 839:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5112
		{
			yyLOCAL = &tree.CreateExtension{
				Language: yyDollar[3].str,
				Name:     tree.Identifier(yyDollar[5].str),
				Filename: tree.Identifier(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5122
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5128
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 842:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5134
		{
			yyLOCAL = &tree.CreateProcedure{
				Name: yyDollar[3].procNameUnion(),
				Args: yyDollar[5].procArgsUnion(),
				Body: yyDollar[7].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:5144
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[1].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:5149
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().ToLower()), ExplicitSchema: true}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[3].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5155
		{
			yyLOCAL = tree.ProcedureArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5162
		{
			yyLOCAL = tree.ProcedureArgs{yyDollar[1].procArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5166
		{
			yyLOCAL = append(yyDollar[1].procArgsUnion(), yyDollar[3].procArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArg
//line mysql_sql.y:5172
		{
			yyLOCAL = tree.ProcedureArg(yyDollar[1].procArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureArgDecl
//line mysql_sql.y:5178
		{
			yyLOCAL = tree.NewProcedureArgDecl(yyDollar[1].procArgTypeUnion(), yyDollar[2].unresolvedNameUnion(), yyDollar[3].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5183
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5187
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5191
		{
			yyLOCAL = tree.TYPE_OUT
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5195
		{
			yyLOCAL = tree.TYPE_INOUT
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5202
		{
			if yyDollar[13].str == "" {
				yylex.Error("no function body error")
				return 1
			}
			if yyDollar[11].str == "python" && yyDollar[14].str == "" {
				yylex.Error("no handler error")
				return 1
			}

			yyLOCAL = &tree.CreateFunction{
				Replace:    yyDollar[2].streamOptionalUnion(),
				Name:       yyDollar[4].functionNameUnion(),
				Args:       yyDollar[6].funcArgsUnion(),
				ReturnType: yyDollar[9].funcReturnUnion(),
				Language:   yyDollar[11].str,
				Import:     yyDollar[12].boolValUnion(),
				Body:       yyDollar[13].str,
				Handler:    yyDollar[14].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:5226
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:5231
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5237
		{
			yyLOCAL = tree.FunctionArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5244
		{
			yyLOCAL = tree.FunctionArgs{yyDollar[1].funcArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5248
		{
			yyLOCAL = append(yyDollar[1].funcArgsUnion(), yyDollar[3].funcArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArg
//line mysql_sql.y:5254
		{
			yyLOCAL = tree.FunctionArg(yyDollar[1].funcArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5260
		{
			yyLOCAL = tree.NewFunctionArgDecl(nil, yyDollar[1].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5264
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5268
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5274
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReturnType
//line mysql_sql.y:5280
		{
			yyLOCAL = tree.NewReturnType(yyDollar[1].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5286
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5290
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5296
		{
			yyVAL.str = ""
		}
	case 872:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5303
		{
			yyVAL.str = yyDollar[2].str
		}
	case 873:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5309
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[5].tableNameUnion(),
				ColNames:    yyDollar[6].identifierListUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5318
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[4].tableNameUnion(),
				ColNames:    yyDollar[5].identifierListUnion(),
				AsSource:    yyDollar[7].selectUnion(),
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5329
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5341
		{
			yyVAL.str = yyDollar[1].str
		}
	case 877:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5345
		{
			yyVAL.str = yyVAL.str + yyDollar[2].str
		}
	case 878:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5351
		{
			yyVAL.str = "OR REPLACE"
		}
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5355
		{
			yyVAL.str = "ALGORITHM = " + yyDollar[3].str
		}
	case 880:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5359
		{
			yyVAL.str = "DEFINER = "
		}
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5363
		{
			yyVAL.str = "SQL SECURITY " + yyDollar[3].str
		}
	case 882:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5368
		{
			yyVAL.str = ""
		}
	case 883:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:5372
		{
			yyVAL.str = "WITH " + yyDollar[2].str + " CHECK OPTION"
		}
	case 889:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5386
		{
			yyVAL.str = ""
		}
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5394
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 893:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:5400
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5410
		{
			yyVAL.str = yyDollar[1].str
		}
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5414
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 896:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5420
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5427
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5433
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5441
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5447
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5454
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5461
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusRestricted,
			}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5469
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5475
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5484
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5496
		{
			yyLOCAL = &tree.CreatePublication{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Database:    tree.Identifier(yyDollar[6].cstrUnion().Compare()),
				AccountsSet: yyDollar[7].accountsSetOptionUnion(),
				Comment:     yyDollar[8].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5508
		{
			yyLOCAL = &tree.CreateStage{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Url:         yyDollar[5].str,
				Credentials: yyDollar[6].stageCredentialsUnion(),
				Status:      yyDollar[7].stageStatusUnion(),
				Comment:     yyDollar[8].stageCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5520
		{
			yyLOCAL = tree.StageStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5526
		{
			yyLOCAL = tree.StageStatus{
				Exist:  true,
				Option: tree.StageStatusEnabled,
			}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5533
		{
			yyLOCAL = tree.StageStatus{
				Exist:  true,
				Option: tree.StageStatusDisabled,
			}
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageComment
//line mysql_sql.y:5541
		{
			yyLOCAL = tree.StageComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.StageComment
//line mysql_sql.y:5547
		{
			yyLOCAL = tree.StageComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageUrl
//line mysql_sql.y:5555
		{
			yyLOCAL = tree.StageUrl{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageUrl
//line mysql_sql.y:5561
		{
			yyLOCAL = tree.StageUrl{
				Exist: true,
				Url:   yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageCredentials
//line mysql_sql.y:5569
		{
			yyLOCAL = tree.StageCredentials{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.StageCredentials
//line mysql_sql.y:5575
		{
			yyLOCAL = tree.StageCredentials{
				Exist:       true,
				Credentials: yyDollar[4].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5584
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5588
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5593
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5597
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5604
		{
			yyVAL.str = yyDollar[3].str
		}
	case 922:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5609
		{
			yyVAL.str = ""
		}
	case 923:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5613
		{
			yyVAL.str = yyDollar[2].str
		}
	case 924:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5619
		{
			yyLOCAL = &tree.AlterStage{
				IfNotExists:       yyDollar[3].boolValUnion(),
				Name:              tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				UrlOption:         yyDollar[6].stageUrlUnion(),
				CredentialsOption: yyDollar[7].stageCredentialsUnion(),
				StatusOption:      yyDollar[8].stageStatusUnion(),
				Comment:           yyDollar[9].stageCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5633
		{
			yyLOCAL = &tree.AlterPublication{
				IfExists:    yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				AccountsSet: yyDollar[5].accountsSetOptionUnion(),
				Comment:     yyDollar[6].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5643
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5647
		{
			yyLOCAL = &tree.AccountsSetOption{
				All: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5653
		{
			yyLOCAL = &tree.AccountsSetOption{
				SetAccounts: yyDollar[2].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5659
		{
			yyLOCAL = &tree.AccountsSetOption{
				AddAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5665
		{
			yyLOCAL = &tree.AccountsSetOption{
				DropAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5674
		{
			yyLOCAL = &tree.DropPublication{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5683
		{
			yyLOCAL = &tree.DropStage{
				IfNotExists: yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5692
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 934:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5697
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5703
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5711
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5817
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5821
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5827
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5837
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5841
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5847
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5857
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5861
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5865
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5870
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5874
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5880
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5887
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5893
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5902
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 953:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5909
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:5918
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:5922
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:5928
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5942
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5946
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5950
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5955
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5959
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5963
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5967
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5973
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5992
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5996
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6018
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6022
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6026
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6030
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6034
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6040
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6044
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:6050
		{
			// Order is parsed but just ignored as MySQL dtree.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:6055
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6060
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6064
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6068
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6072
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6076
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6082
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Name:               tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				SubscriptionOption: yyDollar[5].subscriptionOptionUnion(),
				CreateOptions:      yyDollar[6].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:6093
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:6097
		{
			yyLOCAL = &tree.SubscriptionOption{From: tree.Identifier(yyDollar[2].str), Publication: tree.Identifier(yyDollar[4].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6107
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6111
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6116
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6120
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6126
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6130
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6136
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6140
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6144
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6149
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6153
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6159
		{
			yyLOCAL = &tree.CreateConnector{
				ConnectorName: yyDollar[3].tableNameUnion(),
				Options:       yyDollar[6].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6168
		{
			yyLOCAL = &tree.CreateStream{
				Replace:     yyDollar[2].streamOptionalUnion(),
				Source:      false,
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				StreamName:  yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Options:     yyDollar[9].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6179
		{
			yyLOCAL = &tree.CreateStream{
				Replace:     yyDollar[2].streamOptionalUnion(),
				Source:      true,
				IfNotExists: yyDollar[5].ifNotExistsUnion(),
				StreamName:  yyDollar[6].tableNameUnion(),
				Defs:        yyDollar[8].tableDefsUnion(),
				Options:     yyDollar[10].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6190
		{
			yyLOCAL = &tree.CreateStream{
				Replace:     yyDollar[2].streamOptionalUnion(),
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				StreamName:  yyDollar[5].tableNameUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				Options:     yyDollar[6].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6201
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6205
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6211
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6223
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6232
		{
			yyLOCAL = &tree.CreateTable{
				IsClusterTable:  true,
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6245
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6252
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Filepath:     yyDollar[2].str,
					CompressType: tree.AUTO,
					Format:       tree.CSV,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6262
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.INLINE,
					Format:   yyDollar[4].str,
					Data:     yyDollar[8].str,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6272
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Option: yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6280
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.S3,
					Option:   yyDollar[4].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6291
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6295
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6300
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6304
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:6311
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6322
		{
			yyLOCAL = &tree.CreateSequence{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        yyDollar[4].tableNameUnion(),
				Type:        yyDollar[5].columnTypeUnion(),
				IncrementBy: yyDollar[6].incrementByOptionUnion(),
				MinValue:    yyDollar[7].minValueOptionUnion(),
				MaxValue:    yyDollar[8].maxValueOptionUnion(),
				StartWith:   yyDollar[9].startWithOptionUnion(),
				Cycle:       yyDollar[10].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6335
		{
			locale := ""
			fstr := "bigint"
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: fstr,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6349
		{
			yyLOCAL = yyDollar[2].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6353
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6357
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6364
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6371
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6378
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6385
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6389
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6393
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6397
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6401
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6408
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6415
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6419
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6426
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6433
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6437
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6444
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6451
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6458
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6465
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6469
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6474
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6478
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6482
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:6487
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:6491
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6501
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6505
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: []*tree.UnresolvedName{yyDollar[3].unresolvedNameUnion()},
			}

		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6512
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: yyDollar[4].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6519
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6523
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6532
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6536
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6542
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6546
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:6552
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:6561
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6571
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6575
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6581
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6585
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:6591
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:6598
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6607
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6611
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6616
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6620
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6625
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6629
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6634
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6638
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6648
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6652
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6663
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6671
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6679
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6687
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6698
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6707
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6717
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6727
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6731
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6736
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6740
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6746
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6750
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6756
		{
			yyLOCAL = &tree.CreateConnectorWithOption{Key: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6760
		{
			yyLOCAL = &tree.CreateConnectorWithOption{Key: tree.Identifier(yyDollar[1].str), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6765
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6769
		{
			yyLOCAL = yyDollar[3].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6775
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6779
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6785
		{
			yyLOCAL = &tree.CreateStreamWithOption{Key: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6789
		{
			yyLOCAL = &tree.CreateStreamWithOption{Key: tree.Identifier(yyDollar[1].str), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6794
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6798
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6804
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6808
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6812
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6818
		{
			yyLOCAL = tree.NewTableOptionAUTOEXTEND_SIZE(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6822
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6826
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6830
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6834
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6838
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6842
		{
			str := util.DealCommentString(yyDollar[3].str)
			yyLOCAL = tree.NewTableOptionComment(str)
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6847
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6851
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6855
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6859
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6863
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6867
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6871
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6875
		{
			yyLOCAL = tree.NewTableOptionEngineAttr(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6879
		{
			yyLOCAL = tree.NewTableOptionInsertMethod(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6883
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6887
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6891
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6895
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6899
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6903
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6907
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6911
		{
			yyLOCAL = tree.NewTTableOptionStartTrans(true)
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6915
		{
			yyLOCAL = tree.NewTTableOptionSecondaryEngineAttr(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6919
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6923
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6927
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6931
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6935
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6939
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6943
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].cstrUnion().Compare(), "")
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6947
		{
			yyLOCAL = tree.NewTableOptionTablespace("", yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6951
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6955
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:6961
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:6965
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:6971
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6977
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1138:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6981
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6987
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6991
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6995
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6999
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:7003
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:7007
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:7021
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:7025
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:7034
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:7039
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:7045
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:7052
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:7056
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7062
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7066
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7070
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7076
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7080
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7086
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7095
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7104
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7127
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7152
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.ForeignKey:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.UniqueIndex:
					v.ConstraintSymbol = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7166
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7172
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7181
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7190
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7199
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7208
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7218
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7226
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7232
		{
			yyVAL.str = ""
		}
	case 1177:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7236
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7246
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7252
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7258
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].cstrUnion().Compare()
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7277
		{
			yyVAL.str = ""
		}
	case 1192:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7281
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 1193:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:7287
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7293
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7297
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7301
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7307
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7311
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7315
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7319
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7325
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7329
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7333
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7338
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7342
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7348
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7352
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7358
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7362
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7366
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7370
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7374
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7378
		{
			str := util.DealCommentString(yyDollar[2].str)
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7383
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7387
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7391
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7395
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7399
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7403
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7407
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7411
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7415
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7419
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7432
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7436
		{
			yyLOCAL = tree.NewAttributeVisable(true)
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7440
		{
			yyLOCAL = tree.NewAttributeVisable(false)
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7444
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7448
		{
			yyLOCAL = tree.NewAttributeHeader(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7452
		{
			yyLOCAL = tree.NewAttributeHeaders()
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7458
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7462
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7467
		{
			yyVAL.str = ""
		}
	case 1233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7471
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7477
		{
			yyVAL.str = ""
		}
	case 1235:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7481
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 1236:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:7487
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7499
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7506
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7513
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7520
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7527
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7536
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7542
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7548
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7552
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7556
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7560
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7564
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7569
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7576
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7580
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7584
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:7589
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:7593
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:7598
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:7602
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:7618
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7624
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7628
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7632
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7636
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7640
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7644
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7648
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7652
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7656
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7660
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7664
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7668
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7672
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7678
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7682
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7686
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7690
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7694
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7698
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7702
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7706
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7710
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7714
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7718
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7722
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7727
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7735
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7739
		{
			yyLOCAL = tree.NewBitCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7743
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7747
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7756
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7760
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7764
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7768
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7772
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7778
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7786
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7794
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7803
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7807
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7812
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7816
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:7822
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:7826
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:7832
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7841
		{
			t := yyVAL.columnTypeUnion()
			str := strings.ToLower(t.InternalType.FamilyString)
			if str == "binary" {
				t.InternalType.Scale = -1
			} else if str == "char" {
				if t.InternalType.DisplayWith == -1 {
					t.InternalType.FamilyString = "varchar"
					t.InternalType.Oid = uint32(defines.MYSQL_TYPE_VARCHAR)
				}
			}
		}
	case 1311:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7853
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7870
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7887
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7900
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7913
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7925
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7939
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Scale:              yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7954
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Scale:              yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7969
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7986
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8001
		{
		}
	case 1326:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8008
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8012
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8016
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8022
		{
			yyLOCAL = &tree.FrameBound{Type: tree.CurrentRow}
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8026
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8030
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8034
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:8040
		{
			yyLOCAL = tree.Rows
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:8044
		{
			yyLOCAL = tree.Range
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:8048
		{
			yyLOCAL = tree.Groups
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8054
		{
			yyLOCAL = &tree.FrameClause{
				Type:  yyDollar[1].frameTypeUnion(),
				Start: yyDollar[2].frameBoundUnion(),
				End:   &tree.FrameBound{Type: tree.CurrentRow},
			}
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8062
		{
			yyLOCAL = &tree.FrameClause{
				Type:   yyDollar[1].frameTypeUnion(),
				HasEnd: true,
				Start:  yyDollar[3].frameBoundUnion(),
				End:    yyDollar[5].frameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8072
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8076
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8083
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8088
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8092
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8097
		{
			yyVAL.str = ","
		}
	case 1344:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:8101
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1345:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:8106
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:8113
		{
			hasFrame := true
			var f *tree.FrameClause
			if yyDollar[5].frameClauseUnion() != nil {
				f = yyDollar[5].frameClauseUnion()
			} else {
				hasFrame = false
				f = &tree.FrameClause{Type: tree.Range}
				if yyDollar[4].orderByUnion() == nil {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.Following, UnBounded: true}
				} else {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.CurrentRow}
				}
			}
			yyLOCAL = &tree.WindowSpec{
				PartitionBy: yyDollar[3].exprsUnion(),
				OrderBy:     yyDollar[4].orderByUnion(),
				Frame:       f,
				HasFrame:    hasFrame,
			}
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8139
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      append(yyDollar[4].exprsUnion(), tree.NewNumValWithType(constant.MakeString(yyDollar[6].str), yyDollar[6].str, false, tree.P_char)),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[8].windowSpecUnion(),
				OrderBy:    yyDollar[5].orderByUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8150
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8160
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8170
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8180
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8189
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8198
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8208
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8218
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8228
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8238
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8248
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8258
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8268
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8278
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8288
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8298
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8308
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8318
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8337
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8345
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8353
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8361
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8369
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			timeUinit := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8379
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8387
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8396
		{
			name := tree.SetUnresolvedName("nextval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8404
		{
			name := tree.SetUnresolvedName("setval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8412
		{
			name := tree.SetUnresolvedName("currval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8420
		{
			name := tree.SetUnresolvedName("lastval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8428
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(0), "0", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8439
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(1), "1", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8449
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(2), "2", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8461
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(3), "3", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1385:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8472
		{
			column := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:8494
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1421:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8530
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8542
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8554
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8565
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1425:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8573
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1426:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8580
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1427:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8587
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1428:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8599
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1429:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8607
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].exprUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1430:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8617
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].unresolvedNameUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1431:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8627
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1432:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8635
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1433:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8646
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1434:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8655
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1435:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8664
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1436:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8672
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1437:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8682
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1438:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8690
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1439:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8700
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8704
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1441:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8710
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1442:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8714
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1449:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8733
		{
		}
	case 1450:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:8735
		{
		}
	case 1484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8776
		{
			name := tree.SetUnresolvedName("interval")
			str := strings.ToLower(yyDollar[3].str)
			arg2 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1485:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8787
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1486:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8791
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1487:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8795
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1488:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:8801
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1489:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8806
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1490:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8810
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1491:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8816
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8820
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1493:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8827
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1494:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8831
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1495:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8835
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1496:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8843
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1497:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8847
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1498:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8851
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1499:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8855
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1500:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8861
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1501:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8865
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1502:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8869
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1503:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8873
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1504:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8877
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1505:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8881
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1506:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8885
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1507:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8889
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1508:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8893
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1509:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8897
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1511:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8905
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1512:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8909
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1513:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8913
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1514:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8917
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1515:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8921
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.ILIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1516:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8925
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_ILIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1517:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8929
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1518:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8933
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1519:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8937
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1520:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8941
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1522:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8947
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1523:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8951
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1524:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8957
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1525:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8961
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1526:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8968
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1527:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8972
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1528:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8976
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8982
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1530:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8986
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1531:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8990
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1532:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8994
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1533:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8998
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1534:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9002
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1535:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9006
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1536:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:9012
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1537:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:9016
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1538:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:9020
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1539:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:9024
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1540:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9030
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1541:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9043
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1542:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9048
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1543:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9054
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1544:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9058
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1545:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9071
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1546:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9076
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1547:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9080
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1548:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9084
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1549:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9088
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1550:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9092
		{
			if strings.HasPrefix(yyDollar[2].str, "0x") {
				yyDollar[2].str = yyDollar[2].str[2:]
			}
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_bit)
		}
		yyVAL.union = yyLOCAL
	case 1551:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9099
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1552:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9103
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1553:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9117
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1554:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9121
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_ScoreBinary)
		}
		yyVAL.union = yyLOCAL
	case 1555:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9128
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1559:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9139
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1560:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9144
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1561:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9150
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1562:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9162
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1563:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9174
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1564:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9186
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1565:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9199
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1566:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9212
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1567:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9225
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1568:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9238
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1569:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9251
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1570:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9264
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1571:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9277
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1572:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9290
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1573:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9303
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1574:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9316
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1575:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9331
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for double out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1576:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9358
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for float out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for float out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1577:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9400
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1578:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9436
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1579:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9472
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1580:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9489
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1581:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9501
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        yyDollar[2].lengthOptUnion(),
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1582:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9521
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        yyDollar[2].lengthOptUnion(),
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1583:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9541
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        yyDollar[2].lengthOptUnion(),
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1584:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9561
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1585:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9577
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1586:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9590
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1587:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9603
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1588:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9616
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1589:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9629
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1590:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9641
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1591:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9653
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1592:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9665
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1593:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9677
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1594:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9689
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1595:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9701
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1596:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9713
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1597:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9725
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1598:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9737
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.ArrayFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1599:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9750
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.ArrayFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1600:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9763
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1601:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9776
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1602:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9789
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1603:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9804
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1604:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9812
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1605:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9821
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1606:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9831
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1607:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:9854
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1608:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:9859
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1609:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9865
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1611:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9872
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1612:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9876
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1613:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9881
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1614:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9885
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1615:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9891
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1616:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9897
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1617:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9904
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1618:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9911
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1619:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9920
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 38, // this is the default precision for decimal
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1620:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9927
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1621:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9934
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1622:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9943
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1623:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9947
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1624:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9951
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1625:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:9957
		{
		}
	case 1626:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9959
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1630:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:9969
		{
			yyVAL.str = ""
		}
	case 1631:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:9973
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}
