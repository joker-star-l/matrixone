// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const LOWER_THAN_ORDER = 57352
const ORDER = 57353
const SELECT = 57354
const INSERT = 57355
const UPDATE = 57356
const DELETE = 57357
const FROM = 57358
const WHERE = 57359
const GROUP = 57360
const HAVING = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const AFTER = 57388
const INSTANT = 57389
const INPLACE = 57390
const COPY = 57391
const DISABLE = 57392
const ENABLE = 57393
const UNDEFINED = 57394
const MERGE = 57395
const TEMPTABLE = 57396
const DEFINER = 57397
const INVOKER = 57398
const SQL = 57399
const SECURITY = 57400
const CASCADED = 57401
const VALUES = 57402
const NEXT = 57403
const VALUE = 57404
const SHARE = 57405
const MODE = 57406
const SQL_NO_CACHE = 57407
const SQL_CACHE = 57408
const JOIN = 57409
const STRAIGHT_JOIN = 57410
const LEFT = 57411
const RIGHT = 57412
const INNER = 57413
const OUTER = 57414
const CROSS = 57415
const NATURAL = 57416
const USE = 57417
const FORCE = 57418
const LOWER_THAN_ON = 57419
const ON = 57420
const USING = 57421
const SUBQUERY_AS_EXPR = 57422
const LOWER_THAN_STRING = 57423
const ID = 57424
const AT_ID = 57425
const AT_AT_ID = 57426
const STRING = 57427
const VALUE_ARG = 57428
const LIST_ARG = 57429
const COMMENT = 57430
const COMMENT_KEYWORD = 57431
const QUOTE_ID = 57432
const STAGE = 57433
const CREDENTIALS = 57434
const STAGES = 57435
const INTEGRAL = 57436
const HEX = 57437
const BIT_LITERAL = 57438
const FLOAT = 57439
const HEXNUM = 57440
const NULL = 57441
const TRUE = 57442
const FALSE = 57443
const LOWER_THAN_CHARSET = 57444
const CHARSET = 57445
const UNIQUE = 57446
const KEY = 57447
const OR = 57448
const PIPE_CONCAT = 57449
const XOR = 57450
const AND = 57451
const NOT = 57452
const BETWEEN = 57453
const CASE = 57454
const WHEN = 57455
const THEN = 57456
const ELSE = 57457
const END = 57458
const ELSEIF = 57459
const LOWER_THAN_EQ = 57460
const LE = 57461
const GE = 57462
const NE = 57463
const NULL_SAFE_EQUAL = 57464
const IS = 57465
const LIKE = 57466
const REGEXP = 57467
const IN = 57468
const ASSIGNMENT = 57469
const ILIKE = 57470
const SHIFT_LEFT = 57471
const SHIFT_RIGHT = 57472
const DIV = 57473
const MOD = 57474
const UNARY = 57475
const COLLATE = 57476
const BINARY = 57477
const UNDERSCORE_BINARY = 57478
const INTERVAL = 57479
const OUT = 57480
const INOUT = 57481
const BEGIN = 57482
const START = 57483
const TRANSACTION = 57484
const COMMIT = 57485
const ROLLBACK = 57486
const WORK = 57487
const CONSISTENT = 57488
const SNAPSHOT = 57489
const CHAIN = 57490
const NO = 57491
const RELEASE = 57492
const PRIORITY = 57493
const QUICK = 57494
const BIT = 57495
const TINYINT = 57496
const SMALLINT = 57497
const MEDIUMINT = 57498
const INT = 57499
const INTEGER = 57500
const BIGINT = 57501
const INTNUM = 57502
const REAL = 57503
const DOUBLE = 57504
const FLOAT_TYPE = 57505
const DECIMAL = 57506
const NUMERIC = 57507
const DECIMAL_VALUE = 57508
const TIME = 57509
const TIMESTAMP = 57510
const DATETIME = 57511
const YEAR = 57512
const CHAR = 57513
const VARCHAR = 57514
const BOOL = 57515
const CHARACTER = 57516
const VARBINARY = 57517
const NCHAR = 57518
const TEXT = 57519
const TINYTEXT = 57520
const MEDIUMTEXT = 57521
const LONGTEXT = 57522
const BLOB = 57523
const TINYBLOB = 57524
const MEDIUMBLOB = 57525
const LONGBLOB = 57526
const JSON = 57527
const ENUM = 57528
const UUID = 57529
const VECF32 = 57530
const VECF64 = 57531
const GEOMETRY = 57532
const POINT = 57533
const LINESTRING = 57534
const POLYGON = 57535
const GEOMETRYCOLLECTION = 57536
const MULTIPOINT = 57537
const MULTILINESTRING = 57538
const MULTIPOLYGON = 57539
const INT1 = 57540
const INT2 = 57541
const INT3 = 57542
const INT4 = 57543
const INT8 = 57544
const S3OPTION = 57545
const SQL_SMALL_RESULT = 57546
const SQL_BIG_RESULT = 57547
const SQL_BUFFER_RESULT = 57548
const LOW_PRIORITY = 57549
const HIGH_PRIORITY = 57550
const DELAYED = 57551
const CREATE = 57552
const ALTER = 57553
const DROP = 57554
const RENAME = 57555
const ANALYZE = 57556
const ADD = 57557
const RETURNS = 57558
const SCHEMA = 57559
const TABLE = 57560
const SEQUENCE = 57561
const INDEX = 57562
const VIEW = 57563
const TO = 57564
const IGNORE = 57565
const IF = 57566
const PRIMARY = 57567
const COLUMN = 57568
const CONSTRAINT = 57569
const SPATIAL = 57570
const FULLTEXT = 57571
const FOREIGN = 57572
const KEY_BLOCK_SIZE = 57573
const SHOW = 57574
const DESCRIBE = 57575
const EXPLAIN = 57576
const DATE = 57577
const ESCAPE = 57578
const REPAIR = 57579
const OPTIMIZE = 57580
const TRUNCATE = 57581
const MAXVALUE = 57582
const PARTITION = 57583
const REORGANIZE = 57584
const LESS = 57585
const THAN = 57586
const PROCEDURE = 57587
const TRIGGER = 57588
const STATUS = 57589
const VARIABLES = 57590
const ROLE = 57591
const PROXY = 57592
const AVG_ROW_LENGTH = 57593
const STORAGE = 57594
const DISK = 57595
const MEMORY = 57596
const CHECKSUM = 57597
const COMPRESSION = 57598
const DATA = 57599
const DIRECTORY = 57600
const DELAY_KEY_WRITE = 57601
const ENCRYPTION = 57602
const ENGINE = 57603
const MAX_ROWS = 57604
const MIN_ROWS = 57605
const PACK_KEYS = 57606
const ROW_FORMAT = 57607
const STATS_AUTO_RECALC = 57608
const STATS_PERSISTENT = 57609
const STATS_SAMPLE_PAGES = 57610
const DYNAMIC = 57611
const COMPRESSED = 57612
const REDUNDANT = 57613
const COMPACT = 57614
const FIXED = 57615
const COLUMN_FORMAT = 57616
const AUTO_RANDOM = 57617
const ENGINE_ATTRIBUTE = 57618
const SECONDARY_ENGINE_ATTRIBUTE = 57619
const INSERT_METHOD = 57620
const RESTRICT = 57621
const CASCADE = 57622
const ACTION = 57623
const PARTIAL = 57624
const SIMPLE = 57625
const CHECK = 57626
const ENFORCED = 57627
const RANGE = 57628
const LIST = 57629
const ALGORITHM = 57630
const LINEAR = 57631
const PARTITIONS = 57632
const SUBPARTITION = 57633
const SUBPARTITIONS = 57634
const CLUSTER = 57635
const TYPE = 57636
const ANY = 57637
const SOME = 57638
const EXTERNAL = 57639
const LOCALFILE = 57640
const URL = 57641
const PREPARE = 57642
const DEALLOCATE = 57643
const RESET = 57644
const EXTENSION = 57645
const INCREMENT = 57646
const CYCLE = 57647
const MINVALUE = 57648
const PUBLICATION = 57649
const SUBSCRIPTIONS = 57650
const PUBLICATIONS = 57651
const PROPERTIES = 57652
const PARSER = 57653
const VISIBLE = 57654
const INVISIBLE = 57655
const BTREE = 57656
const HASH = 57657
const RTREE = 57658
const BSI = 57659
const ZONEMAP = 57660
const LEADING = 57661
const BOTH = 57662
const TRAILING = 57663
const UNKNOWN = 57664
const EXPIRE = 57665
const ACCOUNT = 57666
const ACCOUNTS = 57667
const UNLOCK = 57668
const DAY = 57669
const NEVER = 57670
const PUMP = 57671
const MYSQL_COMPATIBILITY_MODE = 57672
const MODIFY = 57673
const CHANGE = 57674
const SECOND = 57675
const ASCII = 57676
const COALESCE = 57677
const COLLATION = 57678
const HOUR = 57679
const MICROSECOND = 57680
const MINUTE = 57681
const MONTH = 57682
const QUARTER = 57683
const REPEAT = 57684
const REVERSE = 57685
const ROW_COUNT = 57686
const WEEK = 57687
const REVOKE = 57688
const FUNCTION = 57689
const PRIVILEGES = 57690
const TABLESPACE = 57691
const EXECUTE = 57692
const SUPER = 57693
const GRANT = 57694
const OPTION = 57695
const REFERENCES = 57696
const REPLICATION = 57697
const SLAVE = 57698
const CLIENT = 57699
const USAGE = 57700
const RELOAD = 57701
const FILE = 57702
const TEMPORARY = 57703
const ROUTINE = 57704
const EVENT = 57705
const SHUTDOWN = 57706
const NULLX = 57707
const AUTO_INCREMENT = 57708
const APPROXNUM = 57709
const SIGNED = 57710
const UNSIGNED = 57711
const ZEROFILL = 57712
const ENGINES = 57713
const LOW_CARDINALITY = 57714
const AUTOEXTEND_SIZE = 57715
const ADMIN_NAME = 57716
const RANDOM = 57717
const SUSPEND = 57718
const ATTRIBUTE = 57719
const HISTORY = 57720
const REUSE = 57721
const CURRENT = 57722
const OPTIONAL = 57723
const FAILED_LOGIN_ATTEMPTS = 57724
const PASSWORD_LOCK_TIME = 57725
const UNBOUNDED = 57726
const SECONDARY = 57727
const RESTRICTED = 57728
const USER = 57729
const IDENTIFIED = 57730
const CIPHER = 57731
const ISSUER = 57732
const X509 = 57733
const SUBJECT = 57734
const SAN = 57735
const REQUIRE = 57736
const SSL = 57737
const NONE = 57738
const PASSWORD = 57739
const SHARED = 57740
const EXCLUSIVE = 57741
const MAX_QUERIES_PER_HOUR = 57742
const MAX_UPDATES_PER_HOUR = 57743
const MAX_CONNECTIONS_PER_HOUR = 57744
const MAX_USER_CONNECTIONS = 57745
const FORMAT = 57746
const VERBOSE = 57747
const CONNECTION = 57748
const TRIGGERS = 57749
const PROFILES = 57750
const LOAD = 57751
const INLINE = 57752
const INFILE = 57753
const TERMINATED = 57754
const OPTIONALLY = 57755
const ENCLOSED = 57756
const ESCAPED = 57757
const STARTING = 57758
const LINES = 57759
const ROWS = 57760
const IMPORT = 57761
const DISCARD = 57762
const MODUMP = 57763
const OVER = 57764
const PRECEDING = 57765
const FOLLOWING = 57766
const GROUPS = 57767
const DATABASES = 57768
const TABLES = 57769
const SEQUENCES = 57770
const EXTENDED = 57771
const FULL = 57772
const PROCESSLIST = 57773
const FIELDS = 57774
const COLUMNS = 57775
const OPEN = 57776
const ERRORS = 57777
const WARNINGS = 57778
const INDEXES = 57779
const SCHEMAS = 57780
const NODE = 57781
const LOCKS = 57782
const ROLES = 57783
const TABLE_NUMBER = 57784
const COLUMN_NUMBER = 57785
const TABLE_VALUES = 57786
const TABLE_SIZE = 57787
const NAMES = 57788
const GLOBAL = 57789
const PERSIST = 57790
const SESSION = 57791
const ISOLATION = 57792
const LEVEL = 57793
const READ = 57794
const WRITE = 57795
const ONLY = 57796
const REPEATABLE = 57797
const COMMITTED = 57798
const UNCOMMITTED = 57799
const SERIALIZABLE = 57800
const LOCAL = 57801
const EVENTS = 57802
const PLUGINS = 57803
const CURRENT_TIMESTAMP = 57804
const DATABASE = 57805
const CURRENT_TIME = 57806
const LOCALTIME = 57807
const LOCALTIMESTAMP = 57808
const UTC_DATE = 57809
const UTC_TIME = 57810
const UTC_TIMESTAMP = 57811
const REPLACE = 57812
const CONVERT = 57813
const SEPARATOR = 57814
const TIMESTAMPDIFF = 57815
const CURRENT_DATE = 57816
const CURRENT_USER = 57817
const CURRENT_ROLE = 57818
const SECOND_MICROSECOND = 57819
const MINUTE_MICROSECOND = 57820
const MINUTE_SECOND = 57821
const HOUR_MICROSECOND = 57822
const HOUR_SECOND = 57823
const HOUR_MINUTE = 57824
const DAY_MICROSECOND = 57825
const DAY_SECOND = 57826
const DAY_MINUTE = 57827
const DAY_HOUR = 57828
const YEAR_MONTH = 57829
const SQL_TSI_HOUR = 57830
const SQL_TSI_DAY = 57831
const SQL_TSI_WEEK = 57832
const SQL_TSI_MONTH = 57833
const SQL_TSI_QUARTER = 57834
const SQL_TSI_YEAR = 57835
const SQL_TSI_SECOND = 57836
const SQL_TSI_MINUTE = 57837
const RECURSIVE = 57838
const CONFIG = 57839
const DRAINER = 57840
const SOURCE = 57841
const STREAM = 57842
const HEADERS = 57843
const CONNECTOR = 57844
const MATCH = 57845
const AGAINST = 57846
const BOOLEAN = 57847
const LANGUAGE = 57848
const WITH = 57849
const QUERY = 57850
const EXPANSION = 57851
const WITHOUT = 57852
const VALIDATION = 57853
const ADDDATE = 57854
const BIT_AND = 57855
const BIT_OR = 57856
const BIT_XOR = 57857
const CAST = 57858
const COUNT = 57859
const APPROX_COUNT = 57860
const APPROX_COUNT_DISTINCT = 57861
const APPROX_PERCENTILE = 57862
const CURDATE = 57863
const CURTIME = 57864
const DATE_ADD = 57865
const DATE_SUB = 57866
const EXTRACT = 57867
const GROUP_CONCAT = 57868
const MAX = 57869
const MID = 57870
const MIN = 57871
const NOW = 57872
const POSITION = 57873
const SESSION_USER = 57874
const STD = 57875
const STDDEV = 57876
const MEDIAN = 57877
const STDDEV_POP = 57878
const STDDEV_SAMP = 57879
const SUBDATE = 57880
const SUBSTR = 57881
const SUBSTRING = 57882
const SUM = 57883
const SYSDATE = 57884
const SYSTEM_USER = 57885
const TRANSLATE = 57886
const TRIM = 57887
const VARIANCE = 57888
const VAR_POP = 57889
const VAR_SAMP = 57890
const AVG = 57891
const RANK = 57892
const ROW_NUMBER = 57893
const DENSE_RANK = 57894
const BIT_CAST = 57895
const NEXTVAL = 57896
const SETVAL = 57897
const CURRVAL = 57898
const LASTVAL = 57899
const ARROW = 57900
const ROW = 57901
const OUTFILE = 57902
const HEADER = 57903
const MAX_FILE_SIZE = 57904
const FORCE_QUOTE = 57905
const PARALLEL = 57906
const UNUSED = 57907
const BINDINGS = 57908
const DO = 57909
const DECLARE = 57910
const LOOP = 57911
const WHILE = 57912
const LEAVE = 57913
const ITERATE = 57914
const UNTIL = 57915
const CALL = 57916
const SPBEGIN = 57917
const BACKEND = 57918
const SERVERS = 57919
const HANDLER = 57920
const KILL = 57921
const BACKUP = 57922
const FILESYSTEM = 57923
const QUERY_RESULT = 57924

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"LOWER_THAN_ORDER",
	"ORDER",
	"SELECT",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"AFTER",
	"INSTANT",
	"INPLACE",
	"COPY",
	"DISABLE",
	"ENABLE",
	"UNDEFINED",
	"MERGE",
	"TEMPTABLE",
	"DEFINER",
	"INVOKER",
	"SQL",
	"SECURITY",
	"CASCADED",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"QUOTE_ID",
	"STAGE",
	"CREDENTIALS",
	"STAGES",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"ELSEIF",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"ILIKE",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"OUT",
	"INOUT",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"VECF32",
	"VECF64",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"S3OPTION",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"RETURNS",
	"SCHEMA",
	"TABLE",
	"SEQUENCE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"ENGINE_ATTRIBUTE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"INSERT_METHOD",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"CLUSTER",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"RESET",
	"EXTENSION",
	"INCREMENT",
	"CYCLE",
	"MINVALUE",
	"PUBLICATION",
	"SUBSCRIPTIONS",
	"PUBLICATIONS",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"ACCOUNTS",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"MYSQL_COMPATIBILITY_MODE",
	"MODIFY",
	"CHANGE",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"AUTOEXTEND_SIZE",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"RESTRICTED",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"SHARED",
	"EXCLUSIVE",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INLINE",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"DISCARD",
	"MODUMP",
	"OVER",
	"PRECEDING",
	"FOLLOWING",
	"GROUPS",
	"DATABASES",
	"TABLES",
	"SEQUENCES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NODE",
	"LOCKS",
	"ROLES",
	"TABLE_NUMBER",
	"COLUMN_NUMBER",
	"TABLE_VALUES",
	"TABLE_SIZE",
	"NAMES",
	"GLOBAL",
	"PERSIST",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"SOURCE",
	"STREAM",
	"HEADERS",
	"CONNECTOR",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"MEDIAN",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"RANK",
	"ROW_NUMBER",
	"DENSE_RANK",
	"BIT_CAST",
	"NEXTVAL",
	"SETVAL",
	"CURRVAL",
	"LASTVAL",
	"ARROW",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"PARALLEL",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"LOOP",
	"WHILE",
	"LEAVE",
	"ITERATE",
	"UNTIL",
	"CALL",
	"SPBEGIN",
	"BACKEND",
	"SERVERS",
	"HANDLER",
	"KILL",
	"BACKUP",
	"FILESYSTEM",
	"QUERY_RESULT",
	"';'",
	"'{'",
	"'}'",
	"':'",
	"'@'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:10454

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 116,
	21, 700,
	-2, 681,
	-1, 133,
	235, 1039,
	237, 961,
	-2, 1002,
	-1, 156,
	42, 519,
	237, 519,
	264, 526,
	265, 526,
	454, 519,
	-2, 552,
	-1, 192,
	603, 1755,
	-2, 435,
	-1, 529,
	316, 133,
	427, 133,
	428, 133,
	-2, 1665,
	-1, 593,
	81, 1460,
	-2, 1809,
	-1, 594,
	81, 1478,
	-2, 1780,
	-1, 598,
	81, 1479,
	-2, 1808,
	-1, 624,
	81, 1390,
	-2, 1877,
	-1, 625,
	81, 1391,
	-2, 1876,
	-1, 626,
	81, 1392,
	-2, 1866,
	-1, 627,
	81, 1840,
	-2, 1861,
	-1, 628,
	81, 1841,
	-2, 1862,
	-1, 629,
	81, 1842,
	-2, 1868,
	-1, 630,
	81, 1843,
	-2, 1850,
	-1, 631,
	81, 1844,
	-2, 1859,
	-1, 632,
	81, 1845,
	-2, 1869,
	-1, 633,
	81, 1846,
	-2, 1870,
	-1, 634,
	81, 1847,
	-2, 1875,
	-1, 635,
	81, 1848,
	-2, 1880,
	-1, 636,
	81, 1849,
	-2, 1881,
	-1, 638,
	81, 1457,
	-2, 1653,
	-1, 642,
	81, 1462,
	-2, 1666,
	-1, 645,
	81, 1466,
	-2, 1684,
	-1, 649,
	81, 1470,
	-2, 1726,
	-1, 650,
	81, 1471,
	-2, 1804,
	-1, 658,
	81, 1481,
	-2, 1789,
	-1, 659,
	81, 1482,
	-2, 1833,
	-1, 660,
	81, 1483,
	-2, 1799,
	-1, 661,
	81, 1484,
	-2, 1823,
	-1, 672,
	81, 1368,
	-2, 1871,
	-1, 673,
	81, 1369,
	-2, 1872,
	-1, 674,
	81, 1370,
	-2, 1873,
	-1, 678,
	21, 701,
	-2, 664,
	-1, 757,
	449, 552,
	450, 552,
	-2, 520,
	-1, 802,
	122, 1653,
	133, 1653,
	153, 1653,
	-2, 1628,
	-1, 908,
	21, 701,
	-2, 664,
	-1, 1008,
	21, 700,
	-2, 1265,
	-1, 1384,
	81, 1528,
	-2, 1806,
	-1, 1385,
	81, 1529,
	-2, 1807,
	-1, 1524,
	82, 847,
	-2, 853,
	-1, 1920,
	105, 996,
	149, 996,
	188, 996,
	191, 996,
	277, 996,
	-2, 989,
	-1, 2058,
	21, 700,
	-2, 794,
	-1, 2091,
	82, 1614,
	154, 1614,
	-2, 1791,
	-1, 2092,
	82, 1614,
	154, 1614,
	-2, 1790,
	-1, 2093,
	82, 1590,
	154, 1590,
	-2, 1777,
	-1, 2094,
	82, 1591,
	154, 1591,
	-2, 1782,
	-1, 2095,
	82, 1592,
	154, 1592,
	-2, 1714,
	-1, 2096,
	82, 1593,
	154, 1593,
	-2, 1708,
	-1, 2097,
	82, 1594,
	154, 1594,
	-2, 1644,
	-1, 2098,
	82, 1595,
	154, 1595,
	-2, 1779,
	-1, 2099,
	82, 1596,
	154, 1596,
	-2, 1712,
	-1, 2100,
	82, 1597,
	154, 1597,
	-2, 1707,
	-1, 2101,
	82, 1598,
	154, 1598,
	-2, 1698,
	-1, 2102,
	82, 1614,
	154, 1614,
	-2, 1699,
	-1, 2103,
	82, 1614,
	154, 1614,
	-2, 1700,
	-1, 2105,
	82, 1603,
	154, 1603,
	-2, 1823,
	-1, 2106,
	82, 1581,
	154, 1581,
	-2, 1809,
	-1, 2107,
	82, 1612,
	154, 1612,
	-2, 1780,
	-1, 2108,
	82, 1612,
	154, 1612,
	-2, 1808,
	-1, 2109,
	82, 1612,
	154, 1612,
	-2, 1667,
	-1, 2110,
	82, 1610,
	154, 1610,
	-2, 1799,
	-1, 2111,
	82, 1607,
	154, 1607,
	-2, 1689,
	-1, 2112,
	81, 1562,
	82, 1562,
	154, 1562,
	385, 1562,
	386, 1562,
	387, 1562,
	-2, 1643,
	-1, 2113,
	81, 1563,
	82, 1563,
	154, 1563,
	385, 1563,
	386, 1563,
	387, 1563,
	-2, 1645,
	-1, 2114,
	81, 1566,
	82, 1566,
	154, 1566,
	385, 1566,
	386, 1566,
	387, 1566,
	-2, 1781,
	-1, 2115,
	81, 1568,
	82, 1568,
	154, 1568,
	385, 1568,
	386, 1568,
	387, 1568,
	-2, 1764,
	-1, 2116,
	81, 1570,
	82, 1570,
	154, 1570,
	385, 1570,
	386, 1570,
	387, 1570,
	-2, 1713,
	-1, 2117,
	81, 1572,
	82, 1572,
	154, 1572,
	385, 1572,
	386, 1572,
	387, 1572,
	-2, 1694,
	-1, 2118,
	81, 1573,
	82, 1573,
	154, 1573,
	385, 1573,
	386, 1573,
	387, 1573,
	-2, 1695,
	-1, 2119,
	81, 1575,
	82, 1575,
	154, 1575,
	385, 1575,
	386, 1575,
	387, 1575,
	-2, 1642,
	-1, 2120,
	82, 1617,
	154, 1617,
	385, 1617,
	386, 1617,
	387, 1617,
	-2, 1672,
	-1, 2121,
	82, 1617,
	154, 1617,
	385, 1617,
	386, 1617,
	387, 1617,
	-2, 1685,
	-1, 2122,
	82, 1620,
	154, 1620,
	385, 1620,
	386, 1620,
	387, 1620,
	-2, 1668,
	-1, 2123,
	82, 1620,
	154, 1620,
	385, 1620,
	386, 1620,
	387, 1620,
	-2, 1729,
	-1, 2124,
	82, 1617,
	154, 1617,
	385, 1617,
	386, 1617,
	387, 1617,
	-2, 1749,
	-1, 2298,
	105, 996,
	149, 996,
	188, 996,
	191, 996,
	277, 996,
	-2, 990,
	-1, 2314,
	79, 610,
	154, 610,
	-2, 1152,
	-1, 2654,
	191, 996,
	301, 1233,
	-2, 1205,
	-1, 2795,
	105, 996,
	149, 996,
	188, 996,
	191, 996,
	-2, 1095,
	-1, 2797,
	105, 996,
	149, 996,
	188, 996,
	191, 996,
	-2, 1095,
	-1, 2807,
	79, 610,
	154, 610,
	-2, 1153,
	-1, 2816,
	191, 996,
	301, 1233,
	-2, 1206,
	-1, 2945,
	105, 996,
	149, 996,
	188, 996,
	191, 996,
	-2, 1096,
	-1, 3321,
	82, 1057,
	154, 1057,
	-2, 996,
	-1, 3325,
	82, 1057,
	154, 1057,
	-2, 996,
	-1, 3339,
	82, 1061,
	154, 1061,
	-2, 996,
	-1, 3344,
	82, 1062,
	154, 1062,
	-2, 996,
}

const yyPrivate = 57344

const yyLast = 38739

var yyAct = [...]int{
	560, 1604, 3325, 3324, 3333, 3304, 183, 1364, 538, 3191,
	540, 3253, 3274, 533, 3122, 562, 3217, 3199, 2672, 3200,
	548, 2892, 3107, 1884, 1220, 2830, 2897, 1041, 3098, 2936,
	1360, 2986, 3126, 1302, 2737, 2935, 2933, 3021, 590, 2738,
	445, 3058, 3065, 679, 1160, 2269, 1292, 801, 2895, 2766,
	452, 542, 457, 457, 3108, 3110, 1557, 2940, 457, 473,
	482, 2783, 3011, 482, 2951, 2317, 1960, 2944, 2912, 1367,
	2585, 2817, 2887, 2431, 1693, 168, 2432, 2614, 2772, 2669,
	2414, 2947, 2651, 1559, 2354, 2430, 2658, 2089, 2303, 2798,
	2424, 2735, 2583, 1788, 493, 2723, 1757, 2087, 1963, 2453,
	2704, 2598, 2427, 487, 2289, 2593, 2586, 2595, 1213, 2052,
	2631, 902, 1658, 531, 2657, 1930, 1705, 2299, 2036, 2334,
	1897, 1888, 2492, 537, 1765, 1766, 2530, 1731, 1887, 1504,
	2140, 1758, 1296, 2475, 1990, 55, 733, 1288, 1690, 2053,
	1783, 36, 1686, 1784, 1661, 1133, 807, 532, 1659, 2041,
	2278, 2273, 2336, 1961, 1586, 1293, 2309, 1596, 179, 8,
	445, 1281, 178, 7, 1534, 6, 2085, 1929, 2157, 854,
	1512, 2203, 1363, 1112, 1358, 1817, 1785, 1301, 2080, 541,
	1255, 2588, 1199, 183, 1229, 183, 451, 845, 846, 1911,
	2587, 1569, 1926, 1414, 839, 840, 1956, 795, 530, 844,
	479, 1795, 1168, 1149, 764, 1135, 805, 1398, 1349, 26,
	115, 1568, 919, 35, 2234, 549, 15, 1761, 1764, 1262,
	1721, 13, 1080, 14, 1357, 32, 794, 1747, 532, 1533,
	1169, 2060, 469, 466, 1198, 1248, 732, 444, 1420, 676,
	1196, 1421, 1161, 495, 23, 16, 10, 169, 1254, 162,
	2233, 165, 481, 710, 1792, 730, 715, 1145, 841, 3052,
	843, 496, 842, 678, 2259, 2259, 2259, 539, 478, 1802,
	1042, 2786, 2730, 2192, 2146, 474, 2143, 2144, 1517, 2141,
	476, 752, 477, 1269, 475, 838, 838, 1265, 167, 837,
	1097, 453, 3260, 838, 1181, 1267, 2885, 2488, 2486, 811,
	977, 978, 979, 976, 1736, 462, 3017, 3012, 2888, 2820,
	977, 978, 979, 976, 2736, 485, 1508, 3112, 1760, 677,
	1998, 166, 1036, 166, 3069, 166, 8, 687, 166, 3182,
	7, 166, 166, 836, 166, 51, 158, 134, 940, 166,
	1098, 1316, 2268, 1309, 2270, 2922, 2913, 2832, 2178, 2186,
	1789, 1541, 3039, 3144, 1107, 166, 51, 158, 134, 1528,
	2823, 166, 51, 158, 134, 491, 492, 2554, 3070, 114,
	2818, 1313, 1800, 1306, 808, 2840, 2841, 810, 1125, 2507,
	2500, 2819, 667, 3041, 666, 668, 669, 114, 670, 671,
	163, 783, 1315, 1915, 1308, 1099, 1350, 163, 2078, 1354,
	163, 163, 1177, 163, 974, 1178, 2460, 2461, 163, 1334,
	948, 955, 2079, 950, 956, 1703, 2066, 2459, 2824, 2065,
	1671, 1672, 2067, 1353, 163, 1518, 1519, 1670, 680, 688,
	163, 1200, 1164, 1202, 2275, 2158, 1163, 1166, 1167, 3236,
	1157, 951, 958, 967, 2276, 1166, 1167, 3203, 3204, 773,
	3234, 1582, 1366, 972, 804, 2906, 457, 803, 3115, 3175,
	3114, 3174, 3113, 3173, 3115, 3114, 457, 912, 3113, 1875,
	3177, 3221, 3222, 3022, 3023, 3024, 3025, 2739, 3103, 3019,
	1106, 3100, 3015, 2493, 482, 482, 3181, 457, 3100, 1370,
	2739, 1180, 2274, 2494, 922, 2495, 2173, 913, 1804, 3119,
	1687, 2281, 1355, 1681, 2748, 2773, 907, 909, 2370, 1796,
	1677, 2839, 1345, 1964, 2780, 2609, 944, 953, 2607, 2599,
	2030, 960, 1268, 1266, 961, 1352, 1909, 1744, 721, 3047,
	2927, 848, 3179, 779, 777, 2842, 778, 2262, 2828, 943,
	922, 946, 1275, 1274, 970, 971, 1996, 2518, 980, 133,
	2520, 164, 963, 949, 952, 969, 526, 1009, 2183, 528,
	2825, 2829, 2827, 2826, 527, 1018, 2886, 3184, 3185, 2487,
	906, 156, 2418, 2604, 2605, 2037, 2033, 1010, 2032, 945,
	954, 3050, 3229, 2924, 3238, 935, 911, 2905, 1025, 2606,
	2623, 806, 912, 3066, 2907, 3202, 2632, 2603, 2834, 2835,
	1369, 1368, 2987, 2988, 2989, 2991, 2990, 2854, 811, 2310,
	908, 3034, 479, 479, 3035, 3132, 2670, 2671, 3034, 1801,
	484, 3035, 784, 483, 1806, 1808, 1809, 959, 2423, 3029,
	1917, 3127, 1109, 1108, 2847, 1155, 3193, 3318, 1190, 780,
	2842, 1351, 3334, 1045, 3265, 3272, 3233, 1179, 965, 966,
	3189, 3190, 2821, 3193, 1144, 947, 957, 1979, 2833, 2857,
	1701, 1702, 3118, 1959, 1981, 964, 2674, 3037, 1096, 2293,
	2294, 2295, 2296, 2977, 3037, 723, 3298, 724, 2007, 811,
	478, 478, 1666, 808, 924, 923, 810, 474, 474, 2398,
	962, 2006, 476, 476, 477, 477, 475, 475, 3036, 1104,
	452, 2287, 782, 915, 916, 3036, 2898, 3051, 1790, 2601,
	457, 1046, 2751, 2524, 2258, 926, 1209, 2966, 1790, 1077,
	1790, 1980, 1376, 1379, 1380, 1966, 2082, 2027, 2028, 1142,
	924, 923, 733, 1377, 456, 456, 928, 929, 2972, 1208,
	464, 933, 1159, 1158, 1141, 3335, 1140, 3329, 2799, 3067,
	932, 3341, 3068, 838, 808, 838, 3305, 810, 838, 838,
	3059, 903, 3183, 2571, 1818, 917, 1016, 1959, 838, 480,
	838, 2883, 1113, 1791, 1976, 480, 2142, 491, 781, 1165,
	457, 3097, 1192, 1803, 1197, 2270, 1270, 2838, 445, 445,
	2455, 2457, 2666, 1966, 1969, 2179, 1162, 445, 445, 2070,
	3042, 1224, 1224, 2280, 457, 940, 1118, 1166, 1167, 3239,
	1994, 2523, 1012, 1013, 1014, 1015, 490, 677, 1166, 1167,
	2610, 3277, 2600, 482, 1249, 452, 1226, 1688, 1258, 1258,
	52, 1222, 1222, 135, 3048, 135, 52, 135, 1793, 183,
	135, 1257, 1257, 135, 135, 1123, 135, 2837, 445, 2923,
	1231, 135, 1156, 2187, 1969, 2521, 2673, 934, 1110, 2284,
	2285, 1965, 1807, 1122, 1121, 486, 1967, 135, 2470, 2471,
	1054, 1055, 3178, 135, 2283, 3328, 2760, 1114, 1115, 1116,
	1117, 2371, 1119, 2372, 2373, 1680, 1105, 1124, 2928, 1805,
	939, 806, 1678, 2667, 1346, 2979, 2670, 2671, 2368, 1300,
	1276, 1303, 2602, 727, 728, 729, 1311, 1218, 1219, 2532,
	2531, 1130, 3030, 829, 834, 835, 3031, 1893, 1892, 3030,
	1968, 2261, 1082, 3109, 1970, 722, 1332, 3340, 1891, 1965,
	1959, 1964, 1084, 1962, 1967, 2399, 2401, 2402, 2403, 2400,
	1224, 1138, 1224, 912, 1102, 1521, 1143, 1100, 1101, 1151,
	1152, 1186, 1317, 1153, 1522, 2456, 678, 3278, 1111, 1890,
	1378, 1171, 1172, 2968, 1174, 1175, 1176, 2967, 2973, 2974,
	1520, 694, 690, 1191, 1146, 1150, 1150, 1150, 2019, 1975,
	1327, 1328, 691, 1973, 1970, 1204, 1206, 1132, 1968, 1371,
	1372, 1373, 1374, 1375, 1216, 1217, 774, 1146, 1146, 1386,
	1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396,
	1397, 1250, 725, 1290, 1291, 1409, 1410, 1279, 3347, 1282,
	1283, 3280, 693, 1419, 1182, 1183, 696, 695, 2952, 1298,
	1284, 1285, 3302, 1416, 1417, 1418, 1170, 1468, 811, 1173,
	2621, 1452, 811, 1850, 1307, 1271, 1849, 774, 1314, 1462,
	1295, 1207, 3346, 1299, 2389, 2390, 681, 3337, 1232, 479,
	1477, 462, 1365, 975, 1560, 1458, 1459, 1460, 2050, 1341,
	3319, 1242, 1331, 3314, 2701, 1247, 940, 1259, 1474, 776,
	1330, 1475, 775, 681, 3308, 1362, 1260, 3275, 3276, 3307,
	975, 1993, 2668, 1506, 1484, 1485, 1913, 1510, 1560, 2160,
	1513, 2697, 2637, 831, 832, 833, 1381, 1249, 3285, 2763,
	1343, 2750, 1359, 1531, 3255, 1224, 1536, 1537, 975, 1539,
	1540, 3211, 1502, 1878, 975, 457, 2178, 478, 1224, 3338,
	776, 1318, 733, 775, 474, 1558, 1900, 1340, 904, 476,
	1224, 477, 1798, 475, 1337, 3315, 1192, 2315, 910, 1336,
	1323, 473, 1319, 3205, 1505, 678, 1798, 3154, 3257, 1901,
	1902, 1798, 1467, 977, 978, 979, 976, 1347, 2622, 931,
	1581, 785, 1339, 1338, 1335, 1882, 2388, 2316, 1587, 1587,
	1798, 1192, 1356, 1192, 1192, 3091, 3256, 457, 457, 2676,
	1531, 1531, 2051, 3212, 1224, 1655, 1656, 1668, 1530, 975,
	1585, 2051, 1361, 2051, 1450, 1451, 3090, 1454, 2473, 2552,
	1912, 445, 1538, 1224, 1147, 1469, 3086, 3085, 1400, 1829,
	3084, 3083, 2264, 937, 2165, 3055, 1078, 1506, 1476, 3055,
	1478, 3054, 1506, 1506, 2916, 2701, 2861, 1574, 457, 1531,
	1224, 2082, 1710, 938, 457, 457, 1714, 1715, 977, 978,
	979, 976, 1580, 1719, 1720, 1583, 1584, 3092, 1726, 2685,
	2624, 977, 978, 979, 976, 183, 2450, 1453, 183, 183,
	1606, 183, 1407, 1408, 1789, 1650, 1651, 1734, 1934, 1724,
	1737, 1526, 1527, 1740, 1529, 2316, 1742, 1535, 3055, 3055,
	2240, 2232, 3055, 3055, 1828, 1542, 1543, 1544, 1479, 938,
	1550, 1348, 1669, 3055, 1682, 1509, 2917, 1881, 2082, 1468,
	1468, 1768, 1563, 1674, 2193, 1676, 1468, 1468, 1503, 1954,
	1883, 1775, 1854, 1780, 1707, 1694, 1695, 2176, 2169, 1699,
	1148, 2686, 2625, 1588, 2167, 1709, 2162, 2155, 2051, 2153,
	1735, 2151, 1525, 1738, 1739, 1558, 1741, 1566, 1567, 1224,
	1787, 905, 1570, 1589, 1572, 1573, 1689, 1696, 1697, 2149,
	1712, 1713, 975, 975, 1576, 1577, 1535, 1578, 1555, 1579,
	1554, 1146, 1590, 990, 1000, 1001, 993, 994, 995, 996,
	997, 998, 999, 992, 1571, 1575, 975, 1933, 1131, 1879,
	1412, 1860, 1120, 1859, 1591, 1592, 1150, 1210, 1565, 1934,
	2163, 1781, 1848, 1839, 1561, 1562, 2168, 1838, 2163, 2156,
	1769, 2154, 1359, 2150, 1815, 1816, 2779, 1722, 2810, 2638,
	2477, 1837, 2318, 1654, 2181, 2180, 1821, 1797, 1657, 1825,
	3000, 2150, 1324, 2172, 1763, 1811, 1950, 1683, 1673, 940,
	1675, 1763, 1845, 1830, 811, 2062, 1779, 1729, 1717, 1320,
	1022, 811, 925, 905, 1704, 900, 898, 2859, 992, 1934,
	2210, 1878, 1188, 975, 1708, 975, 479, 1698, 2642, 1836,
	1457, 1456, 1457, 1456, 975, 975, 2633, 1843, 2515, 975,
	1730, 1732, 692, 3294, 3281, 1991, 1230, 3133, 897, 893,
	894, 895, 896, 975, 2215, 1856, 2214, 2213, 2211, 1798,
	1861, 1862, 1863, 2953, 1325, 1866, 1867, 1868, 1869, 1870,
	1871, 1872, 1873, 2141, 1855, 1749, 1857, 905, 1147, 808,
	2802, 3053, 810, 1864, 531, 3026, 808, 457, 457, 810,
	457, 3134, 1136, 1770, 478, 1772, 1137, 811, 1778, 2800,
	1773, 474, 1774, 457, 457, 457, 476, 2954, 477, 1214,
	475, 2970, 2634, 1212, 2969, 1931, 1782, 1777, 2785, 2702,
	1215, 1406, 2212, 2728, 2803, 1938, 1192, 995, 996, 997,
	998, 999, 992, 2695, 1935, 2690, 1943, 1403, 1405, 1402,
	1490, 1404, 1483, 2801, 1819, 2687, 2616, 2420, 2291, 2260,
	1192, 977, 978, 979, 976, 1187, 2635, 1189, 1810, 1193,
	1194, 1195, 2731, 2191, 1986, 697, 2166, 1823, 2072, 1127,
	1812, 1126, 808, 914, 2200, 810, 2135, 1733, 1400, 1000,
	1001, 993, 994, 995, 996, 997, 998, 999, 992, 1237,
	1238, 1239, 1240, 1241, 1148, 1243, 1244, 1245, 1246, 1415,
	1415, 1824, 1252, 1253, 977, 978, 979, 976, 2479, 1532,
	1940, 1941, 1211, 3172, 1992, 2145, 1263, 976, 1733, 3297,
	1944, 1945, 979, 976, 2055, 2055, 1668, 2055, 2982, 2981,
	2496, 1813, 1814, 991, 990, 1000, 1001, 993, 994, 995,
	996, 997, 998, 999, 992, 445, 445, 2360, 1506, 2359,
	1506, 2342, 1852, 912, 2340, 2216, 2217, 2930, 2931, 1224,
	457, 2961, 1906, 3323, 977, 978, 979, 976, 1506, 1506,
	3311, 1024, 457, 2729, 1874, 1876, 1877, 912, 2125, 452,
	3296, 3266, 1894, 1258, 1023, 1668, 3261, 1472, 2130, 2076,
	2132, 2925, 3195, 3163, 183, 2777, 1257, 1914, 3135, 3076,
	1953, 1473, 3071, 3013, 1045, 2956, 1997, 2410, 1999, 2000,
	2001, 2002, 2003, 2004, 2005, 2408, 2955, 2008, 2009, 2010,
	2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2406, 2020,
	2021, 2022, 2023, 2024, 2057, 2025, 2061, 1939, 2059, 1958,
	2174, 1951, 1947, 1787, 1946, 1948, 1952, 2926, 1957, 1949,
	1224, 2778, 1224, 2804, 1224, 1971, 1972, 826, 1977, 912,
	2290, 811, 2395, 2409, 2776, 2127, 2608, 1545, 2511, 2136,
	2491, 2407, 1046, 2068, 2134, 2069, 1150, 977, 978, 979,
	976, 2490, 2184, 2393, 2405, 2392, 2202, 2391, 2084, 2383,
	1224, 2219, 2377, 2073, 2074, 1827, 2090, 2129, 2201, 2376,
	977, 978, 979, 976, 2034, 2375, 2226, 2220, 2221, 2137,
	2784, 1224, 2063, 2374, 2218, 2223, 2224, 1752, 2394, 1751,
	1222, 2228, 977, 978, 979, 976, 1750, 1746, 2229, 1593,
	1594, 1264, 1745, 1885, 1886, 2227, 808, 1321, 1095, 810,
	2425, 1222, 1204, 1206, 2077, 977, 978, 979, 976, 2594,
	3284, 3228, 1506, 1263, 3226, 2253, 2254, 1513, 526, 2230,
	912, 528, 2893, 2128, 912, 2126, 527, 457, 2545, 977,
	978, 979, 976, 1224, 2204, 2204, 2288, 3223, 2188, 3121,
	1706, 2934, 1531, 2304, 3141, 3106, 1706, 1706, 3095, 2314,
	3080, 3075, 2190, 3074, 2185, 2320, 3049, 3014, 821, 817,
	812, 816, 819, 2963, 2198, 977, 978, 979, 976, 2943,
	2929, 2329, 2171, 2251, 2891, 2889, 2868, 912, 2865, 2177,
	2175, 2863, 1359, 2415, 2182, 2339, 824, 2544, 2775, 2774,
	815, 2771, 912, 912, 912, 1587, 2756, 2696, 912, 2692,
	2350, 2351, 2352, 912, 2683, 2356, 2357, 2225, 2358, 2194,
	2195, 2682, 2617, 977, 978, 979, 976, 2578, 2209, 2207,
	2577, 2576, 2300, 1889, 2525, 1455, 2522, 2301, 2489, 2464,
	2404, 2055, 1833, 1826, 2396, 2311, 2386, 2384, 2380, 2265,
	2379, 822, 2378, 2090, 1880, 2411, 2323, 1754, 825, 1748,
	2325, 1516, 2321, 445, 623, 622, 1606, 1515, 1531, 912,
	1668, 1668, 1668, 1668, 2277, 813, 3196, 1322, 1053, 2252,
	2267, 912, 1668, 2272, 2255, 2055, 1049, 1048, 3137, 1711,
	901, 2337, 689, 2333, 3027, 2337, 2920, 1841, 823, 2797,
	2266, 1224, 977, 978, 979, 976, 2796, 2286, 2344, 977,
	978, 979, 976, 457, 457, 1535, 2197, 977, 978, 979,
	976, 8, 2345, 2346, 3125, 7, 2313, 2349, 2319, 2795,
	2762, 2755, 2355, 2743, 977, 978, 979, 976, 814, 2330,
	2235, 2236, 2332, 2734, 2335, 2733, 2241, 2720, 2719, 2341,
	977, 978, 979, 976, 2446, 2643, 2581, 2366, 2367, 2348,
	2550, 2543, 166, 1840, 158, 134, 2535, 2338, 183, 2534,
	2529, 2381, 2382, 183, 2472, 2322, 977, 978, 979, 976,
	2385, 2263, 2328, 2326, 2327, 2483, 2152, 2485, 2433, 977,
	978, 979, 976, 2148, 1468, 2417, 1468, 2147, 1865, 2506,
	2433, 1858, 1853, 2510, 2324, 1506, 1851, 1847, 2474, 1224,
	1506, 2416, 2517, 1846, 820, 2421, 1844, 1835, 2434, 2435,
	2436, 2437, 1832, 1831, 2449, 1753, 2447, 1501, 2448, 2445,
	1500, 163, 166, 1499, 1471, 678, 2900, 1470, 1461, 1904,
	1905, 2462, 1907, 2480, 1236, 2465, 2528, 1234, 2484, 3336,
	3293, 818, 2899, 3287, 3273, 1923, 1924, 1925, 3270, 3268,
	2419, 3162, 977, 978, 979, 976, 1505, 1043, 3093, 2549,
	2458, 2505, 3082, 3077, 1278, 2995, 1290, 1291, 977, 978,
	979, 976, 2980, 2976, 1283, 2851, 1298, 2876, 1942, 2874,
	2538, 2503, 2540, 2849, 1284, 1285, 2481, 2509, 2478, 912,
	2482, 163, 3153, 2753, 2514, 2848, 2845, 1295, 2597, 2519,
	1299, 977, 978, 979, 976, 3244, 2548, 2844, 2612, 2502,
	2504, 2499, 2497, 457, 2787, 2591, 2590, 1289, 811, 977,
	978, 979, 976, 2547, 2501, 811, 1280, 912, 912, 912,
	1294, 2508, 977, 978, 979, 976, 1668, 1931, 1297, 2641,
	2527, 2526, 2513, 1286, 1134, 2645, 2412, 2343, 2308, 977,
	978, 979, 976, 2533, 2307, 2306, 2250, 2656, 2161, 2659,
	2071, 2659, 2659, 2541, 2542, 2026, 912, 1932, 2620, 1922,
	563, 573, 2539, 2580, 1903, 1401, 163, 2663, 1716, 564,
	2678, 572, 565, 569, 568, 566, 567, 1224, 1224, 1524,
	1344, 2675, 2536, 2537, 1310, 2572, 2546, 1287, 1079, 2677,
	2300, 2575, 1230, 1076, 1075, 2579, 1074, 1073, 1072, 1071,
	1070, 2679, 2680, 1069, 1706, 1068, 1067, 1222, 1222, 2628,
	2629, 2630, 977, 978, 979, 976, 2644, 2613, 2249, 1066,
	2646, 2647, 1065, 457, 570, 1064, 2619, 1063, 2597, 1062,
	3151, 2248, 2654, 2655, 2636, 1061, 1060, 2664, 2639, 1531,
	1531, 1059, 2640, 1058, 977, 978, 979, 976, 1057, 2626,
	2627, 2649, 2247, 1056, 1052, 1051, 571, 977, 978, 979,
	976, 1050, 2665, 1047, 1040, 2660, 2661, 993, 994, 995,
	996, 997, 998, 999, 992, 1039, 1037, 811, 977, 978,
	979, 976, 1036, 2650, 912, 2246, 1035, 1034, 2219, 1033,
	3149, 2245, 2555, 2556, 3242, 3312, 1032, 2732, 2557, 2558,
	2559, 2560, 2244, 2561, 2562, 2563, 2564, 2565, 2566, 2567,
	2568, 977, 978, 979, 976, 575, 116, 977, 978, 979,
	976, 116, 1031, 1030, 1029, 2700, 2662, 1028, 977, 978,
	979, 976, 2688, 2693, 457, 2689, 1027, 2694, 2691, 2684,
	2712, 2698, 2699, 1026, 2648, 1021, 1020, 2709, 991, 990,
	1000, 1001, 993, 994, 995, 996, 997, 998, 999, 992,
	1019, 2196, 2713, 942, 2716, 2717, 2718, 899, 3147, 2752,
	2846, 463, 2705, 2706, 116, 1937, 2754, 1919, 930, 3201,
	2711, 2721, 2243, 2708, 2727, 991, 990, 1000, 1001, 993,
	994, 995, 996, 997, 998, 999, 992, 3291, 2292, 2271,
	2083, 2767, 912, 2090, 1756, 941, 2878, 2744, 977, 978,
	979, 976, 2242, 2879, 2745, 2442, 2239, 2746, 2747, 2710,
	2443, 2312, 2439, 2757, 983, 984, 985, 986, 987, 988,
	989, 981, 2440, 2438, 2791, 3322, 2304, 2441, 977, 978,
	979, 976, 977, 978, 979, 976, 2170, 2055, 1668, 2807,
	991, 990, 1000, 1001, 993, 994, 995, 996, 997, 998,
	999, 992, 2877, 2444, 912, 2047, 2048, 682, 683, 684,
	685, 2164, 681, 2656, 2759, 2238, 1128, 912, 2615, 809,
	1552, 1553, 2257, 116, 1547, 1548, 1549, 912, 2793, 2794,
	1995, 101, 1224, 2856, 2769, 54, 53, 454, 116, 2722,
	116, 977, 978, 979, 976, 1642, 1272, 2652, 1531, 2653,
	2189, 2362, 912, 2159, 2782, 1506, 2860, 2809, 2363, 2364,
	2365, 1081, 1222, 1304, 2792, 1910, 1506, 2592, 811, 2873,
	1718, 2843, 2875, 2808, 2761, 811, 2573, 2574, 811, 2811,
	183, 2764, 2812, 1235, 2770, 936, 2836, 459, 2881, 2813,
	458, 460, 461, 912, 2870, 2589, 2805, 2855, 2852, 2850,
	2806, 1885, 1886, 2237, 2582, 2788, 2789, 2790, 2331, 2882,
	1927, 2858, 1556, 1523, 912, 2467, 2468, 2862, 2864, 1457,
	1456, 3214, 2867, 2814, 2880, 2231, 3079, 2872, 2871, 977,
	978, 979, 976, 2869, 1093, 1094, 2853, 2681, 912, 1224,
	1224, 2035, 2908, 1091, 1092, 2031, 2355, 2946, 1653, 2946,
	1185, 977, 978, 979, 976, 2884, 1089, 1090, 2914, 2222,
	1087, 1088, 1184, 2939, 968, 2715, 2894, 2081, 1776, 1222,
	2941, 2433, 1139, 1083, 3288, 1224, 3187, 3169, 3167, 2962,
	2866, 2199, 2909, 3128, 2915, 977, 978, 979, 976, 2921,
	3105, 3104, 3102, 457, 3094, 912, 912, 3008, 2911, 912,
	912, 3007, 2890, 2758, 2741, 2941, 2740, 977, 978, 979,
	976, 2725, 2433, 2998, 1982, 2950, 2949, 1411, 1086, 2724,
	2997, 2476, 1560, 2809, 2512, 1558, 1921, 3005, 2959, 2992,
	2984, 2985, 2964, 2843, 2993, 2994, 3009, 3010, 2960, 2957,
	2958, 3246, 3245, 977, 978, 979, 976, 1834, 2836, 927,
	3245, 3246, 2918, 2919, 2978, 2742, 2466, 2937, 1820, 681,
	2043, 2046, 2047, 2048, 2044, 3002, 2045, 2049, 2767, 682,
	683, 684, 685, 1154, 681, 3033, 170, 3, 62, 3001,
	2, 3003, 991, 990, 1000, 1001, 993, 994, 995, 996,
	997, 998, 999, 992, 3258, 3259, 1201, 3061, 2064, 1700,
	1228, 1, 3057, 1514, 686, 2451, 2452, 2714, 2454, 3028,
	3032, 1794, 2422, 2029, 2937, 2937, 3046, 3043, 2937, 2937,
	3044, 3045, 3038, 1908, 2611, 2618, 116, 116, 809, 1129,
	726, 1463, 2038, 1329, 3056, 828, 921, 1326, 920, 918,
	1413, 577, 3064, 1759, 2999, 3062, 912, 2413, 3063, 2387,
	1224, 3072, 3073, 3004, 3213, 3252, 2901, 3161, 3216, 1342,
	561, 3096, 3018, 3165, 3020, 2896, 1799, 3078, 973, 2043,
	2046, 2047, 2048, 2044, 3088, 2045, 2049, 2498, 748, 614,
	1222, 3087, 588, 1038, 1312, 1305, 2553, 830, 587, 2781,
	3117, 2282, 2469, 827, 749, 1743, 3016, 1273, 1277, 1008,
	3111, 1025, 3332, 3321, 3303, 3286, 912, 3192, 3101, 3099,
	3317, 3232, 3129, 1480, 1481, 1482, 3271, 2904, 1486, 1487,
	1488, 1489, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498,
	3124, 2902, 2903, 912, 3264, 3123, 3188, 497, 1679, 3120,
	1224, 3138, 443, 3156, 3159, 1706, 792, 3131, 3146, 3148,
	3150, 3152, 2996, 1755, 498, 1936, 3139, 3180, 3081, 707,
	1918, 708, 700, 2298, 3155, 2937, 3160, 3136, 3145, 2297,
	1222, 1382, 982, 1399, 3168, 2569, 3170, 3171, 3166, 2570,
	1017, 1224, 536, 3164, 1822, 3089, 2279, 2831, 2463, 61,
	60, 3197, 59, 58, 1725, 191, 579, 190, 2932, 3186,
	3158, 3218, 559, 558, 557, 3194, 556, 736, 555, 2042,
	2040, 1222, 2039, 3220, 1663, 1662, 1723, 2353, 2347, 1978,
	1983, 1595, 3198, 3142, 3143, 2937, 2975, 2397, 3219, 3206,
	3210, 3207, 1546, 3208, 1974, 3209, 1085, 1612, 912, 2369,
	1609, 3224, 1608, 3111, 2361, 3225, 2971, 3130, 2965, 1639,
	2302, 2765, 2937, 2945, 2815, 2816, 2749, 2822, 853, 849,
	851, 852, 850, 3251, 3140, 3240, 3235, 3237, 3243, 3241,
	2208, 3247, 3248, 3249, 3250, 3254, 735, 1955, 2584, 1899,
	3262, 1898, 912, 1896, 1895, 1103, 774, 3116, 3176, 3263,
	2910, 2088, 2086, 3267, 2707, 3269, 2703, 1767, 1511, 2256,
	1664, 1660, 1920, 3040, 1551, 701, 1916, 3220, 3283, 3279,
	98, 148, 48, 89, 88, 97, 146, 47, 175, 912,
	174, 912, 3219, 3282, 177, 176, 3290, 173, 3292, 2138,
	2139, 172, 3295, 1261, 171, 2948, 675, 38, 37, 33,
	12, 3254, 3299, 11, 912, 3301, 34, 21, 3306, 22,
	20, 3310, 1333, 3313, 19, 25, 3316, 3230, 31, 30,
	109, 108, 1233, 29, 107, 106, 3227, 463, 105, 776,
	104, 3320, 775, 3327, 103, 28, 18, 3331, 42, 3330,
	1441, 166, 51, 158, 134, 3339, 41, 40, 9, 96,
	94, 3327, 3344, 3343, 116, 27, 3331, 95, 92, 159,
	93, 1365, 90, 73, 72, 71, 151, 86, 761, 85,
	160, 84, 83, 82, 81, 79, 737, 80, 747, 70,
	3342, 69, 68, 67, 66, 3345, 91, 77, 87, 114,
	78, 76, 75, 74, 65, 64, 63, 132, 1365, 131,
	1365, 129, 130, 739, 102, 128, 1441, 127, 126, 125,
	163, 124, 123, 43, 44, 45, 46, 142, 116, 141,
	143, 145, 116, 1365, 147, 723, 1003, 724, 1007, 144,
	139, 137, 140, 116, 138, 136, 56, 99, 17, 24,
	4, 0, 0, 116, 1004, 1006, 1002, 0, 1005, 991,
	990, 1000, 1001, 993, 994, 995, 996, 997, 998, 999,
	992, 0, 0, 705, 3289, 0, 760, 759, 0, 0,
	0, 0, 0, 0, 0, 0, 718, 0, 714, 0,
	0, 0, 0, 758, 2551, 0, 119, 120, 0, 121,
	122, 0, 0, 0, 734, 0, 0, 1437, 0, 0,
	0, 0, 0, 1434, 0, 738, 769, 1436, 1433, 1435,
	1439, 1440, 0, 0, 0, 1438, 0, 991, 990, 1000,
	1001, 993, 994, 995, 996, 997, 998, 999, 992, 765,
	0, 0, 0, 0, 0, 2983, 0, 991, 990, 1000,
	1001, 993, 994, 995, 996, 997, 998, 999, 992, 0,
	0, 0, 0, 0, 0, 0, 133, 157, 164, 0,
	100, 0, 0, 1437, 0, 766, 770, 0, 0, 1434,
	0, 0, 0, 1436, 1433, 1435, 1439, 1440, 156, 150,
	149, 1438, 0, 0, 755, 57, 753, 757, 773, 0,
	0, 0, 754, 751, 750, 0, 756, 741, 742, 740,
	743, 744, 745, 746, 720, 771, 713, 772, 0, 0,
	0, 0, 0, 0, 0, 717, 716, 0, 767, 768,
	991, 990, 1000, 1001, 993, 994, 995, 996, 997, 998,
	999, 992, 699, 0, 0, 0, 706, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 152, 153, 154, 0,
	0, 0, 0, 0, 0, 763, 0, 0, 1444, 1445,
	1446, 1447, 1448, 1449, 1442, 1443, 0, 0, 0, 0,
	0, 0, 161, 0, 0, 722, 0, 0, 0, 0,
	712, 0, 0, 0, 711, 0, 0, 0, 0, 0,
	698, 0, 110, 0, 704, 0, 155, 0, 111, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 702, 1667, 1422, 1423, 1424, 1425, 1426, 1427, 1428,
	1429, 1430, 1431, 1432, 1444, 1445, 1446, 1447, 1448, 1449,
	1442, 1443, 0, 0, 762, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 721, 0,
	0, 0, 0, 0, 0, 112, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 50, 0, 0,
	0, 0, 0, 0, 703, 0, 0, 0, 0, 0,
	116, 0, 0, 116, 116, 0, 116, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 52, 0, 0, 595,
	0, 0, 0, 0, 809, 0, 0, 0, 337, 0,
	0, 809, 0, 0, 0, 0, 0, 0, 0, 0,
	116, 550, 0, 0, 0, 280, 0, 0, 307, 0,
	719, 0, 0, 135, 0, 0, 0, 0, 0, 0,
	0, 438, 0, 439, 0, 0, 586, 0, 0, 366,
	321, 0, 0, 0, 0, 646, 654, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 543, 0, 709,
	576, 623, 622, 563, 573, 0, 0, 257, 189, 440,
	0, 441, 564, 0, 572, 565, 569, 568, 566, 567,
	0, 638, 0, 113, 39, 0, 0, 1008, 534, 547,
	49, 551, 0, 0, 0, 117, 118, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 544, 545, 0, 0, 0,
	0, 596, 0, 546, 0, 0, 591, 570, 574, 0,
	0, 0, 0, 248, 371, 387, 258, 362, 400, 263,
	369, 253, 336, 359, 0, 0, 250, 385, 368, 318,
	299, 300, 249, 0, 354, 278, 291, 275, 334, 571,
	594, 598, 274, 660, 592, 395, 252, 0, 394, 333,
	381, 386, 319, 313, 251, 383, 317, 312, 303, 282,
	661, 304, 305, 295, 345, 311, 346, 296, 323, 322,
	324, 0, 0, 0, 0, 0, 423, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	589, 0, 0, 0, 397, 0, 0, 644, 0, 0,
	0, 370, 0, 0, 306, 0, 0, 0, 593, 0,
	357, 339, 657, 535, 0, 355, 309, 382, 347, 388,
	372, 396, 351, 348, 243, 373, 277, 320, 254, 256,
	272, 279, 281, 283, 284, 329, 330, 342, 361, 374,
	375, 376, 276, 264, 356, 265, 293, 266, 244, 269,
	268, 270, 363, 271, 246, 343, 380, 0, 289, 352,
	316, 247, 315, 344, 379, 378, 255, 404, 410, 411,
	0, 0, 416, 0, 0, 0, 424, 429, 430, 431,
	433, 434, 435, 436, 0, 0, 0, 0, 418, 0,
	0, 0, 1465, 1464, 1466, 409, 287, 240, 241, 449,
	642, 335, 1640, 0, 0, 0, 656, 637, 639, 640,
	643, 647, 648, 649, 650, 651, 653, 655, 659, 448,
	0, 0, 0, 0, 0, 447, 341, 0, 360, 0,
	0, 2058, 0, 0, 0, 0, 1642, 0, 0, 0,
	0, 367, 390, 402, 419, 422, 0, 0, 0, 0,
	245, 421, 0, 0, 0, 0, 0, 0, 0, 0,
	658, 0, 0, 0, 401, 0, 0, 0, 0, 0,
	597, 0, 0, 325, 326, 327, 328, 645, 0, 262,
	420, 350, 0, 0, 0, 0, 0, 1617, 0, 0,
	1667, 0, 0, 0, 0, 0, 0, 0, 0, 116,
	414, 415, 286, 292, 432, 294, 261, 340, 288, 399,
	301, 0, 425, 0, 426, 0, 0, 0, 0, 332,
	297, 298, 364, 302, 310, 353, 398, 338, 358, 259,
	389, 365, 314, 0, 0, 667, 641, 666, 668, 669,
	665, 670, 671, 652, 554, 0, 601, 663, 662, 664,
	3060, 0, 0, 0, 1633, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 377, 0, 238, 267, 0, 242, 0, 308,
	0, 349, 285, 0, 0, 630, 607, 608, 609, 552,
	610, 604, 605, 606, 631, 599, 627, 628, 578, 602,
	611, 626, 612, 629, 632, 633, 672, 673, 618, 674,
	615, 634, 625, 624, 613, 600, 635, 636, 585, 580,
	616, 617, 603, 619, 620, 621, 553, 581, 582, 583,
	584, 0, 0, 1621, 405, 406, 407, 428, 391, 0,
	446, 0, 0, 0, 1627, 0, 0, 0, 0, 0,
	0, 0, 0, 450, 442, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1615, 1649, 0, 0, 1616, 1618,
	1620, 0, 1622, 1623, 1624, 1628, 1629, 1630, 1632, 1635,
	1636, 1637, 0, 0, 0, 0, 0, 0, 0, 1625,
	1634, 1626, 0, 0, 0, 595, 0, 0, 116, 0,
	0, 0, 0, 0, 337, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 550, 0, 0,
	0, 280, 1507, 1641, 307, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 438, 0, 439,
	0, 0, 586, 0, 0, 366, 321, 0, 0, 0,
	0, 646, 654, 0, 0, 0, 0, 0, 0, 0,
	1691, 0, 1638, 543, 0, 0, 576, 623, 622, 563,
	573, 0, 0, 257, 189, 440, 0, 441, 564, 1614,
	572, 565, 569, 568, 566, 567, 1613, 638, 0, 0,
	0, 0, 0, 0, 534, 547, 0, 551, 0, 0,
	0, 0, 0, 0, 0, 1667, 1667, 1667, 1667, 0,
	1631, 0, 0, 0, 0, 0, 0, 1667, 0, 1619,
	0, 544, 545, 0, 0, 0, 0, 596, 0, 546,
	0, 0, 1692, 570, 574, 0, 0, 0, 0, 248,
	371, 387, 258, 362, 400, 263, 369, 253, 336, 359,
	0, 0, 250, 385, 368, 318, 299, 300, 249, 0,
	354, 278, 291, 275, 334, 571, 594, 598, 274, 660,
	592, 395, 252, 0, 394, 333, 381, 386, 319, 313,
	251, 383, 317, 312, 303, 282, 661, 304, 305, 295,
	345, 311, 346, 296, 323, 322, 324, 0, 0, 0,
	0, 0, 423, 116, 0, 0, 0, 0, 116, 0,
	0, 0, 0, 0, 0, 0, 589, 0, 0, 0,
	397, 0, 0, 644, 0, 0, 0, 370, 116, 0,
	306, 0, 0, 0, 593, 116, 357, 339, 657, 535,
	0, 355, 309, 382, 347, 388, 372, 396, 351, 348,
	243, 373, 277, 320, 254, 256, 272, 279, 281, 283,
	284, 329, 330, 342, 361, 374, 375, 376, 276, 264,
	356, 265, 293, 266, 244, 269, 268, 270, 363, 271,
	246, 343, 380, 0, 289, 352, 316, 247, 315, 344,
	379, 378, 255, 404, 410, 411, 0, 0, 416, 0,
	0, 0, 424, 429, 430, 431, 433, 434, 435, 436,
	0, 0, 0, 0, 418, 0, 0, 0, 0, 0,
	0, 409, 287, 240, 241, 449, 642, 335, 0, 0,
	0, 0, 656, 637, 639, 640, 643, 647, 648, 649,
	650, 651, 653, 655, 659, 448, 0, 0, 0, 0,
	0, 447, 341, 0, 360, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 367, 390, 402,
	419, 422, 0, 0, 0, 0, 245, 421, 0, 0,
	0, 1667, 0, 0, 0, 0, 658, 0, 0, 0,
	401, 0, 0, 0, 0, 0, 597, 116, 0, 325,
	326, 327, 328, 645, 0, 262, 420, 350, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 414, 415, 286, 292,
	432, 294, 261, 340, 288, 399, 301, 0, 425, 0,
	426, 0, 0, 0, 0, 332, 297, 298, 364, 302,
	310, 353, 398, 338, 358, 259, 389, 365, 314, 0,
	0, 667, 641, 666, 668, 669, 665, 670, 671, 652,
	554, 0, 601, 663, 662, 664, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 377, 0,
	238, 267, 0, 242, 0, 308, 0, 349, 285, 0,
	0, 630, 607, 608, 609, 552, 610, 604, 605, 606,
	631, 599, 627, 628, 578, 602, 611, 626, 612, 629,
	632, 633, 672, 673, 618, 674, 615, 634, 625, 624,
	613, 600, 635, 636, 585, 580, 616, 617, 603, 619,
	620, 621, 553, 581, 582, 583, 584, 0, 0, 0,
	405, 406, 407, 428, 391, 0, 446, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 450,
	442, 0, 0, 0, 0, 0, 0, 0, 166, 595,
	0, 0, 0, 0, 0, 0, 0, 0, 337, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 550, 0, 0, 0, 280, 0, 0, 307, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 438, 0, 439, 0, 0, 1011, 0, 0, 366,
	321, 0, 0, 0, 0, 646, 654, 0, 116, 0,
	0, 0, 0, 0, 0, 116, 0, 543, 116, 0,
	576, 623, 622, 563, 573, 0, 0, 257, 189, 440,
	0, 441, 564, 0, 572, 565, 569, 568, 566, 567,
	0, 638, 0, 0, 0, 0, 0, 0, 534, 547,
	0, 551, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1667, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 544, 545, 0, 0, 0,
	0, 596, 0, 546, 0, 0, 591, 570, 574, 0,
	0, 0, 0, 248, 371, 387, 258, 362, 400, 263,
	369, 253, 336, 359, 0, 0, 250, 385, 368, 318,
	299, 300, 249, 0, 354, 278, 291, 275, 334, 571,
	594, 598, 274, 660, 592, 395, 252, 0, 394, 333,
	381, 386, 319, 313, 251, 383, 317, 312, 303, 282,
	661, 304, 305, 295, 345, 311, 346, 296, 323, 322,
	324, 0, 0, 0, 0, 116, 423, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	589, 0, 0, 0, 397, 0, 0, 644, 0, 0,
	0, 370, 0, 0, 306, 0, 0, 0, 593, 0,
	357, 339, 657, 535, 0, 355, 309, 382, 347, 388,
	372, 396, 351, 348, 243, 373, 277, 320, 254, 256,
	272, 279, 281, 283, 284, 329, 330, 342, 361, 374,
	375, 376, 276, 264, 356, 265, 293, 266, 244, 269,
	268, 270, 363, 271, 246, 343, 380, 0, 289, 352,
	316, 247, 315, 344, 379, 378, 255, 404, 410, 411,
	0, 0, 416, 0, 0, 0, 424, 429, 430, 431,
	433, 434, 435, 436, 0, 0, 0, 0, 418, 0,
	0, 0, 0, 0, 0, 409, 287, 240, 241, 449,
	642, 335, 0, 0, 0, 0, 656, 637, 639, 640,
	643, 647, 648, 649, 650, 651, 653, 655, 659, 448,
	0, 0, 0, 0, 0, 447, 341, 0, 360, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 367, 390, 402, 419, 422, 0, 0, 0, 0,
	245, 421, 0, 0, 0, 0, 0, 0, 0, 0,
	658, 0, 0, 0, 401, 0, 0, 0, 0, 0,
	597, 0, 0, 325, 326, 327, 328, 645, 0, 262,
	420, 350, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	414, 415, 286, 292, 432, 294, 261, 340, 288, 399,
	301, 0, 425, 0, 426, 0, 0, 0, 0, 332,
	297, 298, 364, 302, 310, 353, 398, 338, 358, 259,
	389, 365, 314, 0, 0, 667, 641, 666, 668, 669,
	665, 670, 671, 652, 554, 0, 601, 663, 662, 664,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 377, 0, 238, 267, 0, 242, 0, 308,
	135, 349, 285, 0, 0, 630, 607, 608, 609, 552,
	610, 604, 605, 606, 631, 599, 627, 628, 578, 602,
	611, 626, 612, 629, 632, 633, 672, 673, 618, 674,
	615, 634, 625, 624, 613, 600, 635, 636, 585, 580,
	616, 617, 603, 619, 620, 621, 553, 581, 582, 583,
	584, 0, 0, 595, 405, 406, 407, 428, 391, 0,
	446, 0, 337, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 450, 442, 550, 0, 0, 0, 280,
	3300, 0, 307, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 438, 0, 439, 0, 0,
	586, 0, 0, 366, 321, 0, 0, 0, 0, 646,
	654, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 543, 0, 0, 576, 623, 622, 563, 573, 0,
	0, 257, 189, 440, 0, 441, 564, 0, 572, 565,
	569, 568, 566, 567, 0, 638, 0, 0, 0, 0,
	0, 0, 534, 547, 0, 551, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 544,
	545, 0, 0, 0, 0, 596, 0, 546, 0, 0,
	591, 570, 574, 0, 0, 0, 0, 248, 371, 387,
	258, 362, 400, 263, 369, 253, 336, 359, 0, 0,
	250, 385, 368, 318, 299, 300, 249, 0, 354, 278,
	291, 275, 334, 571, 594, 598, 274, 660, 592, 395,
	252, 0, 394, 333, 381, 386, 319, 313, 251, 383,
	317, 312, 303, 282, 661, 304, 305, 295, 345, 311,
	346, 296, 323, 322, 324, 0, 0, 0, 0, 0,
	423, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 589, 0, 0, 0, 397, 0,
	0, 644, 0, 0, 0, 370, 0, 0, 306, 0,
	0, 0, 593, 0, 357, 339, 657, 535, 0, 355,
	309, 382, 347, 388, 372, 396, 351, 348, 243, 373,
	277, 320, 254, 256, 272, 279, 281, 283, 284, 329,
	330, 342, 361, 374, 375, 376, 276, 264, 356, 265,
	293, 266, 244, 269, 268, 270, 363, 271, 246, 343,
	380, 0, 289, 352, 316, 247, 315, 344, 379, 378,
	255, 404, 410, 411, 0, 0, 416, 0, 0, 0,
	424, 429, 430, 431, 433, 434, 435, 436, 0, 0,
	0, 0, 418, 0, 0, 0, 0, 0, 0, 409,
	287, 240, 241, 449, 642, 335, 0, 0, 0, 0,
	656, 637, 639, 640, 643, 647, 648, 649, 650, 651,
	653, 655, 659, 448, 0, 0, 0, 0, 0, 447,
	341, 0, 360, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 367, 390, 402, 419, 422,
	0, 0, 0, 0, 245, 421, 0, 0, 0, 0,
	0, 0, 0, 0, 658, 0, 0, 0, 401, 0,
	0, 0, 0, 0, 597, 0, 0, 325, 326, 327,
	328, 645, 0, 262, 420, 350, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 414, 415, 286, 292, 432, 294,
	261, 340, 288, 399, 301, 0, 425, 0, 426, 0,
	0, 0, 0, 332, 297, 298, 364, 302, 310, 353,
	398, 338, 358, 259, 389, 365, 314, 0, 0, 667,
	641, 666, 668, 669, 665, 670, 671, 652, 554, 0,
	601, 663, 662, 664, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 377, 0, 238, 267,
	0, 242, 0, 308, 0, 349, 285, 0, 0, 630,
	607, 608, 609, 552, 610, 604, 605, 606, 631, 599,
	627, 628, 578, 602, 611, 626, 612, 629, 632, 633,
	672, 673, 618, 674, 615, 634, 625, 624, 613, 600,
	635, 636, 585, 580, 616, 617, 603, 619, 620, 621,
	553, 581, 582, 583, 584, 0, 0, 595, 405, 406,
	407, 428, 391, 0, 446, 0, 337, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 450, 442, 550,
	0, 0, 0, 280, 1507, 0, 307, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 438,
	0, 439, 0, 0, 586, 0, 0, 366, 321, 0,
	0, 0, 0, 646, 654, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 543, 0, 0, 576, 623,
	622, 563, 573, 0, 0, 257, 189, 440, 0, 441,
	564, 0, 572, 565, 569, 568, 566, 567, 0, 638,
	0, 0, 0, 0, 0, 0, 534, 547, 0, 551,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 544, 545, 0, 0, 0, 0, 596,
	0, 546, 0, 0, 591, 570, 574, 0, 0, 0,
	0, 248, 371, 387, 258, 362, 400, 263, 369, 253,
	336, 359, 0, 0, 250, 385, 368, 318, 299, 300,
	249, 0, 354, 278, 291, 275, 334, 571, 594, 598,
	274, 660, 592, 395, 252, 0, 394, 333, 381, 386,
	319, 313, 251, 383, 317, 312, 303, 282, 661, 304,
	305, 295, 345, 311, 346, 296, 323, 322, 324, 0,
	0, 0, 0, 0, 423, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 589, 0,
	0, 0, 397, 0, 0, 644, 0, 0, 0, 370,
	0, 0, 306, 0, 0, 0, 593, 0, 357, 339,
	657, 535, 0, 355, 309, 382, 347, 388, 372, 396,
	351, 348, 243, 373, 277, 320, 254, 256, 272, 279,
	281, 283, 284, 329, 330, 342, 361, 374, 375, 376,
	276, 264, 356, 265, 293, 266, 244, 269, 268, 270,
	363, 271, 246, 343, 380, 0, 289, 352, 316, 247,
	315, 344, 379, 378, 255, 404, 410, 411, 0, 0,
	416, 0, 0, 0, 424, 429, 430, 431, 433, 434,
	435, 436, 0, 0, 0, 0, 418, 0, 0, 0,
	0, 0, 0, 409, 287, 240, 241, 449, 642, 335,
	0, 0, 0, 0, 656, 637, 639, 640, 643, 647,
	648, 649, 650, 651, 653, 655, 659, 448, 0, 0,
	0, 0, 0, 447, 341, 0, 360, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 367,
	390, 402, 419, 422, 0, 0, 0, 0, 245, 421,
	0, 0, 0, 0, 0, 0, 0, 0, 658, 0,
	0, 0, 401, 0, 0, 0, 0, 0, 597, 0,
	0, 325, 326, 327, 328, 645, 0, 262, 420, 350,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 414, 415,
	286, 292, 432, 294, 261, 340, 288, 399, 301, 0,
	425, 0, 426, 0, 0, 0, 0, 332, 297, 298,
	364, 302, 310, 353, 398, 338, 358, 259, 389, 365,
	314, 0, 0, 667, 641, 666, 668, 669, 665, 670,
	671, 652, 554, 0, 601, 663, 662, 664, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 238, 267, 0, 242, 0, 308, 0, 349,
	285, 0, 0, 630, 607, 608, 609, 552, 610, 604,
	605, 606, 631, 599, 627, 628, 578, 602, 611, 626,
	612, 629, 632, 633, 672, 673, 618, 674, 615, 634,
	625, 624, 613, 600, 635, 636, 585, 580, 616, 617,
	603, 619, 620, 621, 553, 581, 582, 583, 584, 0,
	0, 595, 405, 406, 407, 428, 391, 0, 446, 0,
	337, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 450, 442, 550, 0, 0, 0, 280, 0, 0,
	307, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 438, 0, 439, 0, 0, 586, 0,
	0, 366, 321, 0, 0, 0, 0, 646, 654, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 543,
	0, 0, 576, 623, 622, 563, 573, 0, 0, 257,
	189, 440, 0, 441, 564, 0, 572, 565, 569, 568,
	566, 567, 0, 638, 0, 0, 0, 0, 0, 0,
	534, 547, 0, 551, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 544, 545, 1256,
	0, 0, 0, 596, 0, 546, 0, 0, 591, 570,
	574, 0, 0, 0, 0, 248, 371, 387, 258, 362,
	400, 263, 369, 253, 336, 359, 0, 0, 250, 385,
	368, 318, 299, 300, 249, 0, 354, 278, 291, 275,
	334, 571, 594, 598, 274, 660, 592, 395, 252, 0,
	394, 333, 381, 386, 319, 313, 251, 383, 317, 312,
	303, 282, 661, 304, 305, 295, 345, 311, 346, 296,
	323, 322, 324, 0, 0, 0, 0, 0, 423, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 589, 0, 0, 0, 397, 0, 0, 644,
	0, 0, 0, 370, 0, 0, 306, 0, 0, 0,
	593, 0, 357, 339, 657, 535, 0, 355, 309, 382,
	347, 388, 372, 396, 351, 348, 243, 373, 277, 320,
	254, 256, 272, 279, 281, 283, 284, 329, 330, 342,
	361, 374, 375, 376, 276, 264, 356, 265, 293, 266,
	244, 269, 268, 270, 363, 271, 246, 343, 380, 0,
	289, 352, 316, 247, 315, 344, 379, 378, 255, 404,
	410, 411, 0, 0, 416, 0, 0, 0, 424, 429,
	430, 431, 433, 434, 435, 436, 0, 0, 0, 0,
	418, 0, 0, 0, 0, 0, 0, 409, 287, 240,
	241, 449, 642, 335, 0, 0, 0, 0, 656, 637,
	639, 640, 643, 647, 648, 649, 650, 651, 653, 655,
	659, 448, 0, 0, 0, 0, 0, 447, 341, 0,
	360, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 367, 390, 402, 419, 422, 0, 0,
	0, 0, 245, 421, 0, 0, 0, 0, 0, 0,
	0, 0, 658, 0, 0, 0, 401, 0, 0, 0,
	0, 0, 597, 0, 0, 325, 326, 327, 328, 645,
	0, 262, 420, 350, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 414, 415, 286, 292, 432, 294, 261, 340,
	288, 399, 301, 0, 425, 0, 426, 0, 0, 0,
	0, 332, 297, 298, 364, 302, 310, 353, 398, 338,
	358, 259, 389, 365, 314, 0, 0, 667, 641, 666,
	668, 669, 665, 670, 671, 652, 554, 0, 601, 663,
	662, 664, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 238, 267, 0, 242,
	0, 308, 0, 349, 285, 0, 0, 630, 607, 608,
	609, 552, 610, 604, 605, 606, 631, 599, 627, 628,
	578, 602, 611, 626, 612, 629, 632, 633, 672, 673,
	618, 674, 615, 634, 625, 624, 613, 600, 635, 636,
	585, 580, 616, 617, 603, 619, 620, 621, 553, 581,
	582, 583, 584, 0, 0, 0, 405, 406, 407, 428,
	391, 595, 446, 0, 1842, 0, 0, 0, 0, 0,
	337, 0, 0, 0, 0, 450, 442, 0, 0, 0,
	0, 0, 0, 550, 0, 0, 0, 280, 0, 0,
	307, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 438, 0, 439, 0, 0, 586, 0,
	0, 366, 321, 0, 0, 0, 0, 646, 654, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 543,
	0, 0, 576, 623, 622, 563, 573, 0, 0, 257,
	189, 440, 0, 441, 564, 0, 572, 565, 569, 568,
	566, 567, 0, 638, 0, 0, 0, 0, 0, 0,
	534, 547, 0, 551, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 544, 545, 0,
	0, 0, 0, 596, 0, 546, 0, 0, 591, 570,
	574, 0, 0, 0, 0, 248, 371, 387, 258, 362,
	400, 263, 369, 253, 336, 359, 0, 0, 250, 385,
	368, 318, 299, 300, 249, 0, 354, 278, 291, 275,
	334, 571, 594, 598, 274, 660, 592, 395, 252, 0,
	394, 333, 381, 386, 319, 313, 251, 383, 317, 312,
	303, 282, 661, 304, 305, 295, 345, 311, 346, 296,
	323, 322, 324, 0, 0, 0, 0, 0, 423, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 589, 0, 0, 0, 397, 0, 0, 644,
	0, 0, 0, 370, 0, 0, 306, 0, 0, 0,
	593, 0, 357, 339, 657, 535, 0, 355, 309, 382,
	347, 388, 372, 396, 351, 348, 243, 373, 277, 320,
	254, 256, 272, 279, 281, 283, 284, 329, 330, 342,
	361, 374, 375, 376, 276, 264, 356, 265, 293, 266,
	244, 269, 268, 270, 363, 271, 246, 343, 380, 0,
	289, 352, 316, 247, 315, 344, 379, 378, 255, 404,
	410, 411, 0, 0, 416, 0, 0, 0, 424, 429,
	430, 431, 433, 434, 435, 436, 0, 0, 0, 0,
	418, 0, 0, 0, 0, 0, 0, 409, 287, 240,
	241, 449, 642, 335, 0, 0, 0, 0, 656, 637,
	639, 640, 643, 647, 648, 649, 650, 651, 653, 655,
	659, 448, 0, 0, 0, 0, 0, 447, 341, 0,
	360, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 367, 390, 402, 419, 422, 0, 0,
	0, 0, 245, 421, 0, 0, 0, 0, 0, 0,
	0, 0, 658, 0, 0, 0, 401, 0, 0, 0,
	0, 0, 597, 0, 0, 325, 326, 327, 328, 645,
	0, 262, 420, 350, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 414, 415, 286, 292, 432, 294, 261, 340,
	288, 399, 301, 0, 425, 0, 426, 0, 0, 0,
	0, 332, 297, 298, 364, 302, 310, 353, 398, 338,
	358, 259, 389, 365, 314, 0, 0, 667, 641, 666,
	668, 669, 665, 670, 671, 652, 554, 0, 601, 663,
	662, 664, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 238, 267, 0, 242,
	0, 308, 0, 349, 285, 0, 0, 630, 607, 608,
	609, 552, 610, 604, 605, 606, 631, 599, 627, 628,
	578, 602, 611, 626, 612, 629, 632, 633, 672, 673,
	618, 674, 615, 634, 625, 624, 613, 600, 635, 636,
	585, 580, 616, 617, 603, 619, 620, 621, 553, 581,
	582, 583, 584, 0, 0, 595, 405, 406, 407, 428,
	391, 0, 446, 0, 337, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 450, 442, 550, 0, 0,
	0, 280, 0, 0, 307, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 438, 0, 439,
	0, 0, 586, 0, 0, 366, 321, 0, 0, 0,
	0, 646, 654, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 543, 0, 0, 576, 623, 622, 563,
	573, 0, 0, 257, 189, 440, 0, 441, 564, 0,
	572, 565, 569, 568, 566, 567, 0, 638, 0, 0,
	0, 0, 0, 0, 534, 547, 0, 551, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 544, 545, 0, 0, 0, 0, 596, 0, 546,
	0, 0, 591, 570, 574, 0, 0, 0, 0, 248,
	371, 387, 258, 362, 400, 263, 369, 253, 336, 359,
	0, 0, 250, 385, 368, 318, 299, 300, 249, 0,
	354, 278, 291, 275, 334, 571, 594, 598, 274, 660,
	592, 395, 252, 0, 394, 333, 381, 386, 319, 313,
	251, 383, 317, 312, 303, 282, 661, 304, 305, 295,
	345, 311, 346, 296, 323, 322, 324, 0, 0, 0,
	0, 0, 423, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 589, 0, 0, 0,
	397, 0, 0, 644, 0, 0, 0, 370, 0, 0,
	306, 0, 0, 0, 593, 0, 357, 339, 657, 535,
	0, 355, 309, 382, 347, 388, 372, 396, 351, 348,
	243, 373, 277, 320, 254, 256, 272, 279, 281, 283,
	284, 329, 330, 342, 361, 374, 375, 376, 276, 264,
	356, 265, 293, 266, 244, 269, 268, 270, 363, 271,
	246, 343, 380, 0, 289, 352, 316, 247, 315, 344,
	379, 378, 255, 404, 410, 411, 0, 0, 416, 0,
	0, 0, 424, 429, 430, 431, 433, 434, 435, 436,
	0, 0, 0, 0, 418, 0, 0, 0, 0, 0,
	0, 409, 287, 240, 241, 449, 642, 335, 0, 0,
	0, 0, 656, 637, 639, 640, 643, 647, 648, 649,
	650, 651, 653, 655, 659, 448, 0, 0, 0, 0,
	0, 447, 341, 0, 360, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 367, 390, 402,
	419, 422, 0, 0, 0, 0, 245, 421, 0, 0,
	0, 0, 0, 0, 0, 0, 658, 0, 0, 0,
	401, 0, 0, 0, 0, 0, 597, 0, 0, 325,
	326, 327, 328, 645, 0, 262, 420, 350, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 414, 415, 286, 292,
	432, 294, 261, 340, 288, 399, 301, 0, 425, 0,
	426, 0, 0, 0, 0, 332, 297, 298, 364, 302,
	310, 353, 398, 338, 358, 259, 389, 365, 314, 0,
	0, 667, 641, 666, 668, 669, 665, 670, 671, 652,
	554, 0, 601, 663, 662, 664, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 377, 0,
	238, 267, 0, 242, 0, 308, 0, 349, 285, 0,
	0, 630, 607, 608, 609, 552, 610, 604, 605, 606,
	631, 599, 627, 628, 578, 602, 611, 626, 612, 629,
	632, 633, 672, 673, 618, 674, 615, 634, 625, 624,
	613, 600, 635, 636, 585, 580, 616, 617, 603, 619,
	620, 621, 553, 581, 582, 583, 584, 0, 0, 595,
	405, 406, 407, 428, 391, 0, 446, 0, 337, 0,
	0, 0, 0, 0, 0, 0, 0, 1383, 0, 450,
	442, 550, 0, 0, 0, 280, 0, 0, 307, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 438, 0, 439, 0, 0, 586, 0, 0, 366,
	321, 0, 0, 0, 0, 646, 654, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 543, 0, 0,
	576, 623, 622, 563, 573, 0, 0, 257, 189, 440,
	0, 441, 564, 0, 572, 565, 569, 568, 566, 567,
	0, 638, 0, 0, 0, 0, 0, 0, 0, 547,
	0, 551, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 544, 545, 0, 0, 0,
	0, 596, 0, 546, 0, 0, 591, 570, 574, 0,
	0, 0, 0, 248, 371, 387, 258, 362, 400, 263,
	369, 253, 336, 359, 0, 0, 250, 385, 368, 318,
	299, 300, 249, 0, 354, 278, 291, 275, 334, 571,
	594, 598, 274, 660, 592, 395, 252, 0, 394, 333,
	381, 386, 319, 313, 251, 383, 317, 312, 303, 282,
	661, 304, 305, 295, 345, 311, 346, 296, 323, 322,
	324, 0, 0, 0, 0, 0, 423, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	589, 0, 0, 0, 397, 0, 0, 644, 0, 0,
	0, 370, 0, 0, 306, 0, 0, 0, 593, 0,
	357, 339, 657, 0, 0, 355, 309, 382, 347, 388,
	372, 396, 351, 348, 243, 373, 277, 320, 254, 256,
	272, 279, 281, 283, 284, 329, 330, 342, 361, 374,
	375, 376, 276, 264, 356, 265, 293, 266, 244, 269,
	268, 270, 363, 271, 246, 343, 380, 0, 289, 352,
	316, 247, 315, 344, 379, 378, 255, 404, 1384, 1385,
	0, 0, 416, 0, 0, 0, 424, 429, 430, 431,
	433, 434, 435, 436, 0, 0, 0, 0, 418, 0,
	0, 0, 0, 0, 0, 409, 287, 240, 241, 449,
	642, 335, 0, 0, 0, 0, 656, 637, 639, 640,
	643, 647, 648, 649, 650, 651, 653, 655, 659, 448,
	0, 0, 0, 0, 0, 447, 341, 0, 360, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 367, 390, 402, 419, 422, 0, 0, 0, 0,
	245, 421, 0, 0, 0, 0, 0, 0, 0, 0,
	658, 0, 0, 0, 401, 0, 0, 0, 0, 0,
	597, 0, 0, 325, 326, 327, 328, 645, 0, 262,
	420, 350, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	414, 415, 286, 292, 432, 294, 261, 340, 288, 399,
	301, 0, 425, 0, 426, 0, 0, 0, 0, 332,
	297, 298, 364, 302, 310, 353, 398, 338, 358, 259,
	389, 365, 314, 0, 0, 667, 641, 666, 668, 669,
	665, 670, 671, 652, 554, 0, 601, 663, 662, 664,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 377, 0, 238, 267, 0, 242, 0, 308,
	0, 349, 285, 0, 0, 630, 607, 608, 609, 552,
	610, 604, 605, 606, 631, 599, 627, 628, 578, 602,
	611, 626, 612, 629, 632, 633, 672, 673, 618, 674,
	615, 634, 625, 624, 613, 600, 635, 636, 585, 580,
	616, 617, 603, 619, 620, 621, 553, 581, 582, 583,
	584, 0, 0, 595, 405, 406, 407, 428, 391, 0,
	446, 0, 337, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 450, 442, 550, 0, 0, 0, 280,
	0, 0, 307, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 438, 0, 439, 0, 0,
	586, 0, 0, 366, 321, 0, 0, 0, 0, 646,
	654, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 576, 623, 622, 563, 573, 0,
	0, 257, 189, 440, 0, 441, 564, 0, 572, 565,
	569, 568, 566, 567, 0, 638, 0, 0, 0, 0,
	0, 0, 534, 547, 0, 551, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 544,
	545, 0, 0, 0, 0, 596, 0, 546, 0, 0,
	591, 570, 574, 0, 0, 0, 0, 248, 371, 387,
	258, 362, 400, 263, 369, 253, 336, 359, 0, 0,
	250, 385, 368, 318, 299, 300, 249, 0, 354, 278,
	291, 275, 334, 571, 594, 598, 274, 660, 592, 395,
	252, 0, 394, 333, 381, 386, 319, 313, 251, 383,
	317, 312, 303, 282, 661, 304, 305, 295, 345, 311,
	346, 296, 323, 322, 324, 0, 0, 0, 0, 0,
	423, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 589, 0, 0, 0, 397, 0,
	0, 644, 0, 0, 0, 370, 0, 0, 306, 0,
	0, 0, 593, 0, 357, 339, 657, 535, 0, 355,
	309, 382, 347, 388, 372, 396, 351, 348, 243, 373,
	277, 320, 254, 256, 272, 279, 281, 283, 284, 329,
	330, 342, 361, 374, 375, 376, 276, 264, 356, 265,
	293, 266, 244, 269, 268, 270, 363, 271, 246, 343,
	380, 0, 289, 352, 316, 247, 315, 344, 379, 378,
	255, 404, 410, 411, 0, 0, 416, 0, 0, 0,
	424, 429, 430, 431, 433, 434, 435, 436, 0, 0,
	0, 0, 418, 0, 0, 0, 0, 0, 0, 409,
	287, 240, 241, 449, 642, 335, 0, 0, 0, 0,
	656, 637, 639, 640, 643, 647, 648, 649, 650, 651,
	653, 655, 659, 448, 0, 0, 0, 0, 0, 447,
	341, 0, 360, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 367, 390, 402, 419, 422,
	0, 0, 0, 0, 245, 421, 0, 0, 0, 0,
	0, 0, 0, 0, 658, 0, 0, 0, 401, 0,
	0, 0, 0, 0, 597, 0, 0, 325, 326, 327,
	328, 645, 0, 262, 420, 350, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 414, 415, 286, 292, 432, 294,
	261, 340, 288, 399, 301, 0, 425, 0, 426, 0,
	0, 0, 0, 332, 297, 298, 364, 302, 310, 353,
	398, 338, 358, 259, 389, 365, 314, 0, 0, 667,
	641, 666, 668, 669, 665, 670, 671, 652, 554, 0,
	601, 663, 662, 664, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 377, 0, 238, 267,
	0, 242, 0, 308, 0, 349, 285, 0, 0, 630,
	607, 608, 609, 552, 610, 604, 605, 606, 631, 599,
	627, 628, 578, 602, 611, 626, 612, 629, 632, 633,
	672, 673, 618, 674, 615, 634, 625, 624, 613, 600,
	635, 636, 585, 580, 616, 617, 603, 619, 620, 621,
	553, 581, 582, 583, 584, 0, 0, 595, 405, 406,
	407, 428, 391, 0, 446, 0, 337, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 450, 442, 550,
	0, 0, 0, 280, 0, 0, 307, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 438,
	0, 439, 0, 0, 586, 0, 0, 366, 321, 0,
	0, 0, 0, 646, 654, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 543, 0, 0, 576, 623,
	622, 563, 573, 0, 0, 257, 189, 440, 0, 441,
	564, 0, 572, 565, 569, 568, 566, 567, 0, 638,
	0, 0, 0, 0, 0, 0, 0, 547, 0, 551,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 544, 545, 0, 0, 0, 0, 596,
	0, 546, 0, 0, 591, 570, 574, 0, 0, 0,
	0, 248, 371, 387, 258, 362, 400, 263, 369, 253,
	336, 359, 0, 0, 250, 385, 368, 318, 299, 300,
	249, 0, 354, 278, 291, 275, 334, 571, 594, 598,
	274, 660, 592, 395, 252, 0, 394, 333, 381, 386,
	319, 313, 251, 383, 317, 312, 303, 282, 661, 304,
	305, 295, 345, 311, 346, 296, 323, 322, 324, 0,
	0, 0, 0, 0, 423, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 589, 0,
	0, 0, 397, 0, 0, 644, 0, 0, 0, 370,
	0, 0, 306, 0, 0, 0, 593, 0, 357, 339,
	657, 0, 0, 355, 309, 382, 347, 388, 372, 396,
	351, 348, 243, 373, 277, 320, 254, 256, 272, 279,
	281, 283, 284, 329, 330, 342, 361, 374, 375, 376,
	276, 264, 356, 265, 293, 266, 244, 269, 268, 270,
	363, 271, 246, 343, 380, 0, 289, 352, 316, 247,
	315, 344, 379, 378, 255, 404, 410, 411, 0, 0,
	416, 0, 0, 0, 424, 429, 430, 431, 433, 434,
	435, 436, 0, 0, 0, 0, 418, 0, 0, 0,
	0, 0, 0, 409, 287, 240, 241, 449, 642, 335,
	0, 0, 0, 0, 656, 637, 639, 640, 643, 647,
	648, 649, 650, 651, 653, 655, 659, 448, 0, 0,
	0, 0, 0, 447, 341, 0, 360, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 367,
	390, 402, 419, 422, 0, 0, 0, 0, 245, 421,
	0, 0, 0, 0, 0, 0, 0, 0, 658, 0,
	0, 0, 401, 0, 0, 0, 0, 0, 597, 0,
	0, 325, 326, 327, 328, 645, 0, 262, 420, 350,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 414, 415,
	286, 292, 432, 294, 261, 340, 288, 399, 301, 0,
	425, 0, 426, 0, 0, 0, 0, 332, 297, 298,
	364, 302, 310, 353, 398, 338, 358, 259, 389, 365,
	314, 0, 0, 667, 641, 666, 668, 669, 665, 670,
	671, 652, 554, 0, 601, 663, 662, 664, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 238, 267, 0, 242, 0, 308, 0, 349,
	285, 0, 0, 630, 607, 608, 609, 552, 610, 604,
	605, 606, 631, 599, 627, 628, 578, 602, 611, 626,
	612, 629, 632, 633, 672, 673, 618, 674, 615, 634,
	625, 624, 613, 600, 635, 636, 585, 580, 616, 617,
	603, 619, 620, 621, 553, 581, 582, 583, 584, 0,
	0, 0, 405, 406, 407, 428, 391, 0, 446, 166,
	51, 158, 134, 0, 0, 0, 0, 0, 0, 337,
	0, 450, 442, 0, 0, 0, 0, 159, 0, 0,
	0, 0, 0, 0, 151, 0, 280, 0, 160, 307,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 438, 0, 439, 0, 0, 114, 0, 0,
	366, 321, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 102, 0, 0, 0, 0, 0, 163, 0,
	0, 188, 0, 0, 0, 0, 0, 0, 257, 189,
	440, 0, 441, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 248, 371, 387, 258, 362, 400,
	263, 369, 253, 336, 359, 0, 0, 250, 385, 368,
	318, 299, 300, 249, 0, 354, 278, 291, 275, 334,
	0, 384, 412, 274, 403, 0, 395, 252, 0, 394,
	333, 381, 386, 319, 313, 251, 383, 317, 312, 303,
	282, 427, 304, 305, 295, 345, 311, 346, 296, 323,
	322, 324, 0, 0, 0, 0, 0, 423, 0, 0,
	0, 0, 0, 0, 133, 157, 164, 0, 100, 0,
	0, 0, 0, 0, 0, 397, 0, 0, 181, 0,
	0, 0, 370, 0, 0, 306, 156, 150, 149, 413,
	0, 357, 339, 57, 0, 0, 355, 309, 382, 347,
	388, 372, 396, 351, 348, 243, 373, 277, 320, 254,
	256, 272, 279, 281, 283, 284, 329, 330, 342, 361,
	374, 375, 376, 276, 264, 356, 265, 293, 266, 244,
	269, 268, 270, 363, 271, 246, 343, 380, 0, 289,
	352, 316, 247, 315, 344, 379, 378, 255, 404, 410,
	411, 0, 0, 416, 152, 153, 154, 424, 429, 430,
	431, 433, 434, 435, 436, 0, 0, 0, 0, 418,
	0, 0, 0, 0, 0, 0, 409, 287, 240, 241,
	392, 273, 335, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 331, 408, 184, 0, 0, 437,
	192, 0, 0, 0, 155, 0, 193, 341, 0, 360,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 367, 390, 402, 419, 422, 0, 0, 0,
	0, 245, 421, 0, 0, 0, 0, 0, 0, 0,
	0, 393, 0, 0, 0, 401, 0, 0, 0, 0,
	0, 417, 0, 0, 325, 326, 327, 328, 290, 0,
	262, 420, 350, 112, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 50, 0, 0, 0, 0,
	0, 414, 415, 286, 292, 432, 294, 261, 340, 288,
	399, 301, 0, 425, 0, 426, 0, 0, 0, 0,
	332, 297, 298, 364, 302, 310, 353, 398, 338, 358,
	259, 389, 365, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 52, 0, 0, 233, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 377, 0, 238, 267, 0, 242, 0,
	308, 135, 349, 285, 0, 0, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 0,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 0, 0, 0, 239, 234, 235,
	236, 237, 0, 0, 0, 405, 406, 407, 428, 391,
	337, 194, 39, 182, 185, 187, 186, 0, 49, 5,
	0, 0, 0, 117, 195, 442, 0, 280, 0, 0,
	307, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 438, 0, 439, 0, 0, 0, 0,
	0, 366, 321, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1044,
	0, 0, 188, 0, 0, 563, 573, 0, 0, 257,
	189, 440, 0, 441, 564, 0, 572, 565, 569, 568,
	566, 567, 0, 260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 570,
	0, 0, 0, 0, 0, 248, 371, 387, 258, 362,
	400, 263, 369, 253, 336, 359, 0, 0, 250, 385,
	368, 318, 299, 300, 249, 0, 354, 278, 291, 275,
	334, 571, 384, 412, 274, 403, 0, 395, 252, 0,
	394, 333, 381, 386, 319, 313, 251, 383, 317, 312,
	303, 282, 427, 304, 305, 295, 345, 311, 346, 296,
	323, 322, 324, 0, 0, 0, 0, 0, 423, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 397, 0, 0, 0,
	0, 0, 0, 370, 0, 0, 306, 0, 0, 0,
	413, 0, 357, 339, 0, 0, 0, 355, 309, 382,
	347, 388, 372, 396, 351, 348, 243, 373, 277, 320,
	254, 256, 272, 279, 281, 283, 284, 329, 330, 342,
	361, 374, 375, 376, 276, 264, 356, 265, 293, 266,
	244, 269, 268, 270, 363, 271, 246, 343, 380, 0,
	289, 352, 316, 247, 315, 344, 379, 378, 255, 404,
	410, 411, 0, 0, 416, 0, 0, 0, 424, 429,
	430, 431, 433, 434, 435, 436, 0, 0, 0, 0,
	418, 0, 0, 0, 0, 0, 0, 409, 287, 240,
	241, 449, 273, 335, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 331, 408, 0, 0, 0,
	437, 448, 0, 0, 0, 0, 0, 447, 341, 0,
	360, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 367, 390, 402, 419, 422, 0, 0,
	0, 0, 245, 421, 0, 0, 0, 0, 0, 0,
	0, 0, 393, 0, 0, 0, 401, 0, 0, 0,
	0, 0, 417, 0, 0, 325, 326, 327, 328, 290,
	0, 262, 420, 350, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 414, 415, 286, 292, 432, 294, 261, 340,
	288, 399, 301, 0, 425, 0, 426, 0, 0, 0,
	0, 332, 297, 298, 364, 302, 310, 353, 398, 338,
	358, 259, 389, 365, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 238, 267, 0, 242,
	0, 308, 0, 349, 285, 0, 0, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	0, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 231, 232, 0, 0, 0, 239, 234,
	235, 236, 237, 0, 0, 0, 405, 406, 407, 428,
	391, 0, 446, 166, 51, 158, 134, 0, 0, 0,
	0, 0, 0, 337, 467, 450, 442, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 0, 0, 307, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 438, 0, 439, 0,
	0, 0, 0, 0, 366, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 472, 0, 0, 188, 0, 0, 0, 0,
	0, 0, 257, 189, 440, 0, 441, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 248, 371,
	387, 258, 362, 400, 263, 369, 253, 336, 359, 0,
	0, 250, 385, 368, 318, 299, 300, 249, 0, 354,
	278, 291, 275, 334, 0, 384, 412, 274, 403, 0,
	395, 252, 0, 394, 333, 381, 386, 319, 313, 251,
	383, 317, 312, 303, 282, 427, 304, 305, 295, 345,
	311, 346, 296, 323, 322, 324, 0, 0, 0, 0,
	0, 423, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 471, 0, 0, 0, 0, 0, 0, 397,
	0, 0, 0, 0, 0, 0, 370, 0, 0, 306,
	0, 0, 0, 413, 0, 357, 339, 0, 0, 0,
	355, 309, 382, 347, 388, 372, 396, 351, 348, 243,
	373, 277, 320, 254, 256, 272, 279, 281, 283, 284,
	329, 330, 342, 361, 374, 375, 376, 276, 264, 356,
	265, 293, 266, 244, 269, 268, 270, 363, 271, 246,
	343, 380, 0, 289, 352, 316, 247, 315, 344, 379,
	378, 255, 404, 410, 411, 0, 0, 416, 0, 0,
	0, 424, 429, 430, 431, 433, 434, 435, 436, 0,
	0, 0, 0, 418, 0, 0, 0, 0, 0, 0,
	409, 287, 240, 241, 449, 273, 335, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 331, 408,
	0, 0, 0, 437, 448, 0, 0, 0, 0, 0,
	447, 341, 0, 360, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 367, 390, 402, 419,
	422, 0, 0, 0, 0, 245, 421, 0, 0, 0,
	0, 0, 0, 0, 0, 393, 0, 0, 0, 401,
	0, 0, 0, 0, 0, 417, 0, 0, 325, 326,
	327, 328, 468, 470, 262, 420, 350, 480, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 414, 415, 286, 292, 432,
	294, 261, 340, 288, 399, 301, 0, 425, 0, 426,
	0, 0, 0, 0, 332, 297, 298, 364, 302, 310,
	353, 398, 338, 358, 259, 389, 365, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 52, 0,
	0, 233, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 377, 0, 238,
	267, 0, 242, 0, 308, 135, 349, 285, 0, 0,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 0, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 229, 230, 231, 232, 0, 337,
	0, 239, 234, 235, 236, 237, 0, 871, 0, 405,
	406, 407, 428, 391, 0, 446, 280, 0, 0, 307,
	0, 0, 0, 0, 0, 0, 0, 0, 450, 442,
	0, 0, 438, 0, 439, 0, 0, 0, 0, 0,
	366, 321, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 188, 0, 0, 0, 0, 0, 0, 257, 189,
	440, 0, 441, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 857, 0, 0,
	0, 0, 0, 0, 248, 371, 387, 258, 362, 400,
	263, 369, 253, 336, 359, 0, 0, 2112, 2114, 2115,
	2116, 2117, 2118, 2119, 0, 2124, 2120, 2121, 2122, 2123,
	0, 2107, 2108, 2109, 2110, 855, 2091, 2113, 0, 2092,
	333, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101,
	2104, 2105, 2102, 2103, 2111, 345, 311, 346, 296, 323,
	322, 324, 882, 884, 886, 888, 891, 423, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 397, 0, 0, 0, 0,
	0, 0, 370, 0, 0, 306, 0, 0, 0, 2106,
	0, 357, 339, 0, 0, 0, 355, 309, 382, 347,
	388, 372, 396, 351, 348, 243, 373, 277, 320, 254,
	256, 272, 279, 281, 283, 284, 329, 330, 342, 361,
	374, 375, 376, 276, 264, 356, 265, 293, 266, 244,
	269, 268, 270, 363, 271, 246, 343, 380, 0, 289,
	352, 316, 247, 315, 344, 379, 378, 255, 404, 410,
	411, 0, 0, 416, 0, 0, 0, 424, 429, 430,
	431, 433, 434, 435, 436, 0, 0, 0, 0, 418,
	0, 0, 0, 0, 0, 0, 409, 287, 240, 241,
	449, 273, 335, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 331, 408, 0, 0, 0, 437,
	448, 0, 0, 0, 0, 0, 447, 341, 0, 360,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 367, 390, 402, 419, 422, 0, 0, 0,
	0, 245, 421, 0, 0, 0, 0, 0, 0, 0,
	0, 393, 0, 0, 0, 401, 0, 0, 0, 0,
	0, 417, 0, 0, 325, 326, 327, 328, 290, 0,
	262, 420, 350, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 414, 415, 286, 292, 432, 294, 261, 340, 288,
	399, 301, 0, 425, 0, 426, 0, 0, 0, 0,
	332, 297, 298, 364, 302, 310, 353, 398, 338, 358,
	259, 389, 365, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 377, 0, 238, 267, 0, 242, 881,
	308, 0, 349, 285, 0, 0, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 0,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 0, 337, 0, 239, 234, 235,
	236, 237, 0, 0, 0, 405, 406, 407, 428, 391,
	0, 446, 280, 0, 0, 307, 0, 0, 0, 0,
	0, 0, 0, 0, 450, 442, 0, 0, 438, 0,
	439, 0, 0, 0, 0, 0, 366, 321, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 188, 0, 0,
	0, 0, 0, 0, 257, 189, 440, 0, 441, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 1966,
	1969, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	248, 371, 387, 258, 362, 400, 263, 369, 253, 336,
	359, 0, 0, 250, 385, 368, 318, 299, 300, 249,
	0, 354, 278, 291, 275, 334, 0, 384, 412, 274,
	403, 0, 395, 252, 0, 394, 333, 381, 386, 319,
	313, 251, 383, 317, 312, 303, 282, 427, 304, 305,
	295, 345, 311, 346, 296, 323, 322, 324, 0, 0,
	0, 0, 0, 423, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1970, 397, 0, 0, 0, 1965, 0, 1964, 370, 1962,
	1967, 306, 0, 0, 0, 413, 0, 357, 339, 0,
	0, 0, 355, 309, 382, 347, 388, 372, 396, 351,
	348, 243, 373, 277, 320, 254, 256, 272, 279, 281,
	283, 284, 329, 330, 342, 361, 374, 375, 376, 276,
	264, 356, 265, 293, 266, 244, 269, 268, 270, 363,
	271, 246, 343, 380, 1968, 289, 352, 316, 247, 315,
	344, 379, 378, 255, 404, 410, 411, 0, 0, 416,
	0, 0, 0, 424, 429, 430, 431, 433, 434, 435,
	436, 0, 0, 0, 0, 418, 0, 0, 0, 0,
	0, 0, 409, 287, 240, 241, 449, 273, 335, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	331, 408, 0, 0, 0, 437, 448, 0, 0, 0,
	0, 0, 447, 341, 0, 360, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 367, 390,
	402, 419, 422, 0, 0, 0, 0, 245, 421, 0,
	0, 0, 0, 0, 0, 0, 0, 393, 0, 0,
	0, 401, 0, 0, 0, 0, 0, 417, 0, 0,
	325, 326, 327, 328, 290, 0, 262, 420, 350, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 414, 415, 286,
	292, 432, 294, 261, 340, 288, 399, 301, 0, 425,
	0, 426, 0, 0, 0, 0, 332, 297, 298, 364,
	302, 310, 353, 398, 338, 358, 259, 389, 365, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 377,
	0, 238, 267, 0, 242, 0, 308, 0, 349, 285,
	0, 0, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 0, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 229, 230, 231, 232,
	0, 0, 0, 239, 234, 235, 236, 237, 337, 0,
	0, 405, 406, 407, 428, 391, 0, 446, 0, 0,
	1727, 0, 0, 0, 0, 280, 0, 0, 307, 0,
	450, 442, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 438, 0, 439, 0, 0, 0, 0, 0, 366,
	321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	188, 0, 0, 1728, 0, 0, 0, 257, 189, 440,
	0, 441, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 0, 977, 978, 979, 976, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 248, 371, 387, 258, 362, 400, 263,
	369, 253, 336, 359, 0, 0, 250, 385, 368, 318,
	299, 300, 249, 0, 354, 278, 291, 275, 334, 0,
	384, 412, 274, 403, 0, 395, 252, 0, 394, 333,
	381, 386, 319, 313, 251, 383, 317, 312, 303, 282,
	427, 304, 305, 295, 345, 311, 346, 296, 323, 322,
	324, 0, 0, 0, 0, 0, 423, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 397, 0, 0, 0, 0, 0,
	0, 370, 0, 0, 306, 0, 0, 0, 413, 0,
	357, 339, 0, 0, 0, 355, 309, 382, 347, 388,
	372, 396, 351, 348, 243, 373, 277, 320, 254, 256,
	272, 279, 281, 283, 284, 329, 330, 342, 361, 374,
	375, 376, 276, 264, 356, 265, 293, 266, 244, 269,
	268, 270, 363, 271, 246, 343, 380, 0, 289, 352,
	316, 247, 315, 344, 379, 378, 255, 404, 410, 411,
	0, 0, 416, 0, 0, 0, 424, 429, 430, 431,
	433, 434, 435, 436, 0, 0, 0, 0, 418, 0,
	0, 0, 0, 0, 0, 409, 287, 240, 241, 449,
	273, 335, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 331, 408, 0, 0, 0, 437, 448,
	0, 0, 0, 0, 0, 447, 341, 0, 360, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 367, 390, 402, 419, 422, 0, 0, 0, 0,
	245, 421, 0, 0, 0, 0, 0, 0, 0, 0,
	393, 0, 0, 0, 401, 0, 0, 0, 0, 0,
	417, 0, 0, 325, 326, 327, 328, 290, 0, 262,
	420, 350, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	414, 415, 286, 292, 432, 294, 261, 340, 288, 399,
	301, 0, 425, 0, 426, 0, 0, 0, 0, 332,
	297, 298, 364, 302, 310, 353, 398, 338, 358, 259,
	389, 365, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 377, 0, 238, 267, 0, 242, 0, 308,
	0, 349, 285, 0, 0, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 0, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 232, 0, 337, 0, 239, 234, 235, 236,
	237, 0, 0, 0, 405, 406, 407, 428, 391, 0,
	446, 280, 791, 0, 307, 0, 0, 0, 0, 0,
	0, 0, 0, 450, 442, 0, 0, 438, 0, 439,
	0, 0, 0, 0, 0, 366, 321, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 188, 798, 799, 0,
	0, 0, 0, 257, 189, 440, 0, 441, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 802, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 248,
	371, 786, 258, 362, 400, 263, 369, 253, 336, 359,
	0, 0, 250, 385, 368, 318, 299, 300, 249, 0,
	354, 278, 291, 275, 334, 0, 384, 412, 274, 403,
	776, 395, 252, 775, 394, 333, 381, 386, 319, 313,
	251, 383, 317, 312, 303, 282, 427, 304, 305, 295,
	345, 311, 346, 296, 323, 322, 324, 0, 0, 0,
	0, 0, 423, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	397, 0, 0, 0, 0, 0, 0, 370, 0, 0,
	306, 0, 0, 0, 413, 0, 357, 339, 0, 0,
	0, 355, 309, 382, 347, 388, 372, 396, 789, 348,
	243, 373, 277, 320, 254, 256, 272, 279, 281, 283,
	284, 329, 330, 342, 361, 374, 375, 376, 276, 264,
	356, 265, 293, 266, 244, 269, 268, 270, 363, 271,
	246, 343, 380, 0, 289, 352, 316, 247, 315, 344,
	379, 378, 255, 404, 410, 411, 0, 0, 416, 0,
	0, 0, 424, 429, 430, 431, 433, 434, 435, 436,
	0, 0, 0, 0, 418, 0, 0, 0, 0, 0,
	0, 409, 287, 240, 241, 449, 273, 335, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 331,
	408, 0, 0, 0, 437, 448, 0, 0, 0, 0,
	0, 447, 341, 0, 360, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 367, 390, 402,
	419, 422, 0, 0, 0, 0, 245, 421, 0, 0,
	0, 0, 0, 0, 790, 0, 393, 0, 0, 0,
	401, 0, 0, 0, 0, 0, 793, 0, 0, 325,
	326, 327, 328, 290, 0, 262, 420, 350, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 414, 415, 286, 292,
	432, 294, 261, 340, 288, 399, 301, 0, 425, 0,
	426, 0, 0, 0, 0, 800, 787, 796, 788, 302,
	310, 353, 398, 338, 358, 259, 389, 365, 797, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 377, 0,
	238, 267, 0, 242, 0, 308, 0, 349, 285, 0,
	0, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 0, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 228, 229, 230, 231, 232, 0,
	337, 0, 239, 234, 235, 236, 237, 0, 0, 0,
	405, 406, 407, 428, 391, 0, 446, 280, 0, 0,
	307, 0, 0, 0, 0, 0, 0, 0, 0, 450,
	442, 0, 0, 438, 0, 439, 0, 0, 0, 0,
	0, 366, 321, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 188, 0, 0, 0, 0, 0, 0, 257,
	189, 440, 0, 441, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 1985, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 248, 371, 387, 258, 362,
	400, 263, 369, 253, 336, 359, 0, 0, 250, 385,
	368, 318, 299, 300, 249, 0, 354, 278, 291, 275,
	334, 0, 384, 412, 274, 403, 0, 395, 252, 0,
	394, 333, 381, 386, 319, 313, 251, 383, 317, 312,
	303, 282, 427, 304, 305, 295, 345, 311, 346, 296,
	323, 322, 324, 0, 0, 0, 0, 0, 423, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1984, 397, 0, 0, 0,
	1989, 1987, 0, 370, 0, 1988, 306, 0, 0, 0,
	413, 0, 357, 339, 0, 0, 0, 355, 309, 382,
	347, 388, 372, 396, 351, 348, 243, 373, 277, 320,
	254, 256, 272, 279, 281, 283, 284, 329, 330, 342,
	361, 374, 375, 376, 276, 264, 356, 265, 293, 266,
	244, 269, 268, 270, 363, 271, 246, 343, 380, 0,
	289, 352, 316, 247, 315, 344, 379, 378, 255, 404,
	410, 411, 0, 0, 416, 0, 0, 0, 424, 429,
	430, 431, 433, 434, 435, 436, 0, 0, 0, 0,
	418, 0, 0, 0, 0, 0, 0, 409, 287, 240,
	241, 449, 273, 335, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 331, 408, 0, 0, 0,
	437, 448, 0, 0, 0, 0, 0, 447, 341, 0,
	360, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 367, 390, 402, 419, 422, 0, 0,
	0, 0, 245, 421, 0, 0, 0, 0, 0, 0,
	0, 0, 393, 0, 0, 0, 401, 0, 0, 0,
	0, 0, 417, 0, 0, 325, 326, 327, 328, 290,
	0, 262, 420, 350, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 414, 415, 286, 292, 432, 294, 261, 340,
	288, 399, 301, 0, 425, 0, 426, 0, 0, 0,
	0, 332, 297, 298, 364, 302, 310, 353, 398, 338,
	358, 259, 389, 365, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 238, 267, 0, 242,
	0, 308, 0, 349, 285, 0, 0, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	0, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 231, 232, 0, 0, 0, 239, 234,
	235, 236, 237, 166, 0, 0, 405, 406, 407, 428,
	391, 0, 446, 337, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 450, 442, 0, 0, 0,
	280, 0, 0, 307, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 438, 0, 439, 0,
	0, 114, 0, 0, 366, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 163, 1771, 0, 188, 0, 0, 0, 0,
	0, 0, 257, 189, 440, 0, 441, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 248, 371,
	387, 258, 362, 400, 263, 369, 253, 336, 359, 0,
	0, 250, 385, 368, 318, 299, 300, 249, 0, 354,
	278, 291, 275, 334, 0, 384, 412, 274, 403, 0,
	395, 252, 0, 394, 333, 381, 386, 319, 313, 251,
	383, 317, 312, 303, 282, 427, 304, 305, 295, 345,
	311, 346, 296, 323, 322, 324, 0, 0, 0, 0,
	0, 423, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 397,
	0, 0, 0, 0, 0, 0, 370, 0, 0, 306,
	0, 0, 0, 413, 0, 357, 339, 0, 0, 0,
	355, 309, 382, 347, 388, 372, 396, 351, 348, 243,
	373, 277, 320, 254, 256, 272, 279, 281, 283, 284,
	329, 330, 342, 361, 374, 375, 376, 276, 264, 356,
	265, 293, 266, 244, 269, 268, 270, 363, 271, 246,
	343, 380, 0, 289, 352, 316, 247, 315, 344, 379,
	378, 255, 404, 410, 411, 0, 0, 416, 0, 0,
	0, 424, 429, 430, 431, 433, 434, 435, 436, 0,
	0, 0, 0, 418, 0, 0, 0, 0, 0, 0,
	409, 287, 240, 241, 449, 273, 335, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 331, 408,
	0, 0, 0, 437, 448, 0, 0, 0, 0, 0,
	447, 341, 0, 360, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 367, 390, 402, 419,
	422, 0, 0, 0, 0, 245, 421, 0, 0, 0,
	0, 0, 0, 0, 0, 393, 0, 0, 0, 401,
	0, 0, 0, 0, 0, 417, 0, 0, 325, 326,
	327, 328, 290, 0, 262, 420, 350, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 414, 415, 286, 292, 432,
	294, 261, 340, 288, 399, 301, 0, 425, 0, 426,
	0, 0, 0, 0, 332, 297, 298, 364, 302, 310,
	353, 398, 338, 358, 259, 389, 365, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 377, 0, 238,
	267, 0, 242, 0, 308, 135, 349, 285, 0, 0,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 0, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 229, 230, 231, 232, 0, 0,
	0, 239, 234, 235, 236, 237, 166, 0, 0, 405,
	406, 407, 428, 391, 0, 446, 337, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 450, 442,
	0, 0, 0, 280, 0, 0, 307, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 438,
	0, 439, 0, 0, 114, 0, 0, 366, 321, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 163, 1762, 0, 188, 0,
	0, 0, 0, 0, 0, 257, 189, 440, 0, 441,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 248, 371, 387, 258, 362, 400, 263, 369, 253,
	336, 359, 0, 0, 250, 385, 368, 318, 299, 300,
	249, 0, 354, 278, 291, 275, 334, 0, 384, 412,
	274, 403, 0, 395, 252, 0, 394, 333, 381, 386,
	319, 313, 251, 383, 317, 312, 303, 282, 427, 304,
	305, 295, 345, 311, 346, 296, 323, 322, 324, 0,
	0, 0, 0, 0, 423, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 397, 0, 0, 0, 0, 0, 0, 370,
	0, 0, 306, 0, 0, 0, 413, 0, 357, 339,
	0, 0, 0, 355, 309, 382, 347, 388, 372, 396,
	351, 348, 243, 373, 277, 320, 254, 256, 272, 279,
	281, 283, 284, 329, 330, 342, 361, 374, 375, 376,
	276, 264, 356, 265, 293, 266, 244, 269, 268, 270,
	363, 271, 246, 343, 380, 0, 289, 352, 316, 247,
	315, 344, 379, 378, 255, 404, 410, 411, 0, 0,
	416, 0, 0, 0, 424, 429, 430, 431, 433, 434,
	435, 436, 0, 0, 0, 0, 418, 0, 0, 0,
	0, 0, 0, 409, 287, 240, 241, 449, 273, 335,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 331, 408, 0, 0, 0, 437, 448, 0, 0,
	0, 0, 0, 447, 341, 0, 360, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 367,
	390, 402, 419, 422, 0, 0, 0, 0, 245, 421,
	0, 0, 0, 0, 0, 0, 0, 0, 393, 0,
	0, 0, 401, 0, 0, 0, 0, 0, 417, 0,
	0, 325, 326, 327, 328, 290, 0, 262, 420, 350,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 414, 415,
	286, 292, 432, 294, 261, 340, 288, 399, 301, 0,
	425, 0, 426, 0, 0, 0, 0, 332, 297, 298,
	364, 302, 310, 353, 398, 338, 358, 259, 389, 365,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 238, 267, 0, 242, 0, 308, 135, 349,
	285, 0, 0, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 0, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 0, 0, 0, 239, 234, 235, 236, 237, 166,
	0, 0, 405, 406, 407, 428, 391, 0, 446, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 450, 442, 0, 0, 0, 280, 0, 0, 307,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 438, 0, 439, 0, 0, 114, 0, 0,
	366, 321, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1665, 0,
	0, 188, 0, 0, 0, 0, 0, 0, 257, 189,
	440, 0, 441, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 248, 371, 387, 258, 362, 400,
	263, 369, 253, 336, 359, 0, 0, 250, 385, 368,
	318, 299, 300, 249, 0, 354, 278, 291, 275, 334,
	0, 384, 412, 274, 403, 0, 395, 252, 0, 394,
	333, 381, 386, 319, 313, 251, 383, 317, 312, 303,
	282, 427, 304, 305, 295, 345, 311, 346, 296, 323,
	322, 324, 0, 0, 0, 0, 0, 423, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 397, 0, 0, 0, 0,
	0, 0, 370, 0, 0, 306, 0, 0, 0, 413,
	0, 357, 339, 0, 0, 0, 355, 309, 382, 347,
	388, 372, 396, 351, 348, 243, 373, 277, 320, 254,
	256, 272, 279, 281, 283, 284, 329, 330, 342, 361,
	374, 375, 376, 276, 264, 356, 265, 293, 266, 244,
	269, 268, 270, 363, 271, 246, 343, 380, 0, 289,
	352, 316, 247, 315, 344, 379, 378, 255, 404, 410,
	411, 0, 0, 416, 0, 0, 0, 424, 429, 430,
	431, 433, 434, 435, 436, 0, 0, 0, 0, 418,
	0, 0, 0, 0, 0, 0, 409, 287, 240, 241,
	449, 273, 335, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 331, 408, 0, 0, 0, 437,
	448, 0, 0, 0, 0, 0, 447, 341, 0, 360,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 367, 390, 402, 419, 422, 0, 0, 0,
	0, 245, 421, 0, 0, 0, 0, 0, 0, 0,
	0, 393, 0, 0, 0, 401, 0, 0, 0, 0,
	0, 417, 0, 0, 325, 326, 327, 328, 290, 0,
	262, 420, 350, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 414, 415, 286, 292, 432, 294, 261, 340, 288,
	399, 301, 0, 425, 0, 426, 0, 0, 0, 0,
	332, 297, 298, 364, 302, 310, 353, 398, 338, 358,
	259, 389, 365, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 377, 0, 238, 267, 0, 242, 0,
	308, 135, 349, 285, 0, 0, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 0,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 0, 337, 0, 239, 234, 235,
	236, 237, 0, 0, 0, 405, 406, 407, 428, 391,
	0, 446, 280, 0, 0, 307, 0, 0, 0, 0,
	0, 0, 0, 0, 450, 442, 0, 0, 438, 0,
	439, 0, 0, 0, 0, 0, 366, 321, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 188, 798, 799,
	0, 0, 0, 0, 257, 189, 440, 0, 441, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 802, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	248, 371, 387, 258, 362, 400, 263, 369, 253, 336,
	359, 0, 0, 250, 385, 368, 318, 299, 300, 249,
	0, 354, 278, 291, 275, 334, 0, 384, 412, 274,
	403, 776, 395, 252, 775, 394, 333, 381, 386, 319,
	313, 251, 383, 317, 312, 303, 282, 427, 304, 305,
	295, 345, 311, 346, 296, 323, 322, 324, 0, 0,
	0, 0, 0, 423, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 397, 0, 0, 0, 0, 0, 0, 370, 0,
	0, 306, 0, 0, 0, 413, 0, 357, 339, 0,
	0, 0, 355, 309, 382, 347, 388, 372, 396, 351,
	348, 243, 373, 277, 320, 254, 256, 272, 279, 281,
	283, 284, 329, 330, 342, 361, 374, 375, 376, 276,
	264, 356, 265, 293, 266, 244, 269, 268, 270, 363,
	271, 246, 343, 380, 0, 289, 352, 316, 247, 315,
	344, 379, 378, 255, 404, 410, 411, 0, 0, 416,
	0, 0, 0, 424, 429, 430, 431, 433, 434, 435,
	436, 0, 0, 0, 0, 418, 0, 0, 0, 0,
	0, 0, 409, 287, 240, 241, 449, 273, 335, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	331, 408, 0, 0, 0, 437, 448, 0, 0, 0,
	0, 0, 447, 341, 0, 360, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 367, 390,
	402, 419, 422, 0, 0, 0, 0, 245, 421, 0,
	0, 0, 0, 0, 0, 0, 0, 393, 0, 0,
	0, 401, 0, 0, 0, 0, 0, 417, 0, 0,
	325, 326, 327, 328, 290, 0, 262, 420, 350, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 414, 415, 286,
	292, 432, 294, 261, 340, 288, 399, 301, 0, 425,
	0, 426, 0, 0, 0, 0, 800, 1684, 796, 1685,
	302, 310, 353, 398, 338, 358, 259, 389, 365, 797,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 377,
	0, 238, 267, 0, 242, 0, 308, 0, 349, 285,
	0, 0, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 0, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 229, 230, 231, 232,
	0, 337, 0, 239, 234, 235, 236, 237, 0, 0,
	2426, 405, 406, 407, 428, 391, 0, 446, 280, 0,
	0, 307, 0, 0, 0, 0, 0, 0, 0, 0,
	450, 442, 0, 0, 438, 0, 439, 0, 0, 0,
	0, 0, 366, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 188, 0, 0, 0, 0, 0, 0,
	257, 189, 440, 0, 441, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 248, 371, 387, 258,
	362, 400, 263, 369, 253, 336, 359, 0, 0, 250,
	385, 368, 318, 299, 300, 249, 0, 354, 278, 291,
	275, 334, 0, 384, 412, 274, 403, 0, 395, 252,
	0, 394, 333, 381, 386, 319, 313, 251, 383, 317,
	312, 303, 282, 427, 304, 305, 295, 345, 311, 346,
	296, 323, 322, 324, 0, 0, 0, 0, 0, 423,
	0, 0, 0, 0, 0, 0, 0, 0, 2429, 0,
	0, 2428, 0, 0, 0, 0, 0, 397, 0, 0,
	0, 0, 0, 0, 370, 0, 0, 306, 0, 0,
	0, 413, 0, 357, 339, 0, 0, 0, 355, 309,
	382, 347, 388, 372, 396, 351, 348, 243, 373, 277,
	320, 254, 256, 272, 279, 281, 283, 284, 329, 330,
	342, 361, 374, 375, 376, 276, 264, 356, 265, 293,
	266, 244, 269, 268, 270, 363, 271, 246, 343, 380,
	0, 289, 352, 316, 247, 315, 344, 379, 378, 255,
	404, 410, 411, 0, 0, 416, 0, 0, 0, 424,
	429, 430, 431, 433, 434, 435, 436, 0, 0, 0,
	0, 418, 0, 0, 0, 0, 0, 0, 409, 287,
	240, 241, 449, 273, 335, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 331, 408, 0, 0,
	0, 437, 448, 0, 0, 0, 0, 0, 447, 341,
	0, 360, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 367, 390, 402, 419, 422, 0,
	0, 0, 0, 245, 421, 0, 0, 0, 0, 0,
	0, 0, 0, 393, 0, 0, 0, 401, 0, 0,
	0, 0, 0, 417, 0, 0, 325, 326, 327, 328,
	290, 0, 262, 420, 350, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 414, 415, 286, 292, 432, 294, 261,
	340, 288, 399, 301, 0, 425, 0, 426, 0, 0,
	0, 0, 332, 297, 298, 364, 302, 310, 353, 398,
	338, 358, 259, 389, 365, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 233,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 377, 0, 238, 267, 0,
	242, 0, 308, 0, 349, 285, 0, 0, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 0, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 229, 230, 231, 232, 0, 337, 0, 239,
	234, 235, 236, 237, 0, 0, 0, 405, 406, 407,
	428, 391, 0, 446, 280, 1227, 0, 307, 0, 0,
	0, 0, 0, 0, 0, 0, 450, 442, 0, 0,
	438, 0, 439, 0, 0, 0, 0, 0, 366, 321,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 188,
	0, 0, 1225, 0, 0, 0, 257, 189, 440, 0,
	441, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1223, 0, 0, 0, 0,
	0, 0, 248, 371, 387, 258, 362, 400, 263, 369,
	253, 336, 359, 0, 0, 250, 385, 368, 318, 299,
	300, 249, 0, 354, 278, 291, 275, 334, 0, 384,
	412, 274, 403, 0, 395, 252, 0, 394, 333, 381,
	386, 319, 313, 251, 383, 317, 312, 303, 282, 427,
	304, 305, 295, 345, 311, 346, 296, 323, 322, 324,
	0, 0, 0, 0, 0, 423, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 397, 0, 0, 0, 0, 0, 0,
	370, 0, 0, 306, 0, 0, 0, 413, 0, 357,
	339, 0, 0, 0, 355, 309, 382, 347, 388, 372,
	396, 351, 348, 243, 373, 277, 320, 254, 256, 272,
	279, 281, 283, 284, 329, 330, 342, 361, 374, 375,
	376, 276, 264, 356, 265, 293, 266, 244, 269, 268,
	270, 363, 271, 246, 343, 380, 0, 289, 352, 316,
	247, 315, 344, 379, 378, 255, 404, 410, 411, 0,
	0, 416, 0, 0, 0, 424, 429, 430, 431, 433,
	434, 435, 436, 0, 0, 0, 0, 418, 0, 0,
	0, 0, 0, 0, 409, 287, 240, 241, 449, 273,
	335, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 331, 408, 0, 0, 0, 437, 448, 0,
	0, 0, 0, 0, 447, 341, 0, 360, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	367, 390, 402, 419, 422, 0, 0, 0, 0, 245,
	421, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	0, 0, 0, 401, 0, 0, 0, 0, 0, 417,
	0, 0, 325, 326, 327, 328, 290, 0, 262, 420,
	350, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 414,
	415, 286, 292, 432, 294, 261, 340, 288, 399, 301,
	0, 425, 0, 426, 0, 0, 0, 0, 332, 297,
	298, 364, 302, 310, 353, 398, 338, 358, 259, 389,
	365, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 377, 0, 238, 267, 0, 242, 0, 308, 0,
	349, 285, 0, 0, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 0, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	231, 232, 0, 337, 0, 239, 234, 235, 236, 237,
	0, 0, 0, 405, 406, 407, 428, 391, 0, 446,
	280, 1221, 0, 307, 0, 0, 0, 0, 0, 0,
	0, 0, 450, 442, 0, 0, 438, 0, 439, 0,
	0, 0, 0, 0, 366, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 188, 0, 0, 1225, 0,
	0, 0, 257, 189, 440, 0, 441, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1223, 0, 0, 0, 0, 0, 0, 248, 371,
	387, 258, 362, 400, 263, 369, 253, 336, 359, 0,
	0, 250, 385, 368, 318, 299, 300, 249, 0, 354,
	278, 291, 275, 334, 0, 384, 412, 274, 403, 0,
	395, 252, 0, 394, 333, 381, 386, 319, 313, 251,
	383, 317, 312, 303, 282, 427, 304, 305, 295, 345,
	311, 346, 296, 323, 322, 324, 0, 0, 0, 0,
	0, 423, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 397,
	0, 0, 0, 0, 0, 0, 370, 0, 0, 306,
	0, 0, 0, 413, 0, 357, 339, 0, 0, 0,
	355, 309, 382, 347, 388, 372, 396, 351, 348, 243,
	373, 277, 320, 254, 256, 272, 279, 281, 283, 284,
	329, 330, 342, 361, 374, 375, 376, 276, 264, 356,
	265, 293, 266, 244, 269, 268, 270, 363, 271, 246,
	343, 380, 0, 289, 352, 316, 247, 315, 344, 379,
	378, 255, 404, 410, 411, 0, 0, 416, 0, 0,
	0, 424, 429, 430, 431, 433, 434, 435, 436, 0,
	0, 0, 0, 418, 0, 0, 0, 0, 0, 0,
	409, 287, 240, 241, 449, 273, 335, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 331, 408,
	0, 0, 0, 437, 448, 0, 0, 0, 0, 0,
	447, 341, 0, 360, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 367, 390, 402, 419,
	422, 0, 0, 0, 0, 245, 421, 0, 0, 0,
	0, 0, 0, 0, 0, 393, 0, 0, 0, 401,
	0, 0, 0, 0, 0, 417, 0, 0, 325, 326,
	327, 328, 290, 0, 262, 420, 350, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 414, 415, 286, 292, 432,
	294, 261, 340, 288, 399, 301, 0, 425, 0, 426,
	0, 0, 0, 0, 332, 297, 298, 364, 302, 310,
	353, 398, 338, 358, 259, 389, 365, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 377, 0, 238,
	267, 0, 242, 0, 308, 0, 349, 285, 0, 0,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 0, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 229, 230, 231, 232, 0, 337,
	0, 239, 234, 235, 236, 237, 0, 0, 0, 405,
	406, 407, 428, 391, 0, 446, 280, 0, 0, 307,
	0, 0, 0, 0, 0, 0, 0, 0, 450, 442,
	0, 0, 438, 0, 439, 0, 0, 0, 0, 0,
	366, 321, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3215,
	0, 188, 623, 0, 0, 0, 0, 0, 257, 189,
	440, 0, 441, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 248, 371, 387, 258, 362, 400,
	263, 369, 253, 336, 359, 0, 0, 250, 385, 368,
	318, 299, 300, 249, 0, 354, 278, 291, 275, 334,
	0, 384, 412, 274, 403, 0, 395, 252, 0, 394,
	333, 381, 386, 319, 313, 251, 383, 317, 312, 303,
	282, 427, 304, 305, 295, 345, 311, 346, 296, 323,
	322, 324, 0, 0, 0, 0, 0, 423, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 397, 0, 0, 0, 0,
	0, 0, 370, 0, 0, 306, 0, 0, 0, 413,
	0, 357, 339, 0, 0, 0, 355, 309, 382, 347,
	388, 372, 396, 351, 348, 243, 373, 277, 320, 254,
	256, 272, 279, 281, 283, 284, 329, 330, 342, 361,
	374, 375, 376, 276, 264, 356, 265, 293, 266, 244,
	269, 268, 270, 363, 271, 246, 343, 380, 0, 289,
	352, 316, 247, 315, 344, 379, 378, 255, 404, 410,
	411, 0, 0, 416, 0, 0, 0, 424, 429, 430,
	431, 433, 434, 435, 436, 0, 0, 0, 0, 418,
	0, 0, 0, 0, 0, 0, 409, 287, 240, 241,
	449, 273, 335, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 331, 408, 0, 0, 0, 437,
	448, 0, 0, 0, 0, 0, 447, 341, 0, 360,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 367, 390, 402, 419, 422, 0, 0, 0,
	0, 245, 421, 0, 0, 0, 0, 0, 0, 0,
	0, 393, 0, 0, 0, 401, 0, 0, 0, 0,
	0, 417, 0, 0, 325, 326, 327, 328, 290, 0,
	262, 420, 350, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 414, 415, 286, 292, 432, 294, 261, 340, 288,
	399, 301, 0, 425, 0, 426, 0, 0, 0, 0,
	332, 297, 298, 364, 302, 310, 353, 398, 338, 358,
	259, 389, 365, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 377, 0, 238, 267, 0, 242, 0,
	308, 0, 349, 285, 0, 0, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 0,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 0, 337, 0, 239, 234, 235,
	236, 237, 0, 0, 0, 405, 406, 407, 428, 391,
	0, 446, 280, 0, 0, 307, 0, 0, 0, 0,
	0, 0, 0, 0, 450, 442, 0, 0, 438, 0,
	439, 0, 0, 0, 0, 0, 366, 321, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 188, 0, 0,
	1225, 0, 0, 0, 257, 189, 440, 0, 441, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1223, 0, 0, 0, 0, 0, 0,
	248, 371, 387, 258, 362, 400, 263, 369, 253, 336,
	359, 0, 0, 250, 385, 368, 318, 299, 300, 249,
	0, 354, 278, 291, 275, 334, 0, 384, 412, 274,
	403, 0, 395, 252, 0, 394, 333, 381, 386, 319,
	313, 251, 383, 317, 312, 303, 282, 427, 304, 305,
	295, 345, 311, 346, 296, 323, 322, 324, 0, 0,
	0, 0, 0, 423, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 397, 0, 0, 0, 0, 0, 0, 370, 0,
	0, 306, 0, 0, 0, 413, 0, 357, 339, 0,
	0, 0, 355, 309, 382, 347, 388, 372, 396, 351,
	348, 243, 373, 277, 320, 254, 256, 272, 279, 281,
	283, 284, 329, 330, 342, 361, 374, 375, 376, 276,
	264, 356, 265, 293, 266, 244, 269, 268, 270, 363,
	271, 246, 343, 380, 0, 289, 352, 316, 247, 315,
	344, 379, 378, 255, 404, 410, 411, 0, 0, 416,
	0, 0, 0, 424, 429, 430, 431, 433, 434, 435,
	436, 0, 0, 0, 0, 418, 0, 0, 0, 0,
	0, 0, 409, 287, 240, 241, 449, 273, 335, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	331, 408, 0, 0, 0, 437, 448, 0, 0, 0,
	0, 0, 447, 341, 0, 360, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 367, 390,
	402, 419, 422, 0, 0, 0, 0, 245, 421, 0,
	0, 0, 0, 0, 0, 0, 0, 393, 0, 0,
	0, 401, 0, 0, 0, 0, 0, 417, 0, 0,
	325, 326, 327, 328, 290, 0, 262, 420, 350, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 414, 415, 286,
	292, 432, 294, 261, 340, 288, 399, 301, 0, 425,
	0, 426, 0, 0, 0, 0, 332, 297, 298, 364,
	302, 310, 353, 398, 338, 358, 259, 389, 365, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 377,
	0, 238, 267, 0, 242, 0, 308, 0, 349, 285,
	0, 0, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 0, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 229, 230, 231, 232,
	0, 337, 0, 239, 234, 235, 236, 237, 0, 0,
	0, 405, 406, 407, 428, 391, 0, 446, 280, 0,
	0, 307, 0, 0, 0, 0, 0, 0, 0, 0,
	450, 442, 0, 0, 438, 0, 439, 0, 0, 0,
	0, 0, 366, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 188, 0, 0, 1225, 0, 0, 0,
	257, 189, 440, 0, 441, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2942,
	0, 0, 0, 0, 0, 0, 248, 371, 387, 258,
	362, 400, 263, 369, 253, 336, 359, 0, 0, 250,
	385, 368, 318, 299, 300, 249, 0, 354, 278, 291,
	275, 334, 0, 384, 412, 274, 403, 0, 395, 252,
	0, 394, 333, 381, 386, 319, 313, 251, 383, 317,
	312, 303, 282, 427, 304, 305, 295, 345, 311, 346,
	296, 323, 322, 324, 0, 0, 0, 0, 0, 423,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 397, 0, 0,
	0, 0, 0, 0, 370, 0, 0, 306, 0, 0,
	0, 413, 0, 357, 339, 0, 0, 0, 355, 309,
	382, 347, 388, 372, 396, 351, 348, 243, 373, 277,
	320, 254, 256, 272, 279, 281, 283, 284, 329, 330,
	342, 361, 374, 375, 376, 276, 264, 356, 265, 293,
	266, 244, 269, 268, 270, 363, 271, 246, 343, 380,
	0, 289, 352, 316, 247, 315, 344, 379, 378, 255,
	404, 410, 411, 0, 0, 416, 0, 0, 0, 424,
	429, 430, 431, 433, 434, 435, 436, 0, 0, 0,
	0, 418, 0, 0, 0, 0, 0, 0, 409, 287,
	240, 241, 449, 273, 335, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 331, 408, 0, 0,
	0, 437, 448, 0, 0, 0, 0, 0, 447, 341,
	0, 360, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 367, 390, 402, 419, 422, 0,
	0, 0, 0, 245, 421, 0, 0, 0, 0, 0,
	0, 0, 0, 393, 0, 0, 0, 401, 0, 0,
	0, 0, 0, 417, 0, 0, 325, 326, 327, 328,
	290, 0, 262, 420, 350, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 414, 415, 286, 292, 432, 294, 261,
	340, 288, 399, 301, 0, 425, 0, 426, 0, 0,
	0, 0, 332, 297, 298, 364, 302, 310, 353, 398,
	338, 358, 259, 389, 365, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 233,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 377, 0, 238, 267, 0,
	242, 0, 308, 0, 349, 285, 0, 0, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 0, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 229, 230, 231, 232, 0, 0, 0, 239,
	234, 235, 236, 237, 337, 0, 0, 405, 406, 407,
	428, 391, 0, 446, 0, 0, 2054, 0, 0, 0,
	0, 280, 0, 0, 307, 0, 450, 442, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 438, 0, 439,
	0, 0, 0, 0, 0, 366, 321, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 188, 0, 0, 2056,
	0, 0, 0, 257, 189, 440, 0, 441, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 248,
	371, 387, 258, 362, 400, 263, 369, 253, 336, 359,
	0, 0, 250, 385, 368, 318, 299, 300, 249, 0,
	354, 278, 291, 275, 334, 0, 384, 412, 274, 403,
	0, 395, 252, 0, 394, 333, 381, 386, 319, 313,
	251, 383, 317, 312, 303, 282, 427, 304, 305, 295,
	345, 311, 346, 296, 323, 322, 324, 0, 0, 0,
	0, 0, 423, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	397, 0, 0, 0, 0, 0, 0, 370, 0, 0,
	306, 0, 0, 0, 413, 0, 357, 339, 0, 0,
	0, 355, 309, 382, 347, 388, 372, 396, 351, 348,
	243, 373, 277, 320, 254, 256, 272, 279, 281, 283,
	284, 329, 330, 342, 361, 374, 375, 376, 276, 264,
	356, 265, 293, 266, 244, 269, 268, 270, 363, 271,
	246, 343, 380, 0, 289, 352, 316, 247, 315, 344,
	379, 378, 255, 404, 410, 411, 0, 0, 416, 0,
	0, 0, 424, 429, 430, 431, 433, 434, 435, 436,
	0, 0, 0, 0, 418, 0, 0, 0, 0, 0,
	0, 409, 287, 240, 241, 449, 273, 335, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 331,
	408, 0, 0, 0, 437, 448, 0, 0, 0, 0,
	0, 447, 341, 0, 360, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 367, 390, 402,
	419, 422, 0, 0, 0, 0, 245, 421, 0, 0,
	0, 0, 0, 0, 0, 0, 393, 0, 0, 0,
	401, 0, 0, 0, 0, 0, 417, 0, 0, 325,
	326, 327, 328, 290, 0, 262, 420, 350, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 414, 415, 286, 292,
	432, 294, 261, 340, 288, 399, 301, 0, 425, 0,
	426, 0, 0, 0, 0, 332, 297, 298, 364, 302,
	310, 353, 398, 338, 358, 259, 389, 365, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 377, 0,
	238, 267, 0, 242, 0, 308, 0, 349, 285, 0,
	0, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 0, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 228, 229, 230, 231, 232, 0,
	337, 0, 239, 234, 235, 236, 237, 0, 0, 0,
	405, 406, 407, 428, 391, 0, 446, 280, 2075, 0,
	307, 0, 0, 0, 0, 0, 0, 0, 0, 450,
	442, 0, 0, 438, 0, 439, 0, 0, 0, 0,
	0, 366, 321, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 188, 0, 0, 1225, 0, 0, 0, 257,
	189, 440, 0, 441, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 248, 371, 387, 258, 362,
	400, 263, 369, 253, 336, 359, 0, 0, 250, 385,
	368, 318, 299, 300, 249, 0, 354, 278, 291, 275,
	334, 0, 384, 412, 274, 403, 0, 395, 252, 0,
	394, 333, 381, 386, 319, 313, 251, 383, 317, 312,
	303, 282, 427, 304, 305, 295, 345, 311, 346, 296,
	323, 322, 324, 0, 0, 0, 0, 0, 423, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 397, 0, 0, 0,
	0, 0, 0, 370, 0, 0, 306, 0, 0, 0,
	413, 0, 357, 339, 0, 0, 0, 355, 309, 382,
	347, 388, 372, 396, 351, 348, 243, 373, 277, 320,
	254, 256, 272, 279, 281, 283, 284, 329, 330, 342,
	361, 374, 375, 376, 276, 264, 356, 265, 293, 266,
	244, 269, 268, 270, 363, 271, 246, 343, 380, 0,
	289, 352, 316, 247, 315, 344, 379, 378, 255, 404,
	410, 411, 0, 0, 416, 0, 0, 0, 424, 429,
	430, 431, 433, 434, 435, 436, 0, 0, 0, 0,
	418, 0, 0, 0, 0, 0, 0, 409, 287, 240,
	241, 449, 273, 335, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 331, 408, 0, 0, 0,
	437, 448, 0, 0, 0, 0, 0, 447, 341, 0,
	360, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 367, 390, 402, 419, 422, 0, 0,
	0, 0, 245, 421, 0, 0, 0, 0, 0, 0,
	0, 0, 393, 0, 0, 0, 401, 0, 0, 0,
	0, 0, 417, 0, 0, 325, 326, 327, 328, 290,
	0, 262, 420, 350, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 414, 415, 286, 292, 432, 294, 261, 340,
	288, 399, 301, 0, 425, 0, 426, 0, 0, 0,
	0, 332, 297, 298, 364, 302, 310, 353, 398, 338,
	358, 259, 389, 365, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 238, 267, 0, 242,
	0, 308, 0, 349, 285, 0, 0, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	0, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 231, 232, 0, 337, 0, 239, 234,
	235, 236, 237, 0, 0, 0, 405, 406, 407, 428,
	391, 0, 446, 280, 0, 0, 307, 0, 0, 0,
	0, 0, 0, 0, 0, 450, 442, 0, 0, 438,
	0, 439, 0, 0, 0, 0, 0, 366, 321, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3309, 0, 188, 0,
	0, 0, 0, 0, 0, 257, 189, 440, 0, 441,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 248, 371, 387, 258, 362, 400, 263, 369, 253,
	336, 359, 0, 0, 250, 385, 368, 318, 299, 300,
	249, 0, 354, 278, 291, 275, 334, 0, 384, 412,
	274, 403, 0, 395, 252, 0, 394, 333, 381, 386,
	319, 313, 251, 383, 317, 312, 303, 282, 427, 304,
	305, 295, 345, 311, 346, 296, 323, 322, 324, 0,
	0, 0, 0, 0, 423, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 397, 0, 0, 0, 0, 0, 0, 370,
	0, 0, 306, 0, 0, 0, 413, 0, 357, 339,
	0, 0, 0, 355, 309, 382, 347, 388, 372, 396,
	351, 348, 243, 373, 277, 320, 254, 256, 272, 279,
	281, 283, 284, 329, 330, 342, 361, 374, 375, 376,
	276, 264, 356, 265, 293, 266, 244, 269, 268, 270,
	363, 271, 246, 343, 380, 0, 289, 352, 316, 247,
	315, 344, 379, 378, 255, 404, 410, 411, 0, 0,
	416, 0, 0, 0, 424, 429, 430, 431, 433, 434,
	435, 436, 0, 0, 0, 0, 418, 0, 0, 0,
	0, 0, 0, 409, 287, 240, 241, 449, 273, 335,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 331, 408, 0, 0, 0, 437, 448, 0, 0,
	0, 0, 0, 447, 341, 0, 360, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 367,
	390, 402, 419, 422, 0, 0, 0, 0, 245, 421,
	0, 0, 0, 0, 0, 0, 0, 0, 393, 0,
	0, 0, 401, 0, 0, 0, 0, 0, 417, 0,
	0, 325, 326, 327, 328, 290, 0, 262, 420, 350,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 414, 415,
	286, 292, 432, 294, 261, 340, 288, 399, 301, 0,
	425, 0, 426, 0, 0, 0, 0, 332, 297, 298,
	364, 302, 310, 353, 398, 338, 358, 259, 389, 365,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 238, 267, 0, 242, 0, 308, 0, 349,
	285, 0, 0, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 0, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 0, 337, 0, 239, 234, 235, 236, 237, 0,
	0, 0, 405, 406, 407, 428, 391, 0, 446, 280,
	0, 0, 307, 0, 0, 0, 0, 0, 0, 0,
	0, 450, 442, 0, 0, 438, 0, 439, 0, 0,
	0, 0, 0, 366, 321, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 188, 623, 0, 0, 0, 0,
	0, 257, 189, 440, 0, 441, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 248, 371, 387,
	258, 362, 400, 263, 369, 253, 336, 359, 0, 0,
	250, 385, 368, 318, 299, 300, 249, 0, 354, 278,
	291, 275, 334, 0, 384, 412, 274, 403, 0, 395,
	252, 0, 394, 333, 381, 386, 319, 313, 251, 383,
	317, 312, 303, 282, 427, 304, 305, 295, 345, 311,
	346, 296, 323, 322, 324, 0, 0, 0, 0, 0,
	423, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 397, 0,
	0, 0, 0, 0, 0, 370, 0, 0, 306, 0,
	0, 0, 413, 0, 357, 339, 0, 0, 0, 355,
	309, 382, 347, 388, 372, 396, 351, 348, 243, 373,
	277, 320, 254, 256, 272, 279, 281, 283, 284, 329,
	330, 342, 361, 374, 375, 376, 276, 264, 356, 265,
	293, 266, 244, 269, 268, 270, 363, 271, 246, 343,
	380, 0, 289, 352, 316, 247, 315, 344, 379, 378,
	255, 404, 410, 411, 0, 0, 416, 0, 0, 0,
	424, 429, 430, 431, 433, 434, 435, 436, 0, 0,
	0, 0, 418, 0, 0, 0, 0, 0, 0, 409,
	287, 240, 241, 449, 273, 335, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 331, 408, 0,
	0, 0, 437, 448, 0, 0, 0, 0, 0, 447,
	341, 0, 360, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 367, 390, 402, 419, 422,
	0, 0, 0, 0, 245, 421, 0, 0, 0, 0,
	0, 0, 0, 0, 393, 0, 0, 0, 401, 0,
	0, 0, 0, 0, 417, 0, 0, 325, 326, 327,
	328, 290, 0, 262, 420, 350, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 414, 415, 286, 292, 432, 294,
	261, 340, 288, 399, 301, 0, 425, 0, 426, 0,
	0, 0, 0, 332, 297, 298, 364, 302, 310, 353,
	398, 338, 358, 259, 389, 365, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	233, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 377, 0, 238, 267,
	0, 242, 0, 308, 0, 349, 285, 0, 0, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 0, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 228, 229, 230, 231, 232, 0, 337, 0,
	239, 234, 235, 236, 237, 0, 0, 0, 405, 406,
	407, 428, 391, 0, 446, 280, 0, 0, 307, 0,
	0, 0, 0, 0, 0, 0, 0, 450, 442, 0,
	0, 438, 0, 439, 0, 0, 0, 0, 0, 366,
	321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3231, 0, 0,
	188, 0, 0, 0, 0, 0, 0, 257, 189, 440,
	0, 441, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 248, 371, 387, 258, 362, 400, 263,
	369, 253, 336, 359, 0, 0, 250, 385, 368, 318,
	299, 300, 249, 0, 354, 278, 291, 275, 334, 0,
	384, 412, 274, 403, 0, 395, 252, 0, 394, 333,
	381, 386, 319, 313, 251, 383, 317, 312, 303, 282,
	427, 304, 305, 295, 345, 311, 346, 296, 323, 322,
	324, 0, 0, 0, 0, 0, 423, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 397, 0, 0, 0, 0, 0,
	0, 370, 0, 0, 306, 0, 0, 0, 413, 0,
	357, 339, 0, 0, 0, 355, 309, 382, 347, 388,
	372, 396, 351, 348, 243, 373, 277, 320, 254, 256,
	272, 279, 281, 283, 284, 329, 330, 342, 361, 374,
	375, 376, 276, 264, 356, 265, 293, 266, 244, 269,
	268, 270, 363, 271, 246, 343, 380, 0, 289, 352,
	316, 247, 315, 344, 379, 378, 255, 404, 410, 411,
	0, 0, 416, 0, 0, 0, 424, 429, 430, 431,
	433, 434, 435, 436, 0, 0, 0, 0, 418, 0,
	0, 0, 0, 0, 0, 409, 287, 240, 241, 449,
	273, 335, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 331, 408, 0, 0, 0, 437, 448,
	0, 0, 0, 0, 0, 447, 341, 0, 360, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 367, 390, 402, 419, 422, 0, 0, 0, 0,
	245, 421, 0, 0, 0, 0, 0, 0, 0, 0,
	393, 0, 0, 0, 401, 0, 0, 0, 0, 0,
	417, 0, 0, 325, 326, 327, 328, 290, 0, 262,
	420, 350, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	414, 415, 286, 292, 432, 294, 261, 340, 288, 399,
	301, 0, 425, 0, 426, 0, 0, 0, 0, 332,
	297, 298, 364, 302, 310, 353, 398, 338, 358, 259,
	389, 365, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 377, 0, 238, 267, 0, 242, 0, 308,
	0, 349, 285, 0, 0, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 0, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 232, 0, 337, 0, 239, 234, 235, 236,
	237, 0, 0, 0, 405, 406, 407, 428, 391, 0,
	446, 280, 0, 0, 307, 0, 0, 0, 0, 0,
	0, 0, 0, 450, 442, 0, 0, 438, 0, 439,
	0, 0, 0, 0, 0, 366, 321, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 188, 0, 0, 0,
	0, 0, 0, 257, 189, 440, 0, 441, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 248,
	371, 387, 258, 362, 400, 263, 369, 253, 336, 359,
	0, 0, 250, 385, 368, 318, 299, 300, 249, 0,
	354, 278, 291, 275, 334, 0, 384, 412, 274, 403,
	0, 395, 252, 0, 394, 333, 381, 386, 319, 313,
	251, 383, 317, 312, 303, 282, 427, 304, 305, 295,
	345, 311, 346, 296, 323, 322, 324, 0, 0, 0,
	0, 0, 423, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	397, 0, 0, 0, 3157, 0, 0, 370, 0, 0,
	306, 0, 0, 0, 413, 0, 357, 339, 0, 0,
	0, 355, 309, 382, 347, 388, 372, 396, 351, 348,
	243, 373, 277, 320, 254, 256, 272, 279, 281, 283,
	284, 329, 330, 342, 361, 374, 375, 376, 276, 264,
	356, 265, 293, 266, 244, 269, 268, 270, 363, 271,
	246, 343, 380, 0, 289, 352, 316, 247, 315, 344,
	379, 378, 255, 404, 410, 411, 0, 0, 416, 0,
	0, 0, 424, 429, 430, 431, 433, 434, 435, 436,
	0, 0, 0, 0, 418, 0, 0, 0, 0, 0,
	0, 409, 287, 240, 241, 449, 273, 335, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 331,
	408, 0, 0, 0, 437, 448, 0, 0, 0, 0,
	0, 447, 341, 0, 360, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 367, 390, 402,
	419, 422, 0, 0, 0, 0, 245, 421, 0, 0,
	0, 0, 0, 0, 0, 0, 393, 0, 0, 0,
	401, 0, 0, 0, 0, 0, 417, 0, 0, 325,
	326, 327, 328, 290, 0, 262, 420, 350, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 414, 415, 286, 292,
	432, 294, 261, 340, 288, 399, 301, 0, 425, 0,
	426, 0, 0, 0, 0, 332, 297, 298, 364, 302,
	310, 353, 398, 338, 358, 259, 389, 365, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 377, 0,
	238, 267, 0, 242, 0, 308, 0, 349, 285, 0,
	0, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 0, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 228, 229, 230, 231, 232, 0,
	337, 0, 239, 234, 235, 236, 237, 0, 0, 0,
	405, 406, 407, 428, 391, 0, 446, 280, 0, 0,
	307, 0, 0, 0, 0, 0, 0, 0, 0, 450,
	442, 0, 0, 438, 0, 439, 0, 0, 0, 0,
	0, 366, 321, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2938,
	0, 0, 188, 0, 0, 0, 0, 0, 0, 257,
	189, 440, 0, 441, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 248, 371, 387, 258, 362,
	400, 263, 369, 253, 336, 359, 0, 0, 250, 385,
	368, 318, 299, 300, 249, 0, 354, 278, 291, 275,
	334, 0, 384, 412, 274, 403, 0, 395, 252, 0,
	394, 333, 381, 386, 319, 313, 251, 383, 317, 312,
	303, 282, 427, 304, 305, 295, 345, 311, 346, 296,
	323, 322, 324, 0, 0, 0, 0, 0, 423, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 397, 0, 0, 0,
	0, 0, 0, 370, 0, 0, 306, 0, 0, 0,
	413, 0, 357, 339, 0, 0, 0, 355, 309, 382,
	347, 388, 372, 396, 351, 348, 243, 373, 277, 320,
	254, 256, 272, 279, 281, 283, 284, 329, 330, 342,
	361, 374, 375, 376, 276, 264, 356, 265, 293, 266,
	244, 269, 268, 270, 363, 271, 246, 343, 380, 0,
	289, 352, 316, 247, 315, 344, 379, 378, 255, 404,
	410, 411, 0, 0, 416, 0, 0, 0, 424, 429,
	430, 431, 433, 434, 435, 436, 0, 0, 0, 0,
	418, 0, 0, 0, 0, 0, 0, 409, 287, 240,
	241, 449, 273, 335, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 331, 408, 0, 0, 0,
	437, 448, 0, 0, 0, 0, 0, 447, 341, 0,
	360, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 367, 390, 402, 419, 422, 0, 0,
	0, 0, 245, 421, 0, 0, 0, 0, 0, 0,
	0, 0, 393, 0, 0, 0, 401, 0, 0, 0,
	0, 0, 417, 0, 0, 325, 326, 327, 328, 290,
	0, 262, 420, 350, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 414, 415, 286, 292, 432, 294, 261, 340,
	288, 399, 301, 0, 425, 0, 426, 0, 0, 0,
	0, 332, 297, 298, 364, 302, 310, 353, 398, 338,
	358, 259, 389, 365, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 238, 267, 0, 242,
	0, 308, 0, 349, 285, 0, 0, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	0, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 231, 232, 0, 337, 0, 239, 234,
	235, 236, 237, 0, 0, 0, 405, 406, 407, 428,
	391, 0, 446, 280, 0, 0, 307, 0, 0, 0,
	0, 0, 0, 0, 0, 450, 442, 0, 0, 438,
	0, 439, 0, 0, 0, 0, 0, 366, 321, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 188, 0,
	0, 2768, 0, 0, 0, 257, 189, 440, 0, 441,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 248, 371, 387, 258, 362, 400, 263, 369, 253,
	336, 359, 0, 0, 250, 385, 368, 318, 299, 300,
	249, 0, 354, 278, 291, 275, 334, 0, 384, 412,
	274, 403, 0, 395, 252, 0, 394, 333, 381, 386,
	319, 313, 251, 383, 317, 312, 303, 282, 427, 304,
	305, 295, 345, 311, 346, 296, 323, 322, 324, 0,
	0, 0, 0, 0, 423, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 397, 0, 0, 0, 0, 0, 0, 370,
	0, 0, 306, 0, 0, 0, 413, 0, 357, 339,
	0, 0, 0, 355, 309, 382, 347, 388, 372, 396,
	351, 348, 243, 373, 277, 320, 254, 256, 272, 279,
	281, 283, 284, 329, 330, 342, 361, 374, 375, 376,
	276, 264, 356, 265, 293, 266, 244, 269, 268, 270,
	363, 271, 246, 343, 380, 0, 289, 352, 316, 247,
	315, 344, 379, 378, 255, 404, 410, 411, 0, 0,
	416, 0, 0, 0, 424, 429, 430, 431, 433, 434,
	435, 436, 0, 0, 0, 0, 418, 0, 0, 0,
	0, 0, 0, 409, 287, 240, 241, 449, 273, 335,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 331, 408, 0, 0, 0, 437, 448, 0, 0,
	0, 0, 0, 447, 341, 0, 360, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 367,
	390, 402, 419, 422, 0, 0, 0, 0, 245, 421,
	0, 0, 0, 0, 0, 0, 0, 0, 393, 0,
	0, 0, 401, 0, 0, 0, 0, 0, 417, 0,
	0, 325, 326, 327, 328, 290, 0, 262, 420, 350,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 414, 415,
	286, 292, 432, 294, 261, 340, 288, 399, 301, 0,
	425, 0, 426, 0, 0, 0, 0, 332, 297, 298,
	364, 302, 310, 353, 398, 338, 358, 259, 389, 365,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 238, 267, 0, 242, 0, 308, 0, 349,
	285, 0, 0, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 0, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 0, 337, 0, 239, 234, 235, 236, 237, 0,
	0, 0, 405, 406, 407, 428, 391, 0, 446, 280,
	0, 0, 307, 0, 0, 0, 0, 0, 0, 0,
	0, 450, 442, 0, 0, 438, 0, 439, 0, 0,
	0, 0, 0, 366, 321, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 188, 0, 0, 0, 0, 0,
	0, 257, 189, 440, 0, 441, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 248, 371, 387,
	258, 362, 400, 263, 369, 253, 336, 359, 0, 0,
	250, 385, 368, 318, 299, 300, 249, 0, 354, 278,
	291, 275, 334, 0, 384, 412, 274, 403, 0, 395,
	252, 0, 394, 333, 381, 386, 319, 313, 251, 383,
	317, 312, 303, 282, 427, 304, 305, 295, 345, 311,
	346, 296, 323, 322, 324, 0, 0, 0, 0, 0,
	423, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 397, 0,
	0, 0, 3006, 0, 0, 370, 0, 0, 306, 0,
	0, 0, 413, 0, 357, 339, 0, 0, 0, 355,
	309, 382, 347, 388, 372, 396, 351, 348, 243, 373,
	277, 320, 254, 256, 272, 279, 281, 283, 284, 329,
	330, 342, 361, 374, 375, 376, 276, 264, 356, 265,
	293, 266, 244, 269, 268, 270, 363, 271, 246, 343,
	380, 0, 289, 352, 316, 247, 315, 344, 379, 378,
	255, 404, 410, 411, 0, 0, 416, 0, 0, 0,
	424, 429, 430, 431, 433, 434, 435, 436, 0, 0,
	0, 0, 418, 0, 0, 0, 0, 0, 0, 409,
	287, 240, 241, 449, 273, 335, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 331, 408, 0,
	0, 0, 437, 448, 0, 0, 0, 0, 0, 447,
	341, 0, 360, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 367, 390, 402, 419, 422,
	0, 0, 0, 0, 245, 421, 0, 0, 0, 0,
	0, 0, 0, 0, 393, 0, 0, 0, 401, 0,
	0, 0, 0, 0, 417, 0, 0, 325, 326, 327,
	328, 290, 0, 262, 420, 350, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 414, 415, 286, 292, 432, 294,
	261, 340, 288, 399, 301, 0, 425, 0, 426, 0,
	0, 0, 0, 332, 297, 298, 364, 302, 310, 353,
	398, 338, 358, 259, 389, 365, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	233, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 377, 0, 238, 267,
	0, 242, 0, 308, 0, 349, 285, 0, 0, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 0, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 228, 229, 230, 231, 232, 0, 337, 0,
	239, 234, 235, 236, 237, 0, 0, 0, 405, 406,
	407, 428, 391, 0, 446, 280, 0, 0, 307, 0,
	0, 0, 0, 0, 0, 0, 0, 450, 442, 0,
	0, 438, 0, 439, 0, 0, 0, 0, 0, 366,
	321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	188, 0, 0, 0, 0, 0, 0, 257, 189, 440,
	0, 441, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2642, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 248, 371, 387, 258, 362, 400, 263,
	369, 253, 336, 359, 0, 0, 250, 385, 368, 318,
	299, 300, 249, 0, 354, 278, 291, 275, 334, 0,
	384, 412, 274, 403, 0, 395, 252, 0, 394, 333,
	381, 386, 319, 313, 251, 383, 317, 312, 303, 282,
	427, 304, 305, 295, 345, 311, 346, 296, 323, 322,
	324, 0, 0, 0, 0, 0, 423, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 397, 0, 0, 0, 0, 0,
	0, 370, 0, 0, 306, 0, 0, 0, 413, 0,
	357, 339, 0, 0, 0, 355, 309, 382, 347, 388,
	372, 396, 351, 348, 243, 373, 277, 320, 254, 256,
	272, 279, 281, 283, 284, 329, 330, 342, 361, 374,
	375, 376, 276, 264, 356, 265, 293, 266, 244, 269,
	268, 270, 363, 271, 246, 343, 380, 0, 289, 352,
	316, 247, 315, 344, 379, 378, 255, 404, 410, 411,
	0, 0, 416, 0, 0, 0, 424, 429, 430, 431,
	433, 434, 435, 436, 0, 0, 0, 0, 418, 0,
	0, 0, 0, 0, 0, 409, 287, 240, 241, 449,
	273, 335, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 331, 408, 0, 0, 0, 437, 448,
	0, 0, 0, 0, 0, 447, 341, 0, 360, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 367, 390, 402, 419, 422, 0, 0, 0, 0,
	245, 421, 0, 0, 0, 0, 0, 0, 0, 0,
	393, 0, 0, 0, 401, 0, 0, 0, 0, 0,
	417, 0, 0, 325, 326, 327, 328, 290, 0, 262,
	420, 350, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	414, 415, 286, 292, 432, 294, 261, 340, 288, 399,
	301, 0, 425, 0, 426, 0, 0, 0, 0, 332,
	297, 298, 364, 302, 310, 353, 398, 338, 358, 259,
	389, 365, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 377, 0, 238, 267, 0, 242, 0, 308,
	0, 349, 285, 0, 0, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 0, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 232, 0, 337, 0, 239, 234, 235, 236,
	237, 0, 0, 0, 405, 406, 407, 428, 391, 0,
	446, 280, 0, 0, 307, 0, 0, 0, 0, 0,
	0, 0, 0, 450, 442, 0, 0, 438, 0, 439,
	0, 0, 0, 0, 0, 366, 321, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1665, 0, 0, 188, 0, 0, 0,
	0, 0, 0, 257, 189, 440, 0, 441, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 248,
	371, 387, 258, 362, 400, 263, 369, 253, 336, 359,
	0, 0, 250, 385, 368, 318, 299, 300, 249, 0,
	354, 278, 291, 275, 334, 0, 384, 412, 274, 403,
	0, 395, 252, 0, 394, 333, 381, 386, 319, 313,
	251, 383, 317, 312, 303, 282, 427, 304, 305, 295,
	345, 311, 346, 296, 323, 322, 324, 0, 0, 0,
	0, 0, 423, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	397, 0, 0, 0, 0, 0, 0, 370, 0, 0,
	306, 0, 0, 0, 413, 0, 357, 339, 0, 0,
	0, 355, 309, 382, 347, 388, 372, 396, 351, 348,
	243, 373, 277, 320, 254, 256, 272, 279, 281, 283,
	284, 329, 330, 342, 361, 374, 375, 376, 276, 264,
	356, 265, 293, 266, 244, 269, 268, 270, 363, 271,
	246, 343, 380, 0, 289, 352, 316, 247, 315, 344,
	379, 378, 255, 404, 410, 411, 0, 0, 416, 0,
	0, 0, 424, 429, 430, 431, 433, 434, 435, 436,
	0, 0, 0, 0, 418, 0, 0, 0, 0, 0,
	0, 409, 287, 240, 241, 449, 273, 335, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 331,
	408, 0, 0, 0, 437, 448, 0, 0, 0, 0,
	0, 447, 341, 0, 360, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 367, 390, 402,
	419, 422, 0, 0, 0, 0, 245, 421, 0, 0,
	0, 0, 0, 0, 0, 0, 393, 0, 0, 0,
	401, 0, 0, 0, 0, 0, 417, 0, 0, 325,
	326, 327, 328, 290, 0, 262, 420, 350, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 414, 415, 286, 292,
	432, 294, 261, 340, 288, 399, 301, 0, 425, 0,
	426, 0, 0, 0, 0, 332, 297, 298, 364, 302,
	310, 353, 398, 338, 358, 259, 389, 365, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 377, 0,
	238, 267, 0, 242, 0, 308, 0, 349, 285, 0,
	0, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 0, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 228, 229, 230, 231, 232, 0,
	337, 0, 239, 234, 235, 236, 237, 0, 0, 0,
	405, 406, 407, 428, 391, 0, 446, 280, 0, 0,
	307, 0, 0, 0, 0, 0, 0, 0, 0, 450,
	442, 0, 0, 438, 0, 439, 0, 0, 0, 0,
	0, 366, 321, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 188, 0, 0, 2305, 0, 0, 0, 257,
	189, 440, 0, 441, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 248, 371, 387, 258, 362,
	400, 263, 369, 253, 336, 359, 0, 0, 250, 385,
	368, 318, 299, 300, 249, 0, 354, 278, 291, 275,
	334, 0, 384, 412, 274, 403, 0, 395, 252, 0,
	394, 333, 381, 386, 319, 313, 251, 383, 317, 312,
	303, 282, 427, 304, 305, 295, 345, 311, 346, 296,
	323, 322, 324, 0, 0, 0, 0, 0, 423, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 397, 0, 0, 0,
	0, 0, 0, 370, 0, 0, 306, 0, 0, 0,
	413, 0, 357, 339, 0, 0, 0, 355, 309, 382,
	347, 388, 372, 396, 351, 348, 243, 373, 277, 320,
	254, 256, 272, 279, 281, 283, 284, 329, 330, 342,
	361, 374, 375, 376, 276, 264, 356, 265, 293, 266,
	244, 269, 268, 270, 363, 271, 246, 343, 380, 0,
	289, 352, 316, 247, 315, 344, 379, 378, 255, 404,
	410, 411, 0, 0, 416, 0, 0, 0, 424, 429,
	430, 431, 433, 434, 435, 436, 0, 0, 0, 0,
	418, 0, 0, 0, 0, 0, 0, 409, 287, 240,
	241, 449, 273, 335, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 331, 408, 0, 0, 0,
	437, 448, 0, 0, 0, 0, 0, 447, 341, 0,
	360, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 367, 390, 402, 419, 422, 0, 0,
	0, 0, 245, 421, 0, 0, 0, 0, 0, 0,
	0, 0, 393, 0, 0, 0, 401, 0, 0, 0,
	0, 0, 417, 0, 0, 325, 326, 327, 328, 290,
	0, 262, 420, 350, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 414, 415, 286, 292, 432, 294, 261, 340,
	288, 399, 301, 0, 425, 0, 426, 0, 0, 0,
	0, 332, 297, 298, 364, 302, 310, 353, 398, 338,
	358, 259, 389, 365, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 238, 267, 0, 242,
	0, 308, 0, 349, 285, 0, 0, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	0, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 231, 232, 0, 337, 0, 239, 234,
	235, 236, 237, 0, 0, 0, 405, 406, 407, 428,
	391, 0, 446, 280, 0, 0, 307, 0, 0, 0,
	0, 0, 0, 0, 0, 450, 442, 0, 0, 438,
	0, 439, 0, 0, 0, 0, 0, 366, 321, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 188, 0,
	0, 0, 0, 0, 0, 257, 189, 440, 0, 441,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2726, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 248, 371, 387, 258, 362, 400, 263, 369, 253,
	336, 359, 0, 0, 250, 385, 368, 318, 299, 300,
	249, 0, 354, 278, 291, 275, 334, 0, 384, 412,
	274, 403, 0, 395, 252, 0, 394, 333, 381, 386,
	319, 313, 251, 383, 317, 312, 303, 282, 427, 304,
	305, 295, 345, 311, 346, 296, 323, 322, 324, 0,
	0, 0, 0, 0, 423, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 397, 0, 0, 0, 0, 0, 0, 370,
	0, 0, 306, 0, 0, 0, 413, 0, 357, 339,
	0, 0, 0, 355, 309, 382, 347, 388, 372, 396,
	351, 348, 243, 373, 277, 320, 254, 256, 272, 279,
	281, 283, 284, 329, 330, 342, 361, 374, 375, 376,
	276, 264, 356, 265, 293, 266, 244, 269, 268, 270,
	363, 271, 246, 343, 380, 0, 289, 352, 316, 247,
	315, 344, 379, 378, 255, 404, 410, 411, 0, 0,
	416, 0, 0, 0, 424, 429, 430, 431, 433, 434,
	435, 436, 0, 0, 0, 0, 418, 0, 0, 0,
	0, 0, 0, 409, 287, 240, 241, 449, 273, 335,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 331, 408, 0, 0, 0, 437, 448, 0, 0,
	0, 0, 0, 447, 341, 0, 360, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 367,
	390, 402, 419, 422, 0, 0, 0, 0, 245, 421,
	0, 0, 0, 0, 0, 0, 0, 0, 393, 0,
	0, 0, 401, 0, 0, 0, 0, 0, 417, 0,
	0, 325, 326, 327, 328, 290, 0, 262, 420, 350,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 414, 415,
	286, 292, 432, 294, 261, 340, 288, 399, 301, 0,
	425, 0, 426, 0, 0, 0, 0, 332, 297, 298,
	364, 302, 310, 353, 398, 338, 358, 259, 389, 365,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 238, 267, 0, 242, 0, 308, 0, 349,
	285, 0, 0, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 0, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 0, 337, 0, 239, 234, 235, 236, 237, 0,
	0, 0, 405, 406, 407, 428, 391, 0, 446, 280,
	0, 0, 307, 0, 0, 0, 0, 0, 0, 0,
	0, 450, 442, 0, 0, 438, 0, 439, 0, 0,
	0, 0, 0, 366, 321, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 188, 0, 0, 2596, 0, 0,
	0, 257, 189, 440, 0, 441, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 248, 371, 387,
	258, 362, 400, 263, 369, 253, 336, 359, 0, 0,
	250, 385, 368, 318, 299, 300, 249, 0, 354, 278,
	291, 275, 334, 0, 384, 412, 274, 403, 0, 395,
	252, 0, 394, 333, 381, 386, 319, 313, 251, 383,
	317, 312, 303, 282, 427, 304, 305, 295, 345, 311,
	346, 296, 323, 322, 324, 0, 0, 0, 0, 0,
	423, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 397, 0,
	0, 0, 0, 0, 0, 370, 0, 0, 306, 0,
	0, 0, 413, 0, 357, 339, 0, 0, 0, 355,
	309, 382, 347, 388, 372, 396, 351, 348, 243, 373,
	277, 320, 254, 256, 272, 279, 281, 283, 284, 329,
	330, 342, 361, 374, 375, 376, 276, 264, 356, 265,
	293, 266, 244, 269, 268, 270, 363, 271, 246, 343,
	380, 0, 289, 352, 316, 247, 315, 344, 379, 378,
	255, 404, 410, 411, 0, 0, 416, 0, 0, 0,
	424, 429, 430, 431, 433, 434, 435, 436, 0, 0,
	0, 0, 418, 0, 0, 0, 0, 0, 0, 409,
	287, 240, 241, 449, 273, 335, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 331, 408, 0,
	0, 0, 437, 448, 0, 0, 0, 0, 0, 447,
	341, 0, 360, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 367, 390, 402, 419, 422,
	0, 0, 0, 0, 245, 421, 0, 0, 0, 0,
	0, 0, 0, 0, 393, 0, 0, 0, 401, 0,
	0, 0, 0, 0, 417, 0, 0, 325, 326, 327,
	328, 290, 0, 262, 420, 350, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 414, 415, 286, 292, 432, 294,
	261, 340, 288, 399, 301, 0, 425, 0, 426, 0,
	0, 0, 0, 332, 297, 298, 364, 302, 310, 353,
	398, 338, 358, 259, 389, 365, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	233, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 377, 0, 238, 267,
	0, 242, 0, 308, 0, 349, 285, 0, 0, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 0, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 228, 229, 230, 231, 232, 0, 337, 0,
	239, 234, 235, 236, 237, 0, 0, 0, 405, 406,
	407, 428, 391, 0, 446, 280, 0, 0, 307, 0,
	0, 0, 0, 0, 0, 0, 0, 450, 442, 0,
	0, 438, 0, 439, 0, 0, 0, 0, 0, 366,
	321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	188, 0, 0, 0, 0, 0, 0, 257, 189, 440,
	0, 441, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2516, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 248, 371, 387, 258, 362, 400, 263,
	369, 253, 336, 359, 0, 0, 250, 385, 368, 318,
	299, 300, 249, 0, 354, 278, 291, 275, 334, 0,
	384, 412, 274, 403, 0, 395, 252, 0, 394, 333,
	381, 386, 319, 313, 251, 383, 317, 312, 303, 282,
	427, 304, 305, 295, 345, 311, 346, 296, 323, 322,
	324, 0, 0, 0, 0, 0, 423, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 397, 0, 0, 0, 0, 0,
	0, 370, 0, 0, 306, 0, 0, 0, 413, 0,
	357, 339, 0, 0, 0, 355, 309, 382, 347, 388,
	372, 396, 351, 348, 243, 373, 277, 320, 254, 256,
	272, 279, 281, 283, 284, 329, 330, 342, 361, 374,
	375, 376, 276, 264, 356, 265, 293, 266, 244, 269,
	268, 270, 363, 271, 246, 343, 380, 0, 289, 352,
	316, 247, 315, 344, 379, 378, 255, 404, 410, 411,
	0, 0, 416, 0, 0, 0, 424, 429, 430, 431,
	433, 434, 435, 436, 0, 0, 0, 0, 418, 0,
	0, 0, 0, 0, 0, 409, 287, 240, 241, 449,
	273, 335, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 331, 408, 0, 0, 0, 437, 448,
	0, 0, 0, 0, 0, 447, 341, 0, 360, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 367, 390, 402, 419, 422, 0, 0, 0, 0,
	245, 421, 0, 0, 0, 0, 0, 0, 0, 0,
	393, 0, 0, 0, 401, 0, 0, 0, 0, 0,
	417, 0, 0, 325, 326, 327, 328, 290, 0, 262,
	420, 350, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	414, 415, 286, 292, 432, 294, 261, 340, 288, 399,
	301, 0, 425, 0, 426, 0, 0, 0, 0, 332,
	297, 298, 364, 302, 310, 353, 398, 338, 358, 259,
	389, 365, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 377, 0, 238, 267, 0, 242, 0, 308,
	0, 349, 285, 0, 0, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 0, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 232, 0, 337, 0, 239, 234, 235, 236,
	237, 0, 0, 0, 405, 406, 407, 428, 391, 0,
	446, 280, 0, 0, 307, 0, 0, 0, 0, 0,
	0, 0, 0, 450, 442, 0, 0, 438, 0, 439,
	0, 0, 0, 0, 0, 366, 321, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 188, 0, 0, 1225,
	0, 0, 0, 257, 189, 440, 0, 441, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 248,
	371, 387, 258, 362, 400, 263, 369, 253, 336, 359,
	0, 0, 250, 385, 368, 318, 299, 300, 249, 0,
	354, 278, 291, 275, 334, 0, 384, 412, 274, 403,
	0, 395, 252, 0, 394, 333, 381, 386, 319, 313,
	251, 383, 317, 312, 303, 282, 427, 304, 305, 295,
	345, 311, 346, 296, 323, 322, 324, 0, 0, 0,
	0, 0, 423, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	397, 0, 0, 0, 0, 0, 0, 370, 0, 0,
	306, 0, 0, 0, 413, 0, 357, 339, 0, 0,
	0, 355, 309, 382, 347, 388, 372, 396, 351, 348,
	243, 373, 277, 320, 254, 256, 272, 279, 281, 283,
	284, 329, 330, 342, 361, 374, 375, 376, 276, 264,
	356, 265, 293, 266, 244, 269, 268, 270, 363, 271,
	246, 343, 380, 0, 289, 352, 316, 247, 315, 344,
	379, 378, 255, 404, 410, 411, 0, 0, 416, 0,
	0, 0, 424, 429, 430, 431, 433, 434, 435, 436,
	0, 0, 0, 0, 418, 0, 0, 0, 0, 0,
	0, 409, 287, 240, 241, 449, 273, 335, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 331,
	408, 0, 0, 0, 437, 448, 0, 0, 0, 0,
	0, 447, 341, 0, 360, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 367, 390, 402,
	419, 422, 0, 0, 0, 0, 245, 421, 0, 0,
	0, 0, 0, 0, 0, 0, 393, 0, 0, 0,
	401, 0, 0, 0, 0, 0, 417, 0, 0, 325,
	326, 327, 328, 290, 0, 262, 420, 350, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 414, 415, 286, 292,
	432, 294, 261, 340, 288, 399, 301, 0, 425, 0,
	426, 0, 0, 0, 0, 332, 297, 298, 364, 302,
	310, 353, 398, 338, 358, 259, 389, 365, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 377, 0,
	238, 267, 0, 242, 0, 308, 0, 349, 285, 0,
	0, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 0, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 228, 229, 230, 231, 232, 0,
	337, 0, 239, 234, 235, 236, 237, 0, 0, 0,
	405, 406, 407, 428, 391, 0, 446, 280, 0, 0,
	307, 0, 0, 0, 0, 0, 0, 0, 0, 450,
	442, 0, 0, 438, 0, 439, 0, 0, 0, 0,
	0, 366, 321, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 188, 0, 0, 2056, 0, 0, 0, 257,
	189, 440, 0, 441, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 248, 371, 387, 258, 362,
	400, 263, 369, 253, 336, 359, 0, 0, 250, 385,
	368, 318, 299, 300, 249, 0, 354, 278, 291, 275,
	334, 0, 384, 412, 274, 403, 0, 395, 252, 0,
	394, 333, 381, 386, 319, 313, 251, 383, 317, 312,
	303, 282, 427, 304, 305, 295, 345, 311, 346, 296,
	323, 322, 324, 0, 0, 0, 0, 0, 423, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 397, 0, 0, 0,
	0, 0, 0, 370, 0, 0, 306, 0, 0, 0,
	413, 0, 357, 339, 0, 0, 0, 355, 309, 382,
	347, 388, 372, 396, 351, 348, 243, 373, 277, 320,
	254, 256, 272, 279, 281, 283, 284, 329, 330, 342,
	361, 374, 375, 376, 276, 264, 356, 265, 293, 266,
	244, 269, 268, 270, 363, 271, 246, 343, 380, 0,
	289, 352, 316, 247, 315, 344, 379, 378, 255, 404,
	410, 411, 0, 0, 416, 0, 0, 0, 424, 429,
	430, 431, 433, 434, 435, 436, 0, 0, 0, 0,
	418, 0, 0, 0, 0, 0, 0, 409, 287, 240,
	241, 449, 273, 335, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 331, 408, 0, 0, 0,
	437, 448, 0, 0, 0, 0, 0, 447, 341, 0,
	360, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 367, 390, 402, 419, 422, 0, 0,
	0, 0, 245, 421, 0, 0, 0, 0, 0, 0,
	0, 0, 393, 0, 0, 0, 401, 0, 0, 0,
	0, 0, 417, 0, 0, 325, 326, 327, 328, 290,
	0, 262, 420, 350, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 414, 415, 286, 292, 432, 294, 261, 340,
	288, 399, 301, 0, 425, 0, 426, 0, 0, 0,
	0, 332, 297, 298, 364, 302, 310, 353, 398, 338,
	358, 259, 389, 365, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 238, 267, 0, 242,
	0, 308, 0, 349, 285, 0, 0, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	0, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 231, 232, 0, 337, 0, 239, 234,
	235, 236, 237, 0, 0, 0, 405, 406, 407, 428,
	391, 0, 446, 280, 0, 0, 307, 0, 0, 0,
	0, 0, 0, 0, 0, 450, 442, 0, 0, 438,
	0, 439, 0, 0, 0, 0, 0, 366, 321, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 188, 0,
	0, 0, 0, 0, 0, 257, 189, 440, 0, 441,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1786, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 248, 371, 387, 258, 362, 400, 263, 369, 253,
	336, 359, 0, 0, 250, 385, 368, 318, 299, 300,
	249, 0, 354, 278, 291, 275, 334, 0, 384, 412,
	274, 403, 0, 395, 252, 0, 394, 333, 381, 386,
	319, 313, 251, 383, 317, 312, 303, 282, 427, 304,
	305, 295, 345, 311, 346, 296, 323, 322, 324, 0,
	0, 0, 0, 0, 423, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 397, 0, 0, 0, 0, 0, 0, 370,
	0, 0, 306, 0, 0, 0, 413, 0, 357, 339,
	0, 0, 0, 355, 309, 382, 347, 388, 372, 396,
	351, 348, 243, 373, 277, 320, 254, 256, 272, 279,
	281, 283, 284, 329, 330, 342, 361, 374, 375, 376,
	276, 264, 356, 265, 293, 266, 244, 269, 268, 270,
	363, 271, 246, 343, 380, 0, 289, 352, 316, 247,
	315, 344, 379, 378, 255, 404, 410, 411, 0, 0,
	416, 0, 0, 0, 424, 429, 430, 431, 433, 434,
	435, 436, 0, 0, 0, 0, 418, 0, 0, 0,
	0, 0, 0, 409, 287, 240, 241, 449, 273, 335,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 331, 408, 0, 0, 0, 437, 448, 0, 0,
	0, 0, 0, 447, 341, 0, 360, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 367,
	390, 402, 419, 422, 0, 0, 0, 0, 245, 421,
	0, 0, 0, 0, 0, 0, 0, 0, 393, 0,
	0, 0, 401, 0, 0, 0, 0, 0, 417, 0,
	0, 325, 326, 327, 328, 290, 0, 262, 420, 350,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 414, 415,
	286, 292, 432, 294, 261, 340, 288, 399, 301, 0,
	425, 0, 426, 0, 0, 0, 0, 332, 297, 298,
	364, 302, 310, 353, 398, 338, 358, 259, 389, 365,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 238, 267, 0, 242, 0, 308, 0, 349,
	285, 0, 0, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 0, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 0, 337, 0, 239, 234, 235, 236, 237, 0,
	0, 0, 405, 406, 407, 428, 391, 0, 446, 280,
	0, 0, 307, 0, 0, 0, 0, 0, 0, 0,
	0, 450, 442, 0, 0, 438, 0, 439, 0, 0,
	0, 0, 0, 366, 321, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 188, 0, 0, 0, 0, 0,
	0, 257, 189, 440, 0, 441, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2133, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 248, 371, 387,
	258, 362, 400, 263, 369, 253, 336, 359, 0, 0,
	250, 385, 368, 318, 299, 300, 249, 0, 354, 278,
	291, 275, 334, 0, 384, 412, 274, 403, 0, 395,
	252, 0, 394, 333, 381, 386, 319, 313, 251, 383,
	317, 312, 303, 282, 427, 304, 305, 295, 345, 311,
	346, 296, 323, 322, 324, 0, 0, 0, 0, 0,
	423, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 397, 0,
	0, 0, 0, 0, 0, 370, 0, 0, 306, 0,
	0, 0, 413, 0, 357, 339, 0, 0, 0, 355,
	309, 382, 347, 388, 372, 396, 351, 348, 243, 373,
	277, 320, 254, 256, 272, 279, 281, 283, 284, 329,
	330, 342, 361, 374, 375, 376, 276, 264, 356, 265,
	293, 266, 244, 269, 268, 270, 363, 271, 246, 343,
	380, 0, 289, 352, 316, 247, 315, 344, 379, 378,
	255, 404, 410, 411, 0, 0, 416, 0, 0, 0,
	424, 429, 430, 431, 433, 434, 435, 436, 0, 0,
	0, 0, 418, 0, 0, 0, 0, 0, 0, 409,
	287, 240, 241, 449, 273, 335, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 331, 408, 0,
	0, 0, 437, 448, 0, 0, 0, 0, 0, 447,
	341, 0, 360, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 367, 390, 402, 419, 422,
	0, 0, 0, 0, 245, 421, 0, 0, 0, 0,
	0, 0, 0, 0, 393, 0, 0, 0, 401, 0,
	0, 0, 0, 0, 417, 0, 0, 325, 326, 327,
	328, 290, 0, 262, 420, 350, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 414, 415, 286, 292, 432, 294,
	261, 340, 288, 399, 301, 0, 425, 0, 426, 0,
	0, 0, 0, 332, 297, 298, 364, 302, 310, 353,
	398, 338, 358, 259, 389, 365, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	233, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 377, 0, 238, 267,
	0, 242, 0, 308, 0, 349, 285, 0, 0, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 0, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 228, 229, 230, 231, 232, 0, 337, 0,
	239, 234, 235, 236, 237, 0, 0, 0, 405, 406,
	407, 428, 391, 0, 446, 280, 0, 0, 307, 0,
	0, 0, 0, 0, 0, 0, 0, 450, 442, 0,
	0, 438, 0, 439, 0, 0, 0, 0, 0, 366,
	321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	188, 0, 0, 2131, 0, 0, 0, 257, 189, 440,
	0, 441, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 248, 371, 387, 258, 362, 400, 263,
	369, 253, 336, 359, 0, 0, 250, 385, 368, 318,
	299, 300, 249, 0, 354, 278, 291, 275, 334, 0,
	384, 412, 274, 403, 0, 395, 252, 0, 394, 333,
	381, 386, 319, 313, 251, 383, 317, 312, 303, 282,
	427, 304, 305, 295, 345, 311, 346, 296, 323, 322,
	324, 0, 0, 0, 0, 0, 423, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 397, 0, 0, 0, 0, 0,
	0, 370, 0, 0, 306, 0, 0, 0, 413, 0,
	357, 339, 0, 0, 0, 355, 309, 382, 347, 388,
	372, 396, 351, 348, 243, 373, 277, 320, 254, 256,
	272, 279, 281, 283, 284, 329, 330, 342, 361, 374,
	375, 376, 276, 264, 356, 265, 293, 266, 244, 269,
	268, 270, 363, 271, 246, 343, 380, 0, 289, 352,
	316, 247, 315, 344, 379, 378, 255, 404, 410, 411,
	0, 0, 416, 0, 0, 0, 424, 429, 430, 431,
	433, 434, 435, 436, 0, 0, 0, 0, 418, 0,
	0, 0, 0, 0, 0, 409, 287, 240, 241, 449,
	273, 335, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 331, 408, 0, 0, 0, 437, 448,
	0, 0, 0, 0, 0, 447, 341, 0, 360, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 367, 390, 402, 419, 422, 0, 0, 0, 0,
	245, 421, 0, 0, 0, 0, 0, 0, 0, 0,
	393, 0, 0, 0, 401, 0, 0, 0, 0, 0,
	417, 0, 0, 325, 326, 327, 328, 290, 0, 262,
	420, 350, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	414, 415, 286, 292, 432, 294, 261, 340, 288, 399,
	301, 0, 425, 0, 426, 0, 0, 0, 0, 332,
	297, 298, 364, 302, 310, 353, 398, 338, 358, 259,
	389, 365, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 377, 0, 238, 267, 0, 242, 0, 308,
	0, 349, 285, 0, 0, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 0, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 232, 0, 0, 1928, 239, 234, 235, 236,
	237, 337, 0, 0, 405, 406, 407, 428, 391, 0,
	446, 0, 0, 0, 0, 0, 0, 0, 280, 0,
	0, 307, 0, 450, 442, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 438, 0, 439, 0, 0, 0,
	0, 0, 366, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 188, 0, 0, 0, 0, 0, 0,
	257, 189, 440, 0, 441, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 248, 371, 387, 258,
	362, 400, 263, 369, 253, 336, 359, 0, 0, 250,
	385, 368, 318, 299, 300, 249, 0, 354, 278, 291,
	275, 334, 0, 384, 412, 274, 403, 0, 395, 252,
	0, 394, 333, 381, 386, 319, 313, 251, 383, 317,
	312, 303, 282, 427, 304, 305, 295, 345, 311, 346,
	296, 323, 322, 324, 0, 0, 0, 0, 0, 423,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 397, 0, 0,
	0, 0, 0, 0, 370, 0, 0, 306, 0, 0,
	0, 413, 0, 357, 339, 0, 0, 0, 355, 309,
	382, 347, 388, 372, 396, 351, 348, 243, 373, 277,
	320, 254, 256, 272, 279, 281, 283, 284, 329, 330,
	342, 361, 374, 375, 376, 276, 264, 356, 265, 293,
	266, 244, 269, 268, 270, 363, 271, 246, 343, 380,
	0, 289, 352, 316, 247, 315, 344, 379, 378, 255,
	404, 410, 411, 0, 0, 416, 0, 0, 0, 424,
	429, 430, 431, 433, 434, 435, 436, 0, 0, 0,
	0, 418, 0, 0, 0, 0, 0, 0, 409, 287,
	240, 241, 449, 273, 335, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 331, 408, 0, 0,
	0, 437, 448, 0, 0, 0, 0, 0, 447, 341,
	0, 360, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 367, 390, 402, 419, 422, 0,
	0, 0, 0, 245, 421, 0, 0, 0, 0, 0,
	0, 0, 0, 393, 0, 0, 0, 401, 0, 0,
	0, 0, 0, 417, 0, 0, 325, 326, 327, 328,
	290, 0, 262, 420, 350, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 414, 415, 286, 292, 432, 294, 261,
	340, 288, 399, 301, 0, 425, 0, 426, 0, 0,
	0, 0, 332, 297, 298, 364, 302, 310, 353, 398,
	338, 358, 259, 389, 365, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 233,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 377, 0, 238, 267, 0,
	242, 0, 308, 0, 349, 285, 0, 0, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 0, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 229, 230, 231, 232, 0, 337, 0, 239,
	234, 235, 236, 237, 0, 1652, 0, 405, 406, 407,
	428, 391, 0, 446, 280, 0, 0, 307, 0, 0,
	0, 0, 0, 0, 0, 0, 450, 442, 0, 0,
	438, 0, 439, 0, 0, 0, 0, 0, 366, 321,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 188,
	0, 0, 0, 0, 0, 0, 257, 189, 440, 0,
	441, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 248, 371, 387, 258, 362, 400, 263, 369,
	253, 336, 359, 0, 0, 250, 385, 368, 318, 299,
	300, 249, 0, 354, 278, 291, 275, 334, 0, 384,
	412, 274, 403, 0, 395, 252, 0, 394, 333, 381,
	386, 319, 313, 251, 383, 317, 312, 303, 282, 427,
	304, 305, 295, 345, 311, 346, 296, 323, 322, 324,
	0, 0, 0, 0, 0, 423, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 397, 0, 0, 0, 0, 0, 0,
	370, 0, 0, 306, 0, 0, 0, 413, 0, 357,
	339, 0, 0, 0, 355, 309, 382, 347, 388, 372,
	396, 351, 348, 243, 373, 277, 320, 254, 256, 272,
	279, 281, 283, 284, 329, 330, 342, 361, 374, 375,
	376, 276, 264, 356, 265, 293, 266, 244, 269, 268,
	270, 363, 271, 246, 343, 380, 0, 289, 352, 316,
	247, 315, 344, 379, 378, 255, 404, 410, 411, 0,
	0, 416, 0, 0, 0, 424, 429, 430, 431, 433,
	434, 435, 436, 0, 0, 0, 0, 418, 0, 0,
	0, 0, 0, 0, 409, 287, 240, 241, 449, 273,
	335, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 331, 408, 0, 0, 0, 437, 448, 0,
	0, 0, 0, 0, 447, 341, 0, 360, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	367, 390, 402, 419, 422, 0, 0, 0, 0, 245,
	421, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	0, 0, 0, 401, 0, 0, 0, 0, 0, 417,
	0, 0, 325, 326, 327, 328, 290, 0, 262, 420,
	350, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 414,
	415, 286, 292, 432, 294, 261, 340, 288, 399, 301,
	0, 425, 0, 426, 0, 0, 0, 0, 332, 297,
	298, 364, 302, 310, 353, 398, 338, 358, 259, 389,
	365, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 377, 0, 238, 267, 0, 242, 0, 308, 0,
	349, 285, 0, 0, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 0, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	231, 232, 0, 337, 0, 239, 234, 235, 236, 237,
	0, 0, 0, 405, 406, 407, 428, 391, 0, 446,
	280, 0, 0, 307, 0, 0, 0, 0, 0, 0,
	0, 0, 450, 442, 0, 0, 438, 0, 439, 0,
	0, 0, 0, 0, 366, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 188, 0, 0, 1225, 0,
	0, 0, 257, 189, 440, 0, 441, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 248, 371,
	387, 258, 362, 400, 263, 369, 253, 336, 359, 0,
	0, 250, 385, 368, 318, 299, 300, 249, 0, 354,
	278, 291, 275, 334, 0, 384, 412, 274, 403, 0,
	395, 252, 0, 394, 333, 381, 386, 319, 313, 251,
	383, 317, 312, 303, 282, 427, 304, 305, 295, 345,
	311, 346, 296, 323, 322, 324, 0, 0, 0, 0,
	0, 423, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 397,
	0, 0, 0, 0, 0, 0, 370, 0, 0, 306,
	0, 0, 0, 413, 0, 357, 339, 0, 0, 0,
	355, 309, 382, 347, 388, 372, 396, 1564, 348, 243,
	373, 277, 320, 254, 256, 272, 279, 281, 283, 284,
	329, 330, 342, 361, 374, 375, 376, 276, 264, 356,
	265, 293, 266, 244, 269, 268, 270, 363, 271, 246,
	343, 380, 0, 289, 352, 316, 247, 315, 344, 379,
	378, 255, 404, 410, 411, 0, 0, 416, 0, 0,
	0, 424, 429, 430, 431, 433, 434, 435, 436, 0,
	0, 0, 0, 418, 0, 0, 0, 0, 0, 0,
	409, 287, 240, 241, 449, 273, 335, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 331, 408,
	0, 0, 0, 437, 448, 0, 0, 0, 0, 0,
	447, 341, 0, 360, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 367, 390, 402, 419,
	422, 0, 0, 0, 0, 245, 421, 0, 0, 0,
	0, 0, 0, 0, 0, 393, 0, 0, 0, 401,
	0, 0, 0, 0, 0, 417, 0, 0, 325, 326,
	327, 328, 290, 0, 262, 420, 350, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 414, 415, 286, 292, 432,
	294, 261, 340, 288, 399, 301, 0, 425, 0, 426,
	0, 0, 0, 0, 332, 297, 298, 364, 302, 310,
	353, 398, 338, 358, 259, 389, 365, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 377, 0, 238,
	267, 0, 242, 0, 308, 0, 349, 285, 0, 0,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 0, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 229, 230, 231, 232, 0, 337,
	0, 239, 234, 235, 236, 237, 0, 0, 0, 405,
	406, 407, 428, 391, 0, 446, 280, 0, 0, 307,
	0, 0, 0, 0, 0, 0, 0, 0, 450, 442,
	0, 0, 438, 0, 439, 0, 0, 0, 0, 0,
	366, 321, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 188, 0, 0, 0, 0, 0, 0, 257, 189,
	440, 0, 441, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 248, 371, 387, 258, 362, 400,
	263, 369, 253, 336, 359, 0, 0, 250, 385, 368,
	318, 299, 300, 249, 0, 354, 278, 291, 275, 334,
	0, 384, 412, 274, 403, 0, 395, 252, 0, 394,
	333, 381, 386, 319, 313, 251, 383, 317, 312, 303,
	282, 427, 304, 305, 295, 345, 311, 346, 296, 323,
	322, 324, 0, 0, 0, 0, 0, 423, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 397, 0, 0, 1251, 0,
	0, 0, 370, 0, 0, 306, 0, 0, 0, 413,
	0, 357, 339, 0, 0, 0, 355, 309, 382, 347,
	388, 372, 396, 351, 348, 243, 373, 277, 320, 254,
	256, 272, 279, 281, 283, 284, 329, 330, 342, 361,
	374, 375, 376, 276, 264, 356, 265, 293, 266, 244,
	269, 268, 270, 363, 271, 246, 343, 380, 0, 289,
	352, 316, 247, 315, 344, 379, 378, 255, 404, 410,
	411, 0, 0, 416, 0, 0, 0, 424, 429, 430,
	431, 433, 434, 435, 436, 0, 0, 0, 0, 418,
	0, 0, 0, 0, 0, 0, 409, 287, 240, 241,
	449, 273, 335, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 331, 408, 0, 0, 0, 437,
	448, 0, 0, 0, 0, 0, 447, 341, 0, 360,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 367, 390, 402, 419, 422, 0, 0, 0,
	0, 245, 421, 0, 0, 0, 0, 0, 0, 0,
	0, 393, 0, 0, 0, 401, 0, 0, 0, 0,
	0, 417, 0, 0, 325, 326, 327, 328, 290, 0,
	262, 420, 350, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 414, 415, 286, 292, 432, 294, 261, 340, 288,
	399, 301, 0, 425, 0, 426, 0, 0, 0, 0,
	332, 297, 298, 364, 302, 310, 353, 398, 338, 358,
	259, 389, 365, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 377, 0, 238, 267, 0, 242, 0,
	308, 0, 349, 285, 0, 0, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 0,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 0, 337, 0, 239, 234, 235,
	236, 237, 0, 0, 0, 405, 406, 407, 428, 391,
	0, 446, 280, 0, 0, 307, 0, 0, 0, 0,
	0, 0, 0, 0, 450, 442, 0, 0, 438, 0,
	439, 0, 0, 0, 0, 0, 366, 321, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 188, 0, 0,
	0, 0, 0, 0, 257, 189, 440, 0, 441, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	248, 371, 387, 258, 362, 400, 263, 369, 253, 336,
	359, 0, 0, 250, 385, 368, 318, 299, 300, 249,
	0, 354, 278, 291, 275, 334, 0, 384, 412, 274,
	403, 0, 395, 252, 0, 394, 333, 381, 386, 319,
	313, 251, 383, 317, 312, 303, 282, 427, 304, 305,
	295, 345, 311, 346, 296, 323, 322, 324, 0, 0,
	0, 0, 0, 423, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 397, 0, 0, 0, 0, 0, 0, 370, 0,
	0, 306, 0, 0, 0, 413, 0, 357, 339, 0,
	0, 0, 355, 309, 382, 347, 388, 372, 396, 351,
	348, 243, 373, 277, 320, 254, 256, 272, 279, 281,
	283, 284, 329, 330, 342, 361, 374, 375, 376, 276,
	264, 356, 265, 293, 266, 244, 269, 268, 270, 363,
	271, 246, 343, 380, 0, 289, 352, 316, 247, 315,
	344, 379, 378, 255, 404, 410, 411, 0, 0, 416,
	0, 0, 0, 424, 429, 430, 431, 433, 434, 435,
	436, 0, 0, 0, 0, 418, 0, 0, 0, 0,
	0, 0, 409, 287, 240, 241, 449, 273, 335, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	331, 408, 0, 0, 0, 437, 448, 0, 0, 0,
	0, 0, 447, 341, 0, 360, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 367, 390,
	402, 419, 422, 0, 0, 0, 0, 245, 421, 0,
	0, 0, 0, 0, 0, 0, 0, 393, 0, 0,
	0, 401, 0, 0, 0, 0, 0, 417, 0, 0,
	325, 326, 327, 328, 290, 0, 262, 420, 350, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 414, 415, 286,
	292, 432, 294, 261, 340, 288, 399, 301, 0, 425,
	0, 426, 0, 0, 0, 0, 332, 297, 298, 364,
	302, 310, 353, 398, 338, 358, 259, 389, 365, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 731, 0, 0, 377,
	0, 238, 267, 0, 242, 0, 308, 0, 349, 285,
	0, 0, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 0, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 229, 230, 231, 232,
	0, 337, 0, 239, 234, 235, 236, 237, 0, 0,
	0, 405, 406, 407, 428, 391, 0, 446, 280, 0,
	0, 307, 0, 0, 0, 0, 0, 0, 0, 0,
	450, 442, 0, 0, 438, 0, 439, 0, 0, 0,
	0, 0, 366, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 188, 0, 0, 0, 0, 0, 0,
	257, 189, 440, 0, 441, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 248, 371, 387, 258,
	362, 400, 263, 369, 253, 336, 359, 0, 0, 250,
	385, 368, 318, 299, 300, 249, 0, 354, 278, 291,
	275, 334, 0, 384, 412, 274, 403, 0, 395, 252,
	0, 394, 333, 381, 386, 319, 313, 251, 383, 317,
	312, 303, 282, 427, 304, 305, 295, 345, 311, 346,
	296, 323, 322, 324, 0, 0, 0, 0, 0, 423,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 397, 0, 0,
	0, 0, 0, 0, 370, 0, 0, 306, 0, 0,
	0, 413, 0, 357, 339, 0, 0, 0, 355, 309,
	382, 347, 388, 372, 396, 488, 348, 243, 373, 277,
	320, 254, 256, 272, 279, 281, 283, 284, 329, 330,
	342, 361, 374, 375, 376, 276, 264, 356, 265, 293,
	266, 244, 269, 268, 270, 363, 271, 246, 343, 380,
	0, 289, 352, 316, 247, 315, 344, 379, 378, 255,
	404, 410, 411, 0, 0, 416, 0, 0, 0, 424,
	429, 430, 431, 433, 434, 435, 436, 0, 0, 0,
	0, 418, 0, 0, 0, 0, 0, 0, 409, 287,
	240, 241, 449, 273, 335, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 331, 408, 0, 0,
	0, 437, 448, 0, 0, 0, 0, 0, 447, 341,
	0, 360, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 367, 390, 402, 419, 422, 0,
	0, 0, 0, 245, 421, 0, 0, 0, 0, 0,
	0, 489, 0, 393, 0, 0, 0, 401, 0, 0,
	0, 0, 0, 417, 0, 0, 325, 326, 327, 328,
	290, 0, 262, 420, 350, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 414, 415, 286, 292, 432, 294, 261,
	340, 288, 399, 301, 0, 425, 0, 426, 0, 0,
	0, 0, 332, 297, 298, 364, 302, 310, 353, 398,
	338, 358, 259, 389, 365, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 233,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 377, 0, 238, 267, 0,
	242, 0, 308, 0, 349, 285, 0, 0, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 0, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 229, 230, 231, 232, 0, 337, 0, 239,
	234, 235, 236, 237, 0, 0, 0, 405, 406, 407,
	428, 391, 0, 446, 280, 0, 0, 307, 0, 0,
	0, 0, 0, 0, 0, 0, 450, 442, 0, 0,
	438, 0, 439, 0, 0, 0, 0, 0, 366, 321,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 188,
	0, 0, 0, 0, 0, 0, 257, 189, 440, 0,
	441, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 248, 371, 387, 258, 362, 400, 263, 369,
	253, 336, 359, 0, 0, 250, 385, 368, 318, 299,
	300, 249, 0, 354, 278, 291, 275, 334, 0, 384,
	412, 274, 403, 0, 395, 252, 0, 394, 333, 381,
	386, 319, 313, 251, 383, 317, 312, 303, 282, 427,
	304, 305, 295, 345, 311, 346, 296, 323, 322, 324,
	0, 0, 0, 0, 0, 423, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	465, 0, 0, 397, 0, 0, 0, 0, 0, 0,
	370, 0, 0, 306, 0, 0, 0, 413, 0, 357,
	339, 0, 0, 0, 355, 309, 382, 347, 388, 372,
	396, 351, 348, 243, 373, 277, 320, 254, 256, 272,
	279, 281, 283, 284, 329, 330, 342, 361, 374, 375,
	376, 276, 264, 356, 265, 293, 266, 244, 269, 268,
	270, 363, 271, 246, 343, 380, 0, 289, 352, 316,
	247, 315, 344, 379, 378, 255, 404, 410, 411, 0,
	0, 416, 0, 0, 0, 424, 429, 430, 431, 433,
	434, 435, 436, 0, 0, 0, 0, 418, 0, 0,
	0, 0, 0, 0, 409, 287, 240, 241, 449, 273,
	335, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 331, 408, 0, 0, 0, 437, 448, 0,
	0, 0, 0, 0, 447, 341, 0, 360, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	367, 390, 402, 419, 422, 0, 0, 0, 0, 245,
	421, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	0, 0, 0, 401, 0, 0, 0, 0, 0, 417,
	0, 0, 325, 326, 327, 328, 290, 0, 262, 420,
	350, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 414,
	415, 286, 292, 432, 294, 261, 340, 288, 399, 301,
	0, 425, 0, 426, 0, 0, 0, 0, 332, 297,
	298, 364, 302, 310, 353, 398, 338, 358, 259, 389,
	365, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 377, 0, 238, 267, 0, 242, 0, 308, 0,
	349, 285, 0, 0, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 0, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	231, 232, 0, 0, 337, 239, 234, 235, 236, 237,
	0, 0, 0, 405, 406, 407, 428, 391, 0, 446,
	455, 280, 0, 0, 307, 0, 0, 0, 0, 0,
	0, 0, 450, 442, 0, 0, 0, 438, 0, 439,
	0, 0, 0, 0, 0, 366, 321, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 188, 0, 0, 0,
	0, 0, 0, 257, 189, 440, 0, 441, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 248,
	371, 387, 258, 362, 400, 263, 369, 253, 336, 359,
	0, 0, 250, 385, 368, 318, 299, 300, 249, 0,
	354, 278, 291, 275, 334, 0, 384, 412, 274, 403,
	0, 395, 252, 0, 394, 333, 381, 386, 319, 313,
	251, 383, 317, 312, 303, 282, 427, 304, 305, 295,
	345, 311, 346, 296, 323, 322, 324, 0, 0, 0,
	0, 0, 423, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	397, 0, 0, 0, 0, 0, 0, 370, 0, 0,
	306, 0, 0, 0, 413, 0, 357, 339, 0, 0,
	0, 355, 309, 382, 347, 388, 372, 396, 351, 348,
	243, 373, 277, 320, 254, 256, 272, 279, 281, 283,
	284, 329, 330, 342, 361, 374, 375, 376, 276, 264,
	356, 265, 293, 266, 244, 269, 268, 270, 363, 271,
	246, 343, 380, 0, 289, 352, 316, 247, 315, 344,
	379, 378, 255, 404, 410, 411, 0, 0, 416, 0,
	0, 0, 424, 429, 430, 431, 433, 434, 435, 436,
	0, 0, 0, 0, 418, 0, 0, 0, 0, 0,
	0, 409, 287, 240, 241, 449, 273, 335, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 331,
	408, 0, 0, 0, 437, 448, 0, 0, 0, 0,
	0, 447, 341, 0, 360, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 367, 390, 402,
	419, 422, 0, 0, 0, 0, 245, 421, 0, 0,
	0, 0, 0, 0, 0, 0, 393, 0, 0, 0,
	401, 0, 0, 0, 0, 0, 417, 0, 0, 325,
	326, 327, 328, 290, 0, 262, 420, 350, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 414, 415, 286, 292,
	432, 294, 261, 340, 288, 399, 301, 0, 425, 0,
	426, 0, 0, 0, 0, 332, 297, 298, 364, 302,
	310, 353, 398, 338, 358, 259, 389, 365, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 377, 0,
	238, 267, 0, 242, 0, 308, 0, 349, 285, 0,
	0, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 0, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 228, 229, 230, 231, 232, 0,
	337, 0, 239, 234, 235, 236, 237, 0, 0, 0,
	405, 406, 407, 428, 391, 0, 446, 280, 0, 0,
	307, 0, 0, 0, 0, 0, 0, 0, 0, 450,
	442, 0, 0, 438, 0, 439, 0, 0, 0, 0,
	0, 366, 321, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 188, 0, 0, 0, 0, 0, 0, 257,
	189, 440, 0, 441, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 248, 371, 387, 258, 362,
	400, 263, 369, 253, 336, 359, 0, 0, 250, 385,
	368, 318, 299, 300, 249, 0, 354, 278, 291, 275,
	334, 0, 384, 412, 274, 403, 0, 395, 252, 0,
	394, 333, 381, 386, 319, 313, 251, 383, 317, 312,
	303, 282, 427, 304, 305, 295, 345, 311, 346, 296,
	323, 322, 324, 0, 0, 0, 0, 0, 423, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 397, 0, 0, 0,
	0, 0, 0, 370, 0, 0, 306, 0, 0, 0,
	413, 0, 357, 339, 0, 0, 0, 355, 309, 382,
	347, 388, 372, 396, 351, 348, 243, 373, 277, 320,
	254, 256, 272, 279, 281, 283, 284, 329, 330, 342,
	361, 374, 375, 376, 276, 264, 356, 265, 293, 266,
	244, 269, 268, 270, 363, 271, 246, 343, 380, 0,
	289, 352, 316, 247, 315, 344, 379, 378, 255, 404,
	410, 411, 0, 0, 416, 0, 0, 0, 424, 429,
	430, 431, 433, 434, 435, 436, 0, 0, 0, 0,
	418, 0, 0, 0, 0, 0, 0, 409, 287, 240,
	241, 449, 273, 335, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 331, 408, 0, 0, 0,
	437, 448, 0, 0, 0, 0, 0, 447, 341, 0,
	360, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 367, 390, 402, 419, 422, 0, 0,
	0, 0, 245, 421, 0, 0, 0, 0, 0, 0,
	0, 0, 393, 0, 0, 0, 401, 0, 0, 0,
	0, 0, 417, 0, 0, 325, 326, 327, 328, 290,
	0, 262, 420, 350, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 414, 415, 286, 292, 432, 294, 261, 340,
	288, 399, 301, 0, 425, 0, 426, 0, 0, 0,
	0, 332, 297, 298, 364, 302, 310, 353, 398, 338,
	358, 259, 389, 365, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 238, 267, 0, 242,
	0, 308, 0, 349, 285, 0, 0, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	0, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 231, 232, 0, 337, 0, 239, 234,
	235, 236, 237, 0, 0, 0, 405, 406, 407, 428,
	391, 0, 446, 280, 0, 0, 307, 0, 0, 0,
	0, 0, 0, 0, 0, 450, 442, 0, 0, 438,
	0, 439, 0, 0, 0, 0, 0, 366, 321, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 188, 0,
	0, 0, 0, 0, 0, 257, 189, 440, 0, 441,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 248, 371, 1205, 258, 362, 400, 263, 369, 253,
	336, 359, 0, 0, 250, 385, 368, 318, 299, 300,
	249, 0, 354, 278, 291, 275, 334, 0, 384, 412,
	274, 403, 0, 395, 252, 0, 394, 333, 381, 386,
	319, 313, 251, 383, 317, 312, 303, 282, 427, 304,
	305, 295, 345, 311, 346, 296, 323, 322, 324, 0,
	0, 0, 0, 0, 423, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 397, 0, 0, 0, 0, 0, 0, 370,
	0, 0, 306, 0, 0, 0, 413, 0, 357, 339,
	0, 0, 0, 355, 309, 382, 347, 388, 372, 396,
	351, 348, 243, 373, 277, 320, 254, 256, 272, 279,
	281, 283, 284, 329, 330, 342, 361, 374, 375, 376,
	276, 264, 356, 265, 293, 266, 244, 269, 268, 270,
	363, 271, 246, 343, 380, 0, 289, 352, 316, 247,
	315, 344, 379, 378, 255, 404, 410, 411, 0, 0,
	416, 0, 0, 0, 424, 429, 430, 431, 433, 434,
	435, 436, 0, 0, 0, 0, 418, 0, 0, 0,
	0, 0, 0, 409, 287, 240, 241, 449, 273, 335,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 331, 408, 0, 0, 0, 437, 448, 0, 0,
	0, 0, 0, 447, 341, 0, 360, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 367,
	390, 402, 419, 422, 0, 0, 0, 0, 245, 421,
	0, 0, 0, 0, 0, 0, 0, 0, 393, 0,
	0, 0, 401, 0, 0, 0, 0, 0, 417, 0,
	0, 325, 326, 327, 328, 290, 0, 262, 420, 350,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 414, 415,
	286, 292, 432, 294, 261, 340, 288, 399, 301, 0,
	425, 0, 426, 0, 0, 0, 0, 332, 297, 298,
	364, 302, 310, 353, 398, 338, 358, 259, 389, 365,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 238, 267, 0, 242, 0, 308, 0, 349,
	285, 0, 0, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 0, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 0, 337, 0, 239, 234, 235, 236, 237, 0,
	0, 0, 405, 406, 407, 428, 391, 0, 446, 280,
	0, 0, 307, 0, 0, 0, 0, 0, 0, 0,
	0, 450, 442, 0, 0, 438, 0, 439, 0, 0,
	0, 0, 0, 366, 321, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 188, 0, 0, 0, 0, 0,
	0, 257, 189, 440, 0, 441, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 248, 371, 1203,
	258, 362, 400, 263, 369, 253, 336, 359, 0, 0,
	250, 385, 368, 318, 299, 300, 249, 0, 354, 278,
	291, 275, 334, 0, 384, 412, 274, 403, 0, 395,
	252, 0, 394, 333, 381, 386, 319, 313, 251, 383,
	317, 312, 303, 282, 427, 304, 305, 295, 345, 311,
	346, 296, 323, 322, 324, 0, 0, 0, 0, 0,
	423, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 397, 0,
	0, 0, 0, 0, 0, 370, 0, 0, 306, 0,
	0, 0, 413, 0, 357, 339, 0, 0, 0, 355,
	309, 382, 347, 388, 372, 396, 351, 348, 243, 373,
	277, 320, 254, 256, 272, 279, 281, 283, 284, 329,
	330, 342, 361, 374, 375, 376, 276, 264, 356, 265,
	293, 266, 244, 269, 268, 270, 363, 271, 246, 343,
	380, 0, 289, 352, 316, 247, 315, 344, 379, 378,
	255, 404, 410, 411, 0, 0, 416, 0, 0, 0,
	424, 429, 430, 431, 433, 434, 435, 436, 0, 0,
	0, 0, 418, 0, 0, 0, 0, 0, 0, 409,
	287, 240, 241, 449, 273, 335, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 331, 408, 0,
	0, 0, 437, 448, 0, 0, 0, 0, 0, 447,
	341, 0, 360, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 367, 390, 402, 419, 422,
	0, 0, 0, 0, 245, 421, 0, 0, 0, 0,
	0, 0, 0, 0, 393, 0, 0, 0, 401, 0,
	0, 0, 0, 0, 417, 0, 0, 325, 326, 327,
	328, 290, 0, 262, 420, 350, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 414, 415, 286, 292, 432, 294,
	261, 340, 288, 399, 301, 0, 425, 0, 426, 0,
	0, 0, 0, 332, 297, 298, 364, 302, 310, 353,
	398, 338, 358, 259, 389, 365, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	233, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 377, 0, 238, 267,
	0, 242, 0, 308, 0, 349, 285, 0, 0, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 0, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 228, 229, 230, 231, 232, 0, 337, 0,
	239, 234, 235, 236, 237, 0, 0, 0, 405, 406,
	407, 428, 391, 0, 446, 280, 0, 0, 307, 0,
	0, 0, 0, 0, 0, 0, 0, 450, 442, 0,
	0, 438, 0, 439, 0, 0, 0, 0, 0, 366,
	321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	188, 0, 0, 0, 0, 0, 0, 257, 189, 440,
	0, 441, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 248, 371, 387, 258, 362, 400, 263,
	369, 253, 336, 359, 0, 0, 250, 385, 368, 318,
	299, 300, 249, 0, 354, 278, 291, 275, 334, 0,
	384, 412, 274, 403, 0, 395, 252, 0, 394, 333,
	381, 386, 319, 313, 251, 383, 317, 312, 303, 282,
	427, 304, 305, 295, 345, 311, 346, 296, 323, 322,
	324, 0, 0, 0, 0, 0, 423, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 397, 0, 0, 0, 0, 0,
	0, 370, 0, 0, 306, 0, 0, 0, 413, 0,
	357, 339, 0, 0, 0, 355, 309, 382, 347, 388,
	372, 396, 351, 348, 243, 373, 277, 320, 254, 256,
	529, 279, 281, 283, 284, 329, 330, 342, 361, 374,
	375, 376, 276, 264, 356, 265, 293, 266, 244, 269,
	268, 270, 363, 271, 246, 343, 380, 0, 289, 352,
	316, 247, 315, 344, 379, 378, 255, 404, 410, 411,
	0, 0, 416, 0, 0, 0, 424, 429, 430, 431,
	433, 434, 435, 436, 0, 0, 0, 0, 418, 0,
	0, 0, 0, 0, 0, 409, 287, 240, 241, 449,
	273, 335, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 331, 408, 0, 0, 0, 437, 448,
	0, 0, 0, 0, 0, 447, 341, 0, 360, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 367, 390, 402, 419, 422, 0, 0, 0, 0,
	245, 421, 0, 0, 0, 0, 0, 0, 0, 0,
	393, 0, 0, 0, 401, 0, 0, 0, 0, 0,
	417, 0, 0, 325, 326, 327, 328, 290, 0, 262,
	420, 350, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	414, 415, 286, 292, 432, 294, 261, 340, 288, 399,
	301, 0, 425, 0, 426, 166, 51, 158, 134, 332,
	297, 298, 364, 302, 310, 353, 398, 338, 358, 259,
	389, 365, 314, 159, 0, 0, 0, 0, 0, 0,
	151, 0, 0, 0, 160, 0, 233, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 114, 0, 0, 0, 0, 0, 0,
	0, 0, 377, 0, 238, 267, 0, 242, 102, 308,
	0, 349, 285, 0, 163, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 0, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 232, 871, 0, 0, 239, 234, 235, 236,
	237, 0, 0, 0, 405, 406, 407, 428, 391, 0,
	446, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 450, 442, 0, 0, 0, 0, 0,
	119, 120, 0, 121, 122, 0, 0, 0, 0, 0,
	0, 0, 1640, 0, 0, 0, 0, 1602, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1642, 1611, 0, 0,
	0, 0, 0, 0, 0, 0, 1643, 1644, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	133, 157, 164, 0, 100, 0, 0, 0, 977, 978,
	979, 976, 1610, 857, 0, 0, 0, 0, 0, 0,
	0, 0, 156, 150, 149, 0, 0, 1617, 0, 57,
	0, 0, 0, 879, 883, 885, 887, 889, 890, 892,
	0, 897, 893, 894, 895, 896, 0, 874, 875, 876,
	877, 855, 856, 880, 0, 858, 0, 859, 860, 861,
	862, 863, 864, 865, 866, 867, 870, 872, 868, 869,
	878, 0, 0, 0, 0, 0, 0, 0, 882, 884,
	886, 888, 891, 0, 0, 0, 0, 1441, 0, 0,
	152, 153, 154, 0, 1633, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 873, 161, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 110, 0, 0, 0,
	155, 0, 111, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1601, 1603, 1600, 0, 1597, 0,
	0, 0, 0, 1621, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1627, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 112,
	0, 0, 0, 0, 1615, 1649, 0, 0, 1616, 1618,
	1620, 50, 1622, 1623, 1624, 1628, 1629, 1630, 1632, 1635,
	1636, 1637, 0, 0, 0, 0, 0, 0, 0, 1625,
	1634, 1626, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1605, 0, 0, 1437, 0, 0, 0, 2205, 2206,
	1434, 0, 0, 0, 1436, 1433, 1435, 1439, 1440, 0,
	52, 0, 1438, 1641, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1598, 1599, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 135, 0, 0,
	0, 0, 1638, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1614,
	0, 0, 0, 0, 871, 0, 1613, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1631, 0, 1640, 0, 0, 0, 0, 113, 39, 1619,
	0, 0, 0, 0, 49, 5, 0, 0, 0, 117,
	118, 0, 1646, 1645, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 871, 0, 881, 1642, 0, 0, 0,
	0, 0, 0, 0, 1422, 1423, 1424, 1425, 1426, 1427,
	1428, 1429, 1430, 1431, 1432, 1444, 1445, 1446, 1447, 1448,
	1449, 1442, 1443, 0, 0, 0, 0, 0, 0, 0,
	0, 1640, 0, 0, 1607, 0, 0, 3326, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1617, 0, 0,
	0, 0, 0, 0, 857, 0, 0, 0, 847, 0,
	0, 0, 0, 0, 0, 1642, 0, 0, 0, 0,
	1648, 0, 0, 1647, 879, 883, 885, 887, 889, 890,
	892, 0, 897, 893, 894, 895, 896, 0, 874, 875,
	876, 877, 855, 856, 880, 0, 858, 0, 859, 860,
	861, 862, 863, 864, 865, 866, 867, 870, 872, 868,
	869, 878, 0, 857, 1633, 0, 1617, 0, 0, 882,
	884, 886, 888, 891, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 879, 883, 885, 887, 889, 890, 892,
	0, 897, 893, 894, 895, 896, 0, 874, 875, 876,
	877, 855, 856, 880, 0, 858, 873, 859, 860, 861,
	862, 863, 864, 865, 866, 867, 870, 872, 868, 869,
	878, 0, 508, 507, 514, 504, 0, 0, 882, 884,
	886, 888, 891, 1633, 511, 512, 0, 513, 517, 0,
	0, 499, 0, 1621, 0, 0, 0, 0, 0, 0,
	0, 522, 0, 0, 1627, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 873, 0, 0, 0, 0,
	0, 0, 0, 0, 1615, 1649, 0, 0, 1616, 1618,
	1620, 0, 1622, 1623, 1624, 1628, 1629, 1630, 1632, 1635,
	1636, 1637, 0, 0, 526, 0, 0, 528, 0, 1625,
	1634, 1626, 527, 508, 507, 514, 504, 0, 0, 0,
	0, 0, 1621, 0, 0, 511, 512, 0, 513, 517,
	0, 0, 499, 1627, 0, 0, 0, 0, 0, 0,
	0, 0, 522, 1641, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1615, 1649, 0, 0, 1616, 1618, 1620,
	0, 1622, 1623, 1624, 1628, 1629, 1630, 1632, 1635, 1636,
	1637, 0, 0, 0, 0, 0, 0, 0, 1625, 1634,
	1626, 0, 1638, 0, 0, 526, 0, 0, 528, 508,
	507, 514, 504, 527, 0, 0, 0, 0, 0, 1614,
	0, 511, 512, 0, 513, 517, 1613, 0, 499, 0,
	0, 0, 1641, 0, 0, 0, 0, 0, 522, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1631, 0, 0, 0, 0, 0, 0, 0, 0, 1619,
	0, 0, 0, 0, 0, 0, 0, 500, 502, 501,
	0, 1638, 0, 0, 0, 0, 0, 506, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1614, 510,
	0, 0, 0, 0, 0, 1613, 525, 0, 0, 0,
	0, 0, 0, 503, 0, 0, 881, 494, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1631,
	0, 0, 0, 0, 0, 0, 0, 0, 1619, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 500, 502,
	501, 0, 0, 0, 0, 0, 0, 0, 506, 0,
	0, 0, 0, 0, 0, 881, 0, 0, 0, 0,
	510, 0, 0, 0, 0, 0, 0, 525, 0, 0,
	0, 0, 0, 0, 503, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 505, 509, 515,
	0, 516, 518, 0, 0, 519, 520, 521, 0, 0,
	523, 524, 0, 0, 500, 502, 501, 0, 0, 0,
	0, 0, 0, 0, 506, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 510, 0, 0, 0,
	0, 0, 0, 525, 0, 0, 0, 0, 0, 0,
	503, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 505, 509,
	515, 0, 516, 518, 0, 0, 519, 520, 521, 0,
	0, 523, 524, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 505, 509, 515, 0, 516, 518,
	0, 0, 519, 520, 521, 0, 0, 523, 524,
}

var yyPact = [...]int{
	37423, -1000, -1000, -1000, -312, 10107, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 35338,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 35338,
	-308, 34792, 34792, -1000, -1000, 2120, -1000, 34245, 11241, 35338,
	306, 303, 35338, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	630, -1000, 33699, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	536, 38200, 36976, 7842, -257, -1000, 2913, -96, 1975, 810,
	823, 860, 860, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 3360, 679, 33153, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 3131, 298, 679, 13432,
	13, 10, 2913, 327, 1704, -1000, 882, 3319, 170, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	7842, 7842, 10107, -341, 10107, 7842, 35338, 35338, -1000, -1000,
	-1000, -1000, 536, 38200, 7842, 1975, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 10, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 37944, -1000, 1303, -1000, -1000, -1000, -1000,
	-1000, 2476, 1302, 1973, 503, 35338, -1000, 1300, 503, -1000,
	-1000, -1000, 2913, 2913, -1000, 35338, 35338, 74, 1491, -1000,
	349, 343, 309, 1299, -1000, -1000, -1000, -1000, -1000, -1000,
	441, 2883, -1000, 35338, 35338, 2489, 35338, -1000, 1814, 475,
	38281, 2700, 1145, 651, 2517, -1000, -1000, 2472, -1000, 174,
	175, 176, 286, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	205, -1000, 2788, -1000, -1000, 185, -1000, -1000, 171, -1000,
	-1000, -1000, 9, -1000, -1000, -1000, -1000, -1000, -1000, -72,
	-1000, -1000, 909, 2038, 7842, -1000, 2492, -1000, 3304, -1000,
	-1000, -1000, -1000, 5016, 9534, 9534, 9534, 9534, -1000, -1000,
	2275, 7842, 2469, 2455, 2454, -1000, -1000, -1000, -1000, -1000,
	1297, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1624, -1000, -1000, -1000, 8970, -1000, 2452, 2445, 2436, 2433,
	2432, 2431, 2405, 2398, 2396, 2395, 2391, 2385, 2384, 2373,
	2156, 10668, 2372, 1970, 1969, 2370, 2364, 2363, 1961, 2156,
	2156, 2362, 2357, 2352, 2350, 2345, 2344, 2338, 2336, 2334,
	2331, 2328, 2315, 2314, 2312, 2309, 2308, 2307, 2306, 2305,
	2303, 2302, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1072, -1000, 2297, 2673, 2802,
	2190, 2848, 2779, 2775, 2762, 2753, 1782, -1000, -1000, 70,
	-1000, -129, -1000, -1000, 782, -1000, 777, -1000, 35338, 35338,
	116, 620, 531, 531, 531, 531, 531, 569, 531, 35338,
	629, 628, 610, 531, -109, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1489, 1487, 2608, 742, -1000, -1000, -1000, -1000,
	1234, 35338, -1000, 2243, 1402, 1402, 2799, 482, 480, 465,
	1402, 350, -1000, 1502, 1502, 1502, 1502, 1402, 398, 478,
	2802, 2802, -12, 1502, 2, 1402, 1402, 2, 1402, 1402,
	1402, 167, -300, -1000, -1000, -1000, 1502, 1502, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2782, 2770, 531, 536, 35338,
	124, 35338, 536, 536, 536, 544, -36, 36430, 35884, 1814,
	473, 450, 1243, 1530, -1000, 1427, 35338, 35338, 1427, 1427,
	17851, 17305, -1000, 35338, -1000, 2802, 2190, -1000, 2135, 2651,
	2132, 2190, 536, 536, 536, 536, 536, 150, 536, 536,
	536, 536, 35338, 35338, 32607, 536, 536, 6708, 6708, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 10107, 1777,
	1754, 168, -64, -307, 202, -1000, -1000, 35338, 2656, 157,
	-1000, -1000, -1000, 2163, -1000, 2225, 2225, 2225, 2225, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2225, 2225,
	2242, 2296, -1000, -1000, 2216, 2216, 2216, 2163, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2229, 2229, 2237, 2237, 2229, 35338, 7842,
	35338, 2675, 313, 2293, -1000, 35338, 311, 2802, 2673, 2802,
	-1000, -1000, 1296, 1781, 1960, -1000, -1000, 349, 1350, -1000,
	878, -1000, -1000, -1000, -1000, 35338, -72, 322, -1000, -1000,
	1949, 2289, -1000, 481, 1089, 1285, -1000, 161, 38357, 28232,
	1814, 28232, 35338, -1000, -1000, -1000, -1000, -1000, -1000, 8,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 173, -1000, 7842, 7842, 7842, 7842, 7842,
	-1000, 621, 8406, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	9534, 9534, 9534, 9534, 9534, 9534, 9534, 9534, 9534, 9534,
	9534, 9534, 2274, 1447, 9534, 9534, 9534, 9534, 2651, 2785,
	1236, 241, -1000, -1000, -1000, -1000, -1000, 1524, 2038, 7842,
	7842, 7842, 35338, -1000, -1000, 37550, 7842, 7842, 3209, 7842,
	2738, 7842, 7842, 7842, 2126, 3796, 35338, 7842, -1000, 2125,
	2122, -1000, -1000, 1645, 7842, -1000, -1000, 7842, -1000, -1000,
	7842, 9534, 7842, -1000, -1000, -1000, 3143, 2738, 2738, 1441,
	7842, 7842, 2738, 2738, 2738, 1439, 2738, 2738, 2738, 2738,
	2738, 2738, 2738, 2738, 2121, 2118, 2115, 2802, -257, 6144,
	-1000, -261, 2673, 7842, -1000, -1000, 7842, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1950, 1944, -323, -45, 807,
	779, 789, -1000, 2729, -1000, 2288, 35338, 531, 531, -158,
	531, -1000, 35338, 1537, 28232, 35338, 35338, 1814, 35338, 35338,
	-173, 531, 531, 531, 35338, -1000, 2622, 28232, 2615, 544,
	-1000, 35338, 1234, 2728, 35338, 2855, 9534, 9534, -1000, 32061,
	1502, 1402, 1402, -1000, -1000, 35338, -1000, -1000, -1000, 1502,
	35338, 1502, 1502, 2855, 1502, -1000, -1000, -1000, 1402, 1402,
	-1000, -1000, -1000, -1000, 1502, 1502, -1000, -1000, 2855, 35338,
	7, 2855, 2855, -4, -1000, -1000, -1000, 35338, 35338, 531,
	35338, -1000, 35338, 35338, -1000, -1000, 35338, 35338, 37586, 35338,
	31515, 2768, -1000, 28232, 35338, 35338, 25502, -1000, 1148, -1000,
	-41, -1000, -50, -36, 1427, -36, 1427, -1000, 479, 472,
	16213, 413, 28232, 4422, -1000, -1000, 1427, 1427, 4422, 4422,
	1318, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1175, -1000,
	191, 2673, -1000, -1000, -1000, -1000, -1000, 35338, 35338, 28232,
	1814, 35338, 536, 35338, 35338, 35338, 35338, -1000, 2277, 1295,
	-1000, 2685, 35338, 35338, 1263, -1000, -1000, 12886, 1294, 1263,
	-1000, 1540, -1000, 7842, 10107, -282, 7842, 10107, 10107, 7842,
	10107, -1000, 7842, 140, -1000, -1000, -1000, -1000, 1776, -1000,
	1771, -1000, -1000, -1000, -1000, -1000, 1942, 1942, -1000, 1770,
	-1000, -1000, -1000, -1000, 1763, -1000, -1000, 1761, -1000, -1000,
	-1000, 2113, 909, -1000, 1940, 2516, -258, -1000, 15104, 35338,
	35338, -1000, -1000, -258, -1000, 14541, 35338, 2673, -1000, 2673,
	35338, -1000, 2795, -1000, 349, 263, -1000, -1000, -1000, -1000,
	-1000, -1000, 1293, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1169, -1000, 35338, -1000, -1000, 161, 28232, 29324,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 196, -1000, -1000,
	169, -1000, 599, 104, 1345, -1000, -1000, 132, 182, 77,
	669, 2038, -1000, 1552, 1552, 1546, -1000, 523, -1000, -1000,
	-1000, -1000, 2275, -1000, -1000, -1000, 1482, 1237, -1000, 1426,
	1426, 1312, 1312, 1312, 1312, 1312, 2318, 2318, -1000, -1000,
	-1000, 5016, 2274, 9534, 9534, 9534, 9534, 511, 511, 3475,
	2797, -1000, 7842, 1523, -1000, 7842, 1979, 1801, 1140, 1290,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2111, 2110, 1996, 2881, 2105, 7842, -1000, -1000, 1339, 1325,
	1321, -1000, 2051, 7278, -1000, -1000, -1000, 2104, 1289, 2101,
	-1000, -1000, -1000, 2095, 1320, 964, 2094, 1538, 2090, 1168,
	7842, 7842, 7842, 2089, 1311, 1309, 7842, 7842, 7842, 7842,
	2086, 7842, 7842, 7842, 7842, 7842, 7842, 7842, 7842, 30,
	30, 30, -1000, -1000, 1307, -1000, 2038, -1000, 1937, -1000,
	1153, 1166, -1000, 1837, -1000, -1000, -1000, 1916, -1000, -1000,
	795, 761, 751, 35338, 1004, 2273, 35338, 35338, 531, 35338,
	135, -1000, 2680, 1056, -1000, 104, -87, 314, 922, 2488,
	2860, 2268, 35338, 35338, 35338, 2726, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 30969, -1000, 2266, 1305, -1000, -1000,
	7842, -1000, -1000, 2486, 35338, 35338, 2855, 2855, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 35338, 2855, 2855, 1402, 1502,
	-1000, -1000, 1502, -1000, -1000, 1502, -1000, 1283, -1000, 35338,
	-1000, -1000, -1000, 2726, 2243, 1165, -1000, 687, 524, 524,
	740, 420, 2844, 13978, -1000, 1363, 942, 571, 2638, 180,
	-1000, 1363, -208, 1363, 1363, 1363, 1363, 1363, 1363, 1363,
	416, 403, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363,
	1363, 1363, 1363, 819, 1363, 1363, 1363, 1363, 1363, -1000,
	1363, 2264, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 457,
	129, 2765, 231, 229, 1056, 2761, 234, 2952, 1038, -1000,
	-1000, -1000, -1000, 20042, 20042, 15667, 20042, -1000, 1364, -36,
	-53, -1000, -1000, 1148, 4422, 1148, 4422, -1000, -1000, 560,
	-1000, -1000, 922, -1000, 35338, 35338, -1000, -1000, 2259, 1486,
	-1000, -1000, 10668, -1000, 4422, 4422, -1000, -1000, 20588, 35338,
	-1000, -78, -1000, -58, 2794, 1087, -1000, -1000, 1120, 922,
	2512, 35338, 1087, 1087, -1000, -1000, 11787, 35338, 35338, -1000,
	-1000, 2855, 6708, -1000, 25502, -1000, -1000, 30416, -1000, 29870,
	2855, 1497, -1000, 10107, 1732, 159, -1000, 192, -314, 158,
	1536, 155, 2038, -1000, -1000, 2085, 2081, 1277, -1000, 1259,
	2074, 1257, 1255, -1000, -14, -1000, 2664, 945, -1000, 2257,
	-1000, 1254, 2601, -1000, 1070, -1000, 1484, 1252, -1000, 945,
	1246, 2576, 1070, 2794, -1000, 1280, 73, -1000, -1000, 35338,
	1949, 1245, 29324, 972, -1000, 556, 1272, 1271, -1000, 28232,
	189, 28232, -1000, 28232, -1000, -1000, 329, -1000, 35338, 2662,
	-1000, -1000, -1000, 1916, 1481, -328, -1000, -1000, -1000, -1000,
	-1000, 1232, -1000, 511, 511, 3475, 2440, -1000, 9534, -1000,
	9534, 2749, 1495, -1000, 7842, 1709, 37513, 37513, 1310, 18943,
	35338, -1000, -1000, 7842, 7842, -1000, 2727, -1000, -1000, -1000,
	-1000, 7842, 7842, 1971, -1000, 35338, -1000, -1000, -1000, -1000,
	18943, -1000, 9534, -1000, 7842, 1045, 2693, 1209, 30, 30,
	30, 2671, 2583, 2524, 1208, 30, 2520, 2490, 2410, 2399,
	2393, 2360, 2339, 2326, -1000, 2255, -1000, -1000, 6144, -1000,
	-14, 7842, 7842, 7842, 2629, -1000, -1000, 112, -1000, 1467,
	-1000, -1000, -1000, 754, 160, 2069, 1068, -1000, -1000, 35338,
	-1000, -1000, -1000, 11787, 2243, 261, 35338, 2243, 41, 1363,
	-1000, 460, 28232, 435, -1000, 35338, 1706, 1466, 2510, 338,
	2655, 35338, 26048, 2254, 2253, 2247, 288, 38003, 35338, 1131,
	-1000, 1269, 3319, -1000, 35338, 2038, -1000, 1814, -1000, 1402,
	-1000, -1000, 2855, 1198, -1000, -1000, 2855, 1402, 1402, 1502,
	35338, -1000, 288, 2724, 37586, -1000, 35338, -1000, -1000, -1000,
	619, -1000, 747, 531, 35338, 1587, 747, 1584, 2246, -1000,
	-1000, 35338, 35338, 35338, 35338, -1000, -1000, 35338, -1000, 35338,
	35338, 35338, 35338, -1000, 35338, 35338, -1000, 35338, 1582, 1580,
	2661, -1000, 1363, 1363, 707, -1000, -1000, 468, -1000, 1757,
	1749, 1743, 1736, 1935, 1933, 1931, 1363, 1363, 1733, 1930,
	28778, 1929, 1010, 1731, 1729, 1727, 1762, 1927, 649, -1000,
	1923, 1728, 1715, 1707, 35338, 2245, 1876, -1000, -1000, 41,
	1363, 225, 35338, 1465, 460, 312, 1789, 16759, 35338, 25502,
	25502, 25502, 25502, -1000, 2556, 2545, -1000, 2555, 2538, 2586,
	35338, 25502, 2243, -1000, 28778, -1000, -1000, -1000, 2651, 1184,
	2843, 715, 7842, -1000, -1000, -52, -67, -1000, -1000, -1000,
	28232, 1922, 413, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2892, 35338, 35338, 572, 2062, 1054, -1000, -1000, -1000,
	38003, 2225, 2225, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2225, 2225, 2242, -1000, -1000, 2216, 2216, 2216,
	2163, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2229, 2229, 2237, 2237, 2229, -1000, -1000, 2853, -1000, 1049,
	-1000, -1000, 1267, -1000, 2853, 1533, -315, 10107, 1499, 1393,
	-1000, 7842, 10107, 7842, -288, 210, -290, -1000, -1000, -1000,
	1921, -1000, -1000, -1000, 1725, -1000, 1714, 49, 64, 1563,
	-258, 6144, 320, 35338, -258, 35338, 6144, -1000, 35338, 319,
	-258, -1000, 35338, 1712, -1000, -1000, -1000, 2858, 28232, 1814,
	1337, 27686, -1000, 177, -1000, 194, 463, 1919, -1000, 576,
	111, 1917, 1916, -1000, -1000, -1000, 9534, -1000, -1000, -1000,
	-1000, 2038, 7842, 2058, -1000, 735, 735, 2057, 2054, -1000,
	2225, 2225, -1000, 2163, 2216, 2163, 735, 735, 2049, -1000,
	1885, 2294, -1000, 2221, 2204, 7842, -1000, 2048, 3392, 1055,
	-122, 30, 30, -1000, -1000, -1000, -1000, 30, 30, 30,
	30, -1000, 30, 30, 30, 30, 30, 30, 30, 30,
	505, -1000, 49, 2038, 2038, -1000, -1000, 2682, -1000, 1916,
	1914, -1000, 1913, 1910, 1004, 38003, 2044, 2720, 12333, 2711,
	2215, 2214, 2683, 1798, -1000, -1000, -1000, 27140, 428, -1000,
	-1000, -1000, 557, 178, 1710, 419, -1000, 35338, 234, 2617,
	1464, 1905, 35338, -1000, -1000, -1000, -1000, -1000, 2655, -1000,
	891, 266, 1178, -1000, 1363, 1363, 12333, 12333, 12333, 273,
	1456, -1000, 503, 1023, 1266, 25502, 35338, -1000, 24956, 2043,
	-1000, 922, 2855, -1000, 35338, -1000, 2855, 2855, 1402, -1000,
	273, 316, -1000, 2653, 38003, -1000, 35338, -1000, 35338, -1000,
	35338, 35338, 531, 7842, 2653, 35338, 553, -1000, -1000, 863,
	287, 554, 554, 1035, -1000, 2715, -1000, -1000, -1000, 35338,
	-1000, -1000, -1000, -1000, -1000, -1000, 18943, 18943, 2757, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1904, 1897, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 35338, 1177, -1000, 1463, 1798, 27140, 1453, 1427,
	1892, 428, 1706, 1451, -1000, 1890, -1000, 947, 35338, 35338,
	-1000, 1081, -1000, 1437, 2484, 2495, 2484, -1000, -1000, -1000,
	-1000, 2542, -1000, 2503, -1000, -1000, 1081, -1000, -1000, -1000,
	-1000, -1000, 715, -1000, 2792, 747, 747, 747, 2036, -1000,
	-1000, -1000, 972, 2035, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 11787, 2649, 2850, 2841, 26594, 2850, -1000,
	-315, 1444, -1000, 1596, 153, 1483, 35338, -1000, -1000, -1000,
	2033, 2031, -264, 61, 2836, 2834, 2891, -1000, 2021, 969,
	-258, -1000, -1000, 945, -1000, -1000, -1000, -258, -1000, 945,
	-1000, -1000, 1814, -1000, 184, -1000, -1000, -1000, -1000, -1000,
	-1000, 90, -1000, 35338, -1000, 957, 110, -1000, 2038, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 7842, -1000, -1000, -1000, 2191,
	-1000, -1000, 7842, 2019, 1889, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2898,
	-1000, 2833, -264, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 643, 316, 2018, 955, -1000, -1000, -1000, -1000, 316,
	23864, 12333, 316, -1000, 1884, 100, -1000, -1000, -1000, 1882,
	1881, 1708, -1000, -1000, 1695, 1264, 117, -1000, -1000, -1000,
	-1000, -1000, -1000, 1789, 1759, 1436, -330, -1000, 2213, -1000,
	1363, 1363, 1363, 35338, -1000, 26048, 2263, 2263, 2017, 1994,
	1987, 491, 1443, 1424, -1000, 1697, 20042, 25502, 24956, 1047,
	-1000, 1265, -1000, -1000, -1000, 2855, -1000, -1000, 2855, 491,
	-1000, -1000, -1000, 35338, 269, 2206, -1000, 2195, 2481, 323,
	2194, 2182, 35338, 2173, -1000, 2653, 35338, 567, 2643, -1000,
	-1000, -1000, -1000, -1000, 357, -1000, 35338, -1000, -1000, 1308,
	-1000, 18943, -1000, -1000, 1154, -1000, 1876, 1874, -1000, 100,
	1871, 4422, -1000, -1000, 2617, 1869, -1000, 35338, 947, 947,
	2898, 35338, 6144, -1000, -1000, 7842, 2178, -1000, 7842, -1000,
	-1000, -1000, -1000, -1000, 2176, 2585, -1000, -1000, -1000, -1000,
	-1000, -1000, 2263, -1000, 7842, 7842, -1000, -1000, 530, 10107,
	-291, 207, -1000, -1000, -1000, -271, 1868, -1000, -1000, 2832,
	1867, 1815, 35338, -1000, 945, 945, 922, -1000, -1000, -4,
	432, -1000, 2140, -1000, 2124, 30, -1000, 152, 7842, -271,
	38003, -178, -180, 12333, -1000, 1152, -1000, 1363, 1363, 1984,
	-178, -1000, -1000, 325, -1000, -1000, 239, -1000, -1000, 1691,
	490, -1000, -1000, -1000, 1863, 1595, 1834, 23318, 18943, 19489,
	1862, -1000, -1000, -1000, -1000, 38065, 173, 38065, 870, 1407,
	-1000, 1660, -1000, 1649, -1000, 2855, 1047, 1265, -1000, -1000,
	1327, -1000, -1000, 870, -1000, -1000, 269, -1000, -1000, 1600,
	9534, -1000, -1000, 1856, 19489, 677, 1432, 1429, 698, 2172,
	-1000, 372, 2890, -1000, -1000, -1000, 704, 2171, -1000, 1562,
	1561, -1000, 35338, -1000, 23318, 23318, 271, 271, 23318, 23318,
	2164, 554, -1000, -1000, 9534, -1000, -1000, -1000, -1000, 1363,
	1281, -1000, -1000, -1000, -1000, -1000, -1000, 1759, -1000, -1000,
	2802, -1000, -1000, 2038, 35338, 2038, 24410, -1000, 2831, 2827,
	-1000, 2038, 909, -1000, -315, 35338, 35338, -273, 1647, -1000,
	1850, 51, -1000, -1000, 920, -275, 45, 44, 1403, -1000,
	-1000, -1000, 1982, -1000, 515, -1000, -1000, -1000, 909, -273,
	-171, -1000, -1000, 324, -1000, -1000, -1000, 23864, 2263, 2263,
	-180, -1000, 442, 1849, -1000, -1000, 237, -1000, -1000, -1000,
	-1000, -1000, 105, -1000, 1399, 1149, -1000, 2163, 7842, -1000,
	-1000, -1000, -1000, -1000, 502, 4136, -1000, 942, -1000, -4,
	502, 427, 228, -1000, 1646, -1000, -1000, 2898, -1000, 427,
	-1000, -1000, 3475, -1000, -1000, -1000, -1000, -1000, -1000, 1846,
	1844, -1000, -1000, -1000, -1000, -1000, 1643, 2162, -97, 2746,
	1843, -1000, -1000, 2161, 1139, 1138, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1135, 1134, 23318, -1000, -1000, 3475, 18943,
	1363, -1000, -1000, 1124, 1103, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2157, -1000, -1000, 2824, -1000, 1841, 541, 48,
	44, -1000, 2822, 47, 2821, 2820, 1838, -1000, -1000, 522,
	-259, 28, 25, 24, -1000, -1000, -1000, 7842, -1000, 35338,
	361, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 85, -1000,
	-1000, -1000, 1834, 1832, -1000, 23318, 2715, 2012, 321, 2813,
	38065, -1000, 1363, -1000, 321, -1000, 293, -1000, 1391, -1000,
	1642, -1000, 2802, -1000, -1000, -1000, 1976, 7842, 2156, 1363,
	1842, -167, 23318, 2479, 2401, 2341, 2193, 1075, -1000, 18943,
	-1000, -1000, 22772, 35338, 1815, -1000, 2150, 1637, 61, 55,
	2808, -1000, 1815, 2807, 1815, 1815, -1000, 1542, -1000, 22,
	20, 18, -1000, -1000, -1000, -1000, 436, -1000, 162, -1000,
	-1000, -1000, 238, -1000, -1000, 2715, -1000, 2806, 347, -1000,
	18943, -1000, -1000, -1000, 1636, -1000, -1000, -1000, 1964, -1000,
	35338, -1000, 2491, -1000, 148, 1071, 238, 271, 238, 271,
	238, 271, 238, 271, 164, -1000, -1000, -1000, 1039, -1000,
	-1000, 2741, 18397, 37, -1000, -1000, -1000, 1830, -1000, 1815,
	-1000, -1000, 522, -1000, -1000, -1000, 1807, -1000, -1000, -1000,
	-1000, 1363, 1804, 254, -1000, -1000, -1000, 22226, 339, 369,
	358, -1000, 477, -1000, -1000, -1000, 554, -1000, -1000, 2406,
	2207, 2877, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 35338, -1000, 35338, -1000, 1032, -1000, -1000, -1000,
	1005, -1000, -1000, -1000, -1000, -1000, -303, 1630, -1000, 35338,
	-1000, 35338, 336, 1625, 9534, 2148, 9534, 2147, 340, 2143,
	-1000, -1000, 2887, -1000, 2885, 791, 791, 238, 238, 238,
	238, -1000, 867, -1000, 1362, -1000, 21680, 35338, -1000, -1000,
	1803, -1000, -1000, 1026, 2142, 2804, -1000, 3372, 35338, 2505,
	35338, 2139, 1361, 9534, -1000, -1000, -1000, 1619, 378, -1000,
	35338, 5580, -1000, 879, -1000, -1000, -1000, 498, 330, -1000,
	1007, -1000, 1002, 21134, 1614, 2403, -1000, -1000, -1000, -1000,
	-1000, 2038, 35338, 991, -1000, 35338, 328, -1000, -1000, -1000,
	988, -1000, -1000, -1000, -1000, 498, 2565, -1000, 1607, -1000,
	-1000, 37996, 615, -1000, -1000, 37996, 334, -1000, 484, 2138,
	-1000, -1000, 975, -1000, 35338, 670, 7842, -1000, 334, 38065,
	-1000, 7842, 970, -1000, 38065, 936, -1000, -1000,
}

var yyPgo = [...]int{
	0, 165, 2926, 247, 162, 3430, 75, 246, 221, 216,
	245, 3429, 3428, 3427, 2686, 2685, 3426, 3425, 3424, 3422,
	3421, 3420, 3420, 3419, 3414, 3411, 3410, 3409, 3407, 3406,
	3405, 3404, 3403, 3402, 3401, 3399, 3398, 3397, 3395, 3392,
	3391, 3389, 3387, 244, 3386, 3385, 3384, 3383, 3382, 3381,
	3380, 3378, 3377, 3376, 3374, 3373, 3372, 3371, 3369, 3368,
	3367, 3365, 3364, 3363, 3362, 3361, 3359, 3357, 3355, 3354,
	3353, 3352, 3350, 3348, 3347, 209, 3345, 2681, 3340, 3339,
	3338, 3337, 3336, 3328, 3326, 232, 3325, 3324, 3320, 3318,
	3315, 3314, 3313, 3311, 3310, 3309, 3308, 225, 3305, 3304,
	3302, 3300, 3299, 3297, 223, 3296, 158, 213, 3293, 3290,
	3289, 3288, 3287, 3286, 239, 222, 69, 3285, 48, 3284,
	219, 3283, 127, 3281, 130, 3280, 3279, 3277, 3275, 3274,
	3270, 3268, 3267, 3266, 3265, 3264, 3263, 3262, 3261, 3260,
	3256, 90, 3255, 256, 3254, 68, 3253, 3252, 118, 141,
	210, 249, 2505, 251, 248, 180, 167, 112, 3251, 2687,
	3250, 148, 231, 144, 23, 3249, 170, 3248, 146, 43,
	44, 242, 125, 56, 145, 111, 3247, 217, 102, 100,
	3246, 3244, 178, 235, 166, 3242, 97, 3241, 3240, 3238,
	3237, 3235, 198, 186, 3234, 3233, 120, 3231, 3229, 92,
	3228, 70, 190, 153, 181, 3227, 682, 115, 116, 106,
	171, 3220, 87, 3212, 3211, 3210, 3209, 169, 3208, 192,
	126, 71, 3207, 3205, 3204, 67, 3203, 45, 3201, 3200,
	24, 3199, 57, 3198, 3196, 3194, 3192, 3190, 3189, 3187,
	3184, 3182, 3177, 3176, 72, 3174, 3173, 12, 17, 19,
	3172, 25, 3171, 157, 3170, 3169, 3168, 82, 84, 3167,
	79, 1, 49, 88, 3166, 220, 83, 95, 133, 3165,
	428, 3164, 3162, 3160, 149, 3159, 2005, 3158, 3156, 3154,
	3153, 3152, 119, 3151, 227, 62, 3150, 121, 128, 3148,
	36, 47, 191, 211, 3147, 3146, 3145, 134, 196, 109,
	30, 0, 3144, 139, 3143, 3142, 3140, 252, 3139, 233,
	203, 154, 205, 281, 202, 3138, 3137, 66, 3136, 150,
	51, 55, 123, 8, 20, 267, 3134, 13, 175, 3132,
	207, 3130, 177, 33, 131, 3129, 3125, 27, 270, 3123,
	3122, 3121, 117, 3119, 3113, 173, 81, 3112, 3111, 3110,
	3109, 35, 3108, 29, 14, 3107, 94, 3105, 261, 3104,
	172, 143, 174, 164, 140, 224, 229, 76, 73, 3103,
	1482, 142, 93, 18, 3102, 226, 3096, 197, 108, 3092,
	138, 3088, 243, 366, 208, 3087, 176, 7, 41, 32,
	3086, 9, 3084, 250, 214, 3082, 3081, 22, 54, 3067,
	26, 3066, 3061, 3060, 3057, 5, 3055, 3054, 3053, 2,
	4, 3052, 3, 215, 156, 110, 89, 64, 46, 161,
	3048, 137, 155, 132, 3047, 91, 3046, 3045, 3044, 816,
	3043, 253, 42, 3042, 3041, 3039, 3038, 3037, 3036, 3035,
	3034, 96, 38, 3033, 3032, 3029, 3028, 74, 129, 3027,
	3018, 3016, 3015, 37, 168, 3014, 21, 3013, 34, 28,
	39, 3012, 122, 3011, 15, 179, 3010, 3009, 16, 3008,
	3007, 10, 11, 3005, 3004, 114, 3003, 86, 31, 152,
	98, 2999, 2997, 80, 218, 124, 2993, 2991, 238, 241,
	193, 2990, 135, 236, 255, 2989, 212, 2988, 2987, 2986,
	2985, 2983, 2981, 1012, 2980, 2979, 240, 65, 85, 107,
	2974, 2973, 2963, 78, 151, 105, 101, 61, 77, 2962,
	104, 201, 2961, 189, 2958, 2957, 99, 2956, 2955, 2954,
	2953, 2951, 184, 2950, 2949, 182, 234, 2948, 2946, 2945,
	2944, 2930, 2928, 257, 230, 2923,
}

//line mysql_sql.y:10454
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accessModeUnion() tree.AccessModeType {
	v, _ := st.union.(tree.AccessModeType)
	return v
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) accountsSetOptionUnion() *tree.AccountsSetOption {
	v, _ := st.union.(*tree.AccountsSetOption)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) alterAccountAuthOptionUnion() tree.AlterAccountAuthOption {
	v, _ := st.union.(tree.AlterAccountAuthOption)
	return v
}

func (st *yySymType) alterColPositionUnion() *tree.ColumnPosition {
	v, _ := st.union.(*tree.ColumnPosition)
	return v
}

func (st *yySymType) alterColumnOrderUnion() *tree.AlterColumnOrder {
	v, _ := st.union.(*tree.AlterColumnOrder)
	return v
}

func (st *yySymType) alterColumnOrderByUnion() []*tree.AlterColumnOrder {
	v, _ := st.union.([]*tree.AlterColumnOrder)
	return v
}

func (st *yySymType) alterTableUnion() tree.AlterTable {
	v, _ := st.union.(tree.AlterTable)
	return v
}

func (st *yySymType) alterTableOptionUnion() tree.AlterTableOption {
	v, _ := st.union.(tree.AlterTableOption)
	return v
}

func (st *yySymType) alterTableOptionsUnion() tree.AlterTableOptions {
	v, _ := st.union.(tree.AlterTableOptions)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) clusterByOptionUnion() *tree.ClusterByOption {
	v, _ := st.union.(*tree.ClusterByOption)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) connectorOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cstrUnion() *tree.CStr {
	v, _ := st.union.(*tree.CStr)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) elseIfClauseUnion() *tree.ElseIfStmt {
	v, _ := st.union.(*tree.ElseIfStmt)
	return v
}

func (st *yySymType) elseIfClauseListUnion() []*tree.ElseIfStmt {
	v, _ := st.union.([]*tree.ElseIfStmt)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) frameBoundUnion() *tree.FrameBound {
	v, _ := st.union.(*tree.FrameBound)
	return v
}

func (st *yySymType) frameClauseUnion() *tree.FrameClause {
	v, _ := st.union.(*tree.FrameClause)
	return v
}

func (st *yySymType) frameTypeUnion() tree.FrameType {
	v, _ := st.union.(tree.FrameType)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcArgUnion() tree.FunctionArg {
	v, _ := st.union.(tree.FunctionArg)
	return v
}

func (st *yySymType) funcArgDeclUnion() *tree.FunctionArgDecl {
	v, _ := st.union.(*tree.FunctionArgDecl)
	return v
}

func (st *yySymType) funcArgsUnion() tree.FunctionArgs {
	v, _ := st.union.(tree.FunctionArgs)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcReturnUnion() *tree.ReturnType {
	v, _ := st.union.(*tree.ReturnType)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) functionNameUnion() *tree.FunctionName {
	v, _ := st.union.(*tree.FunctionName)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) incrementByOptionUnion() *tree.IncrementByOption {
	v, _ := st.union.(*tree.IncrementByOption)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) indexVisibilityUnion() tree.VisibleType {
	v, _ := st.union.(tree.VisibleType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) isolationLevelUnion() tree.IsolationLevelType {
	v, _ := st.union.(tree.IsolationLevelType)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) killOptionUnion() tree.KillOption {
	v, _ := st.union.(tree.KillOption)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) maxValueOptionUnion() *tree.MaxValueOption {
	v, _ := st.union.(*tree.MaxValueOption)
	return v
}

func (st *yySymType) minValueOptionUnion() *tree.MinValueOption {
	v, _ := st.union.(*tree.MinValueOption)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) procArgUnion() tree.ProcedureArg {
	v, _ := st.union.(tree.ProcedureArg)
	return v
}

func (st *yySymType) procArgDeclUnion() *tree.ProcedureArgDecl {
	v, _ := st.union.(*tree.ProcedureArgDecl)
	return v
}

func (st *yySymType) procArgTypeUnion() tree.InOutArgType {
	v, _ := st.union.(tree.InOutArgType)
	return v
}

func (st *yySymType) procArgsUnion() tree.ProcedureArgs {
	v, _ := st.union.(tree.ProcedureArgs)
	return v
}

func (st *yySymType) procNameUnion() *tree.ProcedureName {
	v, _ := st.union.(*tree.ProcedureName)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectLockInfoUnion() *tree.SelectLockInfo {
	v, _ := st.union.(*tree.SelectLockInfo)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) stageCommentUnion() tree.StageComment {
	v, _ := st.union.(tree.StageComment)
	return v
}

func (st *yySymType) stageCredentialsUnion() tree.StageCredentials {
	v, _ := st.union.(tree.StageCredentials)
	return v
}

func (st *yySymType) stageStatusUnion() tree.StageStatus {
	v, _ := st.union.(tree.StageStatus)
	return v
}

func (st *yySymType) stageUrlUnion() tree.StageUrl {
	v, _ := st.union.(tree.StageUrl)
	return v
}

func (st *yySymType) startWithOptionUnion() *tree.StartWithOption {
	v, _ := st.union.(*tree.StartWithOption)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementOptionUnion() tree.StatementOption {
	v, _ := st.union.(tree.StatementOption)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) streamOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) subscriptionOptionUnion() *tree.SubscriptionOption {
	v, _ := st.union.(*tree.SubscriptionOption)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableLockUnion() tree.TableLock {
	v, _ := st.union.(tree.TableLock)
	return v
}

func (st *yySymType) tableLockTypeUnion() tree.TableLockType {
	v, _ := st.union.(tree.TableLockType)
	return v
}

func (st *yySymType) tableLocksUnion() []tree.TableLock {
	v, _ := st.union.([]tree.TableLock)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) transactionCharacteristicUnion() *tree.TransactionCharacteristic {
	v, _ := st.union.(*tree.TransactionCharacteristic)
	return v
}

func (st *yySymType) transactionCharacteristicListUnion() []*tree.TransactionCharacteristic {
	v, _ := st.union.([]*tree.TransactionCharacteristic)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClause2Union() *tree.WhenStmt {
	v, _ := st.union.(*tree.WhenStmt)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whenClauseList2Union() []*tree.WhenStmt {
	v, _ := st.union.([]*tree.WhenStmt)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) windowSpecUnion() *tree.WindowSpec {
	v, _ := st.union.(*tree.WindowSpec)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 531, 541, 541, 5, 5, 2, 6, 6, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 112, 112, 111, 529, 529, 529, 530,
	530, 108, 129, 128, 131, 131, 130, 130, 127, 127,
	123, 126, 126, 125, 125, 124, 119, 121, 121, 120,
	122, 122, 109, 97, 110, 474, 474, 473, 473, 472,
	472, 426, 426, 471, 471, 471, 470, 470, 470, 469,
	469, 468, 468, 467, 467, 465, 465, 466, 464, 463,
	463, 463, 461, 461, 461, 457, 457, 459, 458, 458,
	460, 452, 452, 455, 455, 453, 453, 453, 453, 456,
	451, 451, 451, 450, 450, 96, 96, 96, 372, 372,
	95, 95, 386, 386, 386, 386, 386, 384, 384, 384,
	384, 384, 384, 383, 383, 382, 382, 387, 387, 385,
	385, 385, 385, 385, 385, 385, 385, 385, 385, 385,
	385, 385, 385, 385, 385, 385, 385, 385, 385, 385,
	385, 385, 385, 385, 385, 385, 385, 385, 385, 385,
	385, 385, 385, 385, 385, 385, 385, 385, 385, 385,
	385, 385, 385, 385, 385, 385, 385, 385, 385, 86,
	86, 86, 86, 86, 91, 91, 91, 536, 536, 535,
	535, 537, 537, 537, 537, 538, 538, 89, 89, 89,
	90, 381, 381, 381, 87, 88, 88, 371, 371, 376,
	376, 375, 375, 375, 375, 375, 375, 375, 375, 375,
	375, 375, 375, 375, 380, 380, 380, 378, 378, 377,
	377, 379, 379, 80, 80, 80, 83, 82, 370, 370,
	370, 370, 370, 370, 370, 370, 370, 81, 81, 81,
	81, 81, 81, 76, 76, 76, 76, 76, 75, 75,
	77, 77, 368, 368, 367, 92, 92, 93, 533, 533,
	532, 534, 534, 534, 534, 94, 100, 100, 100, 100,
	100, 100, 100, 99, 99, 102, 102, 101, 103, 85,
	85, 85, 85, 85, 85, 84, 84, 84, 84, 84,
	84, 84, 84, 84, 499, 499, 499, 501, 501, 305,
	306, 542, 308, 304, 304, 304, 495, 495, 496, 497,
	498, 498, 498, 98, 11, 11, 11, 11, 11, 11,
	11, 11, 13, 74, 79, 252, 252, 253, 253, 253,
	253, 253, 253, 253, 253, 253, 253, 253, 253, 253,
	253, 253, 253, 253, 253, 253, 253, 253, 253, 240,
	240, 240, 235, 235, 235, 235, 236, 236, 237, 237,
	238, 238, 238, 238, 239, 239, 298, 298, 257, 257,
	257, 259, 259, 258, 256, 254, 254, 254, 254, 254,
	254, 255, 255, 255, 260, 260, 72, 78, 78, 78,
	512, 512, 73, 523, 523, 429, 429, 319, 319, 318,
	318, 318, 318, 318, 318, 318, 318, 318, 318, 318,
	318, 318, 318, 318, 318, 434, 435, 315, 43, 43,
	43, 43, 43, 43, 43, 43, 43, 43, 43, 43,
	43, 43, 43, 43, 43, 43, 43, 43, 43, 43,
	43, 43, 43, 43, 43, 43, 43, 50, 53, 49,
	49, 49, 357, 357, 48, 543, 543, 293, 293, 61,
	60, 52, 62, 63, 64, 65, 66, 67, 47, 59,
	59, 59, 59, 59, 59, 59, 59, 70, 70, 446,
	446, 545, 545, 545, 68, 69, 428, 428, 428, 58,
	57, 56, 55, 54, 54, 46, 46, 45, 45, 51,
	135, 136, 312, 312, 312, 314, 314, 310, 544, 544,
	400, 400, 313, 313, 44, 44, 44, 44, 71, 311,
	311, 292, 309, 309, 309, 12, 12, 10, 16, 16,
	16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 25, 26, 28, 365, 365, 362, 27, 19, 18,
	18, 22, 21, 17, 17, 20, 23, 24, 24, 9,
	9, 9, 9, 14, 14, 15, 156, 156, 207, 207,
	507, 507, 503, 503, 504, 504, 504, 505, 505, 506,
	506, 104, 440, 440, 440, 440, 440, 440, 8, 178,
	178, 439, 439, 439, 439, 439, 439, 369, 369, 484,
	484, 484, 485, 177, 177, 172, 172, 441, 441, 334,
	486, 486, 449, 449, 448, 448, 447, 447, 175, 175,
	176, 176, 159, 159, 115, 115, 454, 454, 454, 454,
	462, 462, 425, 425, 244, 244, 285, 285, 286, 286,
	149, 149, 150, 150, 150, 150, 150, 150, 492, 492,
	494, 494, 493, 174, 174, 170, 170, 171, 171, 171,
	169, 169, 168, 167, 167, 166, 164, 164, 164, 165,
	165, 165, 182, 182, 152, 152, 152, 151, 151, 151,
	151, 151, 270, 270, 270, 270, 270, 270, 270, 270,
	270, 270, 270, 270, 153, 153, 500, 500, 500, 430,
	430, 430, 437, 437, 267, 267, 268, 268, 266, 266,
	154, 154, 155, 155, 155, 155, 265, 265, 264, 157,
	157, 163, 162, 162, 158, 158, 158, 158, 275, 275,
	274, 274, 274, 274, 107, 113, 113, 114, 181, 181,
	273, 272, 272, 272, 180, 180, 179, 179, 173, 173,
	161, 161, 161, 161, 271, 160, 269, 528, 528, 527,
	527, 526, 524, 524, 524, 525, 525, 525, 525, 476,
	476, 476, 476, 476, 299, 299, 299, 303, 303, 302,
	302, 302, 302, 302, 307, 7, 7, 7, 7, 7,
	7, 32, 32, 32, 32, 32, 32, 32, 32, 32,
	32, 38, 191, 192, 39, 193, 193, 194, 194, 195,
	195, 196, 197, 198, 198, 198, 198, 37, 183, 183,
	184, 184, 185, 185, 186, 187, 187, 187, 190, 188,
	189, 189, 540, 540, 539, 36, 36, 29, 142, 142,
	143, 143, 143, 145, 145, 241, 241, 241, 144, 144,
	146, 146, 146, 508, 511, 509, 509, 513, 513, 513,
	514, 514, 514, 514, 515, 515, 30, 132, 137, 518,
	518, 518, 517, 517, 519, 519, 520, 520, 289, 289,
	290, 290, 140, 141, 141, 139, 134, 148, 148, 148,
	148, 148, 133, 138, 510, 516, 516, 516, 366, 366,
	363, 364, 364, 361, 360, 360, 360, 522, 522, 521,
	521, 521, 300, 300, 31, 356, 356, 358, 359, 359,
	359, 350, 350, 350, 350, 35, 354, 354, 355, 355,
	355, 355, 355, 351, 351, 353, 353, 349, 349, 349,
	349, 349, 34, 147, 147, 348, 348, 345, 345, 343,
	343, 344, 344, 342, 342, 342, 346, 346, 42, 41,
	41, 41, 347, 347, 33, 33, 33, 117, 116, 116,
	116, 116, 288, 288, 287, 287, 118, 40, 219, 219,
	414, 414, 414, 414, 414, 432, 432, 432, 415, 415,
	415, 416, 416, 416, 417, 417, 417, 417, 417, 431,
	431, 433, 433, 433, 388, 388, 389, 389, 389, 392,
	392, 406, 406, 407, 407, 405, 405, 412, 412, 411,
	411, 410, 410, 409, 409, 408, 408, 408, 408, 403,
	403, 402, 402, 390, 390, 390, 390, 390, 391, 391,
	391, 401, 401, 404, 404, 229, 229, 263, 263, 227,
	227, 228, 228, 262, 262, 225, 225, 226, 226, 226,
	261, 261, 261, 261, 261, 261, 261, 261, 261, 261,
	261, 261, 261, 261, 261, 261, 261, 261, 261, 261,
	261, 261, 261, 261, 261, 261, 261, 261, 261, 261,
	261, 261, 261, 261, 261, 482, 482, 483, 231, 231,
	242, 242, 242, 242, 242, 242, 230, 230, 232, 232,
	208, 208, 206, 206, 199, 199, 200, 200, 201, 201,
	201, 205, 205, 204, 204, 204, 204, 202, 202, 203,
	203, 203, 203, 203, 203, 374, 374, 479, 479, 480,
	480, 475, 475, 475, 478, 478, 478, 478, 478, 481,
	481, 481, 477, 477, 209, 283, 283, 283, 301, 301,
	301, 301, 282, 282, 282, 224, 224, 223, 223, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 373, 373, 316, 316, 317, 317, 251, 250, 250,
	250, 250, 250, 248, 249, 247, 247, 247, 247, 247,
	246, 246, 245, 245, 245, 352, 352, 243, 243, 234,
	234, 234, 233, 233, 233, 413, 323, 323, 323, 323,
	323, 323, 323, 323, 323, 323, 323, 323, 323, 325,
	325, 325, 325, 325, 325, 325, 325, 325, 325, 325,
	325, 325, 325, 325, 325, 325, 325, 325, 325, 325,
	325, 281, 281, 281, 326, 326, 331, 331, 491, 491,
	490, 210, 210, 210, 211, 211, 211, 211, 211, 211,
	211, 211, 211, 220, 220, 220, 397, 397, 397, 397,
	398, 398, 398, 398, 399, 399, 399, 395, 395, 396,
	396, 335, 336, 336, 438, 438, 393, 393, 394, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 445, 445,
	445, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 502, 502, 502,
	487, 487, 487, 488, 488, 488, 488, 488, 488, 488,
	488, 488, 488, 488, 488, 489, 489, 489, 489, 489,
	489, 489, 489, 489, 489, 489, 489, 489, 489, 489,
	489, 489, 279, 279, 279, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	337, 337, 338, 338, 442, 442, 442, 442, 442, 442,
	443, 443, 444, 444, 444, 444, 436, 436, 436, 436,
	436, 436, 436, 436, 436, 436, 436, 436, 436, 436,
	436, 436, 436, 436, 436, 436, 436, 436, 436, 436,
	436, 436, 436, 436, 436, 324, 276, 276, 276, 339,
	332, 332, 333, 333, 327, 327, 327, 327, 327, 327,
	327, 329, 329, 329, 329, 329, 329, 329, 329, 329,
	329, 329, 322, 322, 322, 322, 322, 322, 322, 322,
	322, 322, 322, 328, 328, 330, 330, 341, 341, 341,
	340, 340, 340, 340, 340, 340, 340, 222, 222, 222,
	222, 321, 321, 321, 320, 320, 320, 320, 320, 320,
	320, 320, 320, 320, 320, 320, 212, 212, 212, 212,
	216, 216, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 217, 217, 217, 217,
	217, 215, 215, 215, 215, 215, 213, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 213, 105, 106, 106, 214, 284, 284,
	418, 418, 421, 421, 419, 419, 420, 422, 422, 422,
	423, 423, 423, 424, 424, 424, 427, 427, 291, 291,
	291, 297, 297, 296, 296, 296, 296, 296, 296, 296,
	296, 296, 296, 296, 296, 296, 296, 296, 296, 296,
	296, 296, 296, 296, 296, 296, 296, 296, 296, 296,
	296, 296, 296, 296, 296, 296, 296, 296, 296, 296,
	296, 296, 296, 296, 296, 296, 296, 296, 296, 296,
	296, 296, 296, 296, 296, 296, 296, 296, 296, 296,
	296, 296, 296, 296, 296, 296, 296, 296, 296, 296,
	296, 296, 296, 296, 296, 296, 296, 296, 296, 296,
	296, 296, 296, 296, 296, 296, 296, 296, 296, 296,
	296, 296, 296, 296, 296, 296, 296, 296, 296, 296,
	296, 296, 296, 296, 296, 296, 296, 296, 296, 296,
	296, 296, 296, 296, 296, 296, 296, 296, 296, 296,
	296, 296, 296, 296, 296, 296, 296, 296, 296, 296,
	296, 296, 296, 296, 296, 296, 296, 296, 296, 296,
	296, 296, 296, 296, 296, 296, 296, 296, 296, 296,
	296, 296, 296, 296, 296, 296, 296, 296, 296, 296,
	296, 296, 296, 296, 296, 296, 296, 296, 296, 296,
	296, 296, 296, 296, 296, 296, 296, 296, 296, 296,
	296, 296, 296, 296, 296, 296, 296, 296, 296, 296,
	296, 296, 296, 296, 296, 296, 296, 296, 296, 296,
	296, 296, 296, 296, 296, 296, 296, 296, 296, 296,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294,
}

var yyR2 = [...]int{
	0, 1, 1, 1, 1, 3, 3, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 6, 4, 0, 1, 1, 0,
	1, 5, 2, 2, 6, 9, 6, 9, 4, 7,
	8, 0, 1, 1, 2, 4, 6, 1, 2, 4,
	0, 2, 10, 10, 2, 0, 2, 1, 3, 3,
	3, 0, 2, 1, 3, 5, 0, 2, 3, 1,
	3, 1, 1, 1, 3, 1, 1, 1, 1, 0,
	3, 3, 0, 3, 3, 0, 1, 3, 0, 1,
	3, 0, 2, 1, 2, 3, 4, 3, 3, 1,
	0, 1, 1, 0, 1, 8, 5, 7, 0, 3,
	8, 5, 1, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 4, 1, 3, 1,
	2, 2, 2, 2, 2, 2, 1, 2, 2, 2,
	2, 1, 1, 2, 2, 1, 1, 1, 1, 1,
	2, 2, 2, 1, 2, 1, 2, 2, 1, 2,
	1, 1, 2, 2, 1, 1, 1, 3, 2, 2,
	2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 4, 4, 1, 3, 3,
	1, 2, 2, 2, 1, 2, 2, 3, 4, 4,
	6, 1, 1, 1, 2, 4, 6, 1, 4, 1,
	3, 3, 4, 4, 4, 4, 3, 3, 2, 4,
	4, 2, 2, 2, 1, 1, 1, 1, 1, 1,
	3, 1, 3, 1, 1, 1, 2, 2, 0, 1,
	4, 2, 4, 1, 5, 3, 2, 1, 2, 2,
	4, 4, 5, 2, 1, 3, 4, 4, 1, 2,
	9, 7, 1, 3, 3, 1, 1, 3, 1, 3,
	2, 1, 2, 1, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 4, 4, 2, 4, 3, 3, 1,
	1, 1, 1, 1, 1, 2, 3, 4, 7, 2,
	3, 3, 4, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 2, 1,
	1, 1, 1, 6, 1, 1, 1, 1, 1, 1,
	1, 1, 10, 7, 4, 1, 3, 2, 4, 5,
	5, 6, 5, 5, 3, 2, 2, 1, 3, 4,
	3, 7, 5, 8, 2, 2, 1, 3, 2, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 1, 0, 1,
	2, 1, 3, 2, 1, 2, 2, 1, 2, 3,
	2, 3, 3, 3, 1, 1, 7, 7, 8, 8,
	0, 4, 7, 0, 3, 0, 2, 0, 1, 1,
	1, 1, 4, 2, 2, 3, 3, 4, 5, 3,
	4, 4, 2, 2, 2, 3, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 4, 3, 2,
	5, 5, 0, 2, 7, 0, 1, 0, 1, 5,
	5, 3, 3, 2, 4, 4, 4, 4, 4, 1,
	1, 1, 3, 3, 1, 1, 1, 6, 8, 0,
	1, 1, 1, 1, 5, 5, 0, 1, 1, 3,
	3, 3, 4, 6, 7, 4, 4, 7, 8, 3,
	3, 3, 0, 2, 2, 0, 2, 2, 1, 1,
	1, 1, 0, 1, 4, 4, 5, 4, 3, 1,
	3, 1, 1, 3, 5, 2, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 4, 4, 4, 1, 3, 1, 4, 6, 6,
	4, 4, 4, 4, 4, 3, 6, 3, 5, 1,
	1, 2, 2, 11, 8, 9, 1, 3, 2, 4,
	0, 2, 0, 1, 1, 1, 1, 0, 1, 0,
	1, 4, 2, 1, 5, 4, 4, 2, 5, 1,
	3, 2, 1, 5, 4, 4, 2, 0, 5, 0,
	1, 3, 3, 1, 3, 1, 3, 1, 3, 4,
	0, 1, 0, 1, 1, 3, 1, 1, 0, 4,
	1, 3, 2, 1, 0, 8, 0, 4, 7, 4,
	0, 2, 0, 2, 0, 2, 0, 4, 1, 3,
	1, 1, 5, 3, 4, 6, 4, 5, 2, 3,
	1, 3, 6, 0, 3, 0, 1, 2, 4, 4,
	0, 1, 3, 1, 3, 3, 0, 1, 1, 0,
	2, 2, 0, 2, 3, 3, 3, 1, 3, 3,
	3, 3, 1, 2, 2, 1, 2, 2, 1, 2,
	2, 1, 2, 2, 7, 7, 1, 1, 1, 0,
	1, 1, 1, 1, 0, 2, 0, 3, 0, 2,
	1, 3, 1, 2, 3, 5, 0, 1, 2, 1,
	3, 1, 1, 1, 4, 4, 4, 3, 2, 2,
	2, 3, 2, 3, 4, 1, 3, 4, 0, 2,
	1, 1, 2, 2, 0, 1, 2, 4, 1, 3,
	1, 3, 2, 3, 1, 4, 3, 0, 1, 1,
	2, 5, 2, 2, 2, 0, 2, 3, 3, 0,
	1, 3, 1, 3, 0, 1, 2, 1, 1, 0,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 7, 1, 1, 7, 1, 3, 0, 1, 1,
	3, 1, 3, 0, 1, 1, 1, 14, 1, 3,
	0, 1, 1, 3, 1, 1, 2, 4, 1, 1,
	1, 1, 0, 1, 2, 9, 9, 7, 1, 2,
	3, 3, 3, 0, 4, 1, 1, 1, 1, 1,
	0, 1, 1, 1, 4, 1, 1, 3, 4, 3,
	0, 1, 1, 1, 0, 2, 7, 8, 8, 0,
	3, 3, 0, 2, 0, 3, 0, 5, 1, 3,
	0, 3, 3, 0, 2, 9, 6, 0, 2, 2,
	3, 3, 4, 4, 1, 0, 2, 2, 1, 3,
	2, 1, 3, 2, 1, 3, 2, 0, 1, 3,
	4, 3, 1, 1, 4, 1, 3, 1, 1, 1,
	1, 0, 1, 1, 1, 11, 0, 2, 3, 2,
	3, 1, 1, 1, 3, 3, 4, 0, 2, 2,
	2, 2, 6, 0, 4, 1, 1, 0, 3, 0,
	1, 1, 2, 4, 4, 4, 0, 1, 7, 9,
	10, 8, 0, 2, 11, 9, 11, 2, 2, 8,
	4, 5, 1, 3, 0, 3, 5, 10, 0, 2,
	0, 3, 2, 4, 3, 0, 2, 1, 0, 2,
	3, 0, 2, 3, 0, 3, 2, 4, 3, 0,
	1, 0, 1, 1, 0, 6, 0, 3, 5, 0,
	4, 0, 3, 1, 3, 4, 5, 0, 3, 1,
	3, 2, 3, 1, 2, 0, 4, 6, 5, 0,
	2, 0, 2, 4, 5, 4, 5, 1, 5, 6,
	5, 0, 3, 0, 1, 1, 3, 3, 3, 0,
	4, 1, 3, 3, 3, 0, 1, 1, 3, 2,
	3, 3, 3, 4, 4, 3, 3, 3, 3, 4,
	4, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 3, 3, 3, 3, 3, 3,
	3, 3, 1, 5, 4, 1, 3, 3, 2, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 3, 0, 1, 1, 3, 1, 1,
	1, 1, 1, 7, 9, 7, 9, 2, 1, 7,
	9, 7, 9, 8, 5, 0, 1, 0, 1, 1,
	1, 1, 3, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 1, 3, 1, 3, 5, 1, 1,
	1, 1, 1, 3, 5, 0, 1, 1, 2, 1,
	2, 2, 1, 1, 2, 2, 2, 3, 3, 2,
	2, 1, 5, 6, 4, 1, 1, 1, 5, 4,
	1, 1, 2, 0, 1, 1, 2, 5, 0, 1,
	1, 2, 2, 3, 3, 1, 1, 2, 2, 2,
	0, 1, 2, 2, 2, 0, 3, 0, 3, 1,
	1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 1, 1,
	1, 1, 3, 5, 2, 2, 2, 2, 1, 1,
	2, 5, 6, 6, 6, 6, 1, 1, 1, 1,
	1, 4, 4, 4, 0, 2, 0, 1, 1, 2,
	4, 1, 2, 2, 1, 2, 2, 1, 2, 2,
	2, 2, 2, 0, 1, 1, 1, 2, 2, 2,
	2, 2, 2, 2, 1, 1, 1, 2, 5, 0,
	1, 3, 0, 1, 0, 2, 0, 1, 6, 8,
	6, 6, 5, 5, 5, 6, 6, 6, 6, 5,
	6, 6, 6, 6, 6, 6, 6, 6, 1, 1,
	1, 4, 4, 6, 8, 6, 4, 5, 4, 4,
	4, 3, 4, 6, 6, 7, 4, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 8, 4, 2, 3, 2, 4,
	2, 2, 4, 6, 2, 2, 4, 6, 4, 2,
	0, 1, 2, 3, 1, 1, 1, 1, 1, 1,
	0, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 0, 1, 1, 3,
	0, 1, 1, 3, 3, 3, 3, 3, 2, 1,
	1, 3, 4, 3, 4, 3, 4, 3, 4, 3,
	4, 1, 3, 4, 4, 5, 4, 5, 3, 4,
	5, 6, 1, 0, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 1, 1, 1, 2, 3, 1, 1, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	2, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 4, 4, 1, 2, 3, 5, 1, 1, 3,
	0, 1, 0, 3, 0, 3, 3, 0, 3, 5,
	0, 3, 5, 0, 1, 1, 0, 1, 1, 2,
	2, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -531, -541, -2, -5, 592, -1, -4, -106, -80,
	-7, -108, -109, -8, -104, -9, -10, -12, -84, -99,
	-101, -103, -102, -43, -11, -98, -75, -76, -86, -92,
	-95, -96, -97, -110, -105, -107, -149, -111, -112, 585,
	-81, -82, -83, -32, -31, -30, -29, -132, -137, 591,
	438, 13, 487, -14, -15, -492, -16, 256, -304, -305,
	-306, -308, -542, -44, -45, -46, -54, -55, -56, -57,
	-58, -68, -69, -70, -47, -48, -49, -52, -50, -61,
	-60, -62, -63, -64, -65, -66, -67, -51, -135, -136,
	-71, -53, -73, -72, -78, -74, -79, -134, -139, -13,
	231, -77, 75, -87, -88, -89, -90, -91, -93, -94,
	363, 369, 426, 584, 60, -150, -152, 596, 597, 157,
	158, 160, 161, -33, -34, -35, -36, -37, -38, -40,
	-39, -41, -42, 227, 15, 524, -17, -20, -18, -21,
	-19, -27, -28, -26, -23, -25, -133, -24, -138, 251,
	250, 37, 317, 318, 319, 367, 249, 228, 14, 30,
	41, 343, -151, 81, 229, -153, 12, 600, -6, -3,
	-2, -119, -123, -127, -130, -131, -128, -129, -4, -106,
	115, 241, 586, -301, 359, 587, 589, 588, 84, 92,
	-294, -296, 363, 369, 584, 597, 529, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 553,
	554, 555, 556, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 490, 571, 572, 573, 574, 518, 570,
	341, 342, 521, 268, 292, 394, 298, 305, 157, 176,
	170, 198, 190, 165, 272, 310, 273, 91, 160, 473,
	105, 450, 423, 163, 287, 289, 291, 519, 294, 293,
	295, 297, 274, 344, 186, 181, 286, 270, 179, 275,
	39, 276, 203, 277, 278, 526, 446, 340, 452, 302,
	421, 180, 447, 290, 449, 207, 211, 464, 465, 174,
	175, 454, 467, 202, 205, 206, 248, 42, 523, 260,
	468, 209, 201, 197, 476, 306, 304, 200, 173, 196,
	271, 64, 213, 212, 214, 417, 418, 419, 420, 279,
	280, 357, 463, 193, 182, 345, 166, 22, 471, 255,
	451, 370, 281, 299, 307, 208, 210, 262, 267, 525,
	425, 266, 303, 469, 178, 259, 288, 254, 472, 167,
	372, 282, 161, 296, 466, 475, 63, 385, 172, 164,
	245, 158, 264, 269, 283, 284, 285, 516, 309, 308,
	300, 194, 261, 199, 184, 171, 195, 159, 263, 474,
	386, 582, 343, 404, 192, 189, 265, 238, 470, 453,
	162, 408, 387, 187, 311, 578, 579, 580, 358, 339,
	312, 313, 185, 252, 444, 445, 316, 414, 332, 388,
	424, 395, 389, 220, 320, 456, 458, 204, 581, 321,
	322, 323, 448, 324, 325, 326, 327, 362, 55, 57,
	93, 95, 598, -379, -377, -301, 584, 369, 363, 343,
	597, -193, -301, 599, -159, 38, -206, -301, -159, -77,
	-15, -14, -151, -152, -206, 235, -309, 23, 421, -85,
	422, 231, 81, -301, -9, -97, -8, -104, -75, -149,
	426, -307, -301, 317, 317, -307, 235, -301, 266, 402,
	-429, 241, -383, -356, 267, -382, -358, -385, -359, 31,
	227, 229, 228, 263, 15, 367, 237, 13, 12, 368,
	249, 24, 25, 27, 14, 369, 371, 28, 372, 375,
	376, 377, 41, 380, 381, 256, 84, 92, 87, 274,
	-192, -301, -333, -327, 112, 257, -329, -322, -323, -325,
	-471, -465, -320, 81, 139, 140, 147, 113, -324, -413,
	35, 115, 533, 570, 488, -277, -278, -279, -280, -281,
	-301, -466, -464, 87, 96, 99, 102, 103, 101, 100,
	151, 183, 98, 88, 152, -152, 84, -487, 542, -295,
	563, 571, 572, 573, 574, 562, 60, -436, -444, 234,
	-442, 150, 188, 252, 184, 13, 145, 414, 185, 539,
	559, 490, 543, 566, 535, 536, 537, 530, 531, 532,
	534, 544, 546, 558, -445, 554, 564, 565, 552, 567,
	568, 569, 86, 85, 557, 556, 545, 540, 541, 547,
	529, 538, 548, 549, 555, 560, 561, 351, 105, 352,
	353, 480, 344, 354, 241, 421, 69, 355, 356, 357,
	358, 359, 487, 360, 70, 361, 350, 256, 404, 362,
	187, 204, 492, 491, 493, 484, 481, 479, 482, 483,
	485, 486, 550, 551, 553, -113, -114, 576, -168, -169,
	-270, 11, 6, 7, 8, 9, -529, 423, 525, 87,
	162, 159, -370, 162, 111, 167, 166, -370, 320, 262,
	-347, -142, 341, 404, 324, 93, 266, -350, -348, 519,
	-431, 314, 310, 236, 108, -143, 246, 245, 106, 480,
	234, 378, 305, 55, 57, -503, -504, 224, 225, 226,
	-494, 513, -493, -301, 353, 95, 26, 235, 364, 262,
	458, 456, 457, 459, 460, 461, 462, -59, -446, -428,
	453, 452, -313, 445, 451, 443, 455, 446, 342, 326,
	325, 227, 593, 514, -291, 388, 424, 477, 478, 365,
	425, 464, 466, 447, 105, 191, 188, 236, 238, 235,
	341, 480, 404, 93, 324, -503, 159, 464, 466, 266,
	402, 40, -376, 414, -375, -377, 465, 476, 85, 86,
	463, -291, 105, 444, 444, -169, -270, -168, -150, -152,
	-107, -492, 236, 341, 404, 266, 237, 235, 517, 238,
	480, 234, 317, 364, 262, 324, 93, -430, -500, 31,
	-437, 221, 222, 223, 32, 33, -1, 119, 600, -327,
	-327, -6, 603, -6, -327, -301, -301, 154, -212, -216,
	-213, -215, -214, -218, -217, 188, 189, 150, 192, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 205, 206,
	203, 30, 204, 252, 184, 185, 186, 187, 207, 170,
	190, 522, 215, 171, 216, 172, 217, 173, 218, 174,
	175, 219, 176, 179, 180, 181, 182, 178, 153, 81,
	153, 87, -175, 258, -206, 153, -175, -169, -168, -169,
	-206, -282, -301, 423, 122, -85, -85, 422, -495, -496,
	-497, -499, 231, 422, 421, 153, 274, 16, -307, -307,
	79, -206, -358, 266, -383, -356, 35, 78, 154, 239,
	154, 78, 81, 365, 341, 404, 366, 480, 235, 378,
	238, 266, 379, 341, 404, 235, 238, 480, 266, 341,
	235, 238, 404, 266, 379, 443, 444, 238, 26, 370,
	373, 374, 444, -450, 476, 154, 111, 108, 109, 110,
	-327, 129, -340, 122, 123, 124, 125, 126, 127, 128,
	136, 135, 146, 139, 140, 141, 142, 143, 144, 145,
	137, 138, 132, 112, 130, 134, 131, 114, -152, -327,
	-333, 60, -325, -325, -325, -325, -413, -331, -327, 81,
	81, 81, 153, 100, 87, -327, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, -443, 81,
	81, -337, -338, 81, 81, -320, -282, 81, 87, 87,
	81, 81, 81, 87, -338, -338, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, -169, 154, 81,
	-115, 38, -171, 21, -153, -152, 20, 31, 32, 31,
	32, 31, 32, 31, 32, 96, 598, 220, 469, 524,
	165, 166, 167, -191, -301, -193, 364, 238, 517, 516,
	238, -143, -345, 241, -345, -345, -345, -345, 237, -345,
	-206, 235, 235, 235, -345, 487, 122, 122, 58, -505,
	169, 154, -494, -174, 81, -312, 130, 134, -312, 23,
	264, 264, 264, -312, 304, -543, -544, 16, 132, -310,
	-544, -310, -310, -312, -545, 237, 454, 42, 265, 264,
	-170, -171, -170, 448, 444, -400, 449, 450, -314, -544,
	-313, -312, -312, -313, -312, -312, -312, 235, 238, 480,
	324, 594, -543, -543, 30, 30, -345, -429, -206, -429,
	514, -292, -301, -429, -429, -429, -506, 240, -536, -535,
	467, -538, 469, 159, -377, 159, -377, -358, 266, 266,
	154, 122, 23, -378, 122, 133, -377, -377, -378, -378,
	-230, 40, -300, 150, -301, 87, -230, 40, -533, -532,
	-206, -170, -153, -152, 82, 82, 82, -429, -429, -429,
	-429, -429, -431, -429, -429, -429, -429, -307, -183, -301,
	-193, 241, -429, -429, -154, -155, 141, -327, -301, -154,
	-3, -121, -120, 116, 117, 119, 587, 359, 586, 590,
	584, -377, 40, -424, 386, 385, -418, -420, 81, -419,
	81, -419, -419, -419, -419, -419, 81, 81, -421, 81,
	-421, -421, -418, -422, 81, -422, -423, 81, -423, -422,
	-301, -332, -333, -301, 38, -439, 60, -149, 81, 30,
	81, -301, -440, 60, -149, 81, 30, -170, -115, -171,
	153, 96, 87, -85, 82, 154, -498, 102, 103, -501,
	202, 194, -301, -100, 87, -7, -8, -9, -10, -43,
	-75, -149, -467, -465, 81, 31, 413, 78, 16, -384,
	235, 480, 364, 262, 238, 341, -382, -365, -362, -360,
	-300, -358, -361, -360, -387, -282, 444, -116, 428, 427,
	316, -327, -327, -327, -327, -327, 101, 112, 339, 102,
	103, -322, -341, 31, 312, 313, -323, -323, -323, -323,
	-323, -323, -323, -323, -323, -323, -323, -323, -330, -339,
	-413, 81, 132, 130, 134, 131, 114, -325, -325, -323,
	-323, 82, 154, -491, -490, 116, -327, -327, -327, -301,
	-488, -489, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 355, 350, 356, 354, 344, 362, 357,
	358, 187, 511, 512, 505, 506, 507, 508, 509, 510,
	-332, -332, -327, -488, -332, -276, 32, 31, -333, -333,
	-333, 82, -327, -502, 337, 336, 338, -172, -301, -332,
	82, 82, 82, 96, -333, -333, -332, -323, -332, -489,
	-276, -276, -276, 141, -333, -333, -276, -276, -276, -276,
	141, -276, -276, -276, -276, -276, -276, -276, -276, 82,
	82, 82, -170, -114, -448, -447, -327, 40, 577, -115,
	-327, -167, -166, -327, -530, 87, 87, 601, 470, 471,
	163, 166, 165, 34, 81, -183, -345, -345, 517, -345,
	-508, -301, 112, -366, -363, -360, -301, -301, -356, -301,
	-301, 524, -345, -345, -345, -206, -241, 52, 53, 54,
	-360, -144, 55, 56, -506, -493, 34, -173, -301, -266,
	17, -325, -325, -360, 266, -543, -312, -312, -293, -292,
	-314, -309, -314, -314, -266, -544, -312, -312, -314, -310,
	-266, -301, 444, -266, -266, -400, -311, -301, -311, -345,
	-292, -293, -293, -206, -206, -252, -253, 232, 348, 349,
	230, 228, 11, 229, -261, 305, -346, 488, -236, -237,
	76, 41, -239, 390, 383, 268, 272, 91, 273, 423,
	274, 237, 276, 277, 278, 293, 295, 248, 279, 280,
	281, 414, 282, 158, 294, 283, 284, 285, 366, -231,
	6, 327, 40, 50, 51, 437, 436, 527, 524, 269,
	-508, -508, 30, 30, -366, -301, -301, -162, -157, -161,
	-158, -163, -269, -271, -160, 81, -206, -152, -301, 154,
	468, 470, 471, -536, -378, -536, -378, 31, 413, -381,
	413, 31, -356, -375, 464, 466, -371, 87, 414, -361,
	-380, 78, 150, -447, -378, -378, -380, -380, 149, 154,
	-534, 469, 470, 224, -115, -208, -206, -508, -365, -356,
	-301, -429, -208, -208, -301, -301, 81, 153, 35, -301,
	-301, -265, 154, -264, 16, -302, -301, 34, 87, 153,
	-265, -122, -120, 118, -327, -6, 586, -327, -6, -6,
	-327, -6, -327, -427, 387, 96, 96, -284, 87, -284,
	96, 96, 96, 82, 87, -369, 78, -441, -334, -486,
	576, -177, 82, -172, -484, -485, -172, -176, -301, -441,
	-177, 82, -484, -115, -115, -301, 23, -85, -496, 153,
	154, -173, -384, -364, -361, -386, 141, -301, -372, 154,
	524, 604, 85, 239, -522, -521, 405, 82, 154, -451,
	240, 487, 87, 601, 421, 220, 101, 339, 102, 103,
	-413, -333, -330, -325, -325, -323, -323, -328, 253, -328,
	111, -327, -326, -490, 118, -327, 34, 34, 154, 79,
	153, 82, 82, 16, 16, 82, -327, 82, 82, 82,
	82, 16, 16, -327, 82, 153, 82, 82, 82, 82,
	79, 82, 154, 82, 154, -333, -327, -333, 82, 82,
	82, -327, -327, -327, -333, 82, -327, -327, -327, -327,
	-327, -327, -327, -327, -394, 439, -394, -394, 154, 82,
	87, 154, 22, 154, -164, 36, 37, -288, -287, 87,
	164, 167, 167, 166, -192, -194, -195, -196, -197, -198,
	132, 155, 156, 81, -206, -206, -345, -206, -511, 391,
	35, -523, 154, 40, -521, 480, -140, 316, -349, 79,
	-147, 16, 81, -206, -206, -206, -219, 34, 16, -156,
	-207, -301, 81, 82, 154, -327, -357, 79, -301, -293,
	-266, -266, -206, -301, -266, -266, -312, -314, -314, -310,
	153, -292, -219, -174, 154, -205, -298, -202, -204, 243,
	-317, -203, 246, -480, 244, 242, 106, 247, 301, 107,
	237, -298, -298, 243, -240, 239, 34, -298, -255, 237,
	301, 244, 20, -254, 237, 107, -301, 243, 247, 242,
	-297, 122, -291, 149, 239, 42, 366, -297, 528, -297,
	-297, -297, -297, -297, -297, -297, 275, 275, -297, -297,
	-297, -297, -297, -297, -297, -297, -297, -297, -297, 159,
	-297, -297, -297, -297, -297, -297, 81, 270, 271, -512,
	391, 30, 347, 347, -523, 30, -148, 341, 30, -272,
	-273, -274, -275, 67, 71, 73, 68, 69, 70, 74,
	30, 154, -299, -303, 34, -301, 87, -299, -152, -157,
	-162, -299, 81, -535, -537, 472, 469, 475, -380, -380,
	239, 81, 122, -380, -380, 40, -300, -532, 476, 470,
	-182, 23, 154, 78, -208, -184, -185, -186, -187, -212,
	-282, 189, 192, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 205, 206, 203, 204, 252, 184, 185, 186,
	187, 207, 170, 190, 171, 172, 173, 174, 175, 176,
	179, 180, 181, 182, 178, -301, -193, -266, -155, -157,
	-301, 87, -301, 141, -266, 119, -6, 117, -126, -125,
	-124, 120, 584, 590, 119, 119, 119, 82, 82, 82,
	154, 82, 82, 82, 154, 82, 154, -454, 449, 39,
	154, 81, 82, 154, 60, 154, 122, 82, 154, 82,
	60, -182, 153, 423, -301, -465, 82, -386, 154, 239,
	153, 153, -362, 369, -300, -364, 20, 524, -282, 38,
	-288, 122, 601, 82, -328, -328, 111, -325, -322, 82,
	119, -327, 117, -210, -212, 385, 386, -210, -211, -217,
	150, 188, 252, 187, 186, 184, 385, 386, -230, -301,
	-327, -327, 82, -327, -327, 16, -301, -230, -323, -327,
	-169, 82, 82, -393, -394, -393, -393, 82, 82, 82,
	82, -393, 82, 82, 82, 82, 82, 82, 82, 82,
	81, -447, -454, -327, -327, -166, -165, 43, 602, 154,
	122, 167, 377, 82, 154, -282, -184, -174, 81, -227,
	524, -206, -174, -514, 451, 393, 403, -297, -319, -318,
	343, 41, -434, 414, 399, 400, -363, 266, -301, -520,
	94, 122, 78, 331, 332, 333, 334, -343, -344, -342,
	-346, -508, -229, -263, -301, 87, 81, 81, 81, -414,
	321, -212, -206, -156, -301, 16, 154, -507, 153, -1,
	-301, -356, -312, -266, -544, -266, -312, -312, -314, -301,
	-414, 34, -253, -209, -282, -203, -479, -480, -345, -301,
	107, -479, 107, 81, -209, -282, -282, -256, -311, -282,
	-301, -301, -301, -259, -258, -282, -301, -301, -301, 107,
	107, -235, 40, 47, 48, 49, -297, -297, 191, -238,
	40, 413, 415, 416, 96, 96, 96, 96, 87, 87,
	87, -297, -297, 96, 87, -303, 87, -481, 166, 44,
	45, 96, 96, 96, 96, 40, 87, -242, 40, 286,
	290, 287, 288, 289, 87, 96, 40, 96, 40, 96,
	40, -301, 81, -482, -483, 87, -514, -297, 347, -377,
	122, -319, -519, 316, -141, 91, 31, -178, 232, 229,
	-508, -368, -367, -282, -161, -161, -161, -161, 67, 67,
	67, 72, 67, 72, 67, -274, -368, -163, -174, -303,
	82, -528, -527, -526, -524, 75, 240, 76, -332, 469,
	473, 474, -364, -315, 87, -371, 14, -206, -206, -433,
	296, 297, 82, 154, -212, -268, 18, 153, -268, 115,
	-6, -122, -124, -327, -6, -327, 586, 359, 587, 87,
	96, 96, -462, 434, 429, 431, 107, -334, -449, -448,
	60, -149, -172, -441, -485, -447, -301, 60, -149, -441,
	-301, 96, 16, -361, -356, 141, 141, -301, 370, -372,
	87, 392, 87, 235, 602, 87, -288, -322, -327, 82,
	-220, 175, 174, -220, 82, 82, -419, -419, -418, -421,
	-418, -220, -220, 82, 82, 23, 82, 82, 82, -327,
	82, 82, 154, -438, 489, -393, -393, -393, -393, -393,
	-393, -393, -393, -393, -393, -393, -393, -393, -393, -336,
	-335, 258, -462, 44, 45, -287, 87, 87, 87, -196,
	-212, 82, 34, -199, -200, -201, -209, -202, -204, 34,
	81, 81, 34, -515, 91, -509, 87, -301, -516, 91,
	394, 152, 345, 40, 395, 396, 411, 340, 96, 96,
	401, -510, -301, -148, -518, 51, 122, 87, -206, -342,
	-291, 149, 277, 324, 82, 154, -297, -297, -199, -199,
	-199, -415, 323, 20, 96, 140, -175, 79, 153, -157,
	-207, -301, 141, 82, -266, -301, -266, -266, -312, -415,
	-149, -257, 44, 46, -212, -477, -301, -475, -477, -301,
	-475, -475, -345, -327, -257, -209, 239, 30, 229, -260,
	329, 330, -373, 302, 112, -373, 154, -164, -301, -230,
	-230, 30, 87, 87, -208, 82, 154, 122, -515, -509,
	122, -378, 87, -516, -520, 122, 87, 154, -178, -178,
	-266, 154, 122, -180, -179, 78, 79, -181, 78, -179,
	67, 67, -266, -526, -525, 23, -480, -480, -480, 82,
	82, -186, 40, -267, 19, 20, 141, -267, 119, 117,
	119, 119, -301, 82, 82, -425, 578, -458, -460, 429,
	20, 20, 14, 82, -441, -441, -356, -372, 414, -206,
	154, 602, -327, 82, -327, 82, 87, -169, 20, -425,
	233, -149, 82, 154, -149, -228, -262, -301, 87, -199,
	-149, 87, -513, 405, 87, 87, 96, 40, 96, 152,
	397, -435, -141, -517, 91, 122, 601, 81, -297, -297,
	-297, -301, -263, -320, -320, 82, 82, 82, -416, 257,
	96, 140, 96, 140, 96, -299, -157, -301, -266, -507,
	153, -266, -266, -416, -282, -224, -223, -221, 101, 112,
	40, 383, -222, 91, 149, 291, 294, 293, 269, 292,
	-251, -316, 78, 389, 329, 330, -346, 578, 518, 242,
	106, 107, 371, -317, 81, 81, 79, 311, 81, 81,
	-477, 82, -257, -282, 40, -260, 40, 302, -258, 149,
	-230, 82, -483, 87, -513, 87, -380, -518, 87, -508,
	-169, -367, -447, -327, 81, -327, 81, 67, 11, 18,
	-320, -327, -333, 241, -6, 587, 359, -244, 579, 87,
	20, 87, -456, 87, -368, -118, -452, -400, 274, 82,
	82, -393, -396, -395, -399, 435, 303, 442, -333, -244,
	-188, -212, -145, 524, -227, -201, 82, 154, -297, -297,
	82, -145, 20, 524, 344, 40, 96, 40, 398, 87,
	102, 103, -289, -290, 87, -351, -353, -282, 81, -230,
	-232, -300, 150, 87, -225, -226, -261, -346, -117, -116,
	-225, -417, 158, 96, 140, 96, 96, -266, -266, -417,
	-221, 101, -323, 87, -232, -233, 40, 290, 286, 122,
	122, -234, 40, 270, 271, -243, 81, 301, 14, 191,
	81, 107, 107, -206, -351, -351, -478, 331, 332, 333,
	335, 334, -478, -351, -351, 81, -374, -373, -323, -297,
	149, -517, -170, -173, -476, -301, 242, 20, 20, -301,
	-301, -285, 580, 96, 87, 431, -426, 581, -461, 434,
	-455, -453, 429, 430, 431, 432, 122, 82, -398, 114,
	397, 401, -321, -324, 96, 99, 183, 152, -285, 523,
	-146, 59, 476, -262, -320, -320, -227, 87, 392, 87,
	344, 602, 154, 122, 82, 154, -418, -327, -388, 258,
	154, -261, -291, -118, -388, -432, 166, 322, 524, 96,
	140, 96, -169, -432, 87, 87, 96, 81, -442, 30,
	87, -352, 81, 82, 82, 82, 82, -351, -230, -297,
	82, 82, 154, 81, 20, 87, -463, 240, -459, -460,
	433, -453, 20, 431, 20, 20, 87, -397, -398, 401,
	-321, -324, 576, 440, 440, 440, -190, -301, 301, 414,
	-290, 87, -354, -353, -164, 82, -389, 310, 20, -261,
	-297, -389, 322, 96, 140, 96, -170, 82, -327, -337,
	-297, 82, -246, -245, 520, -351, -354, 79, -354, 79,
	-354, 79, -354, 79, 82, -230, -301, 242, -286, -301,
	-456, -470, 81, 96, -458, -457, -459, 20, -456, 20,
	-456, -456, 111, 441, 441, 441, -189, 34, 436, 370,
	-355, 248, 91, 524, 329, 330, -164, 20, -390, 303,
	304, -391, -404, 306, -230, 96, 82, -301, -250, -248,
	-249, 78, 447, 299, 300, 82, -478, -478, -478, -478,
	-251, 82, 154, -474, 30, 82, -469, -468, -283, -464,
	-301, 434, 435, 87, -456, -397, 87, -297, 87, 328,
	-282, 81, -402, 307, 81, -400, 81, -400, 107, 332,
	-373, -249, 78, -248, 78, 15, 14, -354, -354, -354,
	-354, -301, -473, -472, -471, 82, 154, 153, -540, -539,
	595, 96, -301, -387, -392, 308, 96, -323, 81, -323,
	81, -401, 305, 81, -247, 296, 297, 30, 166, -247,
	154, 122, -468, -301, 87, 82, -406, 81, 20, 82,
	-387, 82, -387, 81, 122, -323, 101, 40, 298, -472,
	40, -327, 153, -407, -405, 258, -391, 82, 82, 82,
	-387, 96, 82, -301, 82, 154, -301, -403, 309, 82,
	-405, -408, 60, 96, -412, -409, 81, -261, 260, 132,
	-412, -261, -411, -410, 308, 261, 81, 82, 154, -301,
	257, 81, -333, -410, -409, -333, 82, 82,
}

var yyDef = [...]int{
	23, -2, 1, 2, 3, 19, 4, 20, 21, 22,
	24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
	34, 35, 36, 37, 38, 39, 40, 41, 42, 43,
	44, 45, 46, 47, 48, 49, 50, 51, 52, 0,
	263, 264, 265, 825, 826, 827, 828, 829, 830, 0,
	0, 0, 0, 599, 600, 0, 567, 0, 0, 0,
	0, 0, 0, 458, 459, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	485, 486, 354, 355, 356, 357, 358, 359, 360, 361,
	0, 288, 284, 209, 210, 211, 212, 213, 295, 296,
	435, 0, 0, 0, 0, 680, -2, 56, 0, 277,
	0, 268, 268, 831, 832, 833, 834, 835, 836, 837,
	838, 839, 840, -2, 612, 0, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 578, 579, 580, 343,
	344, 345, 339, 340, 342, 341, -2, 0, 612, 0,
	0, 0, 700, 0, 0, 717, 739, 23, 0, 7,
	9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
	0, 0, 19, 0, 19, 0, 0, 0, 1198, 1199,
	1200, 1201, -2, 1693, 1671, 1838, 1850, 1851, 1852, 1853,
	1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863,
	1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873,
	1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883,
	1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893,
	1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642,
	1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652,
	1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662,
	1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1672, 1673,
	1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683,
	1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1694,
	1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704,
	1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714,
	1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724,
	1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734,
	1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744,
	1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754,
	1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765,
	1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775,
	1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785,
	1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795,
	1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805,
	1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815,
	1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825,
	1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835,
	1836, 1837, 1839, 0, 261, 259, 1671, 1693, 1755, 1788,
	1838, 0, 845, 0, 658, 0, 663, 1152, 658, 289,
	601, 602, 700, 700, 565, 0, 325, 0, 1684, 329,
	0, 0, 0, 562, 319, 320, 321, 322, 323, 324,
	0, 0, 824, 0, 0, 315, 0, 283, 1746, 0,
	0, 0, 0, 0, 0, 153, 955, 155, 957, 159,
	166, 0, 0, 171, 172, 175, 176, 177, 178, 179,
	0, 183, 0, 185, 188, 0, 190, 191, 0, 194,
	195, 196, 0, 206, 207, 208, 958, 959, 960, -2,
	84, 843, 1604, 1492, 0, 1499, 1500, 1511, 1522, 1278,
	1279, 1280, 1281, 0, 0, 0, 0, 0, 1288, 1289,
	0, 1306, 1854, 1893, 0, 1296, 1297, 1298, 1299, 1300,
	93, 105, 106, 1544, 1545, 1546, 1547, 1548, 1549, 1550,
	0, 1552, 1553, 1554, 1465, 1265, 1198, 0, 1863, 0,
	1883, 1888, 1889, 1890, 1891, 1882, 0, 0, 1450, 0,
	1440, 0, 0, -2, -2, 0, 0, 1813, -2, 1860,
	1879, 1887, 1864, 1886, 1856, 1857, 1858, 1851, 1852, 1853,
	1855, 1865, 1867, 1878, 0, 1874, 1884, 1885, 0, 0,
	0, 0, 107, 108, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, 1456, -2, 1458,
	1459, 1461, -2, 1463, 1464, -2, 1467, 1468, 1469, -2,
	-2, 1472, 1473, 1474, 1475, 1476, 1477, 1480, -2, -2,
	-2, -2, 1452, 1453, 1454, 1455, 1444, 1445, 1446, 1447,
	1448, 1449, -2, -2, -2, 700, 775, 0, -2, 0,
	0, 0, 722, 725, 728, 731, 0, 57, 58, 0,
	278, 279, 267, 269, 0, 273, 0, 266, 0, 0,
	0, 0, 987, 987, 987, 987, 987, 0, 987, 0,
	0, 0, 0, 987, 0, 878, 962, 963, 964, 985,
	986, 1040, 0, 0, 0, 617, 613, 614, 615, 616,
	688, 0, 690, 693, 542, 542, 489, 0, 0, 0,
	542, 0, 503, 495, 0, 0, 0, 542, 0, 0,
	695, 695, 0, 545, 552, 542, 542, -2, 542, 542,
	542, 0, 0, 509, 510, 511, 495, 495, 514, 515,
	516, 527, 528, 553, 1628, 0, 0, 987, 435, 0,
	435, 0, 435, 435, 435, 619, 1783, 1691, 1760, 1746,
	0, 0, 234, 1813, 239, 0, 1692, 1709, 0, 0,
	1727, 0, -2, 0, 305, 695, 0, 701, 0, 700,
	0, 0, 435, 435, 435, 435, 435, 1039, 435, 435,
	435, 435, 0, 0, 0, 435, 435, 0, 0, 740,
	741, 736, 737, 738, 742, 743, 5, 6, 19, 0,
	0, 0, 0, 0, 0, 63, 62, 0, 1605, 1623,
	1557, 1558, 1559, 1610, 1561, 1614, 1614, 1614, 1614, 1590,
	1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1614, 1614,
	0, 0, 1603, 1581, 1612, 1612, 1612, 1610, 1607, 1562,
	1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572,
	1573, 1574, 1575, 1617, 1617, 1620, 1620, 1617, 0, 1490,
	0, 0, 0, 0, 662, 0, 0, 695, -2, 0,
	566, 326, 1202, 0, 0, 330, 331, 0, 0, 346,
	0, 349, 334, 335, 336, 0, 133, 0, 317, 318,
	0, 0, 285, 0, 0, 0, 436, 0, 0, 0,
	0, 0, 0, 163, 160, 167, 170, 180, 187, 0,
	199, 201, 204, 161, 168, 173, 174, 181, 202, 162,
	164, 165, 169, 203, 205, 182, 186, 200, 184, 189,
	192, 193, 198, 0, 134, 0, 0, 0, 0, 0,
	1498, 0, 0, 1530, 1531, 1532, 1533, 1534, 1535, 1536,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, -2, 1492,
	0, 0, 1284, 1285, 1286, 1287, 1290, 0, 1307, 0,
	0, 0, 0, 1551, 1555, 0, 1490, 1490, 0, 1490,
	1486, 0, 0, 0, 0, 0, 0, 1490, 1426, 0,
	0, 1428, 1441, 0, 0, 1430, 1431, 0, 1434, 1435,
	1490, 0, 1490, 1439, 1422, 1423, 0, 1486, 1486, 1486,
	0, 0, 1486, 1486, 1486, 1486, 1486, 1486, 1486, 1486,
	1486, 1486, 1486, 1486, 0, 0, 0, 695, 0, 0,
	683, 0, 664, 0, 719, 721, 0, 723, 724, 726,
	727, 729, 730, 732, 733, 59, 0, 0, 0, 0,
	271, 0, 276, 0, 842, 0, 0, 987, 987, 0,
	987, 879, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 987, 987, 987, 0, 1003, 0, 0, 0, 619,
	618, 0, 689, 0, 0, 748, 0, 0, 488, 0,
	495, 542, 542, 501, 502, 497, 496, 548, 549, 545,
	0, 545, 545, 748, 0, 521, 522, 523, 542, 542,
	529, 696, 530, 531, 545, 0, 550, 551, 748, 0,
	0, 748, 748, 0, 539, 540, 541, 0, 0, 987,
	0, 558, 497, 497, 1629, 1630, 0, 0, 996, 0,
	0, 0, 561, 0, 0, 0, 0, 620, 214, 217,
	0, 220, 0, 1783, 0, 1783, 0, 227, 0, 0,
	0, 0, 0, 0, 257, 258, 0, 0, 0, 0,
	248, 251, 1146, 1147, 952, 953, 252, 253, 297, 298,
	0, 664, 718, 720, 714, 715, 716, 0, 0, 0,
	0, 0, 435, 0, 0, 0, 0, 595, 0, 858,
	597, 0, 0, 0, 756, 750, 752, 819, 93, 756,
	8, 80, 77, 0, 19, 0, 0, 19, 19, 0,
	19, 262, 0, 1626, 1624, 1625, 1560, 1611, 0, 1586,
	0, 1587, 1588, 1589, 1599, 1600, 0, 0, 1582, 0,
	1583, 1584, 1585, 1576, 0, 1577, 1578, 0, 1579, 1580,
	260, 0, 1491, 846, 0, 637, 650, 632, 0, 639,
	0, 1153, 621, 650, 623, 0, 639, 664, 686, 664,
	0, 327, 0, 332, 0, 0, 348, 350, 351, 352,
	337, 338, 563, 313, 314, 306, 307, 308, 309, 310,
	311, 312, 316, 103, 0, 286, 287, 0, 0, 0,
	147, 148, 149, 150, 151, 152, 154, 138, 584, 586,
	944, 956, 0, 947, 0, 157, 197, 130, 0, 0,
	0, 1493, 1494, 1495, 1496, 1497, 1501, 0, 1503, 1505,
	1507, 1509, 0, 1527, -2, -2, 1266, 1267, 1268, 1269,
	1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1512, 1525,
	1526, 0, 0, 0, 0, 0, 0, 1523, 1523, 1518,
	0, 1282, 0, 1304, 1308, 0, 0, 0, 0, 94,
	1485, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401,
	1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411,
	1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421,
	0, 0, 1492, 0, 0, 0, 1487, 1488, 0, 0,
	0, 1381, 0, 0, 1387, 1388, 1389, 0, 645, 0,
	1451, 1427, 1442, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 774, 776, 0, 654, 656, 657, 0, 684,
	697, 702, 703, 706, 55, 60, 53, 1014, 280, 281,
	0, 0, 275, 0, -2, 0, 0, 0, 987, 0,
	0, 893, 0, 433, 938, 0, 0, 0, 954, 977,
	983, 0, 0, 0, 0, 1018, 880, 885, 886, 887,
	881, 882, 888, 889, 0, 691, 0, 0, 788, 487,
	0, 543, 544, 492, 1746, 497, 748, 748, 504, 498,
	505, 547, 506, 507, 508, 0, 748, 748, 542, 545,
	532, 546, 545, 535, 536, 0, 554, 559, 555, 0,
	557, 512, 513, 1018, 693, 364, 365, 406, 406, 406,
	389, 406, 0, 0, 377, 1631, 0, 0, 0, 0,
	386, 1631, 0, 1631, 1631, 1631, 1631, 1631, 1631, 1631,
	0, 0, 1631, 1631, 1631, 1631, 1631, 1631, 1631, 1631,
	1631, 1631, 1631, 0, 1631, 1631, 1631, 1631, 1631, 1132,
	1631, 0, 997, 396, 397, 398, 399, 404, 405, 0,
	430, 0, 0, 0, 433, 0, 927, 761, 0, 762,
	763, 759, 790, 814, 814, 0, 814, 794, 1152, 0,
	0, 225, 226, 215, 0, 216, 0, 228, 229, 0,
	231, 232, 233, 240, 1691, 1760, 235, 237, 0, 0,
	241, 254, 255, 256, 0, 0, 246, 247, 0, 0,
	300, 301, 303, 0, 712, 581, 1150, 582, 583, 587,
	0, 0, 590, 592, 593, 594, 860, 0, 0, 932,
	933, 748, 0, 757, 0, 753, 820, 0, 822, 0,
	748, 0, 78, 19, 0, 71, 68, 0, 0, 0,
	0, 0, 1606, 1556, 1627, 0, 0, 0, 1608, 0,
	0, 0, 0, 61, 666, 628, 0, 631, 647, 0,
	651, 0, 0, 643, 636, 640, 0, 0, 660, 622,
	0, 0, 627, 712, 687, 1203, 0, 333, 347, 0,
	0, 0, 0, 141, 941, 0, 142, 146, 136, 0,
	0, 0, 946, 0, 943, 948, 0, 156, 0, 0,
	131, 132, 1008, 1014, 0, 0, 1502, 1504, 1506, 1508,
	1510, 0, 1513, 1523, 1523, 1519, 0, 1514, 0, 1516,
	0, 1493, 0, 1309, 0, 0, 0, 0, 0, 0,
	0, 1371, 1372, 0, 0, 1376, 0, 1378, 1379, 1380,
	1382, 0, 0, 0, 1386, 0, 1425, 1443, 1429, 1432,
	0, 1436, 0, 1438, 0, 700, 0, 0, 1346, 1346,
	1346, 0, 0, 0, 0, 1346, 0, 0, 0, 0,
	0, 0, 0, 0, 1301, 0, 1302, 1303, 0, 777,
	666, 0, 0, 0, 709, 707, 708, 0, 1012, 0,
	282, 270, 272, 0, 0, 0, 848, 849, 851, 0,
	854, 855, 856, 860, 693, 1089, 0, 693, 900, 1631,
	988, 437, 0, 0, 940, 0, 916, 0, 0, 0,
	-2, 0, 0, 0, 0, 0, 1020, 0, 0, 0,
	606, 610, 23, 694, 0, 749, 490, 0, 491, 542,
	499, 500, 748, 1152, 524, 525, 748, 542, 542, 545,
	0, 556, 1020, 0, 996, 367, 0, 1161, 1162, 407,
	0, 1168, 1177, 987, 1235, 0, 1177, 0, 0, 1179,
	1180, 0, 0, 0, 0, 390, 391, 0, 376, 0,
	0, 0, 0, 375, 0, 0, 417, 0, 0, 0,
	0, 1632, 1631, 1631, 0, 384, 385, 0, 388, 0,
	0, 0, 0, 0, 0, 0, 1631, 1631, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1123,
	0, 0, 0, 0, 0, 0, 0, 1138, 1139, 900,
	1631, 0, 0, 0, 437, 914, 923, 0, 0, 0,
	0, 0, 0, 781, 0, 0, 780, 0, 0, 0,
	0, 0, 693, 815, 0, 817, 818, 792, -2, 0,
	761, 797, 1490, 218, 219, 0, 0, 224, 242, 244,
	0, 0, 0, 243, 245, 249, 250, 299, 302, 304,
	682, 0, 0, 0, 1041, 0, 861, 862, 864, 865,
	0, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, 1676, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, 859, 598, 746, 751, 758,
	821, 823, 94, 754, 746, 0, 81, 19, 80, 72,
	73, 0, 19, 0, 0, 0, 0, 1616, 1615, 1601,
	0, 1602, 1613, 1618, 0, 1621, 0, 670, 0, 0,
	650, 652, 0, 0, 650, 0, 0, 659, 0, 0,
	650, 685, 0, 0, 564, 104, 353, 0, 0, 0,
	0, 0, 585, 0, 945, 138, 0, 0, 158, 0,
	0, 0, 1014, 1489, 1515, 1517, 0, 1524, 1520, 1283,
	1291, 1305, 0, 0, 1311, 1323, 1323, 0, 0, 1314,
	1614, 1614, 1317, 1610, 1612, 1610, 1323, 1323, 0, 95,
	0, 0, 1377, 0, 0, 0, 646, 0, 0, 0,
	1344, 1346, 1346, 1352, 1347, 1353, 1354, 1346, 1346, 1346,
	1346, 1359, 1346, 1346, 1346, 1346, 1346, 1346, 1346, 1346,
	1342, 655, 670, 698, 699, 704, 705, 0, 54, 1014,
	0, 274, 0, 0, 853, 0, 0, 0, 1154, 0,
	0, 0, 0, 904, 901, 902, 903, 0, 935, 438,
	439, 440, 441, 0, 0, 0, 939, 0, 927, 909,
	0, 0, 0, 978, 979, 980, 981, 982, -2, 991,
	0, 0, 0, 1085, 1631, 1631, 1154, 1154, 1154, 1028,
	0, 1019, 658, 0, -2, 0, 0, 608, 0, 0,
	789, 493, 748, 517, 0, 533, 748, 748, 542, 560,
	1028, 0, 366, 408, 0, 1167, 1192, 1178, 1192, 1236,
	1192, 1192, 987, 0, 408, 0, 0, 378, 414, 0,
	0, 0, 0, 374, 411, 706, 415, 416, 418, 0,
	420, 380, 392, 393, 394, 395, 0, 0, 0, 387,
	400, 401, 402, 403, 1100, 1101, 1102, 1105, 1106, 1107,
	1108, 0, 0, 1111, 1112, 1113, 1114, 1115, 1189, 1190,
	1191, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1140, 1141,
	1142, 1143, 1144, 1145, 1124, 1125, 1126, 1127, 1128, 1129,
	1130, 1131, 0, 0, 1135, 0, 904, 0, 0, 0,
	0, 935, 916, 0, 926, 0, 928, 929, 0, 0,
	629, 748, 292, 0, 784, 778, 0, 767, 782, 783,
	770, 0, 772, 0, 768, 769, 748, 760, 791, 816,
	793, 796, 798, 799, 805, 0, 0, 0, 0, 221,
	222, 223, 230, 0, 457, 236, 713, 1151, 588, 589,
	1042, 1043, 596, 0, 866, 744, 0, 0, 744, 76,
	79, 0, 74, 0, 0, 0, 0, 66, 64, 1609,
	0, 0, 672, 118, 0, 0, 0, 648, 0, 653,
	650, 635, 644, 634, 641, 642, 661, 650, 626, 625,
	1204, 328, 0, 942, 138, 143, 144, 145, 139, 137,
	949, 0, 951, 0, 1010, 0, 0, 1521, 1310, 1292,
	1312, 1324, 1325, 1313, 1293, 1294, 1315, 1316, 1318, 1319,
	1320, 1321, 1322, 1295, 1373, 0, 1375, 1383, 1384, 0,
	1433, 1437, 0, 0, 0, 1350, 1351, 1355, 1356, 1357,
	1358, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 700,
	1343, 0, 672, 710, 711, 1013, 1015, 841, 844, 850,
	852, 0, 0, 0, 1155, 1156, 1158, 1159, 1160, 0,
	0, 1154, 0, 877, 0, 0, 895, 896, 906, 0,
	0, 0, 443, 444, 0, 0, 0, 456, 452, 453,
	454, 434, 934, 923, 912, 0, 0, 922, 0, 992,
	1631, 1631, 1631, 0, 998, 0, 0, 0, 0, 0,
	0, 1031, 0, 0, 1022, 0, 814, 0, 0, 748,
	607, 610, 611, 692, 494, 748, 537, 534, 748, 1031,
	363, 379, 409, 0, -2, 0, 1193, 0, 1181, 1193,
	0, 0, 1192, 0, 368, 408, 0, 0, 0, 421,
	424, 425, 422, 1231, 0, 423, 0, 413, 419, 1103,
	1104, 0, 1109, 1110, 0, 1134, 0, 0, 426, 0,
	0, 0, 427, 432, 909, 0, 924, 0, 930, 931,
	700, 0, 0, 764, 785, 0, 0, 765, 0, 766,
	771, 773, 291, 800, 0, 0, 802, 803, 804, 795,
	238, 863, 0, 734, 0, 0, 755, 735, 0, 19,
	0, 0, 69, 1619, 1622, 674, 0, 671, 119, 0,
	0, 0, 0, 649, 633, 624, 140, 135, 950, 121,
	0, 1011, 0, 1385, 0, 1346, 1345, 1339, 0, 674,
	0, 883, 1089, 0, 1001, 0, 1091, 1631, 1631, 0,
	883, 905, 894, 0, 936, 937, 0, 445, 446, 0,
	449, 455, 907, 908, 0, 0, 920, 0, 0, 0,
	0, 984, 1086, 1087, 1088, -2, 0, -2, 1034, 0,
	1029, 0, 1021, 0, 1024, 748, 748, -2, 604, 609,
	0, 518, 538, 1034, 410, 1194, -2, 1207, 1209, 0,
	997, 1212, 1213, 0, 0, 0, 0, 0, 0, 1257,
	1221, 0, 0, 1225, 1226, 1227, 0, 0, 1230, 0,
	1539, 1540, 0, 1234, 0, 0, 0, 0, 0, 0,
	0, 1175, 369, 370, 0, 372, 373, 1232, 412, 1631,
	382, 1133, 1136, 1137, 431, 428, 429, 912, 915, 630,
	695, 293, 294, 786, 0, 779, 809, 806, 0, 0,
	867, 745, 747, 70, 75, 0, 0, 676, 0, 673,
	0, 667, 669, 129, 638, 91, 112, 0, 0, 1374,
	1424, 1349, 0, 1340, 0, 1334, 1335, 1336, 1341, 676,
	0, 869, 876, 890, 999, 1157, 1090, 0, 0, 0,
	1089, 875, 0, 0, 442, 447, 0, 450, 451, 913,
	910, 911, 0, 918, 0, 0, 973, 1610, 0, 993,
	994, 1148, 1149, 995, 1044, -2, 1097, 0, 1005, 121,
	1044, 1025, 0, 1032, 0, 1030, 1023, 700, 605, 1025,
	1208, 1210, 1211, 1214, 1215, 1216, 1262, 1263, 1264, 0,
	0, 1219, 1259, 1260, 1261, 1220, 0, 0, 0, 0,
	0, 1537, 1538, 1255, 0, 0, 1182, 1184, 1185, 1186,
	1187, 1188, 1183, 0, 0, 0, 1174, 1176, 371, 0,
	1631, 925, 290, 0, 0, 810, 812, 807, 808, 65,
	67, 82, 0, 675, 120, 0, 83, 0, 109, 0,
	122, 123, 0, 0, 0, 0, 0, 1348, 1337, 0,
	0, 0, 0, 0, 1541, 1542, 1543, 0, 665, 0,
	0, 891, 892, 1092, 1093, 1094, 1000, 897, 0, 899,
	448, 917, 920, 0, 966, 0, 706, 0, 1046, 0,
	996, 1099, 1631, 1007, 1046, 1017, 0, 1027, 0, 1036,
	0, 1033, 695, 362, 1217, 1218, 0, 0, 1440, 1631,
	0, 1250, 0, 966, 966, 966, 966, 0, 381, 0,
	787, 801, 0, 0, 0, 92, 96, 0, 118, 115,
	0, 124, 0, 0, 0, 0, 1009, 0, 1326, 0,
	0, 0, 1330, 1331, 1332, 1333, 0, 868, 0, 898,
	919, 921, 965, 974, 975, 706, 1004, 0, 1083, 1098,
	0, 1006, 1026, 1035, 0, 1038, 603, 1258, 0, 1224,
	0, 1229, 1238, 1251, 0, 0, 1163, 0, 1165, 0,
	1169, 0, 1171, 0, 0, 383, 811, 813, 0, 678,
	668, 85, 0, 0, 113, 114, 116, 0, 125, 0,
	127, 128, 0, 1327, 1328, 1329, 0, 870, 871, 884,
	967, 1631, 0, 0, 971, 972, 976, 0, 1071, 0,
	0, 1077, 0, 1084, 1103, 1037, 1222, 1228, 1237, 1239,
	1240, 0, 1252, 1253, 1254, 1256, 966, 966, 966, 966,
	1173, 677, 0, 1016, 0, 97, 0, 99, 101, 102,
	1195, 110, 111, 117, 126, 1338, 872, 0, 969, 0,
	1047, 0, 1049, 0, 0, 0, 0, 0, 1081, 0,
	1223, 1241, 0, 1242, 0, 0, 0, 1164, 1166, 1170,
	1172, 679, 86, 87, 0, 98, 0, 0, 857, 873,
	0, 968, 970, 0, 1051, 0, 1072, 0, 0, 0,
	0, 0, 0, 0, 1243, 1245, 1246, 0, 0, 1244,
	0, 0, 100, 1196, 874, 1048, 1045, 0, 1083, 1073,
	0, 1075, 0, 0, 0, 0, 1247, 1249, 1248, 88,
	89, 90, 0, 0, 1053, 0, 1069, 1074, 1076, 1078,
	0, 1082, 1080, 1197, 1052, 0, 1065, 1050, 0, 1079,
	1054, -2, 0, 1070, 1055, -2, 0, 1063, 0, 0,
	1056, 1064, 0, 1059, 0, 0, 0, 1058, 0, -2,
	1066, 0, 0, 1060, -2, 0, 1068, 1067,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 113, 3, 3, 3, 144, 136, 3,
	81, 82, 141, 139, 154, 140, 153, 142, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 603, 600,
	123, 122, 124, 3, 604, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 146, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 601, 135, 602, 147,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 95, 96, 97, 98, 99, 100, 101, 102, 103,
	104, 105, 106, 107, 108, 109, 110, 111, 112, 114,
	115, 116, 117, 118, 119, 120, 121, 125, 126, 127,
	128, 129, 130, 131, 132, 133, 134, 137, 138, 143,
	145, 148, 149, 150, 151, 152, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:758
		{
			yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:765
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:771
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 6:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:779
		{
			yyLOCAL = tree.NewCompoundStmt(yyDollar[2].statementsUnion())
		}
		yyVAL.union = yyLOCAL
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:785
		{
			yyLOCAL = []tree.Statement{yyDollar[1].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 8:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:789
		{
			yyLOCAL = append(yyDollar[1].statementsUnion(), yyDollar[3].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:804
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 19:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:808
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:814
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:819
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 23:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:823
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:855
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:863
		{
			yyLOCAL = &tree.BackupStart{
				Timestamp: yyDollar[2].str,
				IsS3:      false,
				Dir:       yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:871
		{
			yyLOCAL = &tree.BackupStart{
				Timestamp: yyDollar[2].str,
				IsS3:      true,
				Option:    yyDollar[5].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:881
		{
			var connectionId uint64
			switch v := yyDollar[3].item.(type) {
			case uint64:
				connectionId = v
			case int64:
				connectionId = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}

			yyLOCAL = &tree.Kill{
				Option:       yyDollar[2].killOptionUnion(),
				ConnectionId: connectionId,
				StmtOption:   yyDollar[4].statementOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:901
		{
			yyLOCAL = tree.KillOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:907
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeConnection,
			}
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:914
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeQuery,
			}
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:922
		{
			yyLOCAL = tree.StatementOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:928
		{
			yyLOCAL = tree.StatementOption{
				Exist:       true,
				StatementId: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:937
		{
			yyLOCAL = &tree.CallStmt{
				Name: yyDollar[2].procNameUnion(),
				Args: yyDollar[4].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:947
		{
			yyLOCAL = &tree.LeaveStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:955
		{
			yyLOCAL = &tree.IterateStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:963
		{
			yyLOCAL = &tree.WhileStmt{
				Name: "",
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:971
		{
			yyLOCAL = &tree.WhileStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Cond: yyDollar[4].exprUnion(),
				Body: yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:981
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
				Cond: yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:989
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
				Cond: yyDollar[6].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:999
		{
			yyLOCAL = &tree.LoopStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1006
		{
			yyLOCAL = &tree.LoopStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1015
		{
			yyLOCAL = &tree.IfStmt{
				Cond:  yyDollar[2].exprUnion(),
				Body:  yyDollar[4].statementsUnion(),
				Elifs: yyDollar[5].elseIfClauseListUnion(),
				Else:  yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1025
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1029
		{
			yyLOCAL = yyDollar[1].elseIfClauseListUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1035
		{
			yyLOCAL = []*tree.ElseIfStmt{yyDollar[1].elseIfClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1039
		{
			yyLOCAL = append(yyDollar[1].elseIfClauseListUnion(), yyDollar[2].elseIfClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ElseIfStmt
//line mysql_sql.y:1045
		{
			yyLOCAL = &tree.ElseIfStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1054
		{
			yyLOCAL = &tree.CaseStmt{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseList2Union(),
				Else:  yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1064
		{
			yyLOCAL = []*tree.WhenStmt{yyDollar[1].whenClause2Union()}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1068
		{
			yyLOCAL = append(yyDollar[1].whenClauseList2Union(), yyDollar[2].whenClause2Union())
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.WhenStmt
//line mysql_sql.y:1074
		{
			yyLOCAL = &tree.WhenStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1083
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1087
		{
			yyLOCAL = yyDollar[2].statementsUnion()
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1093
		{
			ep := &tree.ExportParam{
				Outfile:     true,
				QueryId:     yyDollar[3].str,
				FilePath:    yyDollar[5].str,
				Fields:      yyDollar[6].fieldsUnion(),
				Lines:       yyDollar[7].linesUnion(),
				Header:      yyDollar[8].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[9].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[10].strsUnion(),
			}
			yyLOCAL = &tree.MoDump{
				ExportParams: ep,
			}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1114
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[9].tailParamUnion()
			yyLOCAL.(*tree.Load).Param.Parallel = yyDollar[10].unsignedOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1127
		{
			yyLOCAL = &tree.LoadExtension{
				Name: tree.Identifier(yyDollar[2].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1134
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1138
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1144
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1148
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1154
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1161
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1169
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1173
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error parallel flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1187
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1191
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1195
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1200
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1204
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1208
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1214
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1223
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1234
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1238
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1244
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1248
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1254
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1258
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1264
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1288
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1307
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1311
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1315
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1320
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1324
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1331
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[3].str,
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1339
		{
			yyVAL.str = ""
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1346
		{
			yyVAL.str = yyDollar[3].str
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1351
		{
			yyVAL.str = "\n"
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1358
		{
			yyVAL.str = yyDollar[3].str
		}
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1363
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1367
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1391
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1395
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1401
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1407
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1425
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1442
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1465
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1469
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1473
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1478
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1482
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1488
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1501
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1512
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1525
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1529
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1539
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1552
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1565
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1571
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1577
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1584
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].cstrUnion().Compare(),
				TabName: yyDollar[3].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1592
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1601
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1605
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1609
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1613
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1617
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1621
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1628
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1632
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1638
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1645
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1654
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1658
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1664
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1668
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1672
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1676
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1680
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1684
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1688
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1692
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1696
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1700
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1704
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1708
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1712
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1716
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1720
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1724
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1728
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1732
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1736
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1740
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1744
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1748
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1752
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1756
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1760
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1764
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1768
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1772
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1776
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1780
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1784
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1788
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1792
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1796
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1800
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1804
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1808
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1812
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1816
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1820
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1824
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1828
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1832
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1836
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1840
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1844
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1848
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1852
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1856
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1860
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1873
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        false,
				CharacterList: yyDollar[3].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1880
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        true,
				CharacterList: yyDollar[4].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1887
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        false,
				CharacterList: yyDollar[4].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.TransactionCharacteristic
//line mysql_sql.y:1897
		{
			yyLOCAL = []*tree.TransactionCharacteristic{yyDollar[1].transactionCharacteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.TransactionCharacteristic
//line mysql_sql.y:1901
		{
			yyLOCAL = append(yyDollar[1].transactionCharacteristicListUnion(), yyDollar[3].transactionCharacteristicUnion())
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TransactionCharacteristic
//line mysql_sql.y:1907
		{
			yyLOCAL = &tree.TransactionCharacteristic{
				IsLevel:   true,
				Isolation: yyDollar[3].isolationLevelUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TransactionCharacteristic
//line mysql_sql.y:1914
		{
			yyLOCAL = &tree.TransactionCharacteristic{
				Access: yyDollar[1].accessModeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1922
		{
			yyLOCAL = tree.ISOLATION_LEVEL_REPEATABLE_READ
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1926
		{
			yyLOCAL = tree.ISOLATION_LEVEL_READ_COMMITTED
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1930
		{
			yyLOCAL = tree.ISOLATION_LEVEL_READ_UNCOMMITTED
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1934
		{
			yyLOCAL = tree.ISOLATION_LEVEL_SERIALIZABLE
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccessModeType
//line mysql_sql.y:1940
		{
			yyLOCAL = tree.ACCESS_MODE_READ_WRITE
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccessModeType
//line mysql_sql.y:1944
		{
			yyLOCAL = tree.ACCESS_MODE_READ_ONLY
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1950
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1957
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1964
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1973
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:2003
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:2007
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:2011
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2017
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2023
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2027
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:2034
		{
			yyVAL.str = yyDollar[3].str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:2040
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:2044
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2050
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2058
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2067
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2076
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2084
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2092
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2115
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2138
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2145
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2152
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     strings.ToLower(yyDollar[1].str),
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2160
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2167
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2174
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2183
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2187
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2191
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2197
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2201
		{
			yyVAL.str = yyDollar[1].str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2207
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2211
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare() + "." + yyDollar[3].cstrUnion().Compare()
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2217
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2221
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2232
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2238
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2243
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2247
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2251
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2255
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2259
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2263
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2267
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2271
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2275
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2281
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2285
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2289
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2293
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2298
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2303
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2309
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].cstrUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2316
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2322
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2329
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2336
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2346
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2353
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2364
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2375
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2379
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:2385
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2395
		{
			yyLOCAL = &tree.LockTableStmt{TableLocks: yyDollar[3].tableLocksUnion()}
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2401
		{
			yyLOCAL = []tree.TableLock{yyDollar[1].tableLockUnion()}
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2405
		{
			yyLOCAL = append(yyDollar[1].tableLocksUnion(), yyDollar[3].tableLockUnion())
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLock
//line mysql_sql.y:2411
		{
			yyLOCAL = tree.TableLock{Table: *yyDollar[1].tableNameUnion(), LockType: yyDollar[2].tableLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2417
		{
			yyLOCAL = tree.TableLockRead
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2421
		{
			yyLOCAL = tree.TableLockReadLocal
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2425
		{
			yyLOCAL = tree.TableLockWrite
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2429
		{
			yyLOCAL = tree.TableLockLowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2435
		{
			yyLOCAL = &tree.UnLockTableStmt{}
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2447
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2453
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2457
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2463
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2467
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2473
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2479
		{
			yyLOCAL = tree.NewReset(tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2490
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2496
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2500
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2504
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2508
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2512
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2516
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2524
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2532
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2542
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2583
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2587
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:2593
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2599
		{
			yyVAL.str = yyDollar[1].str
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2604
		{
			yyVAL.str = "true"
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2605
		{
			yyVAL.str = "false"
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2606
		{
			yyVAL.str = yyDollar[1].str
		}
	case 353:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2611
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2628
		{
			yyLOCAL = &tree.AlterSequence{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        yyDollar[4].tableNameUnion(),
				Type:        yyDollar[5].columnTypeUnion(),
				IncrementBy: yyDollar[6].incrementByOptionUnion(),
				MinValue:    yyDollar[7].minValueOptionUnion(),
				MaxValue:    yyDollar[8].maxValueOptionUnion(),
				StartWith:   yyDollar[9].startWithOptionUnion(),
				Cycle:       yyDollar[10].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2644
		{
			yyLOCAL = &tree.AlterView{
				Name:     yyDollar[4].tableNameUnion(),
				ColNames: yyDollar[5].identifierListUnion(),
				AsSource: yyDollar[7].selectUnion(),
				IfExists: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2655
		{
			yyLOCAL = &tree.AlterTable{
				Table:   yyDollar[3].tableNameUnion(),
				Options: yyDollar[4].alterTableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2664
		{
			yyLOCAL = []tree.AlterTableOption{yyDollar[1].alterTableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2668
		{
			yyLOCAL = append(yyDollar[1].alterTableOptionsUnion(), yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2674
		{
			opt := &tree.AlterOptionAdd{
				Def: yyDollar[2].tableDefUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2681
		{
			opt := &tree.AlterTableModifyColumnClause{
				Typ:       tree.AlterTableModifyColumn,
				NewColumn: yyDollar[3].columnTableDefUnion(),
				Position:  yyDollar[4].alterColPositionUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2690
		{
			opt := &tree.AlterTableChangeColumnClause{
				Typ:           tree.AlterTableChangeColumn,
				OldColumnName: yyDollar[3].unresolvedNameUnion(),
				NewColumn:     yyDollar[4].columnTableDefUnion(),
				Position:      yyDollar[5].alterColPositionUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2700
		{
			opt := &tree.AlterTableRenameColumnClause{
				Typ:           tree.AlterTableRenameColumn,
				OldColumnName: yyDollar[3].unresolvedNameUnion(),
				NewColumnName: yyDollar[5].unresolvedNameUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2709
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:         tree.AlterTableAlterColumn,
				ColumnName:  yyDollar[3].unresolvedNameUnion(),
				DefalutExpr: tree.NewAttributeDefault(yyDollar[6].exprUnion()),
				OptionType:  tree.AlterColumnOptionSetDefault,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2719
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:        tree.AlterTableAlterColumn,
				ColumnName: yyDollar[3].unresolvedNameUnion(),
				Visibility: yyDollar[5].indexVisibilityUnion(),
				OptionType: tree.AlterColumnOptionSetVisibility,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2729
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:        tree.AlterTableAlterColumn,
				ColumnName: yyDollar[3].unresolvedNameUnion(),
				OptionType: tree.AlterColumnOptionDropDefault,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2738
		{
			opt := &tree.AlterTableOrderByColumnClause{
				Typ:              tree.AlterTableOrderByColumn,
				AlterOrderByList: yyDollar[3].alterColumnOrderByUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2746
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2750
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2754
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[1].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2758
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2762
		{
			yyLOCAL = tree.AlterTableOption(
				&tree.AlterAddCol{
					Column:   yyDollar[3].columnTableDefUnion(),
					Position: yyDollar[4].alterColPositionUnion(),
				},
			)
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2771
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2777
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2781
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2785
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2789
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2793
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2797
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2801
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2805
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2810
		{
			yyVAL.str = ""
		}
	case 406:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2841
		{
			yyVAL.str = ""
		}
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2845
		{
			yyVAL.str = string("COLUMN")
		}
	case 408:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2850
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ: tree.ColumnPositionNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2856
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ: tree.ColumnPositionFirst,
			}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2862
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ:            tree.ColumnPositionAfter,
				RelativeColumn: yyDollar[2].unresolvedNameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.AlterColumnOrder
//line mysql_sql.y:2871
		{
			yyLOCAL = []*tree.AlterColumnOrder{yyDollar[1].alterColumnOrderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.AlterColumnOrder
//line mysql_sql.y:2875
		{
			yyLOCAL = append(yyDollar[1].alterColumnOrderByUnion(), yyDollar[3].alterColumnOrderUnion())
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AlterColumnOrder
//line mysql_sql.y:2881
		{
			yyLOCAL = &tree.AlterColumnOrder{Column: yyDollar[1].unresolvedNameUnion(), Direction: yyDollar[2].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2888
		{
			yyLOCAL = &tree.AlterTableName{
				Name: yyDollar[1].unresolvedObjectNameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2896
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropIndex,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2903
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropKey,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2910
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[1].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2917
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2924
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropForeignKey,
				Name: tree.Identifier(yyDollar[3].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2931
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ: tree.AlterTableDropPrimaryKey,
			}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2939
		{
			yyLOCAL = &tree.AlterOptionAlterIndex{
				Visibility: yyDollar[3].indexVisibilityUnion(),
				Name:       tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2946
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type:    yyDollar[1].str,
				Enforce: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2953
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type:    yyDollar[1].str,
				Enforce: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2962
		{
			yyLOCAL = tree.VISIBLE_TYPE_VISIBLE
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2966
		{
			yyLOCAL = tree.VISIBLE_TYPE_INVISIBLE
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2973
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].alterAccountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2985
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				DbName:         yyDollar[3].str,
				UpdateConfig:   yyDollar[7].str,
				IsAccountLevel: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2993
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				AccountName:    yyDollar[4].str,
				UpdateConfig:   yyDollar[8].str,
				IsAccountLevel: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3001
		{
			assignments := []*tree.VarAssignmentExpr{
				&tree.VarAssignmentExpr{
					System: true,
					Global: true,
					Name:   yyDollar[6].str,
					Value:  yyDollar[8].exprUnion(),
				},
			}
			yyLOCAL = &tree.SetVar{Assignments: assignments}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:3014
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:3020
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist:          true,
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3031
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:3042
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:3046
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3051
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3055
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3060
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3064
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3080
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3084
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3088
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3092
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3096
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3100
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3104
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3108
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3112
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3116
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3120
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3124
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3128
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3132
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3136
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3140
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3146
		{
			yyVAL.item = nil
		}
	case 456:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3151
		{
			yyVAL.item = nil
		}
	case 487:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3191
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3197
		{
			yyLOCAL = &tree.ShowStages{
				Like: yyDollar[3].comparisionExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3205
		{
			yyLOCAL = &tree.ShowGrants{ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3209
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion(), ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3213
		{
			s := &tree.ShowGrants{}
			roles := []*tree.Role{tree.NewRole(yyDollar[5].cstrUnion().Compare())}
			s.Roles = roles
			s.ShowGrantType = tree.GrantForRole
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:3222
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:3226
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3232
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3237
		{
		}
	case 497:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3241
		{
		}
	case 499:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3246
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3256
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3266
		{
			yyLOCAL = &tree.ShowRolesStmt{
				Like: yyDollar[3].comparisionExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3274
		{
			yyLOCAL = &tree.ShowNodeList{}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3280
		{
			yyLOCAL = &tree.ShowLocks{}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3286
		{
			yyLOCAL = &tree.ShowTableNumber{DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3292
		{
			yyLOCAL = &tree.ShowColumnNumber{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3298
		{
			yyLOCAL = &tree.ShowTableValues{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3304
		{
			yyLOCAL = &tree.ShowTableSize{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3310
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3319
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3323
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3327
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3331
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3335
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3339
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3343
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3347
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3353
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3360
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[7].cstrUnion().Compare()), ExplicitSchema: true}
			tbl := tree.NewTableName(tree.Identifier(yyDollar[5].cstrUnion().Compare()), prefix)
			yyLOCAL = &tree.ShowIndex{
				TableName: *tbl,
				Where:     yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3370
		{
		}
	case 520:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3372
		{
		}
	case 524:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3381
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3391
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3400
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3404
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3408
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3414
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3420
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3426
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3432
		{
			yyLOCAL = &tree.ShowSequences{
				DBName: yyDollar[3].str,
				Where:  yyDollar[4].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3441
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3451
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3463
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3467
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3473
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3485
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3499
		{
			yyLOCAL = &tree.ShowAccounts{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3505
		{
			yyLOCAL = &tree.ShowPublications{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3512
		{
			yyLOCAL = &tree.ShowSubscriptions{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3517
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3521
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3525
		{
			yyLOCAL = tree.NewComparisonExpr(tree.ILIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3530
		{
			yyVAL.str = ""
		}
	case 546:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3534
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 547:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3540
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3553
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3557
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3563
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3568
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3572
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3576
		{
			yyLOCAL = &tree.ShowCreatePublications{Name: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3582
		{
			yyLOCAL = &tree.ShowBackendServers{}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3588
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3592
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3598
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3604
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3608
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3612
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3618
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3622
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3646
		{
			yyLOCAL = &tree.DropSequence{
				IfExists: yyDollar[3].boolValUnion(),
				Names:    yyDollar[4].tableNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3655
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3664
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3673
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3677
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:3683
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3692
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3701
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3711
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[4].boolValUnion(), Names: yyDollar[5].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3715
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3721
		{
			yyLOCAL = &tree.DropConnector{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3727
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3733
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3737
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3743
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3749
		{
			yyLOCAL = &tree.DropFunction{
				Name: yyDollar[3].functionNameUnion(),
				Args: yyDollar[5].funcArgsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3758
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[3].procNameUnion(),
				IfExists: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3765
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[5].procNameUnion(),
				IfExists: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3776
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3781
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3788
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3804
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3817
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3828
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3832
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3838
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3843
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3850
		{
		}
	case 611:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3852
		{
		}
	case 612:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3855
		{
		}
	case 617:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3864
		{
		}
	case 619:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3868
		{
		}
	case 621:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3873
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3882
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3889
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3895
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3903
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3910
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3917
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3937
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateExprsUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3947
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3951
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3957
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3964
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3970
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3978
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3985
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3992
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:4011
		{
			yyLOCAL = []*tree.UpdateExpr{}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:4015
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:4020
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:4024
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:4028
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:4034
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4043
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4047
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4053
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 646:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4057
		{
			yyVAL.str = yyDollar[3].cstrUnion().Compare()
		}
	case 647:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4063
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4067
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4073
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4078
		{
		}
	case 652:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4082
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4089
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4093
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4100
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4105
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4109
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4115
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4119
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4125
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4129
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:4134
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:4138
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4151
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4158
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4165
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4183
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:4202
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:4208
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4215
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4219
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4232
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4236
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4241
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4245
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4252
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4257
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4264
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4270
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion(), SelectLockInfo: yyDollar[5].selectLockInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4274
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4278
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4282
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), SelectLockInfo: yyDollar[6].selectLockInfoUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4286
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4290
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:4296
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:4303
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:4312
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:4316
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:4322
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4330
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4334
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4339
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4343
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4349
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4353
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4357
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4362
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4366
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4372
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4378
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4382
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:4388
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4393
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4397
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4401
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4406
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4410
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4414
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SelectLockInfo
//line mysql_sql.y:4419
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SelectLockInfo
//line mysql_sql.y:4423
		{
			yyLOCAL = &tree.SelectLockInfo{
				LockType: tree.SelectLockForUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4431
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4435
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4439
		{
			valuesStmt := yyDollar[2].statementUnion().(*tree.ValuesStatement)
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{
				Select: &tree.ValuesClause{
					Rows:    valuesStmt.Rows,
					RowWord: true,
				},
				OrderBy: valuesStmt.OrderBy,
				Limit:   valuesStmt.Limit,
			}}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4453
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4457
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4467
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4477
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4487
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4499
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4507
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4515
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4524
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4532
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4540
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4548
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4556
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4564
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4572
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4580
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4588
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4598
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4609
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4623
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 737:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4627
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 738:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4631
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 739:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4636
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4640
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4644
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4653
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4657
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4662
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4666
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4671
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4675
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4681
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4685
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4691
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4695
		{
			yyDollar[2].cstrUnion().SetConfig(0)
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].cstrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4700
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4704
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4709
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4717
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4723
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4731
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4739
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4749
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4755
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4764
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4773
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4782
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4792
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 769:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4796
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 770:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4806
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4810
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 772:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4814
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4818
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 774:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4824
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4834
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4838
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4844
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4850
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4854
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4860
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4866
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 782:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4870
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 783:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4874
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 784:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4880
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4884
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4890
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4894
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4900
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4904
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4910
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4914
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4924
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4937
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:4943
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4949
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].cstrUnion().Compare()))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:4962
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4973
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4980
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4984
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:4990
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:5000
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:5004
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:5008
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:5013
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:5017
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:5021
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:5025
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5030
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5034
		{
			yyLOCAL = []string{yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5038
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5042
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5046
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5051
		{
			yyVAL.str = ""
		}
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5055
		{
			yyVAL.str = yyDollar[1].str
		}
	case 816:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5059
		{
			yyVAL.str = yyDollar[2].str
		}
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5065
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 819:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5071
		{
			yyLOCAL = tree.NewCStr("", yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5075
		{
			yyLOCAL = yyDollar[1].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5079
		{
			yyLOCAL = yyDollar[2].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5083
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5087
		{
			yyLOCAL = tree.NewCStr(yyDollar[2].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5093
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 841:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5129
		{
			yyLOCAL = &tree.CreateExtension{
				Language: yyDollar[3].str,
				Name:     tree.Identifier(yyDollar[5].str),
				Filename: tree.Identifier(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5139
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5145
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 844:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5151
		{
			yyLOCAL = &tree.CreateProcedure{
				Name: yyDollar[3].procNameUnion(),
				Args: yyDollar[5].procArgsUnion(),
				Body: yyDollar[7].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:5161
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[1].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:5166
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().ToLower()), ExplicitSchema: true}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[3].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5172
		{
			yyLOCAL = tree.ProcedureArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5179
		{
			yyLOCAL = tree.ProcedureArgs{yyDollar[1].procArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5183
		{
			yyLOCAL = append(yyDollar[1].procArgsUnion(), yyDollar[3].procArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArg
//line mysql_sql.y:5189
		{
			yyLOCAL = tree.ProcedureArg(yyDollar[1].procArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureArgDecl
//line mysql_sql.y:5195
		{
			yyLOCAL = tree.NewProcedureArgDecl(yyDollar[1].procArgTypeUnion(), yyDollar[2].unresolvedNameUnion(), yyDollar[3].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5200
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5204
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5208
		{
			yyLOCAL = tree.TYPE_OUT
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5212
		{
			yyLOCAL = tree.TYPE_INOUT
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5219
		{
			if yyDollar[13].str == "" {
				yylex.Error("no function body error")
				return 1
			}
			if yyDollar[11].str == "python" && yyDollar[14].str == "" {
				yylex.Error("no handler error")
				return 1
			}

			yyLOCAL = &tree.CreateFunction{
				Replace:    yyDollar[2].streamOptionalUnion(),
				Name:       yyDollar[4].functionNameUnion(),
				Args:       yyDollar[6].funcArgsUnion(),
				ReturnType: yyDollar[9].funcReturnUnion(),
				Language:   yyDollar[11].str,
				Import:     yyDollar[12].boolValUnion(),
				Body:       yyDollar[13].str,
				Handler:    yyDollar[14].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:5243
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:5248
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5254
		{
			yyLOCAL = tree.FunctionArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5261
		{
			yyLOCAL = tree.FunctionArgs{yyDollar[1].funcArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5265
		{
			yyLOCAL = append(yyDollar[1].funcArgsUnion(), yyDollar[3].funcArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArg
//line mysql_sql.y:5271
		{
			yyLOCAL = tree.FunctionArg(yyDollar[1].funcArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5277
		{
			yyLOCAL = tree.NewFunctionArgDecl(nil, yyDollar[1].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5281
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5285
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5291
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReturnType
//line mysql_sql.y:5297
		{
			yyLOCAL = tree.NewReturnType(yyDollar[1].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5303
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5307
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5313
		{
			yyVAL.str = ""
		}
	case 874:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5320
		{
			yyVAL.str = yyDollar[2].str
		}
	case 875:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5326
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[5].tableNameUnion(),
				ColNames:    yyDollar[6].identifierListUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5335
		{
			yyLOCAL = &tree.CreateView{
				Replace:     yyDollar[2].streamOptionalUnion(),
				Name:        yyDollar[5].tableNameUnion(),
				ColNames:    yyDollar[6].identifierListUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5347
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5359
		{
			yyVAL.str = yyDollar[1].str
		}
	case 879:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5363
		{
			yyVAL.str = yyVAL.str + yyDollar[2].str
		}
	case 880:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5369
		{
			yyVAL.str = "ALGORITHM = " + yyDollar[3].str
		}
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5373
		{
			yyVAL.str = "DEFINER = "
		}
	case 882:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5377
		{
			yyVAL.str = "SQL SECURITY " + yyDollar[3].str
		}
	case 883:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5382
		{
			yyVAL.str = ""
		}
	case 884:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:5386
		{
			yyVAL.str = "WITH " + yyDollar[2].str + " CHECK OPTION"
		}
	case 890:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5400
		{
			yyVAL.str = ""
		}
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5408
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 894:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:5414
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5424
		{
			yyVAL.str = yyDollar[1].str
		}
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5428
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 897:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5434
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5441
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5447
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5455
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5461
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5468
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5475
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusRestricted,
			}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5483
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5489
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5498
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5510
		{
			yyLOCAL = &tree.CreatePublication{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Database:    tree.Identifier(yyDollar[6].cstrUnion().Compare()),
				AccountsSet: yyDollar[7].accountsSetOptionUnion(),
				Comment:     yyDollar[8].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5522
		{
			yyLOCAL = &tree.CreateStage{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Url:         yyDollar[5].str,
				Credentials: yyDollar[6].stageCredentialsUnion(),
				Status:      yyDollar[7].stageStatusUnion(),
				Comment:     yyDollar[8].stageCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5534
		{
			yyLOCAL = tree.StageStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5540
		{
			yyLOCAL = tree.StageStatus{
				Exist:  true,
				Option: tree.StageStatusEnabled,
			}
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5547
		{
			yyLOCAL = tree.StageStatus{
				Exist:  true,
				Option: tree.StageStatusDisabled,
			}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageComment
//line mysql_sql.y:5555
		{
			yyLOCAL = tree.StageComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.StageComment
//line mysql_sql.y:5561
		{
			yyLOCAL = tree.StageComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageUrl
//line mysql_sql.y:5569
		{
			yyLOCAL = tree.StageUrl{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageUrl
//line mysql_sql.y:5575
		{
			yyLOCAL = tree.StageUrl{
				Exist: true,
				Url:   yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageCredentials
//line mysql_sql.y:5583
		{
			yyLOCAL = tree.StageCredentials{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.StageCredentials
//line mysql_sql.y:5589
		{
			yyLOCAL = tree.StageCredentials{
				Exist:       true,
				Credentials: yyDollar[4].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5598
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5602
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5607
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5611
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5618
		{
			yyVAL.str = yyDollar[3].str
		}
	case 923:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5623
		{
			yyVAL.str = ""
		}
	case 924:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5627
		{
			yyVAL.str = yyDollar[2].str
		}
	case 925:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5633
		{
			yyLOCAL = &tree.AlterStage{
				IfNotExists:       yyDollar[3].boolValUnion(),
				Name:              tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				UrlOption:         yyDollar[6].stageUrlUnion(),
				CredentialsOption: yyDollar[7].stageCredentialsUnion(),
				StatusOption:      yyDollar[8].stageStatusUnion(),
				Comment:           yyDollar[9].stageCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5647
		{
			yyLOCAL = &tree.AlterPublication{
				IfExists:    yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				AccountsSet: yyDollar[5].accountsSetOptionUnion(),
				Comment:     yyDollar[6].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5657
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5661
		{
			yyLOCAL = &tree.AccountsSetOption{
				All: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5667
		{
			yyLOCAL = &tree.AccountsSetOption{
				SetAccounts: yyDollar[2].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5673
		{
			yyLOCAL = &tree.AccountsSetOption{
				AddAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5679
		{
			yyLOCAL = &tree.AccountsSetOption{
				DropAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5688
		{
			yyLOCAL = &tree.DropPublication{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5697
		{
			yyLOCAL = &tree.DropStage{
				IfNotExists: yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5706
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 935:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5711
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5717
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5725
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5831
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5835
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5841
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5851
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5855
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5861
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5871
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5875
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5879
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5884
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5888
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5894
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5901
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5907
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5916
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 954:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5923
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:5932
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:5936
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:5942
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5956
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5960
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5964
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5969
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5973
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5977
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5981
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5987
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6006
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6010
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6032
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6036
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6040
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6044
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6048
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6054
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6058
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:6064
		{
			// Order is parsed but just ignored as MySQL dtree.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:6069
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6074
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6078
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6082
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6086
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6090
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6096
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Name:               tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				SubscriptionOption: yyDollar[5].subscriptionOptionUnion(),
				CreateOptions:      yyDollar[6].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:6107
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:6111
		{
			yyLOCAL = &tree.SubscriptionOption{From: tree.Identifier(yyDollar[2].str), Publication: tree.Identifier(yyDollar[4].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6121
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6125
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6130
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6134
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6140
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6144
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6150
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6154
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6158
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6163
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6167
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6173
		{
			yyLOCAL = &tree.CreateConnector{
				ConnectorName: yyDollar[3].tableNameUnion(),
				Options:       yyDollar[6].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6182
		{
			yyLOCAL = &tree.CreateStream{
				Replace:     yyDollar[2].streamOptionalUnion(),
				Source:      false,
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				StreamName:  yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Options:     yyDollar[9].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6193
		{
			yyLOCAL = &tree.CreateStream{
				Replace:     yyDollar[2].streamOptionalUnion(),
				Source:      true,
				IfNotExists: yyDollar[5].ifNotExistsUnion(),
				StreamName:  yyDollar[6].tableNameUnion(),
				Defs:        yyDollar[8].tableDefsUnion(),
				Options:     yyDollar[10].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6204
		{
			yyLOCAL = &tree.CreateStream{
				Replace:     yyDollar[2].streamOptionalUnion(),
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				StreamName:  yyDollar[5].tableNameUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				Options:     yyDollar[6].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6215
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6219
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6225
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6237
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6246
		{
			yyLOCAL = &tree.CreateTable{
				IsClusterTable:  true,
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6259
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6266
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Filepath:     yyDollar[2].str,
					CompressType: tree.AUTO,
					Format:       tree.CSV,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6276
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.INLINE,
					Format:   yyDollar[4].str,
					Data:     yyDollar[8].str,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6286
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Option: yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6294
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.S3,
					Option:   yyDollar[4].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6305
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6309
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6314
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6318
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:6325
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6336
		{
			yyLOCAL = &tree.CreateSequence{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        yyDollar[4].tableNameUnion(),
				Type:        yyDollar[5].columnTypeUnion(),
				IncrementBy: yyDollar[6].incrementByOptionUnion(),
				MinValue:    yyDollar[7].minValueOptionUnion(),
				MaxValue:    yyDollar[8].maxValueOptionUnion(),
				StartWith:   yyDollar[9].startWithOptionUnion(),
				Cycle:       yyDollar[10].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6349
		{
			locale := ""
			fstr := "bigint"
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: fstr,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6363
		{
			yyLOCAL = yyDollar[2].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6367
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6371
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6378
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6385
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6392
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6399
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6403
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6407
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6411
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6415
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6422
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6429
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6433
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6440
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6447
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6451
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6458
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6465
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6472
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6479
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6483
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6488
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6492
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6496
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:6501
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:6505
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6515
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6519
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: []*tree.UnresolvedName{yyDollar[3].unresolvedNameUnion()},
			}

		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6526
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: yyDollar[4].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6533
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6537
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6546
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6550
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6556
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6560
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:6566
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:6575
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6585
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6589
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6595
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6599
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:6605
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:6612
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6621
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6625
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6630
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6634
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6639
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6643
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6648
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6652
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6662
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6666
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6677
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6685
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6693
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6701
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6712
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6721
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6731
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6741
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6745
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6750
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6754
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6760
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6764
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6770
		{
			yyLOCAL = &tree.CreateConnectorWithOption{Key: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6774
		{
			yyLOCAL = &tree.CreateConnectorWithOption{Key: tree.Identifier(yyDollar[1].str), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6779
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6783
		{
			yyLOCAL = yyDollar[3].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6789
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6793
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6799
		{
			yyLOCAL = &tree.CreateStreamWithOption{Key: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6803
		{
			yyLOCAL = &tree.CreateStreamWithOption{Key: tree.Identifier(yyDollar[1].str), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6808
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6812
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6818
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6822
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6826
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6832
		{
			yyLOCAL = tree.NewTableOptionAUTOEXTEND_SIZE(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6836
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6840
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6844
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6848
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6852
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6856
		{
			str := util.DealCommentString(yyDollar[3].str)
			yyLOCAL = tree.NewTableOptionComment(str)
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6861
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6865
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6869
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6873
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6877
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6881
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6885
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6889
		{
			yyLOCAL = tree.NewTableOptionEngineAttr(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6893
		{
			yyLOCAL = tree.NewTableOptionInsertMethod(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6897
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6901
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6905
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6909
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6913
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6917
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6921
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6925
		{
			yyLOCAL = tree.NewTTableOptionStartTrans(true)
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6929
		{
			yyLOCAL = tree.NewTTableOptionSecondaryEngineAttr(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6933
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6937
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6941
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6945
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6949
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6953
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6957
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].cstrUnion().Compare(), "")
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6961
		{
			yyLOCAL = tree.NewTableOptionTablespace("", yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6965
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6969
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:6975
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:6979
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:6985
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6991
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1139:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6995
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:7001
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:7005
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:7009
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:7013
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:7017
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:7021
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:7035
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:7039
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:7048
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:7053
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:7059
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:7066
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:7070
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7076
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7080
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7084
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7090
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7094
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7100
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7109
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7118
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7141
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7166
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.ForeignKey:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.UniqueIndex:
					v.ConstraintSymbol = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7180
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7186
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7195
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7204
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7213
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7222
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7232
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7240
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7246
		{
			yyVAL.str = ""
		}
	case 1178:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7250
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1181:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7260
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7266
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7272
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].cstrUnion().Compare()
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7291
		{
			yyVAL.str = ""
		}
	case 1193:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7295
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 1194:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:7301
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7307
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7311
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7315
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7321
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7325
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7329
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7333
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7339
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7343
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7347
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7352
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7356
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7362
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7366
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7372
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7376
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7380
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7384
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7388
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7392
		{
			str := util.DealCommentString(yyDollar[2].str)
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7397
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7401
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7405
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7409
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7413
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7417
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7421
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7425
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7429
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7433
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7446
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7450
		{
			yyLOCAL = tree.NewAttributeVisable(true)
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7454
		{
			yyLOCAL = tree.NewAttributeVisable(false)
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7458
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7462
		{
			yyLOCAL = tree.NewAttributeHeader(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7466
		{
			yyLOCAL = tree.NewAttributeHeaders()
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7472
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7476
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7481
		{
			yyVAL.str = ""
		}
	case 1234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7485
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7491
		{
			yyVAL.str = ""
		}
	case 1236:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7495
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 1237:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:7501
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7513
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7520
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7527
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7534
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7541
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7550
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7556
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7562
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7566
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7570
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7574
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7578
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7583
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7590
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7594
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7598
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:7603
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:7607
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:7612
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:7616
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:7632
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7638
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7642
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7646
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7650
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7654
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7658
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7662
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7666
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7670
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7674
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7678
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7682
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7686
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7692
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7696
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7700
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7704
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7708
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7712
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7716
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7720
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7724
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7728
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7732
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7736
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7741
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7749
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7753
		{
			yyLOCAL = tree.NewBitCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7757
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7761
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7770
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7774
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7778
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7782
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7786
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7792
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7800
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7808
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7817
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7821
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7826
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7830
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:7836
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:7840
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:7846
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7855
		{
			t := yyVAL.columnTypeUnion()
			str := strings.ToLower(t.InternalType.FamilyString)
			if str == "binary" {
				t.InternalType.Scale = -1
			} else if str == "char" {
				if t.InternalType.DisplayWith == -1 {
					t.InternalType.FamilyString = "varchar"
					t.InternalType.Oid = uint32(defines.MYSQL_TYPE_VARCHAR)
				}
			}
		}
	case 1312:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7867
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7884
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7901
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7914
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7927
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7939
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7953
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Scale:              yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7968
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Scale:              yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7983
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8000
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8015
		{
		}
	case 1327:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8022
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8026
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8030
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8036
		{
			yyLOCAL = &tree.FrameBound{Type: tree.CurrentRow}
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8040
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8044
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8048
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:8054
		{
			yyLOCAL = tree.Rows
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:8058
		{
			yyLOCAL = tree.Range
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:8062
		{
			yyLOCAL = tree.Groups
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8068
		{
			yyLOCAL = &tree.FrameClause{
				Type:  yyDollar[1].frameTypeUnion(),
				Start: yyDollar[2].frameBoundUnion(),
				End:   &tree.FrameBound{Type: tree.CurrentRow},
			}
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8076
		{
			yyLOCAL = &tree.FrameClause{
				Type:   yyDollar[1].frameTypeUnion(),
				HasEnd: true,
				Start:  yyDollar[3].frameBoundUnion(),
				End:    yyDollar[5].frameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8086
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8090
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8097
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8102
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8106
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8111
		{
			yyVAL.str = ","
		}
	case 1345:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:8115
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1346:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:8120
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:8127
		{
			hasFrame := true
			var f *tree.FrameClause
			if yyDollar[5].frameClauseUnion() != nil {
				f = yyDollar[5].frameClauseUnion()
			} else {
				hasFrame = false
				f = &tree.FrameClause{Type: tree.Range}
				if yyDollar[4].orderByUnion() == nil {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.Following, UnBounded: true}
				} else {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.CurrentRow}
				}
			}
			yyLOCAL = &tree.WindowSpec{
				PartitionBy: yyDollar[3].exprsUnion(),
				OrderBy:     yyDollar[4].orderByUnion(),
				Frame:       f,
				HasFrame:    hasFrame,
			}
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8153
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      append(yyDollar[4].exprsUnion(), tree.NewNumValWithType(constant.MakeString(yyDollar[6].str), yyDollar[6].str, false, tree.P_char)),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[8].windowSpecUnion(),
				OrderBy:    yyDollar[5].orderByUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8164
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8174
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8184
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8194
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8203
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8212
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8222
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8232
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8242
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8252
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8262
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8272
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8282
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8292
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8302
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8312
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8322
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8332
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8351
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8359
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8367
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8375
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8383
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			timeUinit := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8393
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8401
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8410
		{
			name := tree.SetUnresolvedName("nextval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8418
		{
			name := tree.SetUnresolvedName("setval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8426
		{
			name := tree.SetUnresolvedName("currval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8434
		{
			name := tree.SetUnresolvedName("lastval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8442
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(0), "0", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8453
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(1), "1", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8463
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(2), "2", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1385:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8475
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(3), "3", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1386:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8486
		{
			column := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:8508
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1422:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8544
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8556
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8568
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1425:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8579
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1426:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8587
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1427:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8594
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1428:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8601
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1429:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8613
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1430:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8621
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].exprUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1431:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8631
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].unresolvedNameUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1432:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8641
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1433:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8649
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1434:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8660
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1435:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8669
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1436:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8678
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1437:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8686
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1438:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8696
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1439:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8704
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1440:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8714
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8718
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1442:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8724
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1443:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8728
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1450:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8747
		{
		}
	case 1451:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:8749
		{
		}
	case 1485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8790
		{
			name := tree.SetUnresolvedName("interval")
			str := strings.ToLower(yyDollar[3].str)
			arg2 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1486:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8801
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1487:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8805
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1488:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8809
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:8815
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1490:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8820
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1491:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8824
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1492:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8830
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1493:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8834
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1494:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8841
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1495:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8845
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1496:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8849
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1497:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8857
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1498:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8861
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1499:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8865
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1500:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8869
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1501:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8875
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1502:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8879
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1503:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8883
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1504:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8887
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1505:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8891
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1506:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8895
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1507:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8899
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1508:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8903
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1509:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8907
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1510:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8911
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1512:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8919
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1513:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8923
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1514:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8927
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1515:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8931
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1516:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8935
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.ILIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1517:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8939
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_ILIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1518:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8943
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1519:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8947
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1520:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8951
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1521:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8955
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1523:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8961
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1524:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8965
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1525:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8971
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1526:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8975
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1527:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8982
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1528:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8986
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8990
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1530:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8996
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1531:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9000
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1532:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9004
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1533:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9008
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1534:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9012
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1535:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9016
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1536:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9020
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1537:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:9026
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1538:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:9030
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1539:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:9034
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1540:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:9038
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1541:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9044
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1542:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9057
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1543:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9062
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1544:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9068
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1545:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9072
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1546:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9085
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1547:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9090
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1548:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9094
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1549:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9098
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1550:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9102
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1551:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9106
		{
			if strings.HasPrefix(yyDollar[2].str, "0x") {
				yyDollar[2].str = yyDollar[2].str[2:]
			}
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_bit)
		}
		yyVAL.union = yyLOCAL
	case 1552:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9113
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1553:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9117
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1554:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9131
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1555:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9135
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_ScoreBinary)
		}
		yyVAL.union = yyLOCAL
	case 1556:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9142
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1560:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9153
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1561:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9158
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1562:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9164
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1563:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9176
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1564:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9188
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1565:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9200
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1566:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9213
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1567:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9226
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1568:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9239
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1569:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9252
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1570:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9265
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1571:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9278
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1572:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9291
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1573:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9304
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1574:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9317
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1575:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9330
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1576:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9345
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for double out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1577:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9372
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for float out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for float out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1578:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9414
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1579:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9450
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1580:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9486
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1581:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9503
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1582:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9515
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        yyDollar[2].lengthOptUnion(),
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1583:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9535
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        yyDollar[2].lengthOptUnion(),
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1584:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9555
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        yyDollar[2].lengthOptUnion(),
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1585:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9575
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1586:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9591
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1587:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9604
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1588:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9617
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1589:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9630
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1590:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9643
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1591:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9655
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1592:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9667
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1593:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9679
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1594:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9691
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1595:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9703
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1596:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9715
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1597:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9727
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1598:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9739
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1599:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9751
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.ArrayFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1600:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9764
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.ArrayFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1601:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9777
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1602:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9790
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1603:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9803
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1604:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9818
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1605:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9826
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1606:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9835
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1607:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9845
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1608:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:9868
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1609:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:9873
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1610:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9879
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1612:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9886
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1613:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9890
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1614:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9895
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1615:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9899
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1616:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9905
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1617:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9911
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1618:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9918
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1619:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9925
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1620:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9934
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 38, // this is the default precision for decimal
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1621:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9941
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1622:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9948
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1623:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9957
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1624:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9961
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1625:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9965
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1626:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:9971
		{
		}
	case 1627:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9973
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1631:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:9983
		{
			yyVAL.str = ""
		}
	case 1632:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:9987
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}
