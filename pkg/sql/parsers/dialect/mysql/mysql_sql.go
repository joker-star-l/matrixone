// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"encoding/json"
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const LOWER_THAN_ORDER = 57352
const ORDER = 57353
const SELECT = 57354
const INSERT = 57355
const UPDATE = 57356
const DELETE = 57357
const FROM = 57358
const WHERE = 57359
const GROUP = 57360
const HAVING = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const AFTER = 57388
const INSTANT = 57389
const INPLACE = 57390
const COPY = 57391
const DISABLE = 57392
const ENABLE = 57393
const UNDEFINED = 57394
const MERGE = 57395
const TEMPTABLE = 57396
const DEFINER = 57397
const INVOKER = 57398
const SQL = 57399
const SECURITY = 57400
const CASCADED = 57401
const VALUES = 57402
const NEXT = 57403
const VALUE = 57404
const SHARE = 57405
const MODE = 57406
const SQL_NO_CACHE = 57407
const SQL_CACHE = 57408
const JOIN = 57409
const STRAIGHT_JOIN = 57410
const LEFT = 57411
const RIGHT = 57412
const INNER = 57413
const OUTER = 57414
const CROSS = 57415
const NATURAL = 57416
const USE = 57417
const FORCE = 57418
const LOWER_THAN_ON = 57419
const ON = 57420
const USING = 57421
const SUBQUERY_AS_EXPR = 57422
const LOWER_THAN_STRING = 57423
const ID = 57424
const AT_ID = 57425
const AT_AT_ID = 57426
const STRING = 57427
const VALUE_ARG = 57428
const LIST_ARG = 57429
const COMMENT = 57430
const COMMENT_KEYWORD = 57431
const QUOTE_ID = 57432
const STAGE = 57433
const CREDENTIALS = 57434
const STAGES = 57435
const INTEGRAL = 57436
const HEX = 57437
const BIT_LITERAL = 57438
const FLOAT = 57439
const HEXNUM = 57440
const NULL = 57441
const TRUE = 57442
const FALSE = 57443
const LOWER_THAN_CHARSET = 57444
const CHARSET = 57445
const UNIQUE = 57446
const KEY = 57447
const OR = 57448
const PIPE_CONCAT = 57449
const XOR = 57450
const AND = 57451
const NOT = 57452
const BETWEEN = 57453
const CASE = 57454
const WHEN = 57455
const THEN = 57456
const ELSE = 57457
const END = 57458
const ELSEIF = 57459
const LOWER_THAN_EQ = 57460
const LE = 57461
const GE = 57462
const NE = 57463
const NULL_SAFE_EQUAL = 57464
const IS = 57465
const LIKE = 57466
const REGEXP = 57467
const IN = 57468
const ASSIGNMENT = 57469
const ILIKE = 57470
const SHIFT_LEFT = 57471
const SHIFT_RIGHT = 57472
const DIV = 57473
const MOD = 57474
const UNARY = 57475
const COLLATE = 57476
const BINARY = 57477
const UNDERSCORE_BINARY = 57478
const INTERVAL = 57479
const OUT = 57480
const INOUT = 57481
const BEGIN = 57482
const START = 57483
const TRANSACTION = 57484
const COMMIT = 57485
const ROLLBACK = 57486
const WORK = 57487
const CONSISTENT = 57488
const SNAPSHOT = 57489
const CHAIN = 57490
const NO = 57491
const RELEASE = 57492
const PRIORITY = 57493
const QUICK = 57494
const BIT = 57495
const TINYINT = 57496
const SMALLINT = 57497
const MEDIUMINT = 57498
const INT = 57499
const INTEGER = 57500
const BIGINT = 57501
const INTNUM = 57502
const REAL = 57503
const DOUBLE = 57504
const FLOAT_TYPE = 57505
const DECIMAL = 57506
const NUMERIC = 57507
const DECIMAL_VALUE = 57508
const TIME = 57509
const TIMESTAMP = 57510
const DATETIME = 57511
const YEAR = 57512
const CHAR = 57513
const VARCHAR = 57514
const BOOL = 57515
const CHARACTER = 57516
const VARBINARY = 57517
const NCHAR = 57518
const TEXT = 57519
const TINYTEXT = 57520
const MEDIUMTEXT = 57521
const LONGTEXT = 57522
const BLOB = 57523
const TINYBLOB = 57524
const MEDIUMBLOB = 57525
const LONGBLOB = 57526
const JSON = 57527
const ENUM = 57528
const UUID = 57529
const VECF32 = 57530
const VECF64 = 57531
const GEOMETRY = 57532
const POINT = 57533
const LINESTRING = 57534
const POLYGON = 57535
const GEOMETRYCOLLECTION = 57536
const MULTIPOINT = 57537
const MULTILINESTRING = 57538
const MULTIPOLYGON = 57539
const INT1 = 57540
const INT2 = 57541
const INT3 = 57542
const INT4 = 57543
const INT8 = 57544
const S3OPTION = 57545
const SQL_SMALL_RESULT = 57546
const SQL_BIG_RESULT = 57547
const SQL_BUFFER_RESULT = 57548
const LOW_PRIORITY = 57549
const HIGH_PRIORITY = 57550
const DELAYED = 57551
const CREATE = 57552
const ALTER = 57553
const DROP = 57554
const RENAME = 57555
const ANALYZE = 57556
const ADD = 57557
const RETURNS = 57558
const SCHEMA = 57559
const TABLE = 57560
const SEQUENCE = 57561
const INDEX = 57562
const VIEW = 57563
const TO = 57564
const IGNORE = 57565
const IF = 57566
const PRIMARY = 57567
const COLUMN = 57568
const CONSTRAINT = 57569
const SPATIAL = 57570
const FULLTEXT = 57571
const FOREIGN = 57572
const KEY_BLOCK_SIZE = 57573
const SHOW = 57574
const DESCRIBE = 57575
const EXPLAIN = 57576
const DATE = 57577
const ESCAPE = 57578
const REPAIR = 57579
const OPTIMIZE = 57580
const TRUNCATE = 57581
const MAXVALUE = 57582
const PARTITION = 57583
const REORGANIZE = 57584
const LESS = 57585
const THAN = 57586
const PROCEDURE = 57587
const TRIGGER = 57588
const STATUS = 57589
const VARIABLES = 57590
const ROLE = 57591
const PROXY = 57592
const AVG_ROW_LENGTH = 57593
const STORAGE = 57594
const DISK = 57595
const MEMORY = 57596
const CHECKSUM = 57597
const COMPRESSION = 57598
const DATA = 57599
const DIRECTORY = 57600
const DELAY_KEY_WRITE = 57601
const ENCRYPTION = 57602
const ENGINE = 57603
const MAX_ROWS = 57604
const MIN_ROWS = 57605
const PACK_KEYS = 57606
const ROW_FORMAT = 57607
const STATS_AUTO_RECALC = 57608
const STATS_PERSISTENT = 57609
const STATS_SAMPLE_PAGES = 57610
const DYNAMIC = 57611
const COMPRESSED = 57612
const REDUNDANT = 57613
const COMPACT = 57614
const FIXED = 57615
const COLUMN_FORMAT = 57616
const AUTO_RANDOM = 57617
const ENGINE_ATTRIBUTE = 57618
const SECONDARY_ENGINE_ATTRIBUTE = 57619
const INSERT_METHOD = 57620
const RESTRICT = 57621
const CASCADE = 57622
const ACTION = 57623
const PARTIAL = 57624
const SIMPLE = 57625
const CHECK = 57626
const ENFORCED = 57627
const RANGE = 57628
const LIST = 57629
const ALGORITHM = 57630
const LINEAR = 57631
const PARTITIONS = 57632
const SUBPARTITION = 57633
const SUBPARTITIONS = 57634
const CLUSTER = 57635
const TYPE = 57636
const ANY = 57637
const SOME = 57638
const EXTERNAL = 57639
const LOCALFILE = 57640
const URL = 57641
const PREPARE = 57642
const DEALLOCATE = 57643
const RESET = 57644
const EXTENSION = 57645
const INCREMENT = 57646
const CYCLE = 57647
const MINVALUE = 57648
const PUBLICATION = 57649
const SUBSCRIPTIONS = 57650
const PUBLICATIONS = 57651
const PROPERTIES = 57652
const PARSER = 57653
const VISIBLE = 57654
const INVISIBLE = 57655
const BTREE = 57656
const HASH = 57657
const RTREE = 57658
const BSI = 57659
const ZONEMAP = 57660
const LEADING = 57661
const BOTH = 57662
const TRAILING = 57663
const UNKNOWN = 57664
const EXPIRE = 57665
const ACCOUNT = 57666
const ACCOUNTS = 57667
const UNLOCK = 57668
const DAY = 57669
const NEVER = 57670
const PUMP = 57671
const MYSQL_COMPATIBILITY_MODE = 57672
const MODIFY = 57673
const CHANGE = 57674
const SECOND = 57675
const ASCII = 57676
const COALESCE = 57677
const COLLATION = 57678
const HOUR = 57679
const MICROSECOND = 57680
const MINUTE = 57681
const MONTH = 57682
const QUARTER = 57683
const REPEAT = 57684
const REVERSE = 57685
const ROW_COUNT = 57686
const WEEK = 57687
const REVOKE = 57688
const FUNCTION = 57689
const PRIVILEGES = 57690
const TABLESPACE = 57691
const EXECUTE = 57692
const SUPER = 57693
const GRANT = 57694
const OPTION = 57695
const REFERENCES = 57696
const REPLICATION = 57697
const SLAVE = 57698
const CLIENT = 57699
const USAGE = 57700
const RELOAD = 57701
const FILE = 57702
const TEMPORARY = 57703
const ROUTINE = 57704
const EVENT = 57705
const SHUTDOWN = 57706
const NULLX = 57707
const AUTO_INCREMENT = 57708
const APPROXNUM = 57709
const SIGNED = 57710
const UNSIGNED = 57711
const ZEROFILL = 57712
const ENGINES = 57713
const LOW_CARDINALITY = 57714
const AUTOEXTEND_SIZE = 57715
const ADMIN_NAME = 57716
const RANDOM = 57717
const SUSPEND = 57718
const ATTRIBUTE = 57719
const HISTORY = 57720
const REUSE = 57721
const CURRENT = 57722
const OPTIONAL = 57723
const FAILED_LOGIN_ATTEMPTS = 57724
const PASSWORD_LOCK_TIME = 57725
const UNBOUNDED = 57726
const SECONDARY = 57727
const RESTRICTED = 57728
const USER = 57729
const IDENTIFIED = 57730
const CIPHER = 57731
const ISSUER = 57732
const X509 = 57733
const SUBJECT = 57734
const SAN = 57735
const REQUIRE = 57736
const SSL = 57737
const NONE = 57738
const PASSWORD = 57739
const SHARED = 57740
const EXCLUSIVE = 57741
const MAX_QUERIES_PER_HOUR = 57742
const MAX_UPDATES_PER_HOUR = 57743
const MAX_CONNECTIONS_PER_HOUR = 57744
const MAX_USER_CONNECTIONS = 57745
const FORMAT = 57746
const VERBOSE = 57747
const CONNECTION = 57748
const TRIGGERS = 57749
const PROFILES = 57750
const LOAD = 57751
const INLINE = 57752
const INFILE = 57753
const TERMINATED = 57754
const OPTIONALLY = 57755
const ENCLOSED = 57756
const ESCAPED = 57757
const STARTING = 57758
const LINES = 57759
const ROWS = 57760
const IMPORT = 57761
const DISCARD = 57762
const MODUMP = 57763
const OVER = 57764
const PRECEDING = 57765
const FOLLOWING = 57766
const GROUPS = 57767
const DATABASES = 57768
const TABLES = 57769
const SEQUENCES = 57770
const EXTENDED = 57771
const FULL = 57772
const PROCESSLIST = 57773
const FIELDS = 57774
const COLUMNS = 57775
const OPEN = 57776
const ERRORS = 57777
const WARNINGS = 57778
const INDEXES = 57779
const SCHEMAS = 57780
const NODE = 57781
const LOCKS = 57782
const ROLES = 57783
const TABLE_NUMBER = 57784
const COLUMN_NUMBER = 57785
const TABLE_VALUES = 57786
const TABLE_SIZE = 57787
const NAMES = 57788
const GLOBAL = 57789
const PERSIST = 57790
const SESSION = 57791
const ISOLATION = 57792
const LEVEL = 57793
const READ = 57794
const WRITE = 57795
const ONLY = 57796
const REPEATABLE = 57797
const COMMITTED = 57798
const UNCOMMITTED = 57799
const SERIALIZABLE = 57800
const LOCAL = 57801
const EVENTS = 57802
const PLUGINS = 57803
const CURRENT_TIMESTAMP = 57804
const DATABASE = 57805
const CURRENT_TIME = 57806
const LOCALTIME = 57807
const LOCALTIMESTAMP = 57808
const UTC_DATE = 57809
const UTC_TIME = 57810
const UTC_TIMESTAMP = 57811
const REPLACE = 57812
const CONVERT = 57813
const SEPARATOR = 57814
const TIMESTAMPDIFF = 57815
const CURRENT_DATE = 57816
const CURRENT_USER = 57817
const CURRENT_ROLE = 57818
const SECOND_MICROSECOND = 57819
const MINUTE_MICROSECOND = 57820
const MINUTE_SECOND = 57821
const HOUR_MICROSECOND = 57822
const HOUR_SECOND = 57823
const HOUR_MINUTE = 57824
const DAY_MICROSECOND = 57825
const DAY_SECOND = 57826
const DAY_MINUTE = 57827
const DAY_HOUR = 57828
const YEAR_MONTH = 57829
const SQL_TSI_HOUR = 57830
const SQL_TSI_DAY = 57831
const SQL_TSI_WEEK = 57832
const SQL_TSI_MONTH = 57833
const SQL_TSI_QUARTER = 57834
const SQL_TSI_YEAR = 57835
const SQL_TSI_SECOND = 57836
const SQL_TSI_MINUTE = 57837
const RECURSIVE = 57838
const CONFIG = 57839
const DRAINER = 57840
const SOURCE = 57841
const STREAM = 57842
const HEADERS = 57843
const CONNECTOR = 57844
const MATCH = 57845
const AGAINST = 57846
const BOOLEAN = 57847
const LANGUAGE = 57848
const WITH = 57849
const QUERY = 57850
const EXPANSION = 57851
const WITHOUT = 57852
const VALIDATION = 57853
const ADDDATE = 57854
const BIT_AND = 57855
const BIT_OR = 57856
const BIT_XOR = 57857
const CAST = 57858
const COUNT = 57859
const APPROX_COUNT = 57860
const APPROX_COUNT_DISTINCT = 57861
const APPROX_PERCENTILE = 57862
const CURDATE = 57863
const CURTIME = 57864
const DATE_ADD = 57865
const DATE_SUB = 57866
const EXTRACT = 57867
const GROUP_CONCAT = 57868
const MAX = 57869
const MID = 57870
const MIN = 57871
const NOW = 57872
const POSITION = 57873
const SESSION_USER = 57874
const STD = 57875
const STDDEV = 57876
const MEDIAN = 57877
const STDDEV_POP = 57878
const STDDEV_SAMP = 57879
const SUBDATE = 57880
const SUBSTR = 57881
const SUBSTRING = 57882
const SUM = 57883
const SYSDATE = 57884
const SYSTEM_USER = 57885
const TRANSLATE = 57886
const TRIM = 57887
const VARIANCE = 57888
const VAR_POP = 57889
const VAR_SAMP = 57890
const AVG = 57891
const RANK = 57892
const ROW_NUMBER = 57893
const DENSE_RANK = 57894
const BIT_CAST = 57895
const NEXTVAL = 57896
const SETVAL = 57897
const CURRVAL = 57898
const LASTVAL = 57899
const ARROW = 57900
const ROW = 57901
const OUTFILE = 57902
const HEADER = 57903
const MAX_FILE_SIZE = 57904
const FORCE_QUOTE = 57905
const PARALLEL = 57906
const UNUSED = 57907
const BINDINGS = 57908
const DO = 57909
const DECLARE = 57910
const LOOP = 57911
const WHILE = 57912
const LEAVE = 57913
const ITERATE = 57914
const UNTIL = 57915
const CALL = 57916
const SPBEGIN = 57917
const BACKEND = 57918
const SERVERS = 57919
const HANDLER = 57920
const KILL = 57921
const BACKUP = 57922
const FILESYSTEM = 57923
const QUERY_RESULT = 57924

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"LOWER_THAN_ORDER",
	"ORDER",
	"SELECT",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"AFTER",
	"INSTANT",
	"INPLACE",
	"COPY",
	"DISABLE",
	"ENABLE",
	"UNDEFINED",
	"MERGE",
	"TEMPTABLE",
	"DEFINER",
	"INVOKER",
	"SQL",
	"SECURITY",
	"CASCADED",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"QUOTE_ID",
	"STAGE",
	"CREDENTIALS",
	"STAGES",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"ELSEIF",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"ILIKE",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"OUT",
	"INOUT",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"VECF32",
	"VECF64",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"S3OPTION",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"RETURNS",
	"SCHEMA",
	"TABLE",
	"SEQUENCE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"ENGINE_ATTRIBUTE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"INSERT_METHOD",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"CLUSTER",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"RESET",
	"EXTENSION",
	"INCREMENT",
	"CYCLE",
	"MINVALUE",
	"PUBLICATION",
	"SUBSCRIPTIONS",
	"PUBLICATIONS",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"ACCOUNTS",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"MYSQL_COMPATIBILITY_MODE",
	"MODIFY",
	"CHANGE",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"AUTOEXTEND_SIZE",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"RESTRICTED",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"SHARED",
	"EXCLUSIVE",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INLINE",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"DISCARD",
	"MODUMP",
	"OVER",
	"PRECEDING",
	"FOLLOWING",
	"GROUPS",
	"DATABASES",
	"TABLES",
	"SEQUENCES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NODE",
	"LOCKS",
	"ROLES",
	"TABLE_NUMBER",
	"COLUMN_NUMBER",
	"TABLE_VALUES",
	"TABLE_SIZE",
	"NAMES",
	"GLOBAL",
	"PERSIST",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"SOURCE",
	"STREAM",
	"HEADERS",
	"CONNECTOR",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"MEDIAN",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"RANK",
	"ROW_NUMBER",
	"DENSE_RANK",
	"BIT_CAST",
	"NEXTVAL",
	"SETVAL",
	"CURRVAL",
	"LASTVAL",
	"ARROW",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"PARALLEL",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"LOOP",
	"WHILE",
	"LEAVE",
	"ITERATE",
	"UNTIL",
	"CALL",
	"SPBEGIN",
	"BACKEND",
	"SERVERS",
	"HANDLER",
	"KILL",
	"BACKUP",
	"FILESYSTEM",
	"QUERY_RESULT",
	"';'",
	"'{'",
	"'}'",
	"':'",
	"'@'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:10432

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 115,
	21, 698,
	-2, 679,
	-1, 132,
	235, 1036,
	237, 958,
	-2, 999,
	-1, 155,
	42, 517,
	237, 517,
	264, 524,
	265, 524,
	454, 517,
	-2, 550,
	-1, 191,
	603, 1752,
	-2, 433,
	-1, 528,
	316, 133,
	427, 133,
	428, 133,
	-2, 1662,
	-1, 592,
	81, 1457,
	-2, 1806,
	-1, 593,
	81, 1475,
	-2, 1777,
	-1, 597,
	81, 1476,
	-2, 1805,
	-1, 623,
	81, 1387,
	-2, 1874,
	-1, 624,
	81, 1388,
	-2, 1873,
	-1, 625,
	81, 1389,
	-2, 1863,
	-1, 626,
	81, 1837,
	-2, 1858,
	-1, 627,
	81, 1838,
	-2, 1859,
	-1, 628,
	81, 1839,
	-2, 1865,
	-1, 629,
	81, 1840,
	-2, 1847,
	-1, 630,
	81, 1841,
	-2, 1856,
	-1, 631,
	81, 1842,
	-2, 1866,
	-1, 632,
	81, 1843,
	-2, 1867,
	-1, 633,
	81, 1844,
	-2, 1872,
	-1, 634,
	81, 1845,
	-2, 1877,
	-1, 635,
	81, 1846,
	-2, 1878,
	-1, 637,
	81, 1454,
	-2, 1650,
	-1, 641,
	81, 1459,
	-2, 1663,
	-1, 644,
	81, 1463,
	-2, 1681,
	-1, 648,
	81, 1467,
	-2, 1723,
	-1, 649,
	81, 1468,
	-2, 1801,
	-1, 657,
	81, 1478,
	-2, 1786,
	-1, 658,
	81, 1479,
	-2, 1830,
	-1, 659,
	81, 1480,
	-2, 1796,
	-1, 660,
	81, 1481,
	-2, 1820,
	-1, 671,
	81, 1365,
	-2, 1868,
	-1, 672,
	81, 1366,
	-2, 1869,
	-1, 673,
	81, 1367,
	-2, 1870,
	-1, 677,
	21, 699,
	-2, 662,
	-1, 758,
	449, 550,
	450, 550,
	-2, 518,
	-1, 802,
	122, 1650,
	133, 1650,
	153, 1650,
	-2, 1625,
	-1, 908,
	21, 699,
	-2, 662,
	-1, 1008,
	21, 698,
	-2, 1262,
	-1, 1127,
	516, 1000,
	517, 1000,
	-2, 876,
	-1, 1384,
	81, 1525,
	-2, 1803,
	-1, 1385,
	81, 1526,
	-2, 1804,
	-1, 1524,
	82, 845,
	-2, 851,
	-1, 1909,
	82, 1611,
	154, 1611,
	-2, 1788,
	-1, 1910,
	82, 1611,
	154, 1611,
	-2, 1787,
	-1, 1911,
	82, 1587,
	154, 1587,
	-2, 1774,
	-1, 1912,
	82, 1588,
	154, 1588,
	-2, 1779,
	-1, 1913,
	82, 1589,
	154, 1589,
	-2, 1711,
	-1, 1914,
	82, 1590,
	154, 1590,
	-2, 1705,
	-1, 1915,
	82, 1591,
	154, 1591,
	-2, 1641,
	-1, 1916,
	82, 1592,
	154, 1592,
	-2, 1776,
	-1, 1917,
	82, 1593,
	154, 1593,
	-2, 1709,
	-1, 1918,
	82, 1594,
	154, 1594,
	-2, 1704,
	-1, 1919,
	82, 1595,
	154, 1595,
	-2, 1695,
	-1, 1920,
	82, 1611,
	154, 1611,
	-2, 1696,
	-1, 1921,
	82, 1611,
	154, 1611,
	-2, 1697,
	-1, 1923,
	82, 1600,
	154, 1600,
	-2, 1820,
	-1, 1924,
	82, 1578,
	154, 1578,
	-2, 1806,
	-1, 1925,
	82, 1609,
	154, 1609,
	-2, 1777,
	-1, 1926,
	82, 1609,
	154, 1609,
	-2, 1805,
	-1, 1927,
	82, 1609,
	154, 1609,
	-2, 1664,
	-1, 1928,
	82, 1607,
	154, 1607,
	-2, 1796,
	-1, 1929,
	82, 1604,
	154, 1604,
	-2, 1686,
	-1, 1930,
	81, 1559,
	82, 1559,
	154, 1559,
	385, 1559,
	386, 1559,
	387, 1559,
	-2, 1640,
	-1, 1931,
	81, 1560,
	82, 1560,
	154, 1560,
	385, 1560,
	386, 1560,
	387, 1560,
	-2, 1642,
	-1, 1932,
	81, 1563,
	82, 1563,
	154, 1563,
	385, 1563,
	386, 1563,
	387, 1563,
	-2, 1778,
	-1, 1933,
	81, 1565,
	82, 1565,
	154, 1565,
	385, 1565,
	386, 1565,
	387, 1565,
	-2, 1761,
	-1, 1934,
	81, 1567,
	82, 1567,
	154, 1567,
	385, 1567,
	386, 1567,
	387, 1567,
	-2, 1710,
	-1, 1935,
	81, 1569,
	82, 1569,
	154, 1569,
	385, 1569,
	386, 1569,
	387, 1569,
	-2, 1691,
	-1, 1936,
	81, 1570,
	82, 1570,
	154, 1570,
	385, 1570,
	386, 1570,
	387, 1570,
	-2, 1692,
	-1, 1937,
	81, 1572,
	82, 1572,
	154, 1572,
	385, 1572,
	386, 1572,
	387, 1572,
	-2, 1639,
	-1, 1938,
	82, 1614,
	154, 1614,
	385, 1614,
	386, 1614,
	387, 1614,
	-2, 1669,
	-1, 1939,
	82, 1614,
	154, 1614,
	385, 1614,
	386, 1614,
	387, 1614,
	-2, 1682,
	-1, 1940,
	82, 1617,
	154, 1617,
	385, 1617,
	386, 1617,
	387, 1617,
	-2, 1665,
	-1, 1941,
	82, 1617,
	154, 1617,
	385, 1617,
	386, 1617,
	387, 1617,
	-2, 1726,
	-1, 1942,
	82, 1614,
	154, 1614,
	385, 1614,
	386, 1614,
	387, 1614,
	-2, 1746,
	-1, 1958,
	105, 993,
	149, 993,
	188, 993,
	191, 993,
	277, 993,
	-2, 986,
	-1, 2097,
	21, 698,
	-2, 792,
	-1, 2295,
	105, 993,
	149, 993,
	188, 993,
	191, 993,
	277, 993,
	-2, 987,
	-1, 2315,
	79, 608,
	154, 608,
	-2, 1149,
	-1, 2653,
	191, 993,
	301, 1230,
	-2, 1202,
	-1, 2795,
	105, 993,
	149, 993,
	188, 993,
	191, 993,
	-2, 1092,
	-1, 2797,
	105, 993,
	149, 993,
	188, 993,
	191, 993,
	-2, 1092,
	-1, 2807,
	79, 608,
	154, 608,
	-2, 1150,
	-1, 2815,
	191, 993,
	301, 1230,
	-2, 1203,
	-1, 2943,
	105, 993,
	149, 993,
	188, 993,
	191, 993,
	-2, 1093,
	-1, 3311,
	82, 1054,
	154, 1054,
	-2, 993,
	-1, 3315,
	82, 1054,
	154, 1054,
	-2, 993,
	-1, 3329,
	82, 1058,
	154, 1058,
	-2, 993,
	-1, 3334,
	82, 1059,
	154, 1059,
	-2, 993,
}

const yyPrivate = 57344

const yyLast = 38815

var yyAct = [...]int{
	559, 1605, 3315, 3314, 3323, 3294, 182, 1302, 1364, 3182,
	537, 539, 3265, 3246, 532, 561, 3208, 3190, 2671, 3191,
	3116, 3102, 2029, 547, 1884, 2983, 2829, 3093, 2890, 1360,
	2895, 1221, 1041, 2734, 2926, 3120, 2927, 2924, 3018, 589,
	444, 3054, 2735, 678, 2893, 2304, 1162, 2791, 1292, 3008,
	451, 3103, 456, 456, 1559, 801, 3105, 2775, 456, 472,
	481, 2816, 2931, 481, 541, 2318, 1367, 2761, 2942, 2885,
	2621, 1999, 2432, 167, 2431, 2764, 1694, 2945, 1691, 2414,
	2605, 2354, 2668, 2650, 2424, 1659, 2300, 2091, 2430, 2732,
	2657, 2720, 492, 2002, 1788, 2453, 1757, 2703, 2427, 1907,
	2286, 2586, 486, 2589, 2584, 2622, 2075, 1706, 2656, 2296,
	1905, 1897, 530, 1888, 2490, 2528, 536, 1214, 2334, 1970,
	531, 902, 1504, 2619, 1766, 2139, 1765, 1887, 1758, 1687,
	1731, 2473, 2092, 1662, 1783, 734, 807, 2275, 1288, 1135,
	2080, 1660, 2336, 2270, 1784, 1588, 2000, 1597, 178, 8,
	1969, 1111, 177, 7, 6, 1534, 1512, 538, 2156, 444,
	1170, 1296, 1293, 854, 1817, 2202, 1358, 1785, 795, 2119,
	450, 540, 1903, 1230, 2624, 1151, 1200, 2232, 55, 1255,
	2623, 1949, 182, 529, 182, 1571, 845, 846, 1995, 1570,
	1795, 548, 1414, 1667, 839, 840, 2233, 1398, 1764, 844,
	1349, 531, 1080, 1761, 26, 805, 1262, 15, 443, 114,
	919, 765, 1747, 13, 35, 1357, 1561, 1721, 1199, 794,
	2099, 675, 733, 465, 1533, 1363, 468, 1197, 1420, 1421,
	494, 168, 495, 1163, 161, 1254, 23, 731, 16, 10,
	164, 14, 480, 1106, 715, 455, 455, 1792, 711, 842,
	1802, 463, 677, 2778, 2727, 841, 2191, 843, 32, 1147,
	3044, 2145, 2143, 477, 2142, 753, 473, 2258, 2258, 2258,
	2140, 1517, 475, 1269, 838, 1265, 1042, 837, 838, 166,
	1281, 1097, 3219, 838, 452, 1171, 1183, 1267, 2883, 2486,
	461, 2484, 1736, 977, 978, 979, 976, 36, 3014, 3009,
	476, 977, 978, 979, 976, 484, 2886, 2733, 1508, 3107,
	1036, 1760, 676, 2037, 1137, 8, 3065, 474, 686, 7,
	165, 836, 165, 51, 157, 133, 165, 826, 2303, 165,
	1098, 2913, 2185, 165, 2305, 165, 51, 157, 133, 2762,
	1541, 811, 2819, 1301, 1316, 2908, 3138, 165, 51, 157,
	133, 1309, 165, 165, 940, 1543, 478, 2177, 165, 491,
	3066, 1789, 3173, 1122, 1121, 2552, 490, 1800, 2505, 1528,
	1127, 1953, 808, 2117, 1313, 2911, 955, 810, 783, 956,
	2831, 1306, 974, 1350, 1179, 1099, 1354, 1180, 1704, 162,
	2118, 162, 1201, 2822, 1203, 1315, 2459, 1334, 162, 1671,
	2498, 113, 1308, 2817, 162, 679, 113, 958, 2839, 2840,
	1353, 2157, 2105, 967, 2818, 2104, 162, 3229, 2106, 774,
	687, 162, 162, 2460, 2461, 1159, 666, 162, 665, 667,
	668, 2904, 669, 670, 1672, 1673, 1518, 1519, 3227, 2272,
	1168, 1169, 1584, 948, 3194, 3195, 950, 1366, 1166, 2273,
	972, 2823, 1165, 1168, 1169, 456, 804, 803, 3110, 3169,
	3109, 3168, 3108, 3167, 3110, 456, 912, 3109, 821, 817,
	812, 816, 819, 1182, 951, 3108, 1875, 3212, 3213, 3016,
	3095, 2736, 953, 481, 481, 3095, 456, 2491, 2492, 1355,
	2493, 3098, 1370, 3012, 1441, 2736, 824, 2271, 2172, 913,
	815, 3019, 3020, 3021, 3022, 907, 909, 1804, 2370, 3113,
	2745, 1678, 1352, 1345, 1268, 1266, 2765, 1688, 2772, 3172,
	779, 1796, 2600, 778, 960, 2069, 1744, 961, 2918, 1948,
	722, 2261, 922, 970, 971, 2182, 2841, 132, 2278, 163,
	1275, 1274, 848, 3112, 2838, 954, 2003, 2590, 980, 944,
	1010, 822, 1682, 2516, 969, 963, 3039, 1009, 825, 155,
	1455, 2035, 943, 2903, 2884, 1018, 2518, 806, 2485, 2418,
	2905, 2827, 922, 2072, 946, 813, 3042, 2071, 2076, 906,
	2594, 2598, 935, 2915, 911, 3222, 949, 952, 1025, 2853,
	2614, 912, 3193, 2824, 2828, 2826, 2825, 3062, 823, 908,
	3175, 3176, 2632, 1369, 1368, 525, 2669, 2670, 527, 784,
	3126, 2311, 945, 526, 1801, 1806, 1808, 1809, 965, 966,
	1157, 957, 2290, 2291, 2292, 2293, 780, 3324, 1351, 1181,
	959, 2833, 2834, 1702, 1703, 483, 2595, 2596, 814, 1191,
	2984, 2985, 2986, 2988, 2987, 482, 2423, 1955, 904, 3231,
	811, 1437, 2597, 2846, 3121, 1045, 3308, 1434, 910, 1096,
	3256, 1436, 1433, 1435, 1439, 1440, 3226, 3184, 964, 1438,
	3263, 1146, 2673, 2841, 477, 477, 2856, 473, 473, 931,
	3038, 808, 2974, 475, 475, 2820, 810, 3288, 947, 782,
	2046, 2832, 2592, 962, 2045, 2896, 915, 916, 1104, 451,
	1107, 1012, 1013, 1014, 1015, 2963, 926, 2969, 3043, 1046,
	456, 476, 476, 2284, 820, 2748, 2522, 2257, 1077, 1210,
	932, 811, 924, 923, 1790, 928, 929, 1790, 474, 474,
	724, 1790, 725, 734, 3331, 838, 1376, 1379, 1380, 1209,
	933, 1016, 838, 838, 3064, 917, 2005, 1377, 2121, 479,
	838, 818, 808, 3063, 2066, 2067, 838, 810, 838, 1161,
	1160, 479, 924, 923, 1803, 781, 1791, 478, 478, 2141,
	1144, 2305, 1143, 3180, 3181, 1142, 3184, 1270, 3268, 3325,
	456, 3319, 1193, 1110, 1167, 1168, 1169, 3295, 444, 444,
	3031, 3055, 2912, 3032, 903, 3174, 2569, 444, 444, 1164,
	2799, 1225, 1225, 1818, 456, 676, 1168, 1169, 3026, 1998,
	52, 2881, 1444, 1445, 1446, 1447, 1448, 1449, 1442, 1443,
	2837, 1112, 52, 481, 1107, 451, 490, 2601, 1258, 1258,
	1223, 1223, 134, 1227, 134, 2914, 2186, 1158, 134, 182,
	2277, 134, 1257, 1257, 1689, 134, 3034, 134, 444, 934,
	2591, 3092, 1232, 1807, 1113, 1114, 1115, 1116, 1117, 134,
	1119, 3040, 2672, 1198, 134, 134, 1126, 806, 2015, 1105,
	134, 2519, 2665, 940, 3232, 1054, 1055, 3033, 2669, 2670,
	2836, 2371, 2004, 2372, 2373, 2593, 2919, 2006, 1118, 2178,
	2470, 2471, 2521, 1679, 2109, 1346, 2281, 2282, 2018, 1300,
	775, 1303, 1276, 1120, 1998, 2020, 1311, 2033, 1793, 3318,
	3330, 2280, 1082, 1108, 3269, 1125, 1219, 1220, 2008, 1124,
	1084, 1123, 1153, 1154, 485, 2579, 1332, 2666, 728, 729,
	730, 1805, 3031, 2976, 1681, 3032, 2368, 2970, 2971, 1132,
	1225, 2007, 1225, 912, 2032, 1109, 677, 2260, 2455, 2457,
	1891, 2965, 2005, 2008, 1317, 2964, 1205, 1207, 939, 2530,
	2529, 1102, 2019, 1893, 1892, 1217, 1218, 1192, 1100, 1101,
	1134, 2398, 1521, 1189, 1378, 1522, 1890, 1520, 2389, 2390,
	723, 689, 2058, 777, 690, 2950, 776, 3337, 3034, 3271,
	1371, 1372, 1373, 1374, 1375, 1250, 726, 1231, 975, 2700,
	3292, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394,
	1395, 1396, 1397, 940, 1290, 1291, 1271, 1409, 1410, 3033,
	1562, 1172, 1208, 1419, 1175, 3336, 1951, 1184, 1185, 2159,
	1148, 1152, 1152, 1152, 1416, 1417, 1418, 1468, 3327, 1458,
	1459, 1460, 1452, 2696, 3266, 3267, 461, 1233, 2009, 2788,
	1462, 1140, 1474, 1148, 1148, 1475, 1145, 1295, 1298, 975,
	1299, 1365, 1477, 1155, 1259, 1248, 1243, 1249, 1484, 1485,
	1260, 1173, 1174, 2014, 1176, 1177, 1178, 2012, 1327, 1328,
	2747, 811, 1878, 2009, 1900, 811, 1362, 1562, 2004, 1998,
	2003, 3027, 2001, 2006, 1506, 3028, 3309, 975, 1510, 1381,
	2388, 1513, 1343, 829, 834, 835, 2316, 1901, 1902, 2177,
	3328, 1318, 456, 2456, 1532, 1225, 1536, 1537, 1850, 1539,
	1540, 1849, 477, 680, 1502, 473, 2667, 456, 2675, 3304,
	1225, 475, 1340, 2090, 734, 1337, 1279, 1560, 1282, 1283,
	1950, 1336, 1225, 1319, 1323, 677, 2089, 2007, 1193, 1284,
	1285, 3298, 693, 472, 785, 3297, 1505, 2090, 3275, 476,
	3248, 1467, 1407, 1408, 1339, 1359, 1338, 1335, 1798, 1356,
	1331, 2266, 1583, 1361, 2263, 1882, 474, 2164, 1330, 3202,
	1589, 1589, 2121, 1193, 3196, 1193, 1193, 3148, 1789, 456,
	1670, 1532, 1532, 975, 1400, 1225, 1656, 1657, 1669, 1724,
	1307, 3305, 1531, 692, 1314, 775, 1587, 695, 694, 1348,
	1538, 3086, 444, 1993, 1225, 478, 1883, 2399, 2401, 2402,
	2403, 2400, 1854, 1798, 2700, 1341, 2637, 1798, 1347, 1506,
	1798, 1780, 3249, 3027, 1506, 1506, 3085, 3104, 1700, 456,
	1532, 1225, 937, 1711, 2317, 456, 456, 1715, 1716, 2612,
	3081, 3203, 3080, 1719, 1720, 680, 3047, 1453, 1726, 3047,
	1527, 977, 978, 979, 976, 182, 975, 1607, 182, 182,
	2090, 182, 1133, 1542, 3079, 1544, 1545, 1546, 1734, 1651,
	1652, 1737, 3078, 3087, 1740, 1509, 1479, 1742, 777, 1149,
	1412, 776, 3046, 831, 832, 833, 1563, 1564, 1697, 1698,
	1503, 2317, 1211, 1683, 938, 1529, 2937, 1881, 1974, 1468,
	1468, 1768, 1572, 3250, 1574, 1575, 1468, 1468, 938, 2810,
	1547, 1775, 3047, 1675, 3047, 1677, 1590, 1580, 1708, 2860,
	2638, 1829, 2684, 1591, 1710, 1695, 1696, 1722, 1735, 2615,
	1535, 1738, 1739, 1581, 1741, 1560, 3047, 940, 2475, 1225,
	1787, 2319, 1713, 1714, 3047, 1552, 1557, 2180, 1690, 1556,
	977, 978, 979, 976, 3047, 2450, 2179, 1565, 1592, 2239,
	1450, 1451, 1576, 1454, 1593, 1594, 1573, 2613, 2938, 2231,
	2192, 1469, 1595, 977, 978, 979, 976, 1582, 2175, 2168,
	1585, 1586, 2166, 2161, 1476, 2154, 1478, 2152, 1078, 1781,
	2150, 2121, 1567, 2771, 2685, 1150, 1828, 2148, 1973, 1811,
	1769, 2616, 1879, 1860, 1859, 2171, 1815, 1816, 1658, 1655,
	1535, 1848, 1990, 1674, 1845, 1676, 905, 1821, 1148, 2550,
	1825, 1684, 1707, 1763, 1830, 1705, 1149, 2090, 1707, 1707,
	1763, 975, 1577, 1779, 1839, 1838, 1729, 1526, 1320, 1837,
	2642, 975, 975, 1152, 1022, 925, 1709, 905, 1568, 1569,
	1974, 2162, 1797, 1324, 2167, 2162, 1359, 2155, 1732, 2153,
	1836, 2997, 2149, 900, 898, 1578, 1579, 1730, 1843, 2149,
	1974, 2101, 2858, 1699, 1878, 975, 975, 811, 1855, 992,
	1857, 1457, 1456, 975, 811, 2633, 1856, 1864, 1457, 1456,
	1749, 1861, 1862, 1863, 1213, 3127, 1866, 1867, 1868, 1869,
	1870, 1871, 1872, 1873, 2951, 1772, 975, 975, 808, 1770,
	1773, 975, 1774, 810, 530, 808, 912, 1943, 456, 477,
	810, 2802, 473, 2513, 1798, 1325, 1778, 2800, 475, 1215,
	1138, 3284, 2140, 456, 1139, 456, 456, 456, 1782, 3128,
	1216, 1777, 1150, 905, 3272, 2030, 3045, 1971, 2952, 3023,
	2967, 1813, 1814, 2725, 2966, 2777, 476, 1978, 1193, 2701,
	2694, 2634, 2689, 1819, 1810, 2803, 2686, 1975, 1983, 1406,
	811, 2801, 2199, 474, 993, 994, 995, 996, 997, 998,
	999, 992, 1193, 2607, 1400, 1403, 1405, 1402, 2420, 1404,
	1812, 1490, 2288, 1212, 2259, 2025, 1823, 2190, 1483, 2165,
	2111, 808, 1129, 1128, 914, 2635, 810, 2134, 1480, 1481,
	1482, 691, 478, 1486, 1487, 1488, 1489, 1491, 1492, 1493,
	1494, 1495, 1496, 1497, 1498, 2036, 1733, 2038, 2039, 2040,
	2041, 2042, 2043, 2044, 1908, 1415, 2047, 2048, 2049, 2050,
	2051, 2052, 2053, 2054, 2055, 2056, 2057, 2477, 2059, 2060,
	2061, 2062, 2063, 2031, 2064, 2094, 2094, 1669, 2094, 1945,
	991, 990, 1000, 1001, 993, 994, 995, 996, 997, 998,
	999, 992, 977, 978, 979, 976, 444, 444, 1530, 1852,
	1506, 3166, 1506, 2728, 912, 1962, 1874, 1876, 1877, 976,
	1225, 456, 2958, 977, 978, 979, 976, 1894, 979, 976,
	1506, 1506, 3313, 456, 2144, 1415, 2979, 1824, 912, 451,
	1263, 1944, 1733, 1258, 2224, 1669, 1952, 2978, 2129, 2115,
	2131, 2494, 2360, 2359, 182, 1992, 1961, 1257, 1963, 1964,
	1965, 2342, 1987, 696, 2340, 1988, 995, 996, 997, 998,
	999, 992, 2098, 2096, 2107, 2100, 2108, 1979, 1045, 977,
	978, 979, 976, 1989, 977, 978, 979, 976, 2726, 2921,
	2922, 1982, 1263, 1997, 2112, 2113, 3301, 1991, 3257, 1996,
	2173, 3287, 2916, 1787, 1024, 1980, 1981, 2769, 2010, 2011,
	1225, 2016, 1225, 2287, 1225, 1984, 1985, 1023, 3252, 912,
	977, 978, 979, 976, 2410, 3186, 2408, 2135, 2406, 2201,
	2128, 3157, 1046, 562, 572, 3129, 977, 978, 979, 976,
	2123, 2183, 563, 2395, 571, 564, 568, 567, 565, 566,
	1225, 2218, 977, 978, 979, 976, 1908, 2073, 2917, 2200,
	1833, 2136, 3286, 2770, 1472, 811, 2225, 2102, 2219, 2220,
	3071, 1225, 3067, 3010, 1205, 1207, 2222, 2223, 1473, 1223,
	2409, 2217, 2407, 2227, 2405, 2954, 2953, 1885, 1886, 2228,
	2804, 2776, 2768, 1152, 2116, 2599, 808, 569, 2509, 2394,
	1223, 810, 2226, 977, 978, 979, 976, 2489, 2488, 2125,
	2124, 1827, 1264, 1506, 1231, 1986, 2252, 2253, 1513, 2229,
	912, 2393, 2127, 2392, 2391, 2383, 1707, 2377, 2376, 570,
	2375, 2374, 1752, 2543, 1751, 1750, 1746, 2187, 983, 984,
	985, 986, 987, 988, 989, 981, 2203, 2203, 2184, 1745,
	1321, 2189, 977, 978, 979, 976, 1841, 2197, 2126, 977,
	978, 979, 976, 2170, 1095, 525, 2425, 2133, 527, 2585,
	2176, 1225, 2174, 526, 2285, 2250, 2181, 3251, 3221, 2891,
	1532, 2301, 3214, 456, 3170, 977, 978, 979, 976, 2315,
	3115, 2274, 2542, 2925, 3101, 2321, 2196, 3135, 2193, 2194,
	990, 1000, 1001, 993, 994, 995, 996, 997, 998, 999,
	992, 2330, 2208, 2206, 3090, 3075, 912, 3070, 977, 978,
	979, 976, 1840, 3069, 2339, 3041, 3187, 3131, 2267, 3011,
	2960, 912, 912, 912, 1589, 1359, 2934, 912, 2264, 2350,
	2351, 2352, 912, 2920, 2356, 2357, 2889, 2358, 977, 978,
	979, 976, 977, 978, 979, 976, 2297, 2234, 2235, 2251,
	2254, 2887, 2867, 2240, 2864, 2862, 2415, 3119, 2298, 2767,
	2094, 2766, 3147, 2763, 2366, 2367, 2753, 2695, 2691, 2898,
	977, 978, 979, 976, 2411, 1290, 1291, 2312, 2381, 2382,
	2322, 1607, 444, 977, 978, 979, 976, 1532, 912, 1669,
	1669, 1669, 1669, 2682, 2268, 977, 978, 979, 976, 2681,
	912, 1669, 2417, 2608, 2094, 2337, 2576, 2575, 2574, 2337,
	1889, 2333, 1295, 1298, 2523, 1299, 2283, 2520, 2487, 2464,
	1225, 2404, 681, 682, 683, 684, 2344, 680, 2396, 2314,
	2386, 8, 456, 456, 2384, 7, 2380, 2320, 2379, 2378,
	2345, 2346, 622, 621, 3326, 2349, 1880, 182, 1754, 1748,
	2355, 2332, 182, 1516, 1515, 1322, 2335, 1053, 2341, 1049,
	2329, 1048, 901, 688, 2338, 2481, 2306, 2483, 2897, 2348,
	3024, 2941, 2313, 1468, 2446, 1468, 2797, 165, 2504, 157,
	133, 2796, 2508, 2795, 2787, 1506, 1535, 2752, 1225, 2740,
	1506, 2515, 2385, 2731, 977, 978, 979, 976, 1236, 2730,
	2719, 1283, 3302, 2718, 2643, 2548, 2433, 2541, 2533, 2324,
	2532, 1284, 1285, 2326, 2527, 2472, 2265, 2262, 2433, 2151,
	2478, 2421, 2416, 2147, 2146, 2482, 2526, 1865, 1858, 1853,
	2434, 2435, 2436, 2437, 2447, 1851, 2449, 1847, 1846, 2445,
	1844, 2448, 1835, 1832, 677, 1831, 162, 1505, 1753, 2547,
	2419, 2465, 2503, 1501, 2462, 991, 990, 1000, 1001, 993,
	994, 995, 996, 997, 998, 999, 992, 1500, 1499, 1471,
	2501, 2536, 1470, 2538, 2480, 2476, 2507, 912, 2479, 2325,
	2850, 2512, 1461, 1237, 1826, 2588, 165, 1235, 3283, 2517,
	3277, 3264, 3261, 2497, 3259, 2603, 3156, 2500, 2495, 1043,
	456, 2502, 3088, 3077, 2323, 3072, 977, 978, 979, 976,
	3145, 2750, 2327, 2328, 912, 1278, 3143, 2546, 912, 912,
	912, 2992, 2525, 2977, 2973, 2467, 2468, 1669, 1971, 2524,
	2641, 2531, 2511, 2875, 2617, 2618, 2645, 977, 978, 979,
	976, 2539, 2540, 977, 978, 979, 976, 2655, 2873, 2658,
	811, 2658, 2658, 2848, 2847, 162, 912, 811, 977, 978,
	979, 976, 2537, 2611, 2710, 2545, 2844, 2843, 2662, 2779,
	2677, 2544, 2627, 2626, 2578, 1289, 2570, 1225, 1225, 1280,
	1136, 2674, 2573, 2297, 2412, 2577, 2343, 2580, 2309, 2308,
	2676, 977, 978, 979, 976, 1908, 2307, 977, 978, 979,
	976, 1294, 2604, 1297, 1286, 2249, 1223, 1223, 2678, 2679,
	2160, 2110, 2639, 2065, 1972, 2610, 1960, 1401, 2553, 2554,
	162, 1717, 1525, 456, 2555, 2556, 2557, 2558, 2588, 2559,
	2560, 2561, 2562, 2563, 2564, 2565, 2566, 2654, 2663, 1532,
	1532, 2628, 2629, 2630, 2653, 2636, 2248, 2640, 1524, 1344,
	1310, 574, 115, 2247, 1287, 2458, 1079, 115, 811, 2659,
	2660, 2664, 2246, 1076, 1075, 1074, 1073, 1072, 1071, 2499,
	1070, 1069, 977, 978, 979, 976, 2506, 1068, 1067, 977,
	978, 979, 976, 1066, 3141, 2245, 2218, 1065, 977, 978,
	979, 976, 1064, 2609, 1063, 2729, 2244, 1062, 489, 1061,
	2534, 2535, 1060, 1059, 2661, 1058, 1057, 462, 1056, 1052,
	115, 977, 978, 979, 976, 1051, 1050, 1047, 1040, 1039,
	811, 1037, 977, 978, 979, 976, 1036, 1035, 1034, 2688,
	2683, 2687, 456, 2693, 1033, 2692, 2243, 2697, 2698, 3281,
	1032, 1031, 2845, 2242, 2708, 1030, 1029, 2690, 1028, 1027,
	2644, 2209, 1026, 1021, 2646, 2647, 1020, 1019, 2712, 2715,
	2716, 2717, 977, 978, 979, 976, 942, 899, 2749, 977,
	978, 979, 976, 2704, 2705, 2751, 1977, 2583, 2724, 897,
	893, 894, 895, 896, 1957, 2214, 930, 2213, 2212, 2210,
	3237, 3235, 991, 990, 1000, 1001, 993, 994, 995, 996,
	997, 998, 999, 992, 3192, 2741, 2707, 2289, 2122, 1756,
	941, 2709, 2742, 2743, 809, 2442, 1707, 2744, 115, 2440,
	2443, 2754, 2439, 2438, 2441, 2783, 2444, 2301, 2086, 2087,
	3312, 2169, 2163, 115, 2877, 115, 1130, 2792, 912, 2649,
	2241, 2878, 1554, 1555, 2780, 2781, 2782, 2094, 1669, 2807,
	100, 2238, 54, 2211, 2648, 2237, 2759, 453, 2699, 1549,
	1550, 1551, 53, 912, 2606, 2256, 977, 978, 979, 976,
	2756, 2034, 2655, 2711, 2236, 2855, 912, 977, 978, 979,
	976, 977, 978, 979, 976, 1643, 912, 2362, 2581, 2758,
	2876, 1225, 2785, 2786, 2363, 2364, 2365, 2571, 2572, 2774,
	977, 978, 979, 976, 1272, 2158, 458, 1532, 459, 2188,
	457, 912, 2651, 2784, 2652, 1506, 2230, 2809, 460, 1081,
	1223, 1304, 2859, 1885, 1886, 2746, 1506, 1946, 2221, 2872,
	1718, 936, 2874, 2806, 2805, 2842, 3111, 182, 2625, 2582,
	2880, 2835, 977, 978, 979, 976, 2879, 2331, 2269, 1967,
	912, 1558, 1523, 2869, 977, 978, 979, 976, 2851, 2854,
	3205, 2794, 2849, 1457, 1456, 1093, 1094, 2857, 1083, 1091,
	1092, 811, 3074, 2906, 2863, 2861, 1089, 1090, 2680, 2865,
	2074, 2813, 2070, 2870, 2866, 1654, 2215, 2216, 2871, 2198,
	912, 1225, 1225, 1187, 2852, 2868, 1087, 1088, 1186, 912,
	968, 2714, 2120, 1776, 2355, 1141, 3278, 2944, 3178, 2944,
	2882, 3163, 3161, 3122, 811, 977, 978, 979, 976, 1411,
	1223, 2932, 2930, 3100, 2892, 2939, 2940, 3099, 3097, 2433,
	3089, 3005, 3004, 2888, 1225, 2755, 2907, 2738, 2909, 2737,
	2959, 2722, 2021, 2935, 1086, 977, 978, 979, 976, 2721,
	2474, 1562, 456, 2510, 912, 912, 3239, 3238, 912, 912,
	1959, 2077, 1834, 2932, 927, 3238, 2808, 3239, 2433, 2936,
	2975, 2739, 2811, 2947, 2995, 2812, 2948, 2466, 680, 2994,
	169, 3, 2989, 2809, 1560, 1156, 3002, 2957, 2981, 2982,
	2760, 2996, 2990, 2991, 3006, 3007, 2961, 2842, 2082, 2085,
	2086, 2087, 2083, 2835, 2084, 2088, 62, 2, 2928, 1000,
	1001, 993, 994, 995, 996, 997, 998, 999, 992, 3037,
	3217, 115, 115, 809, 3218, 1202, 2999, 681, 682, 683,
	684, 2103, 680, 2789, 2998, 1701, 3030, 1229, 3000, 1,
	2899, 2082, 2085, 2086, 2087, 2083, 1514, 2084, 2088, 2792,
	685, 2451, 2452, 2713, 3049, 3057, 2454, 1794, 2422, 2068,
	1947, 2602, 1131, 727, 3025, 1463, 1329, 3035, 828, 3029,
	921, 1326, 2928, 2928, 920, 918, 2928, 2928, 1413, 576,
	1759, 2413, 2387, 3001, 3204, 3245, 3155, 3048, 3207, 1342,
	560, 3091, 3015, 3159, 1008, 3017, 3050, 3053, 2894, 1799,
	3060, 973, 3059, 912, 2496, 749, 613, 1225, 587, 3068,
	1038, 3058, 1312, 1305, 3051, 3052, 2551, 3279, 830, 586,
	2773, 2279, 2469, 3061, 827, 3073, 750, 1743, 3013, 1273,
	3084, 1277, 2955, 2956, 2949, 2798, 1223, 3082, 3083, 2631,
	2310, 3322, 3311, 3293, 3276, 2980, 3183, 3307, 737, 3225,
	3262, 2902, 2900, 2901, 3255, 3179, 496, 1680, 912, 1025,
	3106, 442, 792, 2993, 1755, 497, 3096, 1976, 3123, 3094,
	991, 990, 1000, 1001, 993, 994, 995, 996, 997, 998,
	999, 992, 3171, 3118, 3076, 707, 1956, 708, 912, 710,
	2295, 3124, 3114, 2294, 3117, 1225, 1382, 3132, 3150, 3153,
	982, 1399, 2567, 2568, 1017, 535, 3125, 3134, 1822, 3140,
	3142, 3144, 3146, 2276, 2830, 2463, 3133, 736, 61, 60,
	59, 2928, 3139, 58, 1223, 3130, 3149, 775, 3154, 1725,
	190, 1085, 3160, 578, 189, 1225, 3162, 3158, 3164, 3165,
	2923, 3152, 3209, 558, 557, 3188, 556, 555, 554, 2081,
	2079, 2078, 1664, 1663, 3177, 1723, 2353, 2347, 2017, 2022,
	1596, 3189, 3136, 3137, 1223, 2972, 3185, 3211, 2397, 1548,
	2013, 1613, 2369, 1610, 1609, 2361, 2928, 3197, 2968, 3198,
	2962, 3199, 3210, 3200, 1640, 3201, 2299, 2790, 2943, 912,
	2814, 2815, 2821, 1966, 853, 849, 851, 852, 3216, 850,
	3106, 2207, 3215, 1994, 2620, 3220, 2928, 1899, 1898, 1896,
	777, 1895, 1103, 776, 3244, 3036, 3233, 2757, 1906, 3236,
	3234, 3228, 3230, 1904, 2706, 2702, 1767, 3247, 3240, 3241,
	3242, 3243, 1511, 3253, 2255, 912, 1665, 1661, 1958, 2910,
	1553, 700, 1954, 3254, 98, 147, 48, 89, 3258, 762,
	3260, 88, 97, 145, 47, 174, 173, 738, 1234, 176,
	3211, 3274, 3270, 462, 175, 172, 2137, 2138, 171, 1261,
	912, 170, 912, 2946, 674, 3210, 3273, 1188, 3280, 1190,
	3282, 1194, 1195, 1196, 740, 3285, 38, 37, 33, 12,
	115, 11, 34, 3247, 912, 3289, 21, 3291, 3296, 22,
	20, 1333, 3300, 3303, 19, 25, 3306, 3223, 31, 30,
	108, 1238, 1239, 1240, 1241, 1242, 107, 1244, 1245, 1246,
	1247, 3310, 29, 3317, 1252, 1253, 106, 3321, 105, 3320,
	104, 103, 102, 28, 18, 3329, 42, 41, 40, 9,
	96, 3317, 3334, 3333, 3332, 94, 3321, 761, 760, 3335,
	27, 95, 92, 1365, 115, 93, 90, 1641, 115, 73,
	72, 71, 1603, 86, 759, 85, 84, 83, 82, 115,
	81, 79, 80, 871, 748, 735, 70, 69, 68, 115,
	67, 66, 91, 77, 87, 78, 739, 770, 1365, 76,
	1365, 1643, 1612, 75, 74, 2549, 65, 64, 63, 131,
	130, 1644, 1645, 128, 129, 127, 1003, 126, 1007, 125,
	766, 124, 1365, 123, 122, 43, 44, 45, 46, 141,
	140, 142, 144, 146, 1004, 1006, 1002, 1611, 1005, 991,
	990, 1000, 1001, 993, 994, 995, 996, 997, 998, 999,
	992, 143, 1618, 138, 136, 139, 767, 771, 991, 990,
	1000, 1001, 993, 994, 995, 996, 997, 998, 999, 992,
	137, 135, 56, 17, 24, 756, 4, 754, 758, 774,
	0, 0, 0, 755, 752, 751, 0, 757, 742, 743,
	741, 744, 745, 746, 747, 0, 772, 0, 773, 0,
	0, 0, 0, 857, 0, 0, 0, 0, 0, 768,
	769, 0, 0, 0, 0, 0, 0, 0, 0, 1634,
	0, 0, 0, 879, 883, 885, 887, 889, 890, 892,
	0, 897, 893, 894, 895, 896, 0, 874, 875, 876,
	877, 855, 856, 880, 0, 858, 764, 859, 860, 861,
	862, 863, 864, 865, 866, 867, 870, 872, 868, 869,
	878, 0, 0, 0, 0, 0, 0, 0, 882, 884,
	886, 888, 891, 991, 990, 1000, 1001, 993, 994, 995,
	996, 997, 998, 999, 992, 0, 2195, 0, 0, 1602,
	1604, 1601, 0, 1598, 0, 0, 0, 0, 1622, 0,
	0, 0, 0, 0, 0, 873, 0, 0, 0, 1628,
	991, 990, 1000, 1001, 993, 994, 995, 996, 997, 998,
	999, 992, 0, 0, 0, 763, 0, 0, 0, 1616,
	1650, 0, 0, 1617, 1619, 1621, 0, 1623, 1624, 1625,
	1629, 1630, 1631, 1633, 1636, 1637, 1638, 1820, 0, 0,
	0, 0, 0, 0, 1626, 1635, 1627, 0, 0, 1668,
	0, 0, 0, 0, 0, 0, 1606, 0, 0, 0,
	0, 991, 990, 1000, 1001, 993, 994, 995, 996, 997,
	998, 999, 992, 0, 0, 0, 0, 0, 1642, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1599,
	1600, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 115, 1639, 0, 115,
	115, 0, 115, 0, 0, 0, 0, 0, 2204, 2205,
	0, 0, 0, 0, 1615, 0, 0, 0, 0, 0,
	0, 1614, 1712, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 594, 0, 0, 0, 0,
	809, 0, 0, 0, 336, 1632, 0, 809, 0, 0,
	0, 0, 0, 0, 1620, 0, 115, 549, 0, 0,
	0, 279, 0, 0, 306, 0, 0, 1647, 1646, 0,
	0, 0, 0, 0, 0, 0, 0, 437, 0, 438,
	0, 0, 585, 0, 0, 365, 320, 0, 0, 0,
	0, 645, 653, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 542, 0, 0, 575, 622, 621, 562,
	572, 0, 0, 256, 188, 439, 0, 440, 563, 1608,
	571, 564, 568, 567, 565, 566, 0, 637, 0, 0,
	0, 0, 0, 1008, 533, 546, 0, 550, 0, 0,
	0, 0, 0, 0, 0, 881, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1649, 0, 0, 1648, 0,
	0, 543, 544, 0, 0, 0, 0, 595, 0, 545,
	0, 0, 590, 569, 573, 0, 0, 0, 0, 247,
	370, 386, 257, 361, 399, 262, 368, 252, 335, 358,
	0, 0, 249, 384, 367, 317, 298, 299, 248, 0,
	353, 277, 290, 274, 333, 570, 593, 597, 273, 659,
	591, 394, 251, 0, 393, 332, 380, 385, 318, 312,
	250, 382, 316, 311, 302, 281, 660, 303, 304, 294,
	344, 310, 345, 295, 322, 321, 323, 0, 0, 0,
	0, 0, 422, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 588, 0, 0, 0,
	396, 0, 0, 643, 0, 0, 0, 369, 0, 0,
	305, 0, 0, 0, 592, 0, 356, 338, 656, 534,
	0, 354, 308, 381, 346, 387, 371, 395, 350, 347,
	242, 372, 276, 319, 253, 255, 271, 278, 280, 282,
	283, 328, 329, 341, 360, 373, 374, 375, 275, 263,
	355, 264, 292, 265, 243, 268, 267, 269, 362, 270,
	245, 342, 379, 0, 288, 351, 315, 246, 314, 343,
	378, 377, 254, 403, 409, 410, 0, 0, 415, 0,
	0, 0, 423, 428, 429, 430, 432, 433, 434, 435,
	0, 0, 0, 0, 417, 0, 0, 0, 1465, 1464,
	1466, 408, 286, 239, 240, 448, 641, 334, 0, 0,
	0, 0, 655, 636, 638, 639, 642, 646, 647, 648,
	649, 650, 652, 654, 658, 447, 0, 0, 0, 0,
	0, 446, 340, 0, 359, 0, 0, 0, 2097, 0,
	0, 0, 0, 0, 0, 0, 0, 366, 389, 401,
	418, 421, 0, 0, 0, 0, 244, 420, 0, 0,
	0, 0, 0, 0, 0, 0, 657, 0, 0, 0,
	400, 0, 0, 0, 0, 0, 596, 0, 0, 324,
	325, 326, 327, 644, 0, 261, 419, 349, 0, 0,
	0, 0, 0, 0, 0, 0, 1668, 0, 0, 0,
	0, 0, 0, 0, 0, 115, 413, 414, 285, 291,
	431, 293, 260, 339, 287, 398, 300, 0, 424, 0,
	425, 0, 0, 0, 0, 331, 296, 297, 363, 301,
	309, 352, 397, 337, 357, 258, 388, 364, 313, 0,
	0, 666, 640, 665, 667, 668, 664, 669, 670, 651,
	553, 871, 600, 662, 661, 663, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 376, 0,
	237, 266, 0, 241, 0, 307, 0, 348, 284, 0,
	0, 629, 606, 607, 608, 551, 609, 603, 604, 605,
	630, 598, 626, 627, 577, 601, 610, 625, 611, 628,
	631, 632, 671, 672, 617, 673, 614, 633, 624, 623,
	612, 599, 634, 635, 584, 579, 615, 616, 602, 618,
	619, 620, 552, 580, 581, 582, 583, 0, 0, 0,
	404, 405, 406, 427, 390, 0, 445, 871, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 449,
	441, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 857, 0, 0, 0, 847, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 879, 883, 885, 887, 889, 890, 892, 0, 897,
	893, 894, 895, 896, 0, 874, 875, 876, 877, 855,
	856, 880, 0, 858, 0, 859, 860, 861, 862, 863,
	864, 865, 866, 867, 870, 872, 868, 869, 878, 0,
	0, 0, 0, 0, 0, 0, 882, 884, 886, 888,
	891, 0, 0, 0, 115, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 857, 0, 0,
	0, 0, 0, 873, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 879, 883, 885,
	887, 889, 890, 892, 0, 897, 893, 894, 895, 896,
	0, 874, 875, 876, 877, 855, 856, 880, 0, 858,
	0, 859, 860, 861, 862, 863, 864, 865, 866, 867,
	870, 872, 868, 869, 878, 0, 0, 0, 0, 0,
	0, 0, 882, 884, 886, 888, 891, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1668, 1668, 1668, 1668, 0, 0, 0, 0, 0, 0,
	0, 0, 1668, 0, 0, 0, 0, 0, 0, 873,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 115, 0,
	0, 0, 0, 115, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 115, 0, 0, 0, 0, 0, 0,
	115, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 594, 0, 0, 0, 0, 0, 0,
	0, 0, 336, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 549, 0, 0, 0, 279,
	1507, 0, 306, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 437, 0, 438, 0, 0,
	585, 0, 0, 365, 320, 0, 0, 0, 0, 645,
	653, 115, 0, 881, 0, 0, 0, 0, 1692, 0,
	0, 542, 0, 0, 575, 622, 621, 562, 572, 0,
	0, 256, 188, 439, 0, 440, 563, 0, 571, 564,
	568, 567, 565, 566, 0, 637, 0, 0, 0, 0,
	0, 0, 533, 546, 0, 550, 0, 0, 1668, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 115, 0, 0, 0, 0, 0, 543,
	544, 0, 0, 0, 0, 595, 0, 545, 0, 0,
	1693, 569, 573, 0, 0, 0, 0, 247, 370, 386,
	257, 361, 399, 262, 368, 252, 335, 358, 0, 881,
	249, 384, 367, 317, 298, 299, 248, 0, 353, 277,
	290, 274, 333, 570, 593, 597, 273, 659, 591, 394,
	251, 0, 393, 332, 380, 385, 318, 312, 250, 382,
	316, 311, 302, 281, 660, 303, 304, 294, 344, 310,
	345, 295, 322, 321, 323, 0, 0, 0, 0, 0,
	422, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 588, 0, 0, 0, 396, 0,
	0, 643, 0, 0, 0, 369, 0, 0, 305, 0,
	0, 0, 592, 0, 356, 338, 656, 534, 0, 354,
	308, 381, 346, 387, 371, 395, 350, 347, 242, 372,
	276, 319, 253, 255, 271, 278, 280, 282, 283, 328,
	329, 341, 360, 373, 374, 375, 275, 263, 355, 264,
	292, 265, 243, 268, 267, 269, 362, 270, 245, 342,
	379, 0, 288, 351, 315, 246, 314, 343, 378, 377,
	254, 403, 409, 410, 0, 0, 415, 0, 0, 0,
	423, 428, 429, 430, 432, 433, 434, 435, 0, 0,
	0, 0, 417, 0, 0, 0, 0, 0, 0, 408,
	286, 239, 240, 448, 641, 334, 0, 0, 0, 0,
	655, 636, 638, 639, 642, 646, 647, 648, 649, 650,
	652, 654, 658, 447, 0, 0, 0, 0, 0, 446,
	340, 0, 359, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 115, 366, 389, 401, 418, 421,
	0, 0, 0, 0, 244, 420, 0, 0, 0, 0,
	0, 0, 0, 0, 657, 0, 0, 0, 400, 0,
	0, 0, 0, 0, 596, 0, 0, 324, 325, 326,
	327, 644, 0, 261, 419, 349, 0, 115, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1668,
	0, 0, 0, 0, 413, 414, 285, 291, 431, 293,
	260, 339, 287, 398, 300, 0, 424, 0, 425, 0,
	0, 0, 0, 331, 296, 297, 363, 301, 309, 352,
	397, 337, 357, 258, 388, 364, 313, 0, 0, 666,
	640, 665, 667, 668, 664, 669, 670, 651, 553, 0,
	600, 662, 661, 663, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 376, 0, 237, 266,
	0, 241, 0, 307, 0, 348, 284, 0, 115, 629,
	606, 607, 608, 551, 609, 603, 604, 605, 630, 598,
	626, 627, 577, 601, 610, 625, 611, 628, 631, 632,
	671, 672, 617, 673, 614, 633, 624, 623, 612, 599,
	634, 635, 584, 579, 615, 616, 602, 618, 619, 620,
	552, 580, 581, 582, 583, 0, 165, 594, 404, 405,
	406, 427, 390, 0, 445, 0, 336, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 449, 441, 549,
	0, 0, 0, 279, 0, 0, 306, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 437,
	0, 438, 0, 0, 1011, 0, 0, 365, 320, 0,
	0, 0, 0, 645, 653, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 542, 0, 0, 575, 622,
	621, 562, 572, 0, 0, 256, 188, 439, 0, 440,
	563, 0, 571, 564, 568, 567, 565, 566, 0, 637,
	0, 0, 0, 0, 0, 0, 533, 546, 0, 550,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 543, 544, 0, 0, 0, 0, 595,
	0, 545, 0, 0, 590, 569, 573, 0, 0, 0,
	0, 247, 370, 386, 257, 361, 399, 262, 368, 252,
	335, 358, 0, 0, 249, 384, 367, 317, 298, 299,
	248, 0, 353, 277, 290, 274, 333, 570, 593, 597,
	273, 659, 591, 394, 251, 0, 393, 332, 380, 385,
	318, 312, 250, 382, 316, 311, 302, 281, 660, 303,
	304, 294, 344, 310, 345, 295, 322, 321, 323, 0,
	0, 0, 0, 0, 422, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 588, 0,
	0, 0, 396, 0, 0, 643, 0, 0, 0, 369,
	0, 0, 305, 0, 0, 0, 592, 0, 356, 338,
	656, 534, 0, 354, 308, 381, 346, 387, 371, 395,
	350, 347, 242, 372, 276, 319, 253, 255, 271, 278,
	280, 282, 283, 328, 329, 341, 360, 373, 374, 375,
	275, 263, 355, 264, 292, 265, 243, 268, 267, 269,
	362, 270, 245, 342, 379, 0, 288, 351, 315, 246,
	314, 343, 378, 377, 254, 403, 409, 410, 0, 0,
	415, 0, 0, 0, 423, 428, 429, 430, 432, 433,
	434, 435, 0, 0, 0, 0, 417, 0, 0, 0,
	0, 0, 0, 408, 286, 239, 240, 448, 641, 334,
	0, 0, 0, 0, 655, 636, 638, 639, 642, 646,
	647, 648, 649, 650, 652, 654, 658, 447, 0, 0,
	0, 0, 0, 446, 340, 0, 359, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 366,
	389, 401, 418, 421, 0, 0, 0, 0, 244, 420,
	0, 0, 0, 0, 0, 0, 0, 0, 657, 0,
	0, 0, 400, 0, 0, 0, 0, 0, 596, 0,
	0, 324, 325, 326, 327, 644, 0, 261, 419, 349,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 413, 414,
	285, 291, 431, 293, 260, 339, 287, 398, 300, 0,
	424, 0, 425, 0, 0, 0, 0, 331, 296, 297,
	363, 301, 309, 352, 397, 337, 357, 258, 388, 364,
	313, 0, 0, 666, 640, 665, 667, 668, 664, 669,
	670, 651, 553, 0, 600, 662, 661, 663, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	376, 0, 237, 266, 0, 241, 0, 307, 134, 348,
	284, 0, 0, 629, 606, 607, 608, 551, 609, 603,
	604, 605, 630, 598, 626, 627, 577, 601, 610, 625,
	611, 628, 631, 632, 671, 672, 617, 673, 614, 633,
	624, 623, 612, 599, 634, 635, 584, 579, 615, 616,
	602, 618, 619, 620, 552, 580, 581, 582, 583, 0,
	0, 594, 404, 405, 406, 427, 390, 0, 445, 0,
	336, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 449, 441, 549, 0, 0, 0, 279, 3290, 0,
	306, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 437, 0, 438, 0, 0, 585, 0,
	0, 365, 320, 0, 0, 0, 0, 645, 653, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 542,
	0, 0, 575, 622, 621, 562, 572, 0, 0, 256,
	188, 439, 0, 440, 563, 0, 571, 564, 568, 567,
	565, 566, 0, 637, 0, 0, 0, 0, 0, 0,
	533, 546, 0, 550, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 543, 544, 0,
	0, 0, 0, 595, 0, 545, 0, 0, 590, 569,
	573, 0, 0, 0, 0, 247, 370, 386, 257, 361,
	399, 262, 368, 252, 335, 358, 0, 0, 249, 384,
	367, 317, 298, 299, 248, 0, 353, 277, 290, 274,
	333, 570, 593, 597, 273, 659, 591, 394, 251, 0,
	393, 332, 380, 385, 318, 312, 250, 382, 316, 311,
	302, 281, 660, 303, 304, 294, 344, 310, 345, 295,
	322, 321, 323, 0, 0, 0, 0, 0, 422, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 588, 0, 0, 0, 396, 0, 0, 643,
	0, 0, 0, 369, 0, 0, 305, 0, 0, 0,
	592, 0, 356, 338, 656, 534, 0, 354, 308, 381,
	346, 387, 371, 395, 350, 347, 242, 372, 276, 319,
	253, 255, 271, 278, 280, 282, 283, 328, 329, 341,
	360, 373, 374, 375, 275, 263, 355, 264, 292, 265,
	243, 268, 267, 269, 362, 270, 245, 342, 379, 0,
	288, 351, 315, 246, 314, 343, 378, 377, 254, 403,
	409, 410, 0, 0, 415, 0, 0, 0, 423, 428,
	429, 430, 432, 433, 434, 435, 0, 0, 0, 0,
	417, 0, 0, 0, 0, 0, 0, 408, 286, 239,
	240, 448, 641, 334, 0, 0, 0, 0, 655, 636,
	638, 639, 642, 646, 647, 648, 649, 650, 652, 654,
	658, 447, 0, 0, 0, 0, 0, 446, 340, 0,
	359, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 366, 389, 401, 418, 421, 0, 0,
	0, 0, 244, 420, 0, 0, 0, 0, 0, 0,
	0, 0, 657, 0, 0, 0, 400, 0, 0, 0,
	0, 0, 596, 0, 0, 324, 325, 326, 327, 644,
	0, 261, 419, 349, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 413, 414, 285, 291, 431, 293, 260, 339,
	287, 398, 300, 0, 424, 0, 425, 0, 0, 0,
	0, 331, 296, 297, 363, 301, 309, 352, 397, 337,
	357, 258, 388, 364, 313, 0, 0, 666, 640, 665,
	667, 668, 664, 669, 670, 651, 553, 0, 600, 662,
	661, 663, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 376, 0, 237, 266, 0, 241,
	0, 307, 0, 348, 284, 0, 0, 629, 606, 607,
	608, 551, 609, 603, 604, 605, 630, 598, 626, 627,
	577, 601, 610, 625, 611, 628, 631, 632, 671, 672,
	617, 673, 614, 633, 624, 623, 612, 599, 634, 635,
	584, 579, 615, 616, 602, 618, 619, 620, 552, 580,
	581, 582, 583, 0, 0, 594, 404, 405, 406, 427,
	390, 0, 445, 0, 336, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 449, 441, 549, 0, 0,
	0, 279, 1507, 0, 306, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 437, 0, 438,
	0, 0, 585, 0, 0, 365, 320, 0, 0, 0,
	0, 645, 653, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 542, 0, 0, 575, 622, 621, 562,
	572, 0, 0, 256, 188, 439, 0, 440, 563, 0,
	571, 564, 568, 567, 565, 566, 0, 637, 0, 0,
	0, 0, 0, 0, 533, 546, 0, 550, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 543, 544, 0, 0, 0, 0, 595, 0, 545,
	0, 0, 590, 569, 573, 0, 0, 0, 0, 247,
	370, 386, 257, 361, 399, 262, 368, 252, 335, 358,
	0, 0, 249, 384, 367, 317, 298, 299, 248, 0,
	353, 277, 290, 274, 333, 570, 593, 597, 273, 659,
	591, 394, 251, 0, 393, 332, 380, 385, 318, 312,
	250, 382, 316, 311, 302, 281, 660, 303, 304, 294,
	344, 310, 345, 295, 322, 321, 323, 0, 0, 0,
	0, 0, 422, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 588, 0, 0, 0,
	396, 0, 0, 643, 0, 0, 0, 369, 0, 0,
	305, 0, 0, 0, 592, 0, 356, 338, 656, 534,
	0, 354, 308, 381, 346, 387, 371, 395, 350, 347,
	242, 372, 276, 319, 253, 255, 271, 278, 280, 282,
	283, 328, 329, 341, 360, 373, 374, 375, 275, 263,
	355, 264, 292, 265, 243, 268, 267, 269, 362, 270,
	245, 342, 379, 0, 288, 351, 315, 246, 314, 343,
	378, 377, 254, 403, 409, 410, 0, 0, 415, 0,
	0, 0, 423, 428, 429, 430, 432, 433, 434, 435,
	0, 0, 0, 0, 417, 0, 0, 0, 0, 0,
	0, 408, 286, 239, 240, 448, 641, 334, 0, 0,
	0, 0, 655, 636, 638, 639, 642, 646, 647, 648,
	649, 650, 652, 654, 658, 447, 0, 0, 0, 0,
	0, 446, 340, 0, 359, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 366, 389, 401,
	418, 421, 0, 0, 0, 0, 244, 420, 0, 0,
	0, 0, 0, 0, 0, 0, 657, 0, 0, 0,
	400, 0, 0, 0, 0, 0, 596, 0, 0, 324,
	325, 326, 327, 644, 0, 261, 419, 349, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 413, 414, 285, 291,
	431, 293, 260, 339, 287, 398, 300, 0, 424, 0,
	425, 0, 0, 0, 0, 331, 296, 297, 363, 301,
	309, 352, 397, 337, 357, 258, 388, 364, 313, 0,
	0, 666, 640, 665, 667, 668, 664, 669, 670, 651,
	553, 0, 600, 662, 661, 663, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 376, 0,
	237, 266, 0, 241, 0, 307, 0, 348, 284, 0,
	0, 629, 606, 607, 608, 551, 609, 603, 604, 605,
	630, 598, 626, 627, 577, 601, 610, 625, 611, 628,
	631, 632, 671, 672, 617, 673, 614, 633, 624, 623,
	612, 599, 634, 635, 584, 579, 615, 616, 602, 618,
	619, 620, 552, 580, 581, 582, 583, 0, 0, 594,
	404, 405, 406, 427, 390, 0, 445, 0, 336, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 449,
	441, 549, 0, 0, 0, 279, 0, 0, 306, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 437, 0, 438, 0, 0, 585, 0, 0, 365,
	320, 0, 0, 0, 0, 645, 653, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 542, 0, 0,
	575, 622, 621, 562, 572, 0, 0, 256, 188, 439,
	0, 440, 563, 0, 571, 564, 568, 567, 565, 566,
	0, 637, 0, 0, 0, 0, 0, 0, 533, 546,
	0, 550, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 543, 544, 1256, 0, 0,
	0, 595, 0, 545, 0, 0, 590, 569, 573, 0,
	0, 0, 0, 247, 370, 386, 257, 361, 399, 262,
	368, 252, 335, 358, 0, 0, 249, 384, 367, 317,
	298, 299, 248, 0, 353, 277, 290, 274, 333, 570,
	593, 597, 273, 659, 591, 394, 251, 0, 393, 332,
	380, 385, 318, 312, 250, 382, 316, 311, 302, 281,
	660, 303, 304, 294, 344, 310, 345, 295, 322, 321,
	323, 0, 0, 0, 0, 0, 422, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	588, 0, 0, 0, 396, 0, 0, 643, 0, 0,
	0, 369, 0, 0, 305, 0, 0, 0, 592, 0,
	356, 338, 656, 534, 0, 354, 308, 381, 346, 387,
	371, 395, 350, 347, 242, 372, 276, 319, 253, 255,
	271, 278, 280, 282, 283, 328, 329, 341, 360, 373,
	374, 375, 275, 263, 355, 264, 292, 265, 243, 268,
	267, 269, 362, 270, 245, 342, 379, 0, 288, 351,
	315, 246, 314, 343, 378, 377, 254, 403, 409, 410,
	0, 0, 415, 0, 0, 0, 423, 428, 429, 430,
	432, 433, 434, 435, 0, 0, 0, 0, 417, 0,
	0, 0, 0, 0, 0, 408, 286, 239, 240, 448,
	641, 334, 0, 0, 0, 0, 655, 636, 638, 639,
	642, 646, 647, 648, 649, 650, 652, 654, 658, 447,
	0, 0, 0, 0, 0, 446, 340, 0, 359, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 366, 389, 401, 418, 421, 0, 0, 0, 0,
	244, 420, 0, 0, 0, 0, 0, 0, 0, 0,
	657, 0, 0, 0, 400, 0, 0, 0, 0, 0,
	596, 0, 0, 324, 325, 326, 327, 644, 0, 261,
	419, 349, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	413, 414, 285, 291, 431, 293, 260, 339, 287, 398,
	300, 0, 424, 0, 425, 0, 0, 0, 0, 331,
	296, 297, 363, 301, 309, 352, 397, 337, 357, 258,
	388, 364, 313, 0, 0, 666, 640, 665, 667, 668,
	664, 669, 670, 651, 553, 0, 600, 662, 661, 663,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 376, 0, 237, 266, 0, 241, 0, 307,
	0, 348, 284, 0, 0, 629, 606, 607, 608, 551,
	609, 603, 604, 605, 630, 598, 626, 627, 577, 601,
	610, 625, 611, 628, 631, 632, 671, 672, 617, 673,
	614, 633, 624, 623, 612, 599, 634, 635, 584, 579,
	615, 616, 602, 618, 619, 620, 552, 580, 581, 582,
	583, 0, 0, 0, 404, 405, 406, 427, 390, 594,
	445, 0, 1842, 0, 0, 0, 0, 0, 336, 0,
	0, 0, 0, 449, 441, 0, 0, 0, 0, 0,
	0, 549, 0, 0, 0, 279, 0, 0, 306, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 437, 0, 438, 0, 0, 585, 0, 0, 365,
	320, 0, 0, 0, 0, 645, 653, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 542, 0, 0,
	575, 622, 621, 562, 572, 0, 0, 256, 188, 439,
	0, 440, 563, 0, 571, 564, 568, 567, 565, 566,
	0, 637, 0, 0, 0, 0, 0, 0, 533, 546,
	0, 550, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 543, 544, 0, 0, 0,
	0, 595, 0, 545, 0, 0, 590, 569, 573, 0,
	0, 0, 0, 247, 370, 386, 257, 361, 399, 262,
	368, 252, 335, 358, 0, 0, 249, 384, 367, 317,
	298, 299, 248, 0, 353, 277, 290, 274, 333, 570,
	593, 597, 273, 659, 591, 394, 251, 0, 393, 332,
	380, 385, 318, 312, 250, 382, 316, 311, 302, 281,
	660, 303, 304, 294, 344, 310, 345, 295, 322, 321,
	323, 0, 0, 0, 0, 0, 422, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	588, 0, 0, 0, 396, 0, 0, 643, 0, 0,
	0, 369, 0, 0, 305, 0, 0, 0, 592, 0,
	356, 338, 656, 534, 0, 354, 308, 381, 346, 387,
	371, 395, 350, 347, 242, 372, 276, 319, 253, 255,
	271, 278, 280, 282, 283, 328, 329, 341, 360, 373,
	374, 375, 275, 263, 355, 264, 292, 265, 243, 268,
	267, 269, 362, 270, 245, 342, 379, 0, 288, 351,
	315, 246, 314, 343, 378, 377, 254, 403, 409, 410,
	0, 0, 415, 0, 0, 0, 423, 428, 429, 430,
	432, 433, 434, 435, 0, 0, 0, 0, 417, 0,
	0, 0, 0, 0, 0, 408, 286, 239, 240, 448,
	641, 334, 0, 0, 0, 0, 655, 636, 638, 639,
	642, 646, 647, 648, 649, 650, 652, 654, 658, 447,
	0, 0, 0, 0, 0, 446, 340, 0, 359, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 366, 389, 401, 418, 421, 0, 0, 0, 0,
	244, 420, 0, 0, 0, 0, 0, 0, 0, 0,
	657, 0, 0, 0, 400, 0, 0, 0, 0, 0,
	596, 0, 0, 324, 325, 326, 327, 644, 0, 261,
	419, 349, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	413, 414, 285, 291, 431, 293, 260, 339, 287, 398,
	300, 0, 424, 0, 425, 0, 0, 0, 0, 331,
	296, 297, 363, 301, 309, 352, 397, 337, 357, 258,
	388, 364, 313, 0, 0, 666, 640, 665, 667, 668,
	664, 669, 670, 651, 553, 0, 600, 662, 661, 663,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 376, 0, 237, 266, 0, 241, 0, 307,
	0, 348, 284, 0, 0, 629, 606, 607, 608, 551,
	609, 603, 604, 605, 630, 598, 626, 627, 577, 601,
	610, 625, 611, 628, 631, 632, 671, 672, 617, 673,
	614, 633, 624, 623, 612, 599, 634, 635, 584, 579,
	615, 616, 602, 618, 619, 620, 552, 580, 581, 582,
	583, 0, 0, 594, 404, 405, 406, 427, 390, 0,
	445, 0, 336, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 449, 441, 549, 0, 0, 0, 279,
	0, 0, 306, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 437, 0, 438, 0, 0,
	585, 0, 0, 365, 320, 0, 0, 0, 0, 645,
	653, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 542, 0, 0, 575, 622, 621, 562, 572, 0,
	0, 256, 188, 439, 0, 440, 563, 0, 571, 564,
	568, 567, 565, 566, 0, 637, 0, 0, 0, 0,
	0, 0, 533, 546, 0, 550, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 543,
	544, 0, 0, 0, 0, 595, 0, 545, 0, 0,
	590, 569, 573, 0, 0, 0, 0, 247, 370, 386,
	257, 361, 399, 262, 368, 252, 335, 358, 0, 0,
	249, 384, 367, 317, 298, 299, 248, 0, 353, 277,
	290, 274, 333, 570, 593, 597, 273, 659, 591, 394,
	251, 0, 393, 332, 380, 385, 318, 312, 250, 382,
	316, 311, 302, 281, 660, 303, 304, 294, 344, 310,
	345, 295, 322, 321, 323, 0, 0, 0, 0, 0,
	422, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 588, 0, 0, 0, 396, 0,
	0, 643, 0, 0, 0, 369, 0, 0, 305, 0,
	0, 0, 592, 0, 356, 338, 656, 534, 0, 354,
	308, 381, 346, 387, 371, 395, 350, 347, 242, 372,
	276, 319, 253, 255, 271, 278, 280, 282, 283, 328,
	329, 341, 360, 373, 374, 375, 275, 263, 355, 264,
	292, 265, 243, 268, 267, 269, 362, 270, 245, 342,
	379, 0, 288, 351, 315, 246, 314, 343, 378, 377,
	254, 403, 409, 410, 0, 0, 415, 0, 0, 0,
	423, 428, 429, 430, 432, 433, 434, 435, 0, 0,
	0, 0, 417, 0, 0, 0, 0, 0, 0, 408,
	286, 239, 240, 448, 641, 334, 0, 0, 0, 0,
	655, 636, 638, 639, 642, 646, 647, 648, 649, 650,
	652, 654, 658, 447, 0, 0, 0, 0, 0, 446,
	340, 0, 359, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 366, 389, 401, 418, 421,
	0, 0, 0, 0, 244, 420, 0, 0, 0, 0,
	0, 0, 0, 0, 657, 0, 0, 0, 400, 0,
	0, 0, 0, 0, 596, 0, 0, 324, 325, 326,
	327, 644, 0, 261, 419, 349, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 413, 414, 285, 291, 431, 293,
	260, 339, 287, 398, 300, 0, 424, 0, 425, 0,
	0, 0, 0, 331, 296, 297, 363, 301, 309, 352,
	397, 337, 357, 258, 388, 364, 313, 0, 0, 666,
	640, 665, 667, 668, 664, 669, 670, 651, 553, 0,
	600, 662, 661, 663, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 376, 0, 237, 266,
	0, 241, 0, 307, 0, 348, 284, 0, 0, 629,
	606, 607, 608, 551, 609, 603, 604, 605, 630, 598,
	626, 627, 577, 601, 610, 625, 611, 628, 631, 632,
	671, 672, 617, 673, 614, 633, 624, 623, 612, 599,
	634, 635, 584, 579, 615, 616, 602, 618, 619, 620,
	552, 580, 581, 582, 583, 0, 0, 594, 404, 405,
	406, 427, 390, 0, 445, 0, 336, 0, 0, 0,
	0, 0, 0, 0, 0, 1383, 0, 449, 441, 549,
	0, 0, 0, 279, 0, 0, 306, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 437,
	0, 438, 0, 0, 585, 0, 0, 365, 320, 0,
	0, 0, 0, 645, 653, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 542, 0, 0, 575, 622,
	621, 562, 572, 0, 0, 256, 188, 439, 0, 440,
	563, 0, 571, 564, 568, 567, 565, 566, 0, 637,
	0, 0, 0, 0, 0, 0, 0, 546, 0, 550,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 543, 544, 0, 0, 0, 0, 595,
	0, 545, 0, 0, 590, 569, 573, 0, 0, 0,
	0, 247, 370, 386, 257, 361, 399, 262, 368, 252,
	335, 358, 0, 0, 249, 384, 367, 317, 298, 299,
	248, 0, 353, 277, 290, 274, 333, 570, 593, 597,
	273, 659, 591, 394, 251, 0, 393, 332, 380, 385,
	318, 312, 250, 382, 316, 311, 302, 281, 660, 303,
	304, 294, 344, 310, 345, 295, 322, 321, 323, 0,
	0, 0, 0, 0, 422, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 588, 0,
	0, 0, 396, 0, 0, 643, 0, 0, 0, 369,
	0, 0, 305, 0, 0, 0, 592, 0, 356, 338,
	656, 0, 0, 354, 308, 381, 346, 387, 371, 395,
	350, 347, 242, 372, 276, 319, 253, 255, 271, 278,
	280, 282, 283, 328, 329, 341, 360, 373, 374, 375,
	275, 263, 355, 264, 292, 265, 243, 268, 267, 269,
	362, 270, 245, 342, 379, 0, 288, 351, 315, 246,
	314, 343, 378, 377, 254, 403, 1384, 1385, 0, 0,
	415, 0, 0, 0, 423, 428, 429, 430, 432, 433,
	434, 435, 0, 0, 0, 0, 417, 0, 0, 0,
	0, 0, 0, 408, 286, 239, 240, 448, 641, 334,
	0, 0, 0, 0, 655, 636, 638, 639, 642, 646,
	647, 648, 649, 650, 652, 654, 658, 447, 0, 0,
	0, 0, 0, 446, 340, 0, 359, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 366,
	389, 401, 418, 421, 0, 0, 0, 0, 244, 420,
	0, 0, 0, 0, 0, 0, 0, 0, 657, 0,
	0, 0, 400, 0, 0, 0, 0, 0, 596, 0,
	0, 324, 325, 326, 327, 644, 0, 261, 419, 349,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 413, 414,
	285, 291, 431, 293, 260, 339, 287, 398, 300, 0,
	424, 0, 425, 0, 0, 0, 0, 331, 296, 297,
	363, 301, 309, 352, 397, 337, 357, 258, 388, 364,
	313, 0, 0, 666, 640, 665, 667, 668, 664, 669,
	670, 651, 553, 0, 600, 662, 661, 663, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	376, 0, 237, 266, 0, 241, 0, 307, 0, 348,
	284, 0, 0, 629, 606, 607, 608, 551, 609, 603,
	604, 605, 630, 598, 626, 627, 577, 601, 610, 625,
	611, 628, 631, 632, 671, 672, 617, 673, 614, 633,
	624, 623, 612, 599, 634, 635, 584, 579, 615, 616,
	602, 618, 619, 620, 552, 580, 581, 582, 583, 0,
	0, 594, 404, 405, 406, 427, 390, 0, 445, 0,
	336, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 449, 441, 549, 0, 0, 0, 279, 0, 0,
	306, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 437, 0, 438, 0, 0, 585, 0,
	0, 365, 320, 0, 0, 0, 0, 645, 653, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 575, 622, 621, 562, 572, 0, 0, 256,
	188, 439, 0, 440, 563, 0, 571, 564, 568, 567,
	565, 566, 0, 637, 0, 0, 0, 0, 0, 0,
	533, 546, 0, 550, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 543, 544, 0,
	0, 0, 0, 595, 0, 545, 0, 0, 590, 569,
	573, 0, 0, 0, 0, 247, 370, 386, 257, 361,
	399, 262, 368, 252, 335, 358, 0, 0, 249, 384,
	367, 317, 298, 299, 248, 0, 353, 277, 290, 274,
	333, 570, 593, 597, 273, 659, 591, 394, 251, 0,
	393, 332, 380, 385, 318, 312, 250, 382, 316, 311,
	302, 281, 660, 303, 304, 294, 344, 310, 345, 295,
	322, 321, 323, 0, 0, 0, 0, 0, 422, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 588, 0, 0, 0, 396, 0, 0, 643,
	0, 0, 0, 369, 0, 0, 305, 0, 0, 0,
	592, 0, 356, 338, 656, 534, 0, 354, 308, 381,
	346, 387, 371, 395, 350, 347, 242, 372, 276, 319,
	253, 255, 271, 278, 280, 282, 283, 328, 329, 341,
	360, 373, 374, 375, 275, 263, 355, 264, 292, 265,
	243, 268, 267, 269, 362, 270, 245, 342, 379, 0,
	288, 351, 315, 246, 314, 343, 378, 377, 254, 403,
	409, 410, 0, 0, 415, 0, 0, 0, 423, 428,
	429, 430, 432, 433, 434, 435, 0, 0, 0, 0,
	417, 0, 0, 0, 0, 0, 0, 408, 286, 239,
	240, 448, 641, 334, 0, 0, 0, 0, 655, 636,
	638, 639, 642, 646, 647, 648, 649, 650, 652, 654,
	658, 447, 0, 0, 0, 0, 0, 446, 340, 0,
	359, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 366, 389, 401, 418, 421, 0, 0,
	0, 0, 244, 420, 0, 0, 0, 0, 0, 0,
	0, 0, 657, 0, 0, 0, 400, 0, 0, 0,
	0, 0, 596, 0, 0, 324, 325, 326, 327, 644,
	0, 261, 419, 349, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 413, 414, 285, 291, 431, 293, 260, 339,
	287, 398, 300, 0, 424, 0, 425, 0, 0, 0,
	0, 331, 296, 297, 363, 301, 309, 352, 397, 337,
	357, 258, 388, 364, 313, 0, 0, 666, 640, 665,
	667, 668, 664, 669, 670, 651, 553, 0, 600, 662,
	661, 663, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 376, 0, 237, 266, 0, 241,
	0, 307, 0, 348, 284, 0, 0, 629, 606, 607,
	608, 551, 609, 603, 604, 605, 630, 598, 626, 627,
	577, 601, 610, 625, 611, 628, 631, 632, 671, 672,
	617, 673, 614, 633, 624, 623, 612, 599, 634, 635,
	584, 579, 615, 616, 602, 618, 619, 620, 552, 580,
	581, 582, 583, 0, 0, 594, 404, 405, 406, 427,
	390, 0, 445, 0, 336, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 449, 441, 549, 0, 0,
	0, 279, 0, 0, 306, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 437, 0, 438,
	0, 0, 585, 0, 0, 365, 320, 0, 0, 0,
	0, 645, 653, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 542, 0, 0, 575, 622, 621, 562,
	572, 0, 0, 256, 188, 439, 0, 440, 563, 0,
	571, 564, 568, 567, 565, 566, 0, 637, 0, 0,
	0, 0, 0, 0, 0, 546, 0, 550, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 543, 544, 0, 0, 0, 0, 595, 0, 545,
	0, 0, 590, 569, 573, 0, 0, 0, 0, 247,
	370, 386, 257, 361, 399, 262, 368, 252, 335, 358,
	0, 0, 249, 384, 367, 317, 298, 299, 248, 0,
	353, 277, 290, 274, 333, 570, 593, 597, 273, 659,
	591, 394, 251, 0, 393, 332, 380, 385, 318, 312,
	250, 382, 316, 311, 302, 281, 660, 303, 304, 294,
	344, 310, 345, 295, 322, 321, 323, 0, 0, 0,
	0, 0, 422, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 588, 0, 0, 0,
	396, 0, 0, 643, 0, 0, 0, 369, 0, 0,
	305, 0, 0, 0, 592, 0, 356, 338, 656, 0,
	0, 354, 308, 381, 346, 387, 371, 395, 350, 347,
	242, 372, 276, 319, 253, 255, 271, 278, 280, 282,
	283, 328, 329, 341, 360, 373, 374, 375, 275, 263,
	355, 264, 292, 265, 243, 268, 267, 269, 362, 270,
	245, 342, 379, 0, 288, 351, 315, 246, 314, 343,
	378, 377, 254, 403, 409, 410, 0, 0, 415, 0,
	0, 0, 423, 428, 429, 430, 432, 433, 434, 435,
	0, 0, 0, 0, 417, 0, 0, 0, 0, 0,
	0, 408, 286, 239, 240, 448, 641, 334, 0, 0,
	0, 0, 655, 636, 638, 639, 642, 646, 647, 648,
	649, 650, 652, 654, 658, 447, 0, 0, 0, 0,
	0, 446, 340, 0, 359, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 366, 389, 401,
	418, 421, 0, 0, 0, 0, 244, 420, 0, 0,
	0, 0, 0, 0, 0, 0, 657, 0, 0, 0,
	400, 0, 0, 0, 0, 0, 596, 0, 0, 324,
	325, 326, 327, 644, 0, 261, 419, 349, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 413, 414, 285, 291,
	431, 293, 260, 339, 287, 398, 300, 0, 424, 0,
	425, 0, 0, 0, 0, 331, 296, 297, 363, 301,
	309, 352, 397, 337, 357, 258, 388, 364, 313, 0,
	0, 666, 640, 665, 667, 668, 664, 669, 670, 651,
	553, 0, 600, 662, 661, 663, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 376, 0,
	237, 266, 0, 241, 0, 307, 0, 348, 284, 0,
	0, 629, 606, 607, 608, 551, 609, 603, 604, 605,
	630, 598, 626, 627, 577, 601, 610, 625, 611, 628,
	631, 632, 671, 672, 617, 673, 614, 633, 624, 623,
	612, 599, 634, 635, 584, 579, 615, 616, 602, 618,
	619, 620, 552, 580, 581, 582, 583, 0, 0, 0,
	404, 405, 406, 427, 390, 0, 445, 165, 51, 157,
	133, 0, 0, 0, 0, 0, 0, 336, 0, 449,
	441, 0, 0, 0, 0, 158, 0, 0, 0, 0,
	0, 0, 150, 0, 279, 0, 159, 306, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	437, 0, 438, 0, 0, 113, 0, 0, 365, 320,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	101, 0, 0, 0, 0, 0, 162, 0, 0, 187,
	0, 0, 0, 0, 0, 0, 256, 188, 439, 0,
	440, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	179, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 370, 386, 257, 361, 399, 262, 368,
	252, 335, 358, 0, 0, 249, 384, 367, 317, 298,
	299, 248, 0, 353, 277, 290, 274, 333, 0, 383,
	411, 273, 402, 0, 394, 251, 0, 393, 332, 380,
	385, 318, 312, 250, 382, 316, 311, 302, 281, 426,
	303, 304, 294, 344, 310, 345, 295, 322, 321, 323,
	0, 0, 0, 0, 0, 422, 0, 0, 0, 0,
	0, 0, 132, 156, 163, 0, 99, 0, 0, 0,
	0, 0, 0, 396, 0, 0, 180, 0, 0, 0,
	369, 0, 0, 305, 155, 149, 148, 412, 0, 356,
	338, 57, 0, 0, 354, 308, 381, 346, 387, 371,
	395, 350, 347, 242, 372, 276, 319, 253, 255, 271,
	278, 280, 282, 283, 328, 329, 341, 360, 373, 374,
	375, 275, 263, 355, 264, 292, 265, 243, 268, 267,
	269, 362, 270, 245, 342, 379, 0, 288, 351, 315,
	246, 314, 343, 378, 377, 254, 403, 409, 410, 0,
	0, 415, 151, 152, 153, 423, 428, 429, 430, 432,
	433, 434, 435, 0, 0, 0, 0, 417, 0, 0,
	0, 0, 0, 0, 408, 286, 239, 240, 391, 272,
	334, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 330, 407, 183, 0, 0, 436, 191, 0,
	0, 0, 154, 0, 192, 340, 0, 359, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	366, 389, 401, 418, 421, 0, 0, 0, 0, 244,
	420, 0, 0, 0, 0, 0, 0, 0, 0, 392,
	0, 0, 0, 400, 0, 0, 0, 0, 0, 416,
	0, 0, 324, 325, 326, 327, 289, 0, 261, 419,
	349, 111, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 50, 0, 0, 0, 0, 0, 413,
	414, 285, 291, 431, 293, 260, 339, 287, 398, 300,
	0, 424, 0, 425, 0, 0, 0, 0, 331, 296,
	297, 363, 301, 309, 352, 397, 337, 357, 258, 388,
	364, 313, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 52, 0, 0, 232, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 376, 0, 237, 266, 0, 241, 0, 307, 134,
	348, 284, 0, 0, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 0, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 0, 0, 0, 238, 233, 234, 235, 236,
	0, 0, 0, 404, 405, 406, 427, 390, 336, 193,
	39, 181, 184, 186, 185, 0, 49, 5, 0, 0,
	0, 116, 194, 441, 0, 279, 0, 0, 306, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 437, 0, 438, 0, 0, 0, 0, 0, 365,
	320, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1044, 0, 0,
	187, 0, 0, 562, 572, 0, 0, 256, 188, 439,
	0, 440, 563, 0, 571, 564, 568, 567, 565, 566,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 569, 0, 0,
	0, 0, 0, 247, 370, 386, 257, 361, 399, 262,
	368, 252, 335, 358, 0, 0, 249, 384, 367, 317,
	298, 299, 248, 0, 353, 277, 290, 274, 333, 570,
	383, 411, 273, 402, 0, 394, 251, 0, 393, 332,
	380, 385, 318, 312, 250, 382, 316, 311, 302, 281,
	426, 303, 304, 294, 344, 310, 345, 295, 322, 321,
	323, 0, 0, 0, 0, 0, 422, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 396, 0, 0, 0, 0, 0,
	0, 369, 0, 0, 305, 0, 0, 0, 412, 0,
	356, 338, 0, 0, 0, 354, 308, 381, 346, 387,
	371, 395, 350, 347, 242, 372, 276, 319, 253, 255,
	271, 278, 280, 282, 283, 328, 329, 341, 360, 373,
	374, 375, 275, 263, 355, 264, 292, 265, 243, 268,
	267, 269, 362, 270, 245, 342, 379, 0, 288, 351,
	315, 246, 314, 343, 378, 377, 254, 403, 409, 410,
	0, 0, 415, 0, 0, 0, 423, 428, 429, 430,
	432, 433, 434, 435, 0, 0, 0, 0, 417, 0,
	0, 0, 0, 0, 0, 408, 286, 239, 240, 448,
	272, 334, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 330, 407, 0, 0, 0, 436, 447,
	0, 0, 0, 0, 0, 446, 340, 0, 359, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 366, 389, 401, 418, 421, 0, 0, 0, 0,
	244, 420, 0, 0, 0, 0, 0, 0, 0, 0,
	392, 0, 0, 0, 400, 0, 0, 0, 0, 0,
	416, 0, 0, 324, 325, 326, 327, 289, 0, 261,
	419, 349, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	413, 414, 285, 291, 431, 293, 260, 339, 287, 398,
	300, 0, 424, 0, 425, 0, 0, 0, 0, 331,
	296, 297, 363, 301, 309, 352, 397, 337, 357, 258,
	388, 364, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 376, 0, 237, 266, 0, 241, 0, 307,
	0, 348, 284, 0, 0, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 0, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 0, 0, 0, 238, 233, 234, 235,
	236, 0, 0, 0, 404, 405, 406, 427, 390, 0,
	445, 165, 51, 157, 133, 0, 0, 0, 0, 0,
	0, 336, 466, 449, 441, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 0,
	0, 306, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 437, 0, 438, 0, 0, 0,
	0, 0, 365, 320, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	471, 0, 0, 187, 0, 0, 0, 0, 0, 0,
	256, 188, 439, 0, 440, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 370, 386, 257,
	361, 399, 262, 368, 252, 335, 358, 0, 0, 249,
	384, 367, 317, 298, 299, 248, 0, 353, 277, 290,
	274, 333, 0, 383, 411, 273, 402, 0, 394, 251,
	0, 393, 332, 380, 385, 318, 312, 250, 382, 316,
	311, 302, 281, 426, 303, 304, 294, 344, 310, 345,
	295, 322, 321, 323, 0, 0, 0, 0, 0, 422,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	470, 0, 0, 0, 0, 0, 0, 396, 0, 0,
	0, 0, 0, 0, 369, 0, 0, 305, 0, 0,
	0, 412, 0, 356, 338, 0, 0, 0, 354, 308,
	381, 346, 387, 371, 395, 350, 347, 242, 372, 276,
	319, 253, 255, 271, 278, 280, 282, 283, 328, 329,
	341, 360, 373, 374, 375, 275, 263, 355, 264, 292,
	265, 243, 268, 267, 269, 362, 270, 245, 342, 379,
	0, 288, 351, 315, 246, 314, 343, 378, 377, 254,
	403, 409, 410, 0, 0, 415, 0, 0, 0, 423,
	428, 429, 430, 432, 433, 434, 435, 0, 0, 0,
	0, 417, 0, 0, 0, 0, 0, 0, 408, 286,
	239, 240, 448, 272, 334, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 330, 407, 0, 0,
	0, 436, 447, 0, 0, 0, 0, 0, 446, 340,
	0, 359, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 366, 389, 401, 418, 421, 0,
	0, 0, 0, 244, 420, 0, 0, 0, 0, 0,
	0, 0, 0, 392, 0, 0, 0, 400, 0, 0,
	0, 0, 0, 416, 0, 0, 324, 325, 326, 327,
	467, 469, 261, 419, 349, 479, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 414, 285, 291, 431, 293, 260,
	339, 287, 398, 300, 0, 424, 0, 425, 0, 0,
	0, 0, 331, 296, 297, 363, 301, 309, 352, 397,
	337, 357, 258, 388, 364, 313, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 52, 0, 0, 232,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 376, 0, 237, 266, 0,
	241, 0, 307, 134, 348, 284, 0, 0, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 0, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 228, 229, 230, 231, 0, 336, 0, 238,
	233, 234, 235, 236, 0, 871, 0, 404, 405, 406,
	427, 390, 0, 445, 279, 0, 0, 306, 0, 0,
	0, 0, 0, 0, 0, 0, 449, 441, 0, 0,
	437, 0, 438, 0, 0, 0, 0, 0, 365, 320,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	0, 0, 0, 0, 0, 0, 256, 188, 439, 0,
	440, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 857, 0, 0, 0, 0,
	0, 0, 247, 370, 386, 257, 361, 399, 262, 368,
	252, 335, 358, 0, 0, 1930, 1932, 1933, 1934, 1935,
	1936, 1937, 0, 1942, 1938, 1939, 1940, 1941, 0, 1925,
	1926, 1927, 1928, 855, 1909, 1931, 0, 1910, 332, 1911,
	1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1922, 1923,
	1920, 1921, 1929, 344, 310, 345, 295, 322, 321, 323,
	882, 884, 886, 888, 891, 422, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 396, 0, 0, 0, 0, 0, 0,
	369, 0, 0, 305, 0, 0, 0, 1924, 0, 356,
	338, 0, 0, 0, 354, 308, 381, 346, 387, 371,
	395, 350, 347, 242, 372, 276, 319, 253, 255, 271,
	278, 280, 282, 283, 328, 329, 341, 360, 373, 374,
	375, 275, 263, 355, 264, 292, 265, 243, 268, 267,
	269, 362, 270, 245, 342, 379, 0, 288, 351, 315,
	246, 314, 343, 378, 377, 254, 403, 409, 410, 0,
	0, 415, 0, 0, 0, 423, 428, 429, 430, 432,
	433, 434, 435, 0, 0, 0, 0, 417, 0, 0,
	0, 0, 0, 0, 408, 286, 239, 240, 448, 272,
	334, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 330, 407, 0, 0, 0, 436, 447, 0,
	0, 0, 0, 0, 446, 340, 0, 359, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	366, 389, 401, 418, 421, 0, 0, 0, 0, 244,
	420, 0, 0, 0, 0, 0, 0, 0, 0, 392,
	0, 0, 0, 400, 0, 0, 0, 0, 0, 416,
	0, 0, 324, 325, 326, 327, 289, 0, 261, 419,
	349, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 413,
	414, 285, 291, 431, 293, 260, 339, 287, 398, 300,
	0, 424, 0, 425, 0, 0, 0, 0, 331, 296,
	297, 363, 301, 309, 352, 397, 337, 357, 258, 388,
	364, 313, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 376, 0, 237, 266, 0, 241, 881, 307, 0,
	348, 284, 0, 0, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 0, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 0, 336, 0, 238, 233, 234, 235, 236,
	0, 0, 0, 404, 405, 406, 427, 390, 0, 445,
	279, 0, 0, 306, 0, 0, 0, 0, 0, 0,
	0, 0, 449, 441, 0, 0, 437, 0, 438, 0,
	0, 0, 0, 0, 365, 320, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 0, 0, 0, 0,
	0, 0, 256, 188, 439, 0, 440, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 2005, 2008, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 370,
	386, 257, 361, 399, 262, 368, 252, 335, 358, 0,
	0, 249, 384, 367, 317, 298, 299, 248, 0, 353,
	277, 290, 274, 333, 0, 383, 411, 273, 402, 0,
	394, 251, 0, 393, 332, 380, 385, 318, 312, 250,
	382, 316, 311, 302, 281, 426, 303, 304, 294, 344,
	310, 345, 295, 322, 321, 323, 0, 0, 0, 0,
	0, 422, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2009, 396,
	0, 0, 0, 2004, 0, 2003, 369, 2001, 2006, 305,
	0, 0, 0, 412, 0, 356, 338, 0, 0, 0,
	354, 308, 381, 346, 387, 371, 395, 350, 347, 242,
	372, 276, 319, 253, 255, 271, 278, 280, 282, 283,
	328, 329, 341, 360, 373, 374, 375, 275, 263, 355,
	264, 292, 265, 243, 268, 267, 269, 362, 270, 245,
	342, 379, 2007, 288, 351, 315, 246, 314, 343, 378,
	377, 254, 403, 409, 410, 0, 0, 415, 0, 0,
	0, 423, 428, 429, 430, 432, 433, 434, 435, 0,
	0, 0, 0, 417, 0, 0, 0, 0, 0, 0,
	408, 286, 239, 240, 448, 272, 334, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 407,
	0, 0, 0, 436, 447, 0, 0, 0, 0, 0,
	446, 340, 0, 359, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 366, 389, 401, 418,
	421, 0, 0, 0, 0, 244, 420, 0, 0, 0,
	0, 0, 0, 0, 0, 392, 0, 0, 0, 400,
	0, 0, 0, 0, 0, 416, 0, 0, 324, 325,
	326, 327, 289, 0, 261, 419, 349, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 413, 414, 285, 291, 431,
	293, 260, 339, 287, 398, 300, 0, 424, 0, 425,
	0, 0, 0, 0, 331, 296, 297, 363, 301, 309,
	352, 397, 337, 357, 258, 388, 364, 313, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 376, 0, 237,
	266, 0, 241, 0, 307, 0, 348, 284, 0, 0,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 0, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 228, 229, 230, 231, 0, 0,
	0, 238, 233, 234, 235, 236, 336, 0, 0, 404,
	405, 406, 427, 390, 0, 445, 0, 0, 1727, 0,
	0, 0, 0, 279, 0, 0, 306, 0, 449, 441,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 437,
	0, 438, 0, 0, 0, 0, 0, 365, 320, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 0,
	0, 1728, 0, 0, 0, 256, 188, 439, 0, 440,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 977, 978, 979, 976, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 370, 386, 257, 361, 399, 262, 368, 252,
	335, 358, 0, 0, 249, 384, 367, 317, 298, 299,
	248, 0, 353, 277, 290, 274, 333, 0, 383, 411,
	273, 402, 0, 394, 251, 0, 393, 332, 380, 385,
	318, 312, 250, 382, 316, 311, 302, 281, 426, 303,
	304, 294, 344, 310, 345, 295, 322, 321, 323, 0,
	0, 0, 0, 0, 422, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 396, 0, 0, 0, 0, 0, 0, 369,
	0, 0, 305, 0, 0, 0, 412, 0, 356, 338,
	0, 0, 0, 354, 308, 381, 346, 387, 371, 395,
	350, 347, 242, 372, 276, 319, 253, 255, 271, 278,
	280, 282, 283, 328, 329, 341, 360, 373, 374, 375,
	275, 263, 355, 264, 292, 265, 243, 268, 267, 269,
	362, 270, 245, 342, 379, 0, 288, 351, 315, 246,
	314, 343, 378, 377, 254, 403, 409, 410, 0, 0,
	415, 0, 0, 0, 423, 428, 429, 430, 432, 433,
	434, 435, 0, 0, 0, 0, 417, 0, 0, 0,
	0, 0, 0, 408, 286, 239, 240, 448, 272, 334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 330, 407, 0, 0, 0, 436, 447, 0, 0,
	0, 0, 0, 446, 340, 0, 359, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 366,
	389, 401, 418, 421, 0, 0, 0, 0, 244, 420,
	0, 0, 0, 0, 0, 0, 0, 0, 392, 0,
	0, 0, 400, 0, 0, 0, 0, 0, 416, 0,
	0, 324, 325, 326, 327, 289, 0, 261, 419, 349,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 413, 414,
	285, 291, 431, 293, 260, 339, 287, 398, 300, 0,
	424, 0, 425, 0, 0, 0, 0, 331, 296, 297,
	363, 301, 309, 352, 397, 337, 357, 258, 388, 364,
	313, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 232, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	376, 0, 237, 266, 0, 241, 0, 307, 0, 348,
	284, 0, 0, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 0, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	231, 0, 336, 0, 238, 233, 234, 235, 236, 0,
	0, 0, 404, 405, 406, 427, 390, 0, 445, 279,
	791, 0, 306, 0, 0, 0, 0, 0, 0, 0,
	0, 449, 441, 0, 0, 437, 0, 438, 0, 0,
	0, 0, 0, 365, 320, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 798, 799, 0, 0, 0,
	0, 256, 188, 439, 0, 440, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 802, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 370, 786,
	257, 361, 399, 262, 368, 252, 335, 358, 0, 0,
	249, 384, 367, 317, 298, 299, 248, 0, 353, 277,
	290, 274, 333, 0, 383, 411, 273, 402, 777, 394,
	251, 776, 393, 332, 380, 385, 318, 312, 250, 382,
	316, 311, 302, 281, 426, 303, 304, 294, 344, 310,
	345, 295, 322, 321, 323, 0, 0, 0, 0, 0,
	422, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 396, 0,
	0, 0, 0, 0, 0, 369, 0, 0, 305, 0,
	0, 0, 412, 0, 356, 338, 0, 0, 0, 354,
	308, 381, 346, 387, 371, 395, 789, 347, 242, 372,
	276, 319, 253, 255, 271, 278, 280, 282, 283, 328,
	329, 341, 360, 373, 374, 375, 275, 263, 355, 264,
	292, 265, 243, 268, 267, 269, 362, 270, 245, 342,
	379, 0, 288, 351, 315, 246, 314, 343, 378, 377,
	254, 403, 409, 410, 0, 0, 415, 0, 0, 0,
	423, 428, 429, 430, 432, 433, 434, 435, 0, 0,
	0, 0, 417, 0, 0, 0, 0, 0, 0, 408,
	286, 239, 240, 448, 272, 334, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 330, 407, 0,
	0, 0, 436, 447, 0, 0, 0, 0, 0, 446,
	340, 0, 359, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 366, 389, 401, 418, 421,
	0, 0, 0, 0, 244, 420, 0, 0, 0, 0,
	0, 0, 790, 0, 392, 0, 0, 0, 400, 0,
	0, 0, 0, 0, 793, 0, 0, 324, 325, 326,
	327, 289, 0, 261, 419, 349, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 413, 414, 285, 291, 431, 293,
	260, 339, 287, 398, 300, 0, 424, 0, 425, 0,
	0, 0, 0, 800, 787, 796, 788, 301, 309, 352,
	397, 337, 357, 258, 388, 364, 797, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	232, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 376, 0, 237, 266,
	0, 241, 0, 307, 0, 348, 284, 0, 0, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 0, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 229, 230, 231, 0, 336, 0,
	238, 233, 234, 235, 236, 0, 0, 0, 404, 405,
	406, 427, 390, 0, 445, 279, 0, 0, 306, 0,
	0, 0, 0, 0, 0, 0, 0, 449, 441, 0,
	0, 437, 0, 438, 0, 0, 0, 0, 0, 365,
	320, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 0, 0, 0, 0, 0, 0, 256, 188, 439,
	0, 440, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 2024, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 370, 386, 257, 361, 399, 262,
	368, 252, 335, 358, 0, 0, 249, 384, 367, 317,
	298, 299, 248, 0, 353, 277, 290, 274, 333, 0,
	383, 411, 273, 402, 0, 394, 251, 0, 393, 332,
	380, 385, 318, 312, 250, 382, 316, 311, 302, 281,
	426, 303, 304, 294, 344, 310, 345, 295, 322, 321,
	323, 0, 0, 0, 0, 0, 422, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2023, 396, 0, 0, 0, 2028, 2026,
	0, 369, 0, 2027, 305, 0, 0, 0, 412, 0,
	356, 338, 0, 0, 0, 354, 308, 381, 346, 387,
	371, 395, 350, 347, 242, 372, 276, 319, 253, 255,
	271, 278, 280, 282, 283, 328, 329, 341, 360, 373,
	374, 375, 275, 263, 355, 264, 292, 265, 243, 268,
	267, 269, 362, 270, 245, 342, 379, 0, 288, 351,
	315, 246, 314, 343, 378, 377, 254, 403, 409, 410,
	0, 0, 415, 0, 0, 0, 423, 428, 429, 430,
	432, 433, 434, 435, 0, 0, 0, 0, 417, 0,
	0, 0, 0, 0, 0, 408, 286, 239, 240, 448,
	272, 334, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 330, 407, 0, 0, 0, 436, 447,
	0, 0, 0, 0, 0, 446, 340, 0, 359, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 366, 389, 401, 418, 421, 0, 0, 0, 0,
	244, 420, 0, 0, 0, 0, 0, 0, 0, 0,
	392, 0, 0, 0, 400, 0, 0, 0, 0, 0,
	416, 0, 0, 324, 325, 326, 327, 289, 0, 261,
	419, 349, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	413, 414, 285, 291, 431, 293, 260, 339, 287, 398,
	300, 0, 424, 0, 425, 0, 0, 0, 0, 331,
	296, 297, 363, 301, 309, 352, 397, 337, 357, 258,
	388, 364, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 376, 0, 237, 266, 0, 241, 0, 307,
	0, 348, 284, 0, 0, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 0, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 0, 0, 0, 238, 233, 234, 235,
	236, 165, 0, 0, 404, 405, 406, 427, 390, 0,
	445, 336, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 449, 441, 0, 0, 0, 279, 0,
	0, 306, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 437, 0, 438, 0, 0, 113,
	0, 0, 365, 320, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	162, 1771, 0, 187, 0, 0, 0, 0, 0, 0,
	256, 188, 439, 0, 440, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 370, 386, 257,
	361, 399, 262, 368, 252, 335, 358, 0, 0, 249,
	384, 367, 317, 298, 299, 248, 0, 353, 277, 290,
	274, 333, 0, 383, 411, 273, 402, 0, 394, 251,
	0, 393, 332, 380, 385, 318, 312, 250, 382, 316,
	311, 302, 281, 426, 303, 304, 294, 344, 310, 345,
	295, 322, 321, 323, 0, 0, 0, 0, 0, 422,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 396, 0, 0,
	0, 0, 0, 0, 369, 0, 0, 305, 0, 0,
	0, 412, 0, 356, 338, 0, 0, 0, 354, 308,
	381, 346, 387, 371, 395, 350, 347, 242, 372, 276,
	319, 253, 255, 271, 278, 280, 282, 283, 328, 329,
	341, 360, 373, 374, 375, 275, 263, 355, 264, 292,
	265, 243, 268, 267, 269, 362, 270, 245, 342, 379,
	0, 288, 351, 315, 246, 314, 343, 378, 377, 254,
	403, 409, 410, 0, 0, 415, 0, 0, 0, 423,
	428, 429, 430, 432, 433, 434, 435, 0, 0, 0,
	0, 417, 0, 0, 0, 0, 0, 0, 408, 286,
	239, 240, 448, 272, 334, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 330, 407, 0, 0,
	0, 436, 447, 0, 0, 0, 0, 0, 446, 340,
	0, 359, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 366, 389, 401, 418, 421, 0,
	0, 0, 0, 244, 420, 0, 0, 0, 0, 0,
	0, 0, 0, 392, 0, 0, 0, 400, 0, 0,
	0, 0, 0, 416, 0, 0, 324, 325, 326, 327,
	289, 0, 261, 419, 349, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 414, 285, 291, 431, 293, 260,
	339, 287, 398, 300, 0, 424, 0, 425, 0, 0,
	0, 0, 331, 296, 297, 363, 301, 309, 352, 397,
	337, 357, 258, 388, 364, 313, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 376, 0, 237, 266, 0,
	241, 0, 307, 134, 348, 284, 0, 0, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 0, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 228, 229, 230, 231, 0, 0, 0, 238,
	233, 234, 235, 236, 165, 0, 0, 404, 405, 406,
	427, 390, 0, 445, 336, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 449, 441, 0, 0,
	0, 279, 0, 0, 306, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 437, 0, 438,
	0, 0, 113, 0, 0, 365, 320, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 162, 1762, 0, 187, 0, 0, 0,
	0, 0, 0, 256, 188, 439, 0, 440, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	370, 386, 257, 361, 399, 262, 368, 252, 335, 358,
	0, 0, 249, 384, 367, 317, 298, 299, 248, 0,
	353, 277, 290, 274, 333, 0, 383, 411, 273, 402,
	0, 394, 251, 0, 393, 332, 380, 385, 318, 312,
	250, 382, 316, 311, 302, 281, 426, 303, 304, 294,
	344, 310, 345, 295, 322, 321, 323, 0, 0, 0,
	0, 0, 422, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	396, 0, 0, 0, 0, 0, 0, 369, 0, 0,
	305, 0, 0, 0, 412, 0, 356, 338, 0, 0,
	0, 354, 308, 381, 346, 387, 371, 395, 350, 347,
	242, 372, 276, 319, 253, 255, 271, 278, 280, 282,
	283, 328, 329, 341, 360, 373, 374, 375, 275, 263,
	355, 264, 292, 265, 243, 268, 267, 269, 362, 270,
	245, 342, 379, 0, 288, 351, 315, 246, 314, 343,
	378, 377, 254, 403, 409, 410, 0, 0, 415, 0,
	0, 0, 423, 428, 429, 430, 432, 433, 434, 435,
	0, 0, 0, 0, 417, 0, 0, 0, 0, 0,
	0, 408, 286, 239, 240, 448, 272, 334, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 330,
	407, 0, 0, 0, 436, 447, 0, 0, 0, 0,
	0, 446, 340, 0, 359, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 366, 389, 401,
	418, 421, 0, 0, 0, 0, 244, 420, 0, 0,
	0, 0, 0, 0, 0, 0, 392, 0, 0, 0,
	400, 0, 0, 0, 0, 0, 416, 0, 0, 324,
	325, 326, 327, 289, 0, 261, 419, 349, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 413, 414, 285, 291,
	431, 293, 260, 339, 287, 398, 300, 0, 424, 0,
	425, 0, 0, 0, 0, 331, 296, 297, 363, 301,
	309, 352, 397, 337, 357, 258, 388, 364, 313, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 232, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 376, 0,
	237, 266, 0, 241, 0, 307, 134, 348, 284, 0,
	0, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 0, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 229, 230, 231, 0,
	0, 0, 238, 233, 234, 235, 236, 165, 0, 0,
	404, 405, 406, 427, 390, 0, 445, 336, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 449,
	441, 0, 0, 0, 279, 0, 0, 306, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	437, 0, 438, 0, 0, 113, 0, 0, 365, 320,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1666, 0, 0, 187,
	0, 0, 0, 0, 0, 0, 256, 188, 439, 0,
	440, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 370, 386, 257, 361, 399, 262, 368,
	252, 335, 358, 0, 0, 249, 384, 367, 317, 298,
	299, 248, 0, 353, 277, 290, 274, 333, 0, 383,
	411, 273, 402, 0, 394, 251, 0, 393, 332, 380,
	385, 318, 312, 250, 382, 316, 311, 302, 281, 426,
	303, 304, 294, 344, 310, 345, 295, 322, 321, 323,
	0, 0, 0, 0, 0, 422, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 396, 0, 0, 0, 0, 0, 0,
	369, 0, 0, 305, 0, 0, 0, 412, 0, 356,
	338, 0, 0, 0, 354, 308, 381, 346, 387, 371,
	395, 350, 347, 242, 372, 276, 319, 253, 255, 271,
	278, 280, 282, 283, 328, 329, 341, 360, 373, 374,
	375, 275, 263, 355, 264, 292, 265, 243, 268, 267,
	269, 362, 270, 245, 342, 379, 0, 288, 351, 315,
	246, 314, 343, 378, 377, 254, 403, 409, 410, 0,
	0, 415, 0, 0, 0, 423, 428, 429, 430, 432,
	433, 434, 435, 0, 0, 0, 0, 417, 0, 0,
	0, 0, 0, 0, 408, 286, 239, 240, 448, 272,
	334, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 330, 407, 0, 0, 0, 436, 447, 0,
	0, 0, 0, 0, 446, 340, 0, 359, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	366, 389, 401, 418, 421, 0, 0, 0, 0, 244,
	420, 0, 0, 0, 0, 0, 0, 0, 0, 392,
	0, 0, 0, 400, 0, 0, 0, 0, 0, 416,
	0, 0, 324, 325, 326, 327, 289, 0, 261, 419,
	349, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 413,
	414, 285, 291, 431, 293, 260, 339, 287, 398, 300,
	0, 424, 0, 425, 0, 0, 0, 0, 331, 296,
	297, 363, 301, 309, 352, 397, 337, 357, 258, 388,
	364, 313, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 376, 0, 237, 266, 0, 241, 0, 307, 134,
	348, 284, 0, 0, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 0, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 0, 336, 0, 238, 233, 234, 235, 236,
	0, 0, 0, 404, 405, 406, 427, 390, 0, 445,
	279, 0, 0, 306, 0, 0, 0, 0, 0, 0,
	0, 0, 449, 441, 0, 0, 437, 0, 438, 0,
	0, 0, 0, 0, 365, 320, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 798, 799, 0, 0,
	0, 0, 256, 188, 439, 0, 440, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 802, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 370,
	386, 257, 361, 399, 262, 368, 252, 335, 358, 0,
	0, 249, 384, 367, 317, 298, 299, 248, 0, 353,
	277, 290, 274, 333, 0, 383, 411, 273, 402, 777,
	394, 251, 776, 393, 332, 380, 385, 318, 312, 250,
	382, 316, 311, 302, 281, 426, 303, 304, 294, 344,
	310, 345, 295, 322, 321, 323, 0, 0, 0, 0,
	0, 422, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 396,
	0, 0, 0, 0, 0, 0, 369, 0, 0, 305,
	0, 0, 0, 412, 0, 356, 338, 0, 0, 0,
	354, 308, 381, 346, 387, 371, 395, 350, 347, 242,
	372, 276, 319, 253, 255, 271, 278, 280, 282, 283,
	328, 329, 341, 360, 373, 374, 375, 275, 263, 355,
	264, 292, 265, 243, 268, 267, 269, 362, 270, 245,
	342, 379, 0, 288, 351, 315, 246, 314, 343, 378,
	377, 254, 403, 409, 410, 0, 0, 415, 0, 0,
	0, 423, 428, 429, 430, 432, 433, 434, 435, 0,
	0, 0, 0, 417, 0, 0, 0, 0, 0, 0,
	408, 286, 239, 240, 448, 272, 334, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 407,
	0, 0, 0, 436, 447, 0, 0, 0, 0, 0,
	446, 340, 0, 359, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 366, 389, 401, 418,
	421, 0, 0, 0, 0, 244, 420, 0, 0, 0,
	0, 0, 0, 0, 0, 392, 0, 0, 0, 400,
	0, 0, 0, 0, 0, 416, 0, 0, 324, 325,
	326, 327, 289, 0, 261, 419, 349, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 413, 414, 285, 291, 431,
	293, 260, 339, 287, 398, 300, 0, 424, 0, 425,
	0, 0, 0, 0, 800, 1685, 796, 1686, 301, 309,
	352, 397, 337, 357, 258, 388, 364, 797, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 376, 0, 237,
	266, 0, 241, 0, 307, 0, 348, 284, 0, 0,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 0, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 228, 229, 230, 231, 0, 336,
	0, 238, 233, 234, 235, 236, 0, 0, 2426, 404,
	405, 406, 427, 390, 0, 445, 279, 0, 0, 306,
	0, 0, 0, 0, 0, 0, 0, 0, 449, 441,
	0, 0, 437, 0, 438, 0, 0, 0, 0, 0,
	365, 320, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 0, 0, 0, 0, 0, 0, 256, 188,
	439, 0, 440, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 370, 386, 257, 361, 399,
	262, 368, 252, 335, 358, 0, 0, 249, 384, 367,
	317, 298, 299, 248, 0, 353, 277, 290, 274, 333,
	0, 383, 411, 273, 402, 0, 394, 251, 0, 393,
	332, 380, 385, 318, 312, 250, 382, 316, 311, 302,
	281, 426, 303, 304, 294, 344, 310, 345, 295, 322,
	321, 323, 0, 0, 0, 0, 0, 422, 0, 0,
	0, 0, 0, 0, 0, 0, 2429, 0, 0, 2428,
	0, 0, 0, 0, 0, 396, 0, 0, 0, 0,
	0, 0, 369, 0, 0, 305, 0, 0, 0, 412,
	0, 356, 338, 0, 0, 0, 354, 308, 381, 346,
	387, 371, 395, 350, 347, 242, 372, 276, 319, 253,
	255, 271, 278, 280, 282, 283, 328, 329, 341, 360,
	373, 374, 375, 275, 263, 355, 264, 292, 265, 243,
	268, 267, 269, 362, 270, 245, 342, 379, 0, 288,
	351, 315, 246, 314, 343, 378, 377, 254, 403, 409,
	410, 0, 0, 415, 0, 0, 0, 423, 428, 429,
	430, 432, 433, 434, 435, 0, 0, 0, 0, 417,
	0, 0, 0, 0, 0, 0, 408, 286, 239, 240,
	448, 272, 334, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 330, 407, 0, 0, 0, 436,
	447, 0, 0, 0, 0, 0, 446, 340, 0, 359,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 366, 389, 401, 418, 421, 0, 0, 0,
	0, 244, 420, 0, 0, 0, 0, 0, 0, 0,
	0, 392, 0, 0, 0, 400, 0, 0, 0, 0,
	0, 416, 0, 0, 324, 325, 326, 327, 289, 0,
	261, 419, 349, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 413, 414, 285, 291, 431, 293, 260, 339, 287,
	398, 300, 0, 424, 0, 425, 0, 0, 0, 0,
	331, 296, 297, 363, 301, 309, 352, 397, 337, 357,
	258, 388, 364, 313, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 376, 0, 237, 266, 0, 241, 0,
	307, 0, 348, 284, 0, 0, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 0,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 231, 0, 336, 0, 238, 233, 234,
	235, 236, 0, 0, 0, 404, 405, 406, 427, 390,
	0, 445, 279, 1228, 0, 306, 0, 0, 0, 0,
	0, 0, 0, 0, 449, 441, 0, 0, 437, 0,
	438, 0, 0, 0, 0, 0, 365, 320, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 0, 0,
	1226, 0, 0, 0, 256, 188, 439, 0, 440, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1224, 0, 0, 0, 0, 0, 0,
	247, 370, 386, 257, 361, 399, 262, 368, 252, 335,
	358, 0, 0, 249, 384, 367, 317, 298, 299, 248,
	0, 353, 277, 290, 274, 333, 0, 383, 411, 273,
	402, 0, 394, 251, 0, 393, 332, 380, 385, 318,
	312, 250, 382, 316, 311, 302, 281, 426, 303, 304,
	294, 344, 310, 345, 295, 322, 321, 323, 0, 0,
	0, 0, 0, 422, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 396, 0, 0, 0, 0, 0, 0, 369, 0,
	0, 305, 0, 0, 0, 412, 0, 356, 338, 0,
	0, 0, 354, 308, 381, 346, 387, 371, 395, 350,
	347, 242, 372, 276, 319, 253, 255, 271, 278, 280,
	282, 283, 328, 329, 341, 360, 373, 374, 375, 275,
	263, 355, 264, 292, 265, 243, 268, 267, 269, 362,
	270, 245, 342, 379, 0, 288, 351, 315, 246, 314,
	343, 378, 377, 254, 403, 409, 410, 0, 0, 415,
	0, 0, 0, 423, 428, 429, 430, 432, 433, 434,
	435, 0, 0, 0, 0, 417, 0, 0, 0, 0,
	0, 0, 408, 286, 239, 240, 448, 272, 334, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	330, 407, 0, 0, 0, 436, 447, 0, 0, 0,
	0, 0, 446, 340, 0, 359, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 366, 389,
	401, 418, 421, 0, 0, 0, 0, 244, 420, 0,
	0, 0, 0, 0, 0, 0, 0, 392, 0, 0,
	0, 400, 0, 0, 0, 0, 0, 416, 0, 0,
	324, 325, 326, 327, 289, 0, 261, 419, 349, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 413, 414, 285,
	291, 431, 293, 260, 339, 287, 398, 300, 0, 424,
	0, 425, 0, 0, 0, 0, 331, 296, 297, 363,
	301, 309, 352, 397, 337, 357, 258, 388, 364, 313,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 376,
	0, 237, 266, 0, 241, 0, 307, 0, 348, 284,
	0, 0, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 0, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	0, 336, 0, 238, 233, 234, 235, 236, 0, 0,
	0, 404, 405, 406, 427, 390, 0, 445, 279, 1222,
	0, 306, 0, 0, 0, 0, 0, 0, 0, 0,
	449, 441, 0, 0, 437, 0, 438, 0, 0, 0,
	0, 0, 365, 320, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 0, 0, 1226, 0, 0, 0,
	256, 188, 439, 0, 440, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1224,
	0, 0, 0, 0, 0, 0, 247, 370, 386, 257,
	361, 399, 262, 368, 252, 335, 358, 0, 0, 249,
	384, 367, 317, 298, 299, 248, 0, 353, 277, 290,
	274, 333, 0, 383, 411, 273, 402, 0, 394, 251,
	0, 393, 332, 380, 385, 318, 312, 250, 382, 316,
	311, 302, 281, 426, 303, 304, 294, 344, 310, 345,
	295, 322, 321, 323, 0, 0, 0, 0, 0, 422,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 396, 0, 0,
	0, 0, 0, 0, 369, 0, 0, 305, 0, 0,
	0, 412, 0, 356, 338, 0, 0, 0, 354, 308,
	381, 346, 387, 371, 395, 350, 347, 242, 372, 276,
	319, 253, 255, 271, 278, 280, 282, 283, 328, 329,
	341, 360, 373, 374, 375, 275, 263, 355, 264, 292,
	265, 243, 268, 267, 269, 362, 270, 245, 342, 379,
	0, 288, 351, 315, 246, 314, 343, 378, 377, 254,
	403, 409, 410, 0, 0, 415, 0, 0, 0, 423,
	428, 429, 430, 432, 433, 434, 435, 0, 0, 0,
	0, 417, 0, 0, 0, 0, 0, 0, 408, 286,
	239, 240, 448, 272, 334, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 330, 407, 0, 0,
	0, 436, 447, 0, 0, 0, 0, 0, 446, 340,
	0, 359, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 366, 389, 401, 418, 421, 0,
	0, 0, 0, 244, 420, 0, 0, 0, 0, 0,
	0, 0, 0, 392, 0, 0, 0, 400, 0, 0,
	0, 0, 0, 416, 0, 0, 324, 325, 326, 327,
	289, 0, 261, 419, 349, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 414, 285, 291, 431, 293, 260,
	339, 287, 398, 300, 0, 424, 0, 425, 0, 0,
	0, 0, 331, 296, 297, 363, 301, 309, 352, 397,
	337, 357, 258, 388, 364, 313, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 376, 0, 237, 266, 0,
	241, 0, 307, 0, 348, 284, 0, 0, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 0, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 228, 229, 230, 231, 0, 336, 0, 238,
	233, 234, 235, 236, 0, 0, 0, 404, 405, 406,
	427, 390, 0, 445, 279, 0, 0, 306, 0, 0,
	0, 0, 0, 0, 0, 0, 449, 441, 0, 0,
	437, 0, 438, 0, 0, 0, 0, 0, 365, 320,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3206, 0, 187,
	622, 0, 0, 0, 0, 0, 256, 188, 439, 0,
	440, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 370, 386, 257, 361, 399, 262, 368,
	252, 335, 358, 0, 0, 249, 384, 367, 317, 298,
	299, 248, 0, 353, 277, 290, 274, 333, 0, 383,
	411, 273, 402, 0, 394, 251, 0, 393, 332, 380,
	385, 318, 312, 250, 382, 316, 311, 302, 281, 426,
	303, 304, 294, 344, 310, 345, 295, 322, 321, 323,
	0, 0, 0, 0, 0, 422, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 396, 0, 0, 0, 0, 0, 0,
	369, 0, 0, 305, 0, 0, 0, 412, 0, 356,
	338, 0, 0, 0, 354, 308, 381, 346, 387, 371,
	395, 350, 347, 242, 372, 276, 319, 253, 255, 271,
	278, 280, 282, 283, 328, 329, 341, 360, 373, 374,
	375, 275, 263, 355, 264, 292, 265, 243, 268, 267,
	269, 362, 270, 245, 342, 379, 0, 288, 351, 315,
	246, 314, 343, 378, 377, 254, 403, 409, 410, 0,
	0, 415, 0, 0, 0, 423, 428, 429, 430, 432,
	433, 434, 435, 0, 0, 0, 0, 417, 0, 0,
	0, 0, 0, 0, 408, 286, 239, 240, 448, 272,
	334, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 330, 407, 0, 0, 0, 436, 447, 0,
	0, 0, 0, 0, 446, 340, 0, 359, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	366, 389, 401, 418, 421, 0, 0, 0, 0, 244,
	420, 0, 0, 0, 0, 0, 0, 0, 0, 392,
	0, 0, 0, 400, 0, 0, 0, 0, 0, 416,
	0, 0, 324, 325, 326, 327, 289, 0, 261, 419,
	349, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 413,
	414, 285, 291, 431, 293, 260, 339, 287, 398, 300,
	0, 424, 0, 425, 0, 0, 0, 0, 331, 296,
	297, 363, 301, 309, 352, 397, 337, 357, 258, 388,
	364, 313, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 376, 0, 237, 266, 0, 241, 0, 307, 0,
	348, 284, 0, 0, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 0, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 0, 336, 0, 238, 233, 234, 235, 236,
	0, 0, 0, 404, 405, 406, 427, 390, 0, 445,
	279, 0, 0, 306, 0, 0, 0, 0, 0, 0,
	0, 0, 449, 441, 0, 0, 437, 0, 438, 0,
	0, 0, 0, 0, 365, 320, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 0, 0, 1226, 0,
	0, 0, 256, 188, 439, 0, 440, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1224, 0, 0, 0, 0, 0, 0, 247, 370,
	386, 257, 361, 399, 262, 368, 252, 335, 358, 0,
	0, 249, 384, 367, 317, 298, 299, 248, 0, 353,
	277, 290, 274, 333, 0, 383, 411, 273, 402, 0,
	394, 251, 0, 393, 332, 380, 385, 318, 312, 250,
	382, 316, 311, 302, 281, 426, 303, 304, 294, 344,
	310, 345, 295, 322, 321, 323, 0, 0, 0, 0,
	0, 422, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 396,
	0, 0, 0, 0, 0, 0, 369, 0, 0, 305,
	0, 0, 0, 412, 0, 356, 338, 0, 0, 0,
	354, 308, 381, 346, 387, 371, 395, 350, 347, 242,
	372, 276, 319, 253, 255, 271, 278, 280, 282, 283,
	328, 329, 341, 360, 373, 374, 375, 275, 263, 355,
	264, 292, 265, 243, 268, 267, 269, 362, 270, 245,
	342, 379, 0, 288, 351, 315, 246, 314, 343, 378,
	377, 254, 403, 409, 410, 0, 0, 415, 0, 0,
	0, 423, 428, 429, 430, 432, 433, 434, 435, 0,
	0, 0, 0, 417, 0, 0, 0, 0, 0, 0,
	408, 286, 239, 240, 448, 272, 334, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 407,
	0, 0, 0, 436, 447, 0, 0, 0, 0, 0,
	446, 340, 0, 359, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 366, 389, 401, 418,
	421, 0, 0, 0, 0, 244, 420, 0, 0, 0,
	0, 0, 0, 0, 0, 392, 0, 0, 0, 400,
	0, 0, 0, 0, 0, 416, 0, 0, 324, 325,
	326, 327, 289, 0, 261, 419, 349, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 413, 414, 285, 291, 431,
	293, 260, 339, 287, 398, 300, 0, 424, 0, 425,
	0, 0, 0, 0, 331, 296, 297, 363, 301, 309,
	352, 397, 337, 357, 258, 388, 364, 313, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 376, 0, 237,
	266, 0, 241, 0, 307, 0, 348, 284, 0, 0,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 0, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 228, 229, 230, 231, 0, 336,
	0, 238, 233, 234, 235, 236, 0, 0, 0, 404,
	405, 406, 427, 390, 0, 445, 279, 0, 0, 306,
	0, 0, 0, 0, 0, 0, 0, 0, 449, 441,
	0, 0, 437, 0, 438, 0, 0, 0, 0, 0,
	365, 320, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 0, 0, 1226, 0, 0, 0, 256, 188,
	439, 0, 440, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2933, 0, 0,
	0, 0, 0, 0, 247, 370, 386, 257, 361, 399,
	262, 368, 252, 335, 358, 0, 0, 249, 384, 367,
	317, 298, 299, 248, 0, 353, 277, 290, 274, 333,
	0, 383, 411, 273, 402, 0, 394, 251, 0, 393,
	332, 380, 385, 318, 312, 250, 382, 316, 311, 302,
	281, 426, 303, 304, 294, 344, 310, 345, 295, 322,
	321, 323, 0, 0, 0, 0, 0, 422, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 396, 0, 0, 0, 0,
	0, 0, 369, 0, 0, 305, 0, 0, 0, 412,
	0, 356, 338, 0, 0, 0, 354, 308, 381, 346,
	387, 371, 395, 350, 347, 242, 372, 276, 319, 253,
	255, 271, 278, 280, 282, 283, 328, 329, 341, 360,
	373, 374, 375, 275, 263, 355, 264, 292, 265, 243,
	268, 267, 269, 362, 270, 245, 342, 379, 0, 288,
	351, 315, 246, 314, 343, 378, 377, 254, 403, 409,
	410, 0, 0, 415, 0, 0, 0, 423, 428, 429,
	430, 432, 433, 434, 435, 0, 0, 0, 0, 417,
	0, 0, 0, 0, 0, 0, 408, 286, 239, 240,
	448, 272, 334, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 330, 407, 0, 0, 0, 436,
	447, 0, 0, 0, 0, 0, 446, 340, 0, 359,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 366, 389, 401, 418, 421, 0, 0, 0,
	0, 244, 420, 0, 0, 0, 0, 0, 0, 0,
	0, 392, 0, 0, 0, 400, 0, 0, 0, 0,
	0, 416, 0, 0, 324, 325, 326, 327, 289, 0,
	261, 419, 349, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 413, 414, 285, 291, 431, 293, 260, 339, 287,
	398, 300, 0, 424, 0, 425, 0, 0, 0, 0,
	331, 296, 297, 363, 301, 309, 352, 397, 337, 357,
	258, 388, 364, 313, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 376, 0, 237, 266, 0, 241, 0,
	307, 0, 348, 284, 0, 0, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 0,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 231, 0, 0, 0, 238, 233, 234,
	235, 236, 336, 0, 0, 404, 405, 406, 427, 390,
	0, 445, 0, 0, 2093, 0, 0, 0, 0, 279,
	0, 0, 306, 0, 449, 441, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 437, 0, 438, 0, 0,
	0, 0, 0, 365, 320, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 0, 0, 2095, 0, 0,
	0, 256, 188, 439, 0, 440, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 370, 386,
	257, 361, 399, 262, 368, 252, 335, 358, 0, 0,
	249, 384, 367, 317, 298, 299, 248, 0, 353, 277,
	290, 274, 333, 0, 383, 411, 273, 402, 0, 394,
	251, 0, 393, 332, 380, 385, 318, 312, 250, 382,
	316, 311, 302, 281, 426, 303, 304, 294, 344, 310,
	345, 295, 322, 321, 323, 0, 0, 0, 0, 0,
	422, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 396, 0,
	0, 0, 0, 0, 0, 369, 0, 0, 305, 0,
	0, 0, 412, 0, 356, 338, 0, 0, 0, 354,
	308, 381, 346, 387, 371, 395, 350, 347, 242, 372,
	276, 319, 253, 255, 271, 278, 280, 282, 283, 328,
	329, 341, 360, 373, 374, 375, 275, 263, 355, 264,
	292, 265, 243, 268, 267, 269, 362, 270, 245, 342,
	379, 0, 288, 351, 315, 246, 314, 343, 378, 377,
	254, 403, 409, 410, 0, 0, 415, 0, 0, 0,
	423, 428, 429, 430, 432, 433, 434, 435, 0, 0,
	0, 0, 417, 0, 0, 0, 0, 0, 0, 408,
	286, 239, 240, 448, 272, 334, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 330, 407, 0,
	0, 0, 436, 447, 0, 0, 0, 0, 0, 446,
	340, 0, 359, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 366, 389, 401, 418, 421,
	0, 0, 0, 0, 244, 420, 0, 0, 0, 0,
	0, 0, 0, 0, 392, 0, 0, 0, 400, 0,
	0, 0, 0, 0, 416, 0, 0, 324, 325, 326,
	327, 289, 0, 261, 419, 349, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 413, 414, 285, 291, 431, 293,
	260, 339, 287, 398, 300, 0, 424, 0, 425, 0,
	0, 0, 0, 331, 296, 297, 363, 301, 309, 352,
	397, 337, 357, 258, 388, 364, 313, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	232, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 376, 0, 237, 266,
	0, 241, 0, 307, 0, 348, 284, 0, 0, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 0, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 229, 230, 231, 0, 336, 0,
	238, 233, 234, 235, 236, 0, 0, 0, 404, 405,
	406, 427, 390, 0, 445, 279, 2114, 0, 306, 0,
	0, 0, 0, 0, 0, 0, 0, 449, 441, 0,
	0, 437, 0, 438, 0, 0, 0, 0, 0, 365,
	320, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 0, 0, 1226, 0, 0, 0, 256, 188, 439,
	0, 440, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 370, 386, 257, 361, 399, 262,
	368, 252, 335, 358, 0, 0, 249, 384, 367, 317,
	298, 299, 248, 0, 353, 277, 290, 274, 333, 0,
	383, 411, 273, 402, 0, 394, 251, 0, 393, 332,
	380, 385, 318, 312, 250, 382, 316, 311, 302, 281,
	426, 303, 304, 294, 344, 310, 345, 295, 322, 321,
	323, 0, 0, 0, 0, 0, 422, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 396, 0, 0, 0, 0, 0,
	0, 369, 0, 0, 305, 0, 0, 0, 412, 0,
	356, 338, 0, 0, 0, 354, 308, 381, 346, 387,
	371, 395, 350, 347, 242, 372, 276, 319, 253, 255,
	271, 278, 280, 282, 283, 328, 329, 341, 360, 373,
	374, 375, 275, 263, 355, 264, 292, 265, 243, 268,
	267, 269, 362, 270, 245, 342, 379, 0, 288, 351,
	315, 246, 314, 343, 378, 377, 254, 403, 409, 410,
	0, 0, 415, 0, 0, 0, 423, 428, 429, 430,
	432, 433, 434, 435, 0, 0, 0, 0, 417, 0,
	0, 0, 0, 0, 0, 408, 286, 239, 240, 448,
	272, 334, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 330, 407, 0, 0, 0, 436, 447,
	0, 0, 0, 0, 0, 446, 340, 0, 359, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 366, 389, 401, 418, 421, 0, 0, 0, 0,
	244, 420, 0, 0, 0, 0, 0, 0, 0, 0,
	392, 0, 0, 0, 400, 0, 0, 0, 0, 0,
	416, 0, 0, 324, 325, 326, 327, 289, 0, 261,
	419, 349, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	413, 414, 285, 291, 431, 293, 260, 339, 287, 398,
	300, 0, 424, 0, 425, 0, 0, 0, 0, 331,
	296, 297, 363, 301, 309, 352, 397, 337, 357, 258,
	388, 364, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 376, 0, 237, 266, 0, 241, 0, 307,
	0, 348, 284, 0, 0, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 0, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 0, 336, 0, 238, 233, 234, 235,
	236, 0, 0, 0, 404, 405, 406, 427, 390, 0,
	445, 279, 0, 0, 306, 0, 0, 0, 0, 0,
	0, 0, 0, 449, 441, 0, 0, 437, 0, 438,
	0, 0, 0, 0, 0, 365, 320, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3299, 0, 187, 0, 0, 0,
	0, 0, 0, 256, 188, 439, 0, 440, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	370, 386, 257, 361, 399, 262, 368, 252, 335, 358,
	0, 0, 249, 384, 367, 317, 298, 299, 248, 0,
	353, 277, 290, 274, 333, 0, 383, 411, 273, 402,
	0, 394, 251, 0, 393, 332, 380, 385, 318, 312,
	250, 382, 316, 311, 302, 281, 426, 303, 304, 294,
	344, 310, 345, 295, 322, 321, 323, 0, 0, 0,
	0, 0, 422, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	396, 0, 0, 0, 0, 0, 0, 369, 0, 0,
	305, 0, 0, 0, 412, 0, 356, 338, 0, 0,
	0, 354, 308, 381, 346, 387, 371, 395, 350, 347,
	242, 372, 276, 319, 253, 255, 271, 278, 280, 282,
	283, 328, 329, 341, 360, 373, 374, 375, 275, 263,
	355, 264, 292, 265, 243, 268, 267, 269, 362, 270,
	245, 342, 379, 0, 288, 351, 315, 246, 314, 343,
	378, 377, 254, 403, 409, 410, 0, 0, 415, 0,
	0, 0, 423, 428, 429, 430, 432, 433, 434, 435,
	0, 0, 0, 0, 417, 0, 0, 0, 0, 0,
	0, 408, 286, 239, 240, 448, 272, 334, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 330,
	407, 0, 0, 0, 436, 447, 0, 0, 0, 0,
	0, 446, 340, 0, 359, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 366, 389, 401,
	418, 421, 0, 0, 0, 0, 244, 420, 0, 0,
	0, 0, 0, 0, 0, 0, 392, 0, 0, 0,
	400, 0, 0, 0, 0, 0, 416, 0, 0, 324,
	325, 326, 327, 289, 0, 261, 419, 349, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 413, 414, 285, 291,
	431, 293, 260, 339, 287, 398, 300, 0, 424, 0,
	425, 0, 0, 0, 0, 331, 296, 297, 363, 301,
	309, 352, 397, 337, 357, 258, 388, 364, 313, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 232, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 376, 0,
	237, 266, 0, 241, 0, 307, 0, 348, 284, 0,
	0, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 0, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 229, 230, 231, 0,
	336, 0, 238, 233, 234, 235, 236, 0, 0, 0,
	404, 405, 406, 427, 390, 0, 445, 279, 0, 0,
	306, 0, 0, 0, 0, 0, 0, 0, 0, 449,
	441, 0, 0, 437, 0, 438, 0, 0, 0, 0,
	0, 365, 320, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 622, 0, 0, 0, 0, 0, 256,
	188, 439, 0, 440, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 370, 386, 257, 361,
	399, 262, 368, 252, 335, 358, 0, 0, 249, 384,
	367, 317, 298, 299, 248, 0, 353, 277, 290, 274,
	333, 0, 383, 411, 273, 402, 0, 394, 251, 0,
	393, 332, 380, 385, 318, 312, 250, 382, 316, 311,
	302, 281, 426, 303, 304, 294, 344, 310, 345, 295,
	322, 321, 323, 0, 0, 0, 0, 0, 422, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 396, 0, 0, 0,
	0, 0, 0, 369, 0, 0, 305, 0, 0, 0,
	412, 0, 356, 338, 0, 0, 0, 354, 308, 381,
	346, 387, 371, 395, 350, 347, 242, 372, 276, 319,
	253, 255, 271, 278, 280, 282, 283, 328, 329, 341,
	360, 373, 374, 375, 275, 263, 355, 264, 292, 265,
	243, 268, 267, 269, 362, 270, 245, 342, 379, 0,
	288, 351, 315, 246, 314, 343, 378, 377, 254, 403,
	409, 410, 0, 0, 415, 0, 0, 0, 423, 428,
	429, 430, 432, 433, 434, 435, 0, 0, 0, 0,
	417, 0, 0, 0, 0, 0, 0, 408, 286, 239,
	240, 448, 272, 334, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 330, 407, 0, 0, 0,
	436, 447, 0, 0, 0, 0, 0, 446, 340, 0,
	359, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 366, 389, 401, 418, 421, 0, 0,
	0, 0, 244, 420, 0, 0, 0, 0, 0, 0,
	0, 0, 392, 0, 0, 0, 400, 0, 0, 0,
	0, 0, 416, 0, 0, 324, 325, 326, 327, 289,
	0, 261, 419, 349, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 413, 414, 285, 291, 431, 293, 260, 339,
	287, 398, 300, 0, 424, 0, 425, 0, 0, 0,
	0, 331, 296, 297, 363, 301, 309, 352, 397, 337,
	357, 258, 388, 364, 313, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 232, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 376, 0, 237, 266, 0, 241,
	0, 307, 0, 348, 284, 0, 0, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	0, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 229, 230, 231, 0, 336, 0, 238, 233,
	234, 235, 236, 0, 0, 0, 404, 405, 406, 427,
	390, 0, 445, 279, 0, 0, 306, 0, 0, 0,
	0, 0, 0, 0, 0, 449, 441, 0, 0, 437,
	0, 438, 0, 0, 0, 0, 0, 365, 320, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3224, 0, 0, 187, 0,
	0, 0, 0, 0, 0, 256, 188, 439, 0, 440,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 370, 386, 257, 361, 399, 262, 368, 252,
	335, 358, 0, 0, 249, 384, 367, 317, 298, 299,
	248, 0, 353, 277, 290, 274, 333, 0, 383, 411,
	273, 402, 0, 394, 251, 0, 393, 332, 380, 385,
	318, 312, 250, 382, 316, 311, 302, 281, 426, 303,
	304, 294, 344, 310, 345, 295, 322, 321, 323, 0,
	0, 0, 0, 0, 422, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 396, 0, 0, 0, 0, 0, 0, 369,
	0, 0, 305, 0, 0, 0, 412, 0, 356, 338,
	0, 0, 0, 354, 308, 381, 346, 387, 371, 395,
	350, 347, 242, 372, 276, 319, 253, 255, 271, 278,
	280, 282, 283, 328, 329, 341, 360, 373, 374, 375,
	275, 263, 355, 264, 292, 265, 243, 268, 267, 269,
	362, 270, 245, 342, 379, 0, 288, 351, 315, 246,
	314, 343, 378, 377, 254, 403, 409, 410, 0, 0,
	415, 0, 0, 0, 423, 428, 429, 430, 432, 433,
	434, 435, 0, 0, 0, 0, 417, 0, 0, 0,
	0, 0, 0, 408, 286, 239, 240, 448, 272, 334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 330, 407, 0, 0, 0, 436, 447, 0, 0,
	0, 0, 0, 446, 340, 0, 359, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 366,
	389, 401, 418, 421, 0, 0, 0, 0, 244, 420,
	0, 0, 0, 0, 0, 0, 0, 0, 392, 0,
	0, 0, 400, 0, 0, 0, 0, 0, 416, 0,
	0, 324, 325, 326, 327, 289, 0, 261, 419, 349,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 413, 414,
	285, 291, 431, 293, 260, 339, 287, 398, 300, 0,
	424, 0, 425, 0, 0, 0, 0, 331, 296, 297,
	363, 301, 309, 352, 397, 337, 357, 258, 388, 364,
	313, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 232, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	376, 0, 237, 266, 0, 241, 0, 307, 0, 348,
	284, 0, 0, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 0, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	231, 0, 336, 0, 238, 233, 234, 235, 236, 0,
	0, 0, 404, 405, 406, 427, 390, 0, 445, 279,
	0, 0, 306, 0, 0, 0, 0, 0, 0, 0,
	0, 449, 441, 0, 0, 437, 0, 438, 0, 0,
	0, 0, 0, 365, 320, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 0, 0, 0, 0, 0,
	0, 256, 188, 439, 0, 440, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 370, 386,
	257, 361, 399, 262, 368, 252, 335, 358, 0, 0,
	249, 384, 367, 317, 298, 299, 248, 0, 353, 277,
	290, 274, 333, 0, 383, 411, 273, 402, 0, 394,
	251, 0, 393, 332, 380, 385, 318, 312, 250, 382,
	316, 311, 302, 281, 426, 303, 304, 294, 344, 310,
	345, 295, 322, 321, 323, 0, 0, 0, 0, 0,
	422, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 396, 0,
	0, 0, 3151, 0, 0, 369, 0, 0, 305, 0,
	0, 0, 412, 0, 356, 338, 0, 0, 0, 354,
	308, 381, 346, 387, 371, 395, 350, 347, 242, 372,
	276, 319, 253, 255, 271, 278, 280, 282, 283, 328,
	329, 341, 360, 373, 374, 375, 275, 263, 355, 264,
	292, 265, 243, 268, 267, 269, 362, 270, 245, 342,
	379, 0, 288, 351, 315, 246, 314, 343, 378, 377,
	254, 403, 409, 410, 0, 0, 415, 0, 0, 0,
	423, 428, 429, 430, 432, 433, 434, 435, 0, 0,
	0, 0, 417, 0, 0, 0, 0, 0, 0, 408,
	286, 239, 240, 448, 272, 334, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 330, 407, 0,
	0, 0, 436, 447, 0, 0, 0, 0, 0, 446,
	340, 0, 359, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 366, 389, 401, 418, 421,
	0, 0, 0, 0, 244, 420, 0, 0, 0, 0,
	0, 0, 0, 0, 392, 0, 0, 0, 400, 0,
	0, 0, 0, 0, 416, 0, 0, 324, 325, 326,
	327, 289, 0, 261, 419, 349, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 413, 414, 285, 291, 431, 293,
	260, 339, 287, 398, 300, 0, 424, 0, 425, 0,
	0, 0, 0, 331, 296, 297, 363, 301, 309, 352,
	397, 337, 357, 258, 388, 364, 313, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	232, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 376, 0, 237, 266,
	0, 241, 0, 307, 0, 348, 284, 0, 0, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 0, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 229, 230, 231, 0, 336, 0,
	238, 233, 234, 235, 236, 0, 0, 0, 404, 405,
	406, 427, 390, 0, 445, 279, 0, 0, 306, 0,
	0, 0, 0, 0, 0, 0, 0, 449, 441, 0,
	0, 437, 0, 438, 0, 0, 0, 0, 0, 365,
	320, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2929, 0, 0,
	187, 0, 0, 0, 0, 0, 0, 256, 188, 439,
	0, 440, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 370, 386, 257, 361, 399, 262,
	368, 252, 335, 358, 0, 0, 249, 384, 367, 317,
	298, 299, 248, 0, 353, 277, 290, 274, 333, 0,
	383, 411, 273, 402, 0, 394, 251, 0, 393, 332,
	380, 385, 318, 312, 250, 382, 316, 311, 302, 281,
	426, 303, 304, 294, 344, 310, 345, 295, 322, 321,
	323, 0, 0, 0, 0, 0, 422, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 396, 0, 0, 0, 0, 0,
	0, 369, 0, 0, 305, 0, 0, 0, 412, 0,
	356, 338, 0, 0, 0, 354, 308, 381, 346, 387,
	371, 395, 350, 347, 242, 372, 276, 319, 253, 255,
	271, 278, 280, 282, 283, 328, 329, 341, 360, 373,
	374, 375, 275, 263, 355, 264, 292, 265, 243, 268,
	267, 269, 362, 270, 245, 342, 379, 0, 288, 351,
	315, 246, 314, 343, 378, 377, 254, 403, 409, 410,
	0, 0, 415, 0, 0, 0, 423, 428, 429, 430,
	432, 433, 434, 435, 0, 0, 0, 0, 417, 0,
	0, 0, 0, 0, 0, 408, 286, 239, 240, 448,
	272, 334, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 330, 407, 0, 0, 0, 436, 447,
	0, 0, 0, 0, 0, 446, 340, 0, 359, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 366, 389, 401, 418, 421, 0, 0, 0, 0,
	244, 420, 0, 0, 0, 0, 0, 0, 0, 0,
	392, 0, 0, 0, 400, 0, 0, 0, 0, 0,
	416, 0, 0, 324, 325, 326, 327, 289, 0, 261,
	419, 349, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	413, 414, 285, 291, 431, 293, 260, 339, 287, 398,
	300, 0, 424, 0, 425, 0, 0, 0, 0, 331,
	296, 297, 363, 301, 309, 352, 397, 337, 357, 258,
	388, 364, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 376, 0, 237, 266, 0, 241, 0, 307,
	0, 348, 284, 0, 0, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 0, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 0, 336, 0, 238, 233, 234, 235,
	236, 0, 0, 0, 404, 405, 406, 427, 390, 0,
	445, 279, 0, 0, 306, 0, 0, 0, 0, 0,
	0, 0, 0, 449, 441, 0, 0, 437, 0, 438,
	0, 0, 0, 0, 0, 365, 320, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 0, 0, 2793,
	0, 0, 0, 256, 188, 439, 0, 440, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	370, 386, 257, 361, 399, 262, 368, 252, 335, 358,
	0, 0, 249, 384, 367, 317, 298, 299, 248, 0,
	353, 277, 290, 274, 333, 0, 383, 411, 273, 402,
	0, 394, 251, 0, 393, 332, 380, 385, 318, 312,
	250, 382, 316, 311, 302, 281, 426, 303, 304, 294,
	344, 310, 345, 295, 322, 321, 323, 0, 0, 0,
	0, 0, 422, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	396, 0, 0, 0, 0, 0, 0, 369, 0, 0,
	305, 0, 0, 0, 412, 0, 356, 338, 0, 0,
	0, 354, 308, 381, 346, 387, 371, 395, 350, 347,
	242, 372, 276, 319, 253, 255, 271, 278, 280, 282,
	283, 328, 329, 341, 360, 373, 374, 375, 275, 263,
	355, 264, 292, 265, 243, 268, 267, 269, 362, 270,
	245, 342, 379, 0, 288, 351, 315, 246, 314, 343,
	378, 377, 254, 403, 409, 410, 0, 0, 415, 0,
	0, 0, 423, 428, 429, 430, 432, 433, 434, 435,
	0, 0, 0, 0, 417, 0, 0, 0, 0, 0,
	0, 408, 286, 239, 240, 448, 272, 334, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 330,
	407, 0, 0, 0, 436, 447, 0, 0, 0, 0,
	0, 446, 340, 0, 359, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 366, 389, 401,
	418, 421, 0, 0, 0, 0, 244, 420, 0, 0,
	0, 0, 0, 0, 0, 0, 392, 0, 0, 0,
	400, 0, 0, 0, 0, 0, 416, 0, 0, 324,
	325, 326, 327, 289, 0, 261, 419, 349, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 413, 414, 285, 291,
	431, 293, 260, 339, 287, 398, 300, 0, 424, 0,
	425, 0, 0, 0, 0, 331, 296, 297, 363, 301,
	309, 352, 397, 337, 357, 258, 388, 364, 313, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 232, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 376, 0,
	237, 266, 0, 241, 0, 307, 0, 348, 284, 0,
	0, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 0, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 229, 230, 231, 0,
	336, 0, 238, 233, 234, 235, 236, 0, 0, 0,
	404, 405, 406, 427, 390, 0, 445, 279, 0, 0,
	306, 0, 0, 0, 0, 0, 0, 0, 0, 449,
	441, 0, 0, 437, 0, 438, 0, 0, 0, 0,
	0, 365, 320, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 0, 0, 0, 0, 256,
	188, 439, 0, 440, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 370, 386, 257, 361,
	399, 262, 368, 252, 335, 358, 0, 0, 249, 384,
	367, 317, 298, 299, 248, 0, 353, 277, 290, 274,
	333, 0, 383, 411, 273, 402, 0, 394, 251, 0,
	393, 332, 380, 385, 318, 312, 250, 382, 316, 311,
	302, 281, 426, 303, 304, 294, 344, 310, 345, 295,
	322, 321, 323, 0, 0, 0, 0, 0, 422, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 396, 0, 0, 0,
	3003, 0, 0, 369, 0, 0, 305, 0, 0, 0,
	412, 0, 356, 338, 0, 0, 0, 354, 308, 381,
	346, 387, 371, 395, 350, 347, 242, 372, 276, 319,
	253, 255, 271, 278, 280, 282, 283, 328, 329, 341,
	360, 373, 374, 375, 275, 263, 355, 264, 292, 265,
	243, 268, 267, 269, 362, 270, 245, 342, 379, 0,
	288, 351, 315, 246, 314, 343, 378, 377, 254, 403,
	409, 410, 0, 0, 415, 0, 0, 0, 423, 428,
	429, 430, 432, 433, 434, 435, 0, 0, 0, 0,
	417, 0, 0, 0, 0, 0, 0, 408, 286, 239,
	240, 448, 272, 334, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 330, 407, 0, 0, 0,
	436, 447, 0, 0, 0, 0, 0, 446, 340, 0,
	359, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 366, 389, 401, 418, 421, 0, 0,
	0, 0, 244, 420, 0, 0, 0, 0, 0, 0,
	0, 0, 392, 0, 0, 0, 400, 0, 0, 0,
	0, 0, 416, 0, 0, 324, 325, 326, 327, 289,
	0, 261, 419, 349, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 413, 414, 285, 291, 431, 293, 260, 339,
	287, 398, 300, 0, 424, 0, 425, 0, 0, 0,
	0, 331, 296, 297, 363, 301, 309, 352, 397, 337,
	357, 258, 388, 364, 313, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 232, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 376, 0, 237, 266, 0, 241,
	0, 307, 0, 348, 284, 0, 0, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	0, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 229, 230, 231, 0, 336, 0, 238, 233,
	234, 235, 236, 0, 0, 0, 404, 405, 406, 427,
	390, 0, 445, 279, 0, 0, 306, 0, 0, 0,
	0, 0, 0, 0, 0, 449, 441, 0, 0, 437,
	0, 438, 0, 0, 0, 0, 0, 365, 320, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 0,
	0, 0, 0, 0, 0, 256, 188, 439, 0, 440,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2642, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 370, 386, 257, 361, 399, 262, 368, 252,
	335, 358, 0, 0, 249, 384, 367, 317, 298, 299,
	248, 0, 353, 277, 290, 274, 333, 0, 383, 411,
	273, 402, 0, 394, 251, 0, 393, 332, 380, 385,
	318, 312, 250, 382, 316, 311, 302, 281, 426, 303,
	304, 294, 344, 310, 345, 295, 322, 321, 323, 0,
	0, 0, 0, 0, 422, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 396, 0, 0, 0, 0, 0, 0, 369,
	0, 0, 305, 0, 0, 0, 412, 0, 356, 338,
	0, 0, 0, 354, 308, 381, 346, 387, 371, 395,
	350, 347, 242, 372, 276, 319, 253, 255, 271, 278,
	280, 282, 283, 328, 329, 341, 360, 373, 374, 375,
	275, 263, 355, 264, 292, 265, 243, 268, 267, 269,
	362, 270, 245, 342, 379, 0, 288, 351, 315, 246,
	314, 343, 378, 377, 254, 403, 409, 410, 0, 0,
	415, 0, 0, 0, 423, 428, 429, 430, 432, 433,
	434, 435, 0, 0, 0, 0, 417, 0, 0, 0,
	0, 0, 0, 408, 286, 239, 240, 448, 272, 334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 330, 407, 0, 0, 0, 436, 447, 0, 0,
	0, 0, 0, 446, 340, 0, 359, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 366,
	389, 401, 418, 421, 0, 0, 0, 0, 244, 420,
	0, 0, 0, 0, 0, 0, 0, 0, 392, 0,
	0, 0, 400, 0, 0, 0, 0, 0, 416, 0,
	0, 324, 325, 326, 327, 289, 0, 261, 419, 349,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 413, 414,
	285, 291, 431, 293, 260, 339, 287, 398, 300, 0,
	424, 0, 425, 0, 0, 0, 0, 331, 296, 297,
	363, 301, 309, 352, 397, 337, 357, 258, 388, 364,
	313, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 232, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	376, 0, 237, 266, 0, 241, 0, 307, 0, 348,
	284, 0, 0, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 0, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	231, 0, 336, 0, 238, 233, 234, 235, 236, 0,
	0, 0, 404, 405, 406, 427, 390, 0, 445, 279,
	0, 0, 306, 0, 0, 0, 0, 0, 0, 0,
	0, 449, 441, 0, 0, 437, 0, 438, 0, 0,
	0, 0, 0, 365, 320, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1666, 0, 0, 187, 0, 0, 0, 0, 0,
	0, 256, 188, 439, 0, 440, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 370, 386,
	257, 361, 399, 262, 368, 252, 335, 358, 0, 0,
	249, 384, 367, 317, 298, 299, 248, 0, 353, 277,
	290, 274, 333, 0, 383, 411, 273, 402, 0, 394,
	251, 0, 393, 332, 380, 385, 318, 312, 250, 382,
	316, 311, 302, 281, 426, 303, 304, 294, 344, 310,
	345, 295, 322, 321, 323, 0, 0, 0, 0, 0,
	422, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 396, 0,
	0, 0, 0, 0, 0, 369, 0, 0, 305, 0,
	0, 0, 412, 0, 356, 338, 0, 0, 0, 354,
	308, 381, 346, 387, 371, 395, 350, 347, 242, 372,
	276, 319, 253, 255, 271, 278, 280, 282, 283, 328,
	329, 341, 360, 373, 374, 375, 275, 263, 355, 264,
	292, 265, 243, 268, 267, 269, 362, 270, 245, 342,
	379, 0, 288, 351, 315, 246, 314, 343, 378, 377,
	254, 403, 409, 410, 0, 0, 415, 0, 0, 0,
	423, 428, 429, 430, 432, 433, 434, 435, 0, 0,
	0, 0, 417, 0, 0, 0, 0, 0, 0, 408,
	286, 239, 240, 448, 272, 334, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 330, 407, 0,
	0, 0, 436, 447, 0, 0, 0, 0, 0, 446,
	340, 0, 359, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 366, 389, 401, 418, 421,
	0, 0, 0, 0, 244, 420, 0, 0, 0, 0,
	0, 0, 0, 0, 392, 0, 0, 0, 400, 0,
	0, 0, 0, 0, 416, 0, 0, 324, 325, 326,
	327, 289, 0, 261, 419, 349, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 413, 414, 285, 291, 431, 293,
	260, 339, 287, 398, 300, 0, 424, 0, 425, 0,
	0, 0, 0, 331, 296, 297, 363, 301, 309, 352,
	397, 337, 357, 258, 388, 364, 313, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	232, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 376, 0, 237, 266,
	0, 241, 0, 307, 0, 348, 284, 0, 0, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 0, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 229, 230, 231, 0, 336, 0,
	238, 233, 234, 235, 236, 0, 0, 0, 404, 405,
	406, 427, 390, 0, 445, 279, 0, 0, 306, 0,
	0, 0, 0, 0, 0, 0, 0, 449, 441, 0,
	0, 437, 0, 438, 0, 0, 0, 0, 0, 365,
	320, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 0, 0, 2302, 0, 0, 0, 256, 188, 439,
	0, 440, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 370, 386, 257, 361, 399, 262,
	368, 252, 335, 358, 0, 0, 249, 384, 367, 317,
	298, 299, 248, 0, 353, 277, 290, 274, 333, 0,
	383, 411, 273, 402, 0, 394, 251, 0, 393, 332,
	380, 385, 318, 312, 250, 382, 316, 311, 302, 281,
	426, 303, 304, 294, 344, 310, 345, 295, 322, 321,
	323, 0, 0, 0, 0, 0, 422, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 396, 0, 0, 0, 0, 0,
	0, 369, 0, 0, 305, 0, 0, 0, 412, 0,
	356, 338, 0, 0, 0, 354, 308, 381, 346, 387,
	371, 395, 350, 347, 242, 372, 276, 319, 253, 255,
	271, 278, 280, 282, 283, 328, 329, 341, 360, 373,
	374, 375, 275, 263, 355, 264, 292, 265, 243, 268,
	267, 269, 362, 270, 245, 342, 379, 0, 288, 351,
	315, 246, 314, 343, 378, 377, 254, 403, 409, 410,
	0, 0, 415, 0, 0, 0, 423, 428, 429, 430,
	432, 433, 434, 435, 0, 0, 0, 0, 417, 0,
	0, 0, 0, 0, 0, 408, 286, 239, 240, 448,
	272, 334, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 330, 407, 0, 0, 0, 436, 447,
	0, 0, 0, 0, 0, 446, 340, 0, 359, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 366, 389, 401, 418, 421, 0, 0, 0, 0,
	244, 420, 0, 0, 0, 0, 0, 0, 0, 0,
	392, 0, 0, 0, 400, 0, 0, 0, 0, 0,
	416, 0, 0, 324, 325, 326, 327, 289, 0, 261,
	419, 349, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	413, 414, 285, 291, 431, 293, 260, 339, 287, 398,
	300, 0, 424, 0, 425, 0, 0, 0, 0, 331,
	296, 297, 363, 301, 309, 352, 397, 337, 357, 258,
	388, 364, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 376, 0, 237, 266, 0, 241, 0, 307,
	0, 348, 284, 0, 0, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 0, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 0, 336, 0, 238, 233, 234, 235,
	236, 0, 0, 0, 404, 405, 406, 427, 390, 0,
	445, 279, 0, 0, 306, 0, 0, 0, 0, 0,
	0, 0, 0, 449, 441, 0, 0, 437, 0, 438,
	0, 0, 0, 0, 0, 365, 320, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 0, 0, 0,
	0, 0, 0, 256, 188, 439, 0, 440, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2723, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	370, 386, 257, 361, 399, 262, 368, 252, 335, 358,
	0, 0, 249, 384, 367, 317, 298, 299, 248, 0,
	353, 277, 290, 274, 333, 0, 383, 411, 273, 402,
	0, 394, 251, 0, 393, 332, 380, 385, 318, 312,
	250, 382, 316, 311, 302, 281, 426, 303, 304, 294,
	344, 310, 345, 295, 322, 321, 323, 0, 0, 0,
	0, 0, 422, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	396, 0, 0, 0, 0, 0, 0, 369, 0, 0,
	305, 0, 0, 0, 412, 0, 356, 338, 0, 0,
	0, 354, 308, 381, 346, 387, 371, 395, 350, 347,
	242, 372, 276, 319, 253, 255, 271, 278, 280, 282,
	283, 328, 329, 341, 360, 373, 374, 375, 275, 263,
	355, 264, 292, 265, 243, 268, 267, 269, 362, 270,
	245, 342, 379, 0, 288, 351, 315, 246, 314, 343,
	378, 377, 254, 403, 409, 410, 0, 0, 415, 0,
	0, 0, 423, 428, 429, 430, 432, 433, 434, 435,
	0, 0, 0, 0, 417, 0, 0, 0, 0, 0,
	0, 408, 286, 239, 240, 448, 272, 334, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 330,
	407, 0, 0, 0, 436, 447, 0, 0, 0, 0,
	0, 446, 340, 0, 359, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 366, 389, 401,
	418, 421, 0, 0, 0, 0, 244, 420, 0, 0,
	0, 0, 0, 0, 0, 0, 392, 0, 0, 0,
	400, 0, 0, 0, 0, 0, 416, 0, 0, 324,
	325, 326, 327, 289, 0, 261, 419, 349, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 413, 414, 285, 291,
	431, 293, 260, 339, 287, 398, 300, 0, 424, 0,
	425, 0, 0, 0, 0, 331, 296, 297, 363, 301,
	309, 352, 397, 337, 357, 258, 388, 364, 313, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 232, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 376, 0,
	237, 266, 0, 241, 0, 307, 0, 348, 284, 0,
	0, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 0, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 229, 230, 231, 0,
	336, 0, 238, 233, 234, 235, 236, 0, 0, 0,
	404, 405, 406, 427, 390, 0, 445, 279, 0, 0,
	306, 0, 0, 0, 0, 0, 0, 0, 0, 449,
	441, 0, 0, 437, 0, 438, 0, 0, 0, 0,
	0, 365, 320, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 2587, 0, 0, 0, 256,
	188, 439, 0, 440, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 370, 386, 257, 361,
	399, 262, 368, 252, 335, 358, 0, 0, 249, 384,
	367, 317, 298, 299, 248, 0, 353, 277, 290, 274,
	333, 0, 383, 411, 273, 402, 0, 394, 251, 0,
	393, 332, 380, 385, 318, 312, 250, 382, 316, 311,
	302, 281, 426, 303, 304, 294, 344, 310, 345, 295,
	322, 321, 323, 0, 0, 0, 0, 0, 422, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 396, 0, 0, 0,
	0, 0, 0, 369, 0, 0, 305, 0, 0, 0,
	412, 0, 356, 338, 0, 0, 0, 354, 308, 381,
	346, 387, 371, 395, 350, 347, 242, 372, 276, 319,
	253, 255, 271, 278, 280, 282, 283, 328, 329, 341,
	360, 373, 374, 375, 275, 263, 355, 264, 292, 265,
	243, 268, 267, 269, 362, 270, 245, 342, 379, 0,
	288, 351, 315, 246, 314, 343, 378, 377, 254, 403,
	409, 410, 0, 0, 415, 0, 0, 0, 423, 428,
	429, 430, 432, 433, 434, 435, 0, 0, 0, 0,
	417, 0, 0, 0, 0, 0, 0, 408, 286, 239,
	240, 448, 272, 334, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 330, 407, 0, 0, 0,
	436, 447, 0, 0, 0, 0, 0, 446, 340, 0,
	359, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 366, 389, 401, 418, 421, 0, 0,
	0, 0, 244, 420, 0, 0, 0, 0, 0, 0,
	0, 0, 392, 0, 0, 0, 400, 0, 0, 0,
	0, 0, 416, 0, 0, 324, 325, 326, 327, 289,
	0, 261, 419, 349, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 413, 414, 285, 291, 431, 293, 260, 339,
	287, 398, 300, 0, 424, 0, 425, 0, 0, 0,
	0, 331, 296, 297, 363, 301, 309, 352, 397, 337,
	357, 258, 388, 364, 313, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 232, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 376, 0, 237, 266, 0, 241,
	0, 307, 0, 348, 284, 0, 0, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	0, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 229, 230, 231, 0, 336, 0, 238, 233,
	234, 235, 236, 0, 0, 0, 404, 405, 406, 427,
	390, 0, 445, 279, 0, 0, 306, 0, 0, 0,
	0, 0, 0, 0, 0, 449, 441, 0, 0, 437,
	0, 438, 0, 0, 0, 0, 0, 365, 320, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 0,
	0, 0, 0, 0, 0, 256, 188, 439, 0, 440,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2514, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 370, 386, 257, 361, 399, 262, 368, 252,
	335, 358, 0, 0, 249, 384, 367, 317, 298, 299,
	248, 0, 353, 277, 290, 274, 333, 0, 383, 411,
	273, 402, 0, 394, 251, 0, 393, 332, 380, 385,
	318, 312, 250, 382, 316, 311, 302, 281, 426, 303,
	304, 294, 344, 310, 345, 295, 322, 321, 323, 0,
	0, 0, 0, 0, 422, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 396, 0, 0, 0, 0, 0, 0, 369,
	0, 0, 305, 0, 0, 0, 412, 0, 356, 338,
	0, 0, 0, 354, 308, 381, 346, 387, 371, 395,
	350, 347, 242, 372, 276, 319, 253, 255, 271, 278,
	280, 282, 283, 328, 329, 341, 360, 373, 374, 375,
	275, 263, 355, 264, 292, 265, 243, 268, 267, 269,
	362, 270, 245, 342, 379, 0, 288, 351, 315, 246,
	314, 343, 378, 377, 254, 403, 409, 410, 0, 0,
	415, 0, 0, 0, 423, 428, 429, 430, 432, 433,
	434, 435, 0, 0, 0, 0, 417, 0, 0, 0,
	0, 0, 0, 408, 286, 239, 240, 448, 272, 334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 330, 407, 0, 0, 0, 436, 447, 0, 0,
	0, 0, 0, 446, 340, 0, 359, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 366,
	389, 401, 418, 421, 0, 0, 0, 0, 244, 420,
	0, 0, 0, 0, 0, 0, 0, 0, 392, 0,
	0, 0, 400, 0, 0, 0, 0, 0, 416, 0,
	0, 324, 325, 326, 327, 289, 0, 261, 419, 349,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 413, 414,
	285, 291, 431, 293, 260, 339, 287, 398, 300, 0,
	424, 0, 425, 0, 0, 0, 0, 331, 296, 297,
	363, 301, 309, 352, 397, 337, 357, 258, 388, 364,
	313, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 232, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	376, 0, 237, 266, 0, 241, 0, 307, 0, 348,
	284, 0, 0, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 0, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	231, 0, 336, 0, 238, 233, 234, 235, 236, 0,
	0, 0, 404, 405, 406, 427, 390, 0, 445, 279,
	0, 0, 306, 0, 0, 0, 0, 0, 0, 0,
	0, 449, 441, 0, 0, 437, 0, 438, 0, 0,
	0, 0, 0, 365, 320, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 0, 0, 1226, 0, 0,
	0, 256, 188, 439, 0, 440, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 370, 386,
	257, 361, 399, 262, 368, 252, 335, 358, 0, 0,
	249, 384, 367, 317, 298, 299, 248, 0, 353, 277,
	290, 274, 333, 0, 383, 411, 273, 402, 0, 394,
	251, 0, 393, 332, 380, 385, 318, 312, 250, 382,
	316, 311, 302, 281, 426, 303, 304, 294, 344, 310,
	345, 295, 322, 321, 323, 0, 0, 0, 0, 0,
	422, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 396, 0,
	0, 0, 0, 0, 0, 369, 0, 0, 305, 0,
	0, 0, 412, 0, 356, 338, 0, 0, 0, 354,
	308, 381, 346, 387, 371, 395, 350, 347, 242, 372,
	276, 319, 253, 255, 271, 278, 280, 282, 283, 328,
	329, 341, 360, 373, 374, 375, 275, 263, 355, 264,
	292, 265, 243, 268, 267, 269, 362, 270, 245, 342,
	379, 0, 288, 351, 315, 246, 314, 343, 378, 377,
	254, 403, 409, 410, 0, 0, 415, 0, 0, 0,
	423, 428, 429, 430, 432, 433, 434, 435, 0, 0,
	0, 0, 417, 0, 0, 0, 0, 0, 0, 408,
	286, 239, 240, 448, 272, 334, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 330, 407, 0,
	0, 0, 436, 447, 0, 0, 0, 0, 0, 446,
	340, 0, 359, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 366, 389, 401, 418, 421,
	0, 0, 0, 0, 244, 420, 0, 0, 0, 0,
	0, 0, 0, 0, 392, 0, 0, 0, 400, 0,
	0, 0, 0, 0, 416, 0, 0, 324, 325, 326,
	327, 289, 0, 261, 419, 349, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 413, 414, 285, 291, 431, 293,
	260, 339, 287, 398, 300, 0, 424, 0, 425, 0,
	0, 0, 0, 331, 296, 297, 363, 301, 309, 352,
	397, 337, 357, 258, 388, 364, 313, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	232, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 376, 0, 237, 266,
	0, 241, 0, 307, 0, 348, 284, 0, 0, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 0, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 229, 230, 231, 0, 336, 0,
	238, 233, 234, 235, 236, 0, 0, 0, 404, 405,
	406, 427, 390, 0, 445, 279, 0, 0, 306, 0,
	0, 0, 0, 0, 0, 0, 0, 449, 441, 0,
	0, 437, 0, 438, 0, 0, 0, 0, 0, 365,
	320, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 0, 0, 2095, 0, 0, 0, 256, 188, 439,
	0, 440, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 370, 386, 257, 361, 399, 262,
	368, 252, 335, 358, 0, 0, 249, 384, 367, 317,
	298, 299, 248, 0, 353, 277, 290, 274, 333, 0,
	383, 411, 273, 402, 0, 394, 251, 0, 393, 332,
	380, 385, 318, 312, 250, 382, 316, 311, 302, 281,
	426, 303, 304, 294, 344, 310, 345, 295, 322, 321,
	323, 0, 0, 0, 0, 0, 422, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 396, 0, 0, 0, 0, 0,
	0, 369, 0, 0, 305, 0, 0, 0, 412, 0,
	356, 338, 0, 0, 0, 354, 308, 381, 346, 387,
	371, 395, 350, 347, 242, 372, 276, 319, 253, 255,
	271, 278, 280, 282, 283, 328, 329, 341, 360, 373,
	374, 375, 275, 263, 355, 264, 292, 265, 243, 268,
	267, 269, 362, 270, 245, 342, 379, 0, 288, 351,
	315, 246, 314, 343, 378, 377, 254, 403, 409, 410,
	0, 0, 415, 0, 0, 0, 423, 428, 429, 430,
	432, 433, 434, 435, 0, 0, 0, 0, 417, 0,
	0, 0, 0, 0, 0, 408, 286, 239, 240, 448,
	272, 334, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 330, 407, 0, 0, 0, 436, 447,
	0, 0, 0, 0, 0, 446, 340, 0, 359, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 366, 389, 401, 418, 421, 0, 0, 0, 0,
	244, 420, 0, 0, 0, 0, 0, 0, 0, 0,
	392, 0, 0, 0, 400, 0, 0, 0, 0, 0,
	416, 0, 0, 324, 325, 326, 327, 289, 0, 261,
	419, 349, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	413, 414, 285, 291, 431, 293, 260, 339, 287, 398,
	300, 0, 424, 0, 425, 0, 0, 0, 0, 331,
	296, 297, 363, 301, 309, 352, 397, 337, 357, 258,
	388, 364, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 376, 0, 237, 266, 0, 241, 0, 307,
	0, 348, 284, 0, 0, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 0, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 0, 336, 0, 238, 233, 234, 235,
	236, 0, 0, 0, 404, 405, 406, 427, 390, 0,
	445, 279, 0, 0, 306, 0, 0, 0, 0, 0,
	0, 0, 0, 449, 441, 0, 0, 437, 0, 438,
	0, 0, 0, 0, 0, 365, 320, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 0, 0, 0,
	0, 0, 0, 256, 188, 439, 0, 440, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1786, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	370, 386, 257, 361, 399, 262, 368, 252, 335, 358,
	0, 0, 249, 384, 367, 317, 298, 299, 248, 0,
	353, 277, 290, 274, 333, 0, 383, 411, 273, 402,
	0, 394, 251, 0, 393, 332, 380, 385, 318, 312,
	250, 382, 316, 311, 302, 281, 426, 303, 304, 294,
	344, 310, 345, 295, 322, 321, 323, 0, 0, 0,
	0, 0, 422, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	396, 0, 0, 0, 0, 0, 0, 369, 0, 0,
	305, 0, 0, 0, 412, 0, 356, 338, 0, 0,
	0, 354, 308, 381, 346, 387, 371, 395, 350, 347,
	242, 372, 276, 319, 253, 255, 271, 278, 280, 282,
	283, 328, 329, 341, 360, 373, 374, 375, 275, 263,
	355, 264, 292, 265, 243, 268, 267, 269, 362, 270,
	245, 342, 379, 0, 288, 351, 315, 246, 314, 343,
	378, 377, 254, 403, 409, 410, 0, 0, 415, 0,
	0, 0, 423, 428, 429, 430, 432, 433, 434, 435,
	0, 0, 0, 0, 417, 0, 0, 0, 0, 0,
	0, 408, 286, 239, 240, 448, 272, 334, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 330,
	407, 0, 0, 0, 436, 447, 0, 0, 0, 0,
	0, 446, 340, 0, 359, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 366, 389, 401,
	418, 421, 0, 0, 0, 0, 244, 420, 0, 0,
	0, 0, 0, 0, 0, 0, 392, 0, 0, 0,
	400, 0, 0, 0, 0, 0, 416, 0, 0, 324,
	325, 326, 327, 289, 0, 261, 419, 349, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 413, 414, 285, 291,
	431, 293, 260, 339, 287, 398, 300, 0, 424, 0,
	425, 0, 0, 0, 0, 331, 296, 297, 363, 301,
	309, 352, 397, 337, 357, 258, 388, 364, 313, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 232, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 376, 0,
	237, 266, 0, 241, 0, 307, 0, 348, 284, 0,
	0, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 0, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 229, 230, 231, 0,
	336, 0, 238, 233, 234, 235, 236, 0, 0, 0,
	404, 405, 406, 427, 390, 0, 445, 279, 0, 0,
	306, 0, 0, 0, 0, 0, 0, 0, 0, 449,
	441, 0, 0, 437, 0, 438, 0, 0, 0, 0,
	0, 365, 320, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 0, 0, 0, 0, 256,
	188, 439, 0, 440, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2132,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 370, 386, 257, 361,
	399, 262, 368, 252, 335, 358, 0, 0, 249, 384,
	367, 317, 298, 299, 248, 0, 353, 277, 290, 274,
	333, 0, 383, 411, 273, 402, 0, 394, 251, 0,
	393, 332, 380, 385, 318, 312, 250, 382, 316, 311,
	302, 281, 426, 303, 304, 294, 344, 310, 345, 295,
	322, 321, 323, 0, 0, 0, 0, 0, 422, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 396, 0, 0, 0,
	0, 0, 0, 369, 0, 0, 305, 0, 0, 0,
	412, 0, 356, 338, 0, 0, 0, 354, 308, 381,
	346, 387, 371, 395, 350, 347, 242, 372, 276, 319,
	253, 255, 271, 278, 280, 282, 283, 328, 329, 341,
	360, 373, 374, 375, 275, 263, 355, 264, 292, 265,
	243, 268, 267, 269, 362, 270, 245, 342, 379, 0,
	288, 351, 315, 246, 314, 343, 378, 377, 254, 403,
	409, 410, 0, 0, 415, 0, 0, 0, 423, 428,
	429, 430, 432, 433, 434, 435, 0, 0, 0, 0,
	417, 0, 0, 0, 0, 0, 0, 408, 286, 239,
	240, 448, 272, 334, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 330, 407, 0, 0, 0,
	436, 447, 0, 0, 0, 0, 0, 446, 340, 0,
	359, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 366, 389, 401, 418, 421, 0, 0,
	0, 0, 244, 420, 0, 0, 0, 0, 0, 0,
	0, 0, 392, 0, 0, 0, 400, 0, 0, 0,
	0, 0, 416, 0, 0, 324, 325, 326, 327, 289,
	0, 261, 419, 349, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 413, 414, 285, 291, 431, 293, 260, 339,
	287, 398, 300, 0, 424, 0, 425, 0, 0, 0,
	0, 331, 296, 297, 363, 301, 309, 352, 397, 337,
	357, 258, 388, 364, 313, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 232, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 376, 0, 237, 266, 0, 241,
	0, 307, 0, 348, 284, 0, 0, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	0, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 229, 230, 231, 0, 336, 0, 238, 233,
	234, 235, 236, 0, 0, 0, 404, 405, 406, 427,
	390, 0, 445, 279, 0, 0, 306, 0, 0, 0,
	0, 0, 0, 0, 0, 449, 441, 0, 0, 437,
	0, 438, 0, 0, 0, 0, 0, 365, 320, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 0,
	0, 2130, 0, 0, 0, 256, 188, 439, 0, 440,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 370, 386, 257, 361, 399, 262, 368, 252,
	335, 358, 0, 0, 249, 384, 367, 317, 298, 299,
	248, 0, 353, 277, 290, 274, 333, 0, 383, 411,
	273, 402, 0, 394, 251, 0, 393, 332, 380, 385,
	318, 312, 250, 382, 316, 311, 302, 281, 426, 303,
	304, 294, 344, 310, 345, 295, 322, 321, 323, 0,
	0, 0, 0, 0, 422, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 396, 0, 0, 0, 0, 0, 0, 369,
	0, 0, 305, 0, 0, 0, 412, 0, 356, 338,
	0, 0, 0, 354, 308, 381, 346, 387, 371, 395,
	350, 347, 242, 372, 276, 319, 253, 255, 271, 278,
	280, 282, 283, 328, 329, 341, 360, 373, 374, 375,
	275, 263, 355, 264, 292, 265, 243, 268, 267, 269,
	362, 270, 245, 342, 379, 0, 288, 351, 315, 246,
	314, 343, 378, 377, 254, 403, 409, 410, 0, 0,
	415, 0, 0, 0, 423, 428, 429, 430, 432, 433,
	434, 435, 0, 0, 0, 0, 417, 0, 0, 0,
	0, 0, 0, 408, 286, 239, 240, 448, 272, 334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 330, 407, 0, 0, 0, 436, 447, 0, 0,
	0, 0, 0, 446, 340, 0, 359, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 366,
	389, 401, 418, 421, 0, 0, 0, 0, 244, 420,
	0, 0, 0, 0, 0, 0, 0, 0, 392, 0,
	0, 0, 400, 0, 0, 0, 0, 0, 416, 0,
	0, 324, 325, 326, 327, 289, 0, 261, 419, 349,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 413, 414,
	285, 291, 431, 293, 260, 339, 287, 398, 300, 0,
	424, 0, 425, 0, 0, 0, 0, 331, 296, 297,
	363, 301, 309, 352, 397, 337, 357, 258, 388, 364,
	313, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 232, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	376, 0, 237, 266, 0, 241, 0, 307, 0, 348,
	284, 0, 0, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 0, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	231, 0, 0, 1968, 238, 233, 234, 235, 236, 336,
	0, 0, 404, 405, 406, 427, 390, 0, 445, 0,
	0, 0, 0, 0, 0, 0, 279, 0, 0, 306,
	0, 449, 441, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 437, 0, 438, 0, 0, 0, 0, 0,
	365, 320, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 0, 0, 0, 0, 0, 0, 256, 188,
	439, 0, 440, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 370, 386, 257, 361, 399,
	262, 368, 252, 335, 358, 0, 0, 249, 384, 367,
	317, 298, 299, 248, 0, 353, 277, 290, 274, 333,
	0, 383, 411, 273, 402, 0, 394, 251, 0, 393,
	332, 380, 385, 318, 312, 250, 382, 316, 311, 302,
	281, 426, 303, 304, 294, 344, 310, 345, 295, 322,
	321, 323, 0, 0, 0, 0, 0, 422, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 396, 0, 0, 0, 0,
	0, 0, 369, 0, 0, 305, 0, 0, 0, 412,
	0, 356, 338, 0, 0, 0, 354, 308, 381, 346,
	387, 371, 395, 350, 347, 242, 372, 276, 319, 253,
	255, 271, 278, 280, 282, 283, 328, 329, 341, 360,
	373, 374, 375, 275, 263, 355, 264, 292, 265, 243,
	268, 267, 269, 362, 270, 245, 342, 379, 0, 288,
	351, 315, 246, 314, 343, 378, 377, 254, 403, 409,
	410, 0, 0, 415, 0, 0, 0, 423, 428, 429,
	430, 432, 433, 434, 435, 0, 0, 0, 0, 417,
	0, 0, 0, 0, 0, 0, 408, 286, 239, 240,
	448, 272, 334, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 330, 407, 0, 0, 0, 436,
	447, 0, 0, 0, 0, 0, 446, 340, 0, 359,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 366, 389, 401, 418, 421, 0, 0, 0,
	0, 244, 420, 0, 0, 0, 0, 0, 0, 0,
	0, 392, 0, 0, 0, 400, 0, 0, 0, 0,
	0, 416, 0, 0, 324, 325, 326, 327, 289, 0,
	261, 419, 349, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 413, 414, 285, 291, 431, 293, 260, 339, 287,
	398, 300, 0, 424, 0, 425, 0, 0, 0, 0,
	331, 296, 297, 363, 301, 309, 352, 397, 337, 357,
	258, 388, 364, 313, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 376, 0, 237, 266, 0, 241, 0,
	307, 0, 348, 284, 0, 0, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 0,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 231, 0, 336, 0, 238, 233, 234,
	235, 236, 0, 1653, 0, 404, 405, 406, 427, 390,
	0, 445, 279, 0, 0, 306, 0, 0, 0, 0,
	0, 0, 0, 0, 449, 441, 0, 0, 437, 0,
	438, 0, 0, 0, 0, 0, 365, 320, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 0, 0,
	0, 0, 0, 0, 256, 188, 439, 0, 440, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 370, 386, 257, 361, 399, 262, 368, 252, 335,
	358, 0, 0, 249, 384, 367, 317, 298, 299, 248,
	0, 353, 277, 290, 274, 333, 0, 383, 411, 273,
	402, 0, 394, 251, 0, 393, 332, 380, 385, 318,
	312, 250, 382, 316, 311, 302, 281, 426, 303, 304,
	294, 344, 310, 345, 295, 322, 321, 323, 0, 0,
	0, 0, 0, 422, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 396, 0, 0, 0, 0, 0, 0, 369, 0,
	0, 305, 0, 0, 0, 412, 0, 356, 338, 0,
	0, 0, 354, 308, 381, 346, 387, 371, 395, 350,
	347, 242, 372, 276, 319, 253, 255, 271, 278, 280,
	282, 283, 328, 329, 341, 360, 373, 374, 375, 275,
	263, 355, 264, 292, 265, 243, 268, 267, 269, 362,
	270, 245, 342, 379, 0, 288, 351, 315, 246, 314,
	343, 378, 377, 254, 403, 409, 410, 0, 0, 415,
	0, 0, 0, 423, 428, 429, 430, 432, 433, 434,
	435, 0, 0, 0, 0, 417, 0, 0, 0, 0,
	0, 0, 408, 286, 239, 240, 448, 272, 334, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	330, 407, 0, 0, 0, 436, 447, 0, 0, 0,
	0, 0, 446, 340, 0, 359, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 366, 389,
	401, 418, 421, 0, 0, 0, 0, 244, 420, 0,
	0, 0, 0, 0, 0, 0, 0, 392, 0, 0,
	0, 400, 0, 0, 0, 0, 0, 416, 0, 0,
	324, 325, 326, 327, 289, 0, 261, 419, 349, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 413, 414, 285,
	291, 431, 293, 260, 339, 287, 398, 300, 0, 424,
	0, 425, 0, 0, 0, 0, 331, 296, 297, 363,
	301, 309, 352, 397, 337, 357, 258, 388, 364, 313,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 376,
	0, 237, 266, 0, 241, 0, 307, 0, 348, 284,
	0, 0, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 0, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	0, 336, 0, 238, 233, 234, 235, 236, 0, 0,
	0, 404, 405, 406, 427, 390, 0, 445, 279, 0,
	0, 306, 0, 0, 0, 0, 0, 0, 0, 0,
	449, 441, 0, 0, 437, 0, 438, 0, 0, 0,
	0, 0, 365, 320, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 0, 0, 1226, 0, 0, 0,
	256, 188, 439, 0, 440, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 370, 386, 257,
	361, 399, 262, 368, 252, 335, 358, 0, 0, 249,
	384, 367, 317, 298, 299, 248, 0, 353, 277, 290,
	274, 333, 0, 383, 411, 273, 402, 0, 394, 251,
	0, 393, 332, 380, 385, 318, 312, 250, 382, 316,
	311, 302, 281, 426, 303, 304, 294, 344, 310, 345,
	295, 322, 321, 323, 0, 0, 0, 0, 0, 422,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 396, 0, 0,
	0, 0, 0, 0, 369, 0, 0, 305, 0, 0,
	0, 412, 0, 356, 338, 0, 0, 0, 354, 308,
	381, 346, 387, 371, 395, 1566, 347, 242, 372, 276,
	319, 253, 255, 271, 278, 280, 282, 283, 328, 329,
	341, 360, 373, 374, 375, 275, 263, 355, 264, 292,
	265, 243, 268, 267, 269, 362, 270, 245, 342, 379,
	0, 288, 351, 315, 246, 314, 343, 378, 377, 254,
	403, 409, 410, 0, 0, 415, 0, 0, 0, 423,
	428, 429, 430, 432, 433, 434, 435, 0, 0, 0,
	0, 417, 0, 0, 0, 0, 0, 0, 408, 286,
	239, 240, 448, 272, 334, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 330, 407, 0, 0,
	0, 436, 447, 0, 0, 0, 0, 0, 446, 340,
	0, 359, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 366, 389, 401, 418, 421, 0,
	0, 0, 0, 244, 420, 0, 0, 0, 0, 0,
	0, 0, 0, 392, 0, 0, 0, 400, 0, 0,
	0, 0, 0, 416, 0, 0, 324, 325, 326, 327,
	289, 0, 261, 419, 349, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 414, 285, 291, 431, 293, 260,
	339, 287, 398, 300, 0, 424, 0, 425, 0, 0,
	0, 0, 331, 296, 297, 363, 301, 309, 352, 397,
	337, 357, 258, 388, 364, 313, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 376, 0, 237, 266, 0,
	241, 0, 307, 0, 348, 284, 0, 0, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 0, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 228, 229, 230, 231, 0, 336, 0, 238,
	233, 234, 235, 236, 0, 0, 0, 404, 405, 406,
	427, 390, 0, 445, 279, 0, 0, 306, 0, 0,
	0, 0, 0, 0, 0, 0, 449, 441, 0, 0,
	437, 0, 438, 0, 0, 0, 0, 0, 365, 320,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	0, 0, 0, 0, 0, 0, 256, 188, 439, 0,
	440, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 370, 386, 257, 361, 399, 262, 368,
	252, 335, 358, 0, 0, 249, 384, 367, 317, 298,
	299, 248, 0, 353, 277, 290, 274, 333, 0, 383,
	411, 273, 402, 0, 394, 251, 0, 393, 332, 380,
	385, 318, 312, 250, 382, 316, 311, 302, 281, 426,
	303, 304, 294, 344, 310, 345, 295, 322, 321, 323,
	0, 0, 0, 0, 0, 422, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 396, 0, 0, 1251, 0, 0, 0,
	369, 0, 0, 305, 0, 0, 0, 412, 0, 356,
	338, 0, 0, 0, 354, 308, 381, 346, 387, 371,
	395, 350, 347, 242, 372, 276, 319, 253, 255, 271,
	278, 280, 282, 283, 328, 329, 341, 360, 373, 374,
	375, 275, 263, 355, 264, 292, 265, 243, 268, 267,
	269, 362, 270, 245, 342, 379, 0, 288, 351, 315,
	246, 314, 343, 378, 377, 254, 403, 409, 410, 0,
	0, 415, 0, 0, 0, 423, 428, 429, 430, 432,
	433, 434, 435, 0, 0, 0, 0, 417, 0, 0,
	0, 0, 0, 0, 408, 286, 239, 240, 448, 272,
	334, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 330, 407, 0, 0, 0, 436, 447, 0,
	0, 0, 0, 0, 446, 340, 0, 359, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	366, 389, 401, 418, 421, 0, 0, 0, 0, 244,
	420, 0, 0, 0, 0, 0, 0, 0, 0, 392,
	0, 0, 0, 400, 0, 0, 0, 0, 0, 416,
	0, 0, 324, 325, 326, 327, 289, 0, 261, 419,
	349, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 413,
	414, 285, 291, 431, 293, 260, 339, 287, 398, 300,
	0, 424, 0, 425, 0, 0, 0, 0, 331, 296,
	297, 363, 301, 309, 352, 397, 337, 357, 258, 388,
	364, 313, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 376, 0, 237, 266, 0, 241, 0, 307, 0,
	348, 284, 0, 0, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 0, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 0, 336, 0, 238, 233, 234, 235, 236,
	0, 0, 0, 404, 405, 406, 427, 390, 0, 445,
	279, 0, 0, 306, 0, 0, 0, 0, 0, 0,
	0, 0, 449, 441, 0, 0, 437, 0, 438, 0,
	0, 0, 0, 0, 365, 320, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 0, 0, 0, 0,
	0, 0, 256, 188, 439, 0, 440, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 370,
	386, 257, 361, 399, 262, 368, 252, 335, 358, 0,
	0, 249, 384, 367, 317, 298, 299, 248, 0, 353,
	277, 290, 274, 333, 0, 383, 411, 273, 402, 0,
	394, 251, 0, 393, 332, 380, 385, 318, 312, 250,
	382, 316, 311, 302, 281, 426, 303, 304, 294, 344,
	310, 345, 295, 322, 321, 323, 0, 0, 0, 0,
	0, 422, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 396,
	0, 0, 0, 0, 0, 0, 369, 0, 0, 305,
	0, 0, 0, 412, 0, 356, 338, 0, 0, 0,
	354, 308, 381, 346, 387, 371, 395, 350, 347, 242,
	372, 276, 319, 253, 255, 271, 278, 280, 282, 283,
	328, 329, 341, 360, 373, 374, 375, 275, 263, 355,
	264, 292, 265, 243, 268, 267, 269, 362, 270, 245,
	342, 379, 0, 288, 351, 315, 246, 314, 343, 378,
	377, 254, 403, 409, 410, 0, 0, 415, 0, 0,
	0, 423, 428, 429, 430, 432, 433, 434, 435, 0,
	0, 0, 0, 417, 0, 0, 0, 0, 0, 0,
	408, 286, 239, 240, 448, 272, 334, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 407,
	0, 0, 0, 436, 447, 0, 0, 0, 0, 0,
	446, 340, 0, 359, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 366, 389, 401, 418,
	421, 0, 0, 0, 0, 244, 420, 0, 0, 0,
	0, 0, 0, 0, 0, 392, 0, 0, 0, 400,
	0, 0, 0, 0, 0, 416, 0, 0, 324, 325,
	326, 327, 289, 0, 261, 419, 349, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 413, 414, 285, 291, 431,
	293, 260, 339, 287, 398, 300, 0, 424, 0, 425,
	0, 0, 0, 0, 331, 296, 297, 363, 301, 309,
	352, 397, 337, 357, 258, 388, 364, 313, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 732, 0, 0, 376, 0, 237,
	266, 0, 241, 0, 307, 0, 348, 284, 0, 0,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 0, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 228, 229, 230, 231, 0, 336,
	0, 238, 233, 234, 235, 236, 0, 0, 0, 404,
	405, 406, 427, 390, 0, 445, 279, 0, 0, 306,
	0, 0, 0, 0, 0, 0, 0, 0, 449, 441,
	0, 0, 437, 0, 438, 0, 0, 0, 0, 0,
	365, 320, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 0, 0, 0, 0, 0, 0, 256, 188,
	439, 0, 440, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 370, 386, 257, 361, 399,
	262, 368, 252, 335, 358, 0, 0, 249, 384, 367,
	317, 298, 299, 248, 0, 353, 277, 290, 274, 333,
	0, 383, 411, 273, 402, 0, 394, 251, 0, 393,
	332, 380, 385, 318, 312, 250, 382, 316, 311, 302,
	281, 426, 303, 304, 294, 344, 310, 345, 295, 322,
	321, 323, 0, 0, 0, 0, 0, 422, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 396, 0, 0, 0, 0,
	0, 0, 369, 0, 0, 305, 0, 0, 0, 412,
	0, 356, 338, 0, 0, 0, 354, 308, 381, 346,
	387, 371, 395, 487, 347, 242, 372, 276, 319, 253,
	255, 271, 278, 280, 282, 283, 328, 329, 341, 360,
	373, 374, 375, 275, 263, 355, 264, 292, 265, 243,
	268, 267, 269, 362, 270, 245, 342, 379, 0, 288,
	351, 315, 246, 314, 343, 378, 377, 254, 403, 409,
	410, 0, 0, 415, 0, 0, 0, 423, 428, 429,
	430, 432, 433, 434, 435, 0, 0, 0, 0, 417,
	0, 0, 0, 0, 0, 0, 408, 286, 239, 240,
	448, 272, 334, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 330, 407, 0, 0, 0, 436,
	447, 0, 0, 0, 0, 0, 446, 340, 0, 359,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 366, 389, 401, 418, 421, 0, 0, 0,
	0, 244, 420, 0, 0, 0, 0, 0, 0, 488,
	0, 392, 0, 0, 0, 400, 0, 0, 0, 0,
	0, 416, 0, 0, 324, 325, 326, 327, 289, 0,
	261, 419, 349, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 413, 414, 285, 291, 431, 293, 260, 339, 287,
	398, 300, 0, 424, 0, 425, 0, 0, 0, 0,
	331, 296, 297, 363, 301, 309, 352, 397, 337, 357,
	258, 388, 364, 313, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 376, 0, 237, 266, 0, 241, 0,
	307, 0, 348, 284, 0, 0, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 0,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 231, 0, 336, 0, 238, 233, 234,
	235, 236, 0, 0, 0, 404, 405, 406, 427, 390,
	0, 445, 279, 0, 0, 306, 0, 0, 0, 0,
	0, 0, 0, 0, 449, 441, 0, 0, 437, 0,
	438, 0, 0, 0, 0, 0, 365, 320, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 0, 0,
	0, 0, 0, 0, 256, 188, 439, 0, 440, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 370, 386, 257, 361, 399, 262, 368, 252, 335,
	358, 0, 0, 249, 384, 367, 317, 298, 299, 248,
	0, 353, 277, 290, 274, 333, 0, 383, 411, 273,
	402, 0, 394, 251, 0, 393, 332, 380, 385, 318,
	312, 250, 382, 316, 311, 302, 281, 426, 303, 304,
	294, 344, 310, 345, 295, 322, 321, 323, 0, 0,
	0, 0, 0, 422, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 464, 0,
	0, 396, 0, 0, 0, 0, 0, 0, 369, 0,
	0, 305, 0, 0, 0, 412, 0, 356, 338, 0,
	0, 0, 354, 308, 381, 346, 387, 371, 395, 350,
	347, 242, 372, 276, 319, 253, 255, 271, 278, 280,
	282, 283, 328, 329, 341, 360, 373, 374, 375, 275,
	263, 355, 264, 292, 265, 243, 268, 267, 269, 362,
	270, 245, 342, 379, 0, 288, 351, 315, 246, 314,
	343, 378, 377, 254, 403, 409, 410, 0, 0, 415,
	0, 0, 0, 423, 428, 429, 430, 432, 433, 434,
	435, 0, 0, 0, 0, 417, 0, 0, 0, 0,
	0, 0, 408, 286, 239, 240, 448, 272, 334, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	330, 407, 0, 0, 0, 436, 447, 0, 0, 0,
	0, 0, 446, 340, 0, 359, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 366, 389,
	401, 418, 421, 0, 0, 0, 0, 244, 420, 0,
	0, 0, 0, 0, 0, 0, 0, 392, 0, 0,
	0, 400, 0, 0, 0, 0, 0, 416, 0, 0,
	324, 325, 326, 327, 289, 0, 261, 419, 349, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 413, 414, 285,
	291, 431, 293, 260, 339, 287, 398, 300, 0, 424,
	0, 425, 0, 0, 0, 0, 331, 296, 297, 363,
	301, 309, 352, 397, 337, 357, 258, 388, 364, 313,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 376,
	0, 237, 266, 0, 241, 0, 307, 0, 348, 284,
	0, 0, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 0, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	0, 0, 336, 238, 233, 234, 235, 236, 0, 0,
	0, 404, 405, 406, 427, 390, 0, 445, 454, 279,
	0, 0, 306, 0, 0, 0, 0, 0, 0, 0,
	449, 441, 0, 0, 0, 437, 0, 438, 0, 0,
	0, 0, 0, 365, 320, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 0, 0, 0, 0, 0,
	0, 256, 188, 439, 0, 440, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 370, 386,
	257, 361, 399, 262, 368, 252, 335, 358, 0, 0,
	249, 384, 367, 317, 298, 299, 248, 0, 353, 277,
	290, 274, 333, 0, 383, 411, 273, 402, 0, 394,
	251, 0, 393, 332, 380, 385, 318, 312, 250, 382,
	316, 311, 302, 281, 426, 303, 304, 294, 344, 310,
	345, 295, 322, 321, 323, 0, 0, 0, 0, 0,
	422, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 396, 0,
	0, 0, 0, 0, 0, 369, 0, 0, 305, 0,
	0, 0, 412, 0, 356, 338, 0, 0, 0, 354,
	308, 381, 346, 387, 371, 395, 350, 347, 242, 372,
	276, 319, 253, 255, 271, 278, 280, 282, 283, 328,
	329, 341, 360, 373, 374, 375, 275, 263, 355, 264,
	292, 265, 243, 268, 267, 269, 362, 270, 245, 342,
	379, 0, 288, 351, 315, 246, 314, 343, 378, 377,
	254, 403, 409, 410, 0, 0, 415, 0, 0, 0,
	423, 428, 429, 430, 432, 433, 434, 435, 0, 0,
	0, 0, 417, 0, 0, 0, 0, 0, 0, 408,
	286, 239, 240, 448, 272, 334, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 330, 407, 0,
	0, 0, 436, 447, 0, 0, 0, 0, 0, 446,
	340, 0, 359, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 366, 389, 401, 418, 421,
	0, 0, 0, 0, 244, 420, 0, 0, 0, 0,
	0, 0, 0, 0, 392, 0, 0, 0, 400, 0,
	0, 0, 0, 0, 416, 0, 0, 324, 325, 326,
	327, 289, 0, 261, 419, 349, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 413, 414, 285, 291, 431, 293,
	260, 339, 287, 398, 300, 0, 424, 0, 425, 0,
	0, 0, 0, 331, 296, 297, 363, 301, 309, 352,
	397, 337, 357, 258, 388, 364, 313, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	232, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 376, 0, 237, 266,
	0, 241, 0, 307, 0, 348, 284, 0, 0, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 0, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 229, 230, 231, 0, 336, 0,
	238, 233, 234, 235, 236, 0, 0, 0, 404, 405,
	406, 427, 390, 0, 445, 279, 0, 0, 306, 0,
	0, 0, 0, 0, 0, 0, 0, 449, 441, 0,
	0, 437, 0, 438, 0, 0, 0, 0, 0, 365,
	320, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 0, 0, 0, 0, 0, 0, 256, 188, 439,
	0, 440, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 370, 386, 257, 361, 399, 262,
	368, 252, 335, 358, 0, 0, 249, 384, 367, 317,
	298, 299, 248, 0, 353, 277, 290, 274, 333, 0,
	383, 411, 273, 402, 0, 394, 251, 0, 393, 332,
	380, 385, 318, 312, 250, 382, 316, 311, 302, 281,
	426, 303, 304, 294, 344, 310, 345, 295, 322, 321,
	323, 0, 0, 0, 0, 0, 422, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 396, 0, 0, 0, 0, 0,
	0, 369, 0, 0, 305, 0, 0, 0, 412, 0,
	356, 338, 0, 0, 0, 354, 308, 381, 346, 387,
	371, 395, 350, 347, 242, 372, 276, 319, 253, 255,
	271, 278, 280, 282, 283, 328, 329, 341, 360, 373,
	374, 375, 275, 263, 355, 264, 292, 265, 243, 268,
	267, 269, 362, 270, 245, 342, 379, 0, 288, 351,
	315, 246, 314, 343, 378, 377, 254, 403, 409, 410,
	0, 0, 415, 0, 0, 0, 423, 428, 429, 430,
	432, 433, 434, 435, 0, 0, 0, 0, 417, 0,
	0, 0, 0, 0, 0, 408, 286, 239, 240, 448,
	272, 334, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 330, 407, 0, 0, 0, 436, 447,
	0, 0, 0, 0, 0, 446, 340, 0, 359, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 366, 389, 401, 418, 421, 0, 0, 0, 0,
	244, 420, 0, 0, 0, 0, 0, 0, 0, 0,
	392, 0, 0, 0, 400, 0, 0, 0, 0, 0,
	416, 0, 0, 324, 325, 326, 327, 289, 0, 261,
	419, 349, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	413, 414, 285, 291, 431, 293, 260, 339, 287, 398,
	300, 0, 424, 0, 425, 0, 0, 0, 0, 331,
	296, 297, 363, 301, 309, 352, 397, 337, 357, 258,
	388, 364, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 376, 0, 237, 266, 0, 241, 0, 307,
	0, 348, 284, 0, 0, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 0, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 0, 336, 0, 238, 233, 234, 235,
	236, 0, 0, 0, 404, 405, 406, 427, 390, 0,
	445, 279, 0, 0, 306, 0, 0, 0, 0, 0,
	0, 0, 0, 449, 441, 0, 0, 437, 0, 438,
	0, 0, 0, 0, 0, 365, 320, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 0, 0, 0,
	0, 0, 0, 256, 188, 439, 0, 440, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	370, 1206, 257, 361, 399, 262, 368, 252, 335, 358,
	0, 0, 249, 384, 367, 317, 298, 299, 248, 0,
	353, 277, 290, 274, 333, 0, 383, 411, 273, 402,
	0, 394, 251, 0, 393, 332, 380, 385, 318, 312,
	250, 382, 316, 311, 302, 281, 426, 303, 304, 294,
	344, 310, 345, 295, 322, 321, 323, 0, 0, 0,
	0, 0, 422, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	396, 0, 0, 0, 0, 0, 0, 369, 0, 0,
	305, 0, 0, 0, 412, 0, 356, 338, 0, 0,
	0, 354, 308, 381, 346, 387, 371, 395, 350, 347,
	242, 372, 276, 319, 253, 255, 271, 278, 280, 282,
	283, 328, 329, 341, 360, 373, 374, 375, 275, 263,
	355, 264, 292, 265, 243, 268, 267, 269, 362, 270,
	245, 342, 379, 0, 288, 351, 315, 246, 314, 343,
	378, 377, 254, 403, 409, 410, 0, 0, 415, 0,
	0, 0, 423, 428, 429, 430, 432, 433, 434, 435,
	0, 0, 0, 0, 417, 0, 0, 0, 0, 0,
	0, 408, 286, 239, 240, 448, 272, 334, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 330,
	407, 0, 0, 0, 436, 447, 0, 0, 0, 0,
	0, 446, 340, 0, 359, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 366, 389, 401,
	418, 421, 0, 0, 0, 0, 244, 420, 0, 0,
	0, 0, 0, 0, 0, 0, 392, 0, 0, 0,
	400, 0, 0, 0, 0, 0, 416, 0, 0, 324,
	325, 326, 327, 289, 0, 261, 419, 349, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 413, 414, 285, 291,
	431, 293, 260, 339, 287, 398, 300, 0, 424, 0,
	425, 0, 0, 0, 0, 331, 296, 297, 363, 301,
	309, 352, 397, 337, 357, 258, 388, 364, 313, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 232, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 376, 0,
	237, 266, 0, 241, 0, 307, 0, 348, 284, 0,
	0, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 0, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 229, 230, 231, 0,
	336, 0, 238, 233, 234, 235, 236, 0, 0, 0,
	404, 405, 406, 427, 390, 0, 445, 279, 0, 0,
	306, 0, 0, 0, 0, 0, 0, 0, 0, 449,
	441, 0, 0, 437, 0, 438, 0, 0, 0, 0,
	0, 365, 320, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 0, 0, 0, 0, 256,
	188, 439, 0, 440, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 370, 1204, 257, 361,
	399, 262, 368, 252, 335, 358, 0, 0, 249, 384,
	367, 317, 298, 299, 248, 0, 353, 277, 290, 274,
	333, 0, 383, 411, 273, 402, 0, 394, 251, 0,
	393, 332, 380, 385, 318, 312, 250, 382, 316, 311,
	302, 281, 426, 303, 304, 294, 344, 310, 345, 295,
	322, 321, 323, 0, 0, 0, 0, 0, 422, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 396, 0, 0, 0,
	0, 0, 0, 369, 0, 0, 305, 0, 0, 0,
	412, 0, 356, 338, 0, 0, 0, 354, 308, 381,
	346, 387, 371, 395, 350, 347, 242, 372, 276, 319,
	253, 255, 271, 278, 280, 282, 283, 328, 329, 341,
	360, 373, 374, 375, 275, 263, 355, 264, 292, 265,
	243, 268, 267, 269, 362, 270, 245, 342, 379, 0,
	288, 351, 315, 246, 314, 343, 378, 377, 254, 403,
	409, 410, 0, 0, 415, 0, 0, 0, 423, 428,
	429, 430, 432, 433, 434, 435, 0, 0, 0, 0,
	417, 0, 0, 0, 0, 0, 0, 408, 286, 239,
	240, 448, 272, 334, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 330, 407, 0, 0, 0,
	436, 447, 0, 0, 0, 0, 0, 446, 340, 0,
	359, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 366, 389, 401, 418, 421, 0, 0,
	0, 0, 244, 420, 0, 0, 0, 0, 0, 0,
	0, 0, 392, 0, 0, 0, 400, 0, 0, 0,
	0, 0, 416, 0, 0, 324, 325, 326, 327, 289,
	0, 261, 419, 349, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 413, 414, 285, 291, 431, 293, 260, 339,
	287, 398, 300, 0, 424, 0, 425, 0, 0, 0,
	0, 331, 296, 297, 363, 301, 309, 352, 397, 337,
	357, 258, 388, 364, 313, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 232, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 376, 0, 237, 266, 0, 241,
	0, 307, 0, 348, 284, 0, 0, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	0, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 229, 230, 231, 0, 336, 0, 238, 233,
	234, 235, 236, 0, 0, 0, 404, 405, 406, 427,
	390, 0, 445, 279, 0, 0, 306, 0, 0, 0,
	0, 0, 0, 0, 0, 449, 441, 0, 0, 437,
	0, 438, 0, 0, 0, 0, 0, 365, 320, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 0,
	0, 0, 0, 0, 0, 256, 188, 439, 0, 440,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 370, 386, 257, 361, 399, 262, 368, 252,
	335, 358, 0, 0, 249, 384, 367, 317, 298, 299,
	248, 0, 353, 277, 290, 274, 333, 0, 383, 411,
	273, 402, 0, 394, 251, 0, 393, 332, 380, 385,
	318, 312, 250, 382, 316, 311, 302, 281, 426, 303,
	304, 294, 344, 310, 345, 295, 322, 321, 323, 0,
	0, 0, 0, 0, 422, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 396, 0, 0, 0, 0, 0, 0, 369,
	0, 0, 305, 0, 0, 0, 412, 0, 356, 338,
	0, 0, 0, 354, 308, 381, 346, 387, 371, 395,
	350, 347, 242, 372, 276, 319, 253, 255, 528, 278,
	280, 282, 283, 328, 329, 341, 360, 373, 374, 375,
	275, 263, 355, 264, 292, 265, 243, 268, 267, 269,
	362, 270, 245, 342, 379, 0, 288, 351, 315, 246,
	314, 343, 378, 377, 254, 403, 409, 410, 0, 0,
	415, 0, 0, 0, 423, 428, 429, 430, 432, 433,
	434, 435, 0, 0, 0, 0, 417, 0, 0, 0,
	0, 0, 0, 408, 286, 239, 240, 448, 272, 334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 330, 407, 0, 0, 0, 436, 447, 0, 0,
	0, 0, 0, 446, 340, 0, 359, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 366,
	389, 401, 418, 421, 0, 0, 0, 0, 244, 420,
	0, 0, 0, 0, 0, 0, 0, 0, 392, 0,
	0, 0, 400, 0, 0, 0, 0, 0, 416, 0,
	0, 324, 325, 326, 327, 289, 0, 261, 419, 349,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 724, 0, 725, 0, 413, 414,
	285, 291, 431, 293, 260, 339, 287, 398, 300, 0,
	424, 0, 425, 165, 51, 157, 133, 331, 296, 297,
	363, 301, 309, 352, 397, 337, 357, 258, 388, 364,
	313, 158, 705, 0, 0, 0, 0, 0, 150, 0,
	0, 0, 159, 0, 232, 718, 0, 721, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 113, 0, 0, 0, 0, 0, 0, 0, 0,
	376, 0, 237, 266, 0, 241, 101, 307, 0, 348,
	284, 0, 162, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 0, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	231, 0, 0, 0, 238, 233, 234, 235, 236, 0,
	0, 0, 404, 405, 406, 427, 390, 0, 445, 165,
	51, 157, 133, 977, 978, 979, 976, 0, 0, 0,
	0, 449, 441, 0, 0, 0, 0, 158, 118, 119,
	0, 120, 121, 0, 150, 0, 0, 0, 159, 0,
	0, 0, 0, 720, 0, 714, 0, 701, 0, 0,
	0, 0, 0, 0, 717, 716, 0, 113, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 698, 101, 0, 0, 706, 0, 0, 162, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1441, 0, 0, 0, 0, 0, 132, 156,
	163, 0, 99, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 723, 0, 0, 0, 0, 713,
	155, 149, 148, 712, 0, 0, 0, 57, 0, 697,
	0, 0, 0, 704, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	702, 0, 0, 0, 118, 119, 0, 120, 121, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 699, 0, 0, 0, 0, 1441, 0,
	0, 0, 0, 0, 0, 0, 0, 722, 151, 152,
	153, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 703, 160, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 132, 156, 163, 0, 99, 0,
	0, 0, 0, 0, 109, 0, 0, 0, 154, 0,
	110, 0, 0, 0, 0, 0, 155, 149, 148, 1437,
	0, 0, 0, 57, 0, 1434, 0, 0, 0, 1436,
	1433, 1435, 1439, 1440, 0, 0, 0, 1438, 0, 0,
	0, 0, 0, 0, 0, 0, 1641, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 719,
	0, 0, 0, 0, 0, 0, 0, 111, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 50,
	1643, 0, 0, 0, 151, 152, 153, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 709, 0,
	0, 0, 0, 0, 0, 1437, 0, 0, 0, 0,
	160, 1434, 0, 0, 0, 1436, 1433, 1435, 1439, 1440,
	0, 3316, 0, 1438, 0, 0, 1641, 0, 52, 0,
	109, 1618, 0, 0, 154, 0, 110, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1643, 0, 0, 0, 0, 134, 0, 0, 0, 1422,
	1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432,
	1444, 1445, 1446, 1447, 1448, 1449, 1442, 1443, 0, 0,
	0, 0, 0, 111, 1641, 0, 0, 0, 1634, 0,
	0, 507, 506, 513, 503, 50, 0, 0, 0, 0,
	0, 1618, 0, 510, 511, 0, 512, 516, 0, 0,
	498, 0, 0, 0, 0, 112, 39, 0, 1643, 0,
	521, 0, 49, 5, 0, 0, 0, 116, 117, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 52, 1422, 1423, 1424, 1425, 1426,
	1427, 1428, 1429, 1430, 1431, 1432, 1444, 1445, 1446, 1447,
	1448, 1449, 1442, 1443, 3056, 0, 0, 1622, 1634, 1618,
	0, 507, 506, 513, 503, 0, 0, 0, 1628, 0,
	0, 134, 0, 510, 511, 0, 512, 516, 0, 0,
	498, 0, 0, 0, 0, 0, 0, 0, 1616, 1650,
	521, 0, 1617, 1619, 1621, 0, 1623, 1624, 1625, 1629,
	1630, 1631, 1633, 1636, 1637, 1638, 0, 0, 0, 0,
	0, 0, 0, 1626, 1635, 1627, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1634, 0, 0, 0,
	0, 112, 39, 525, 0, 0, 527, 1622, 49, 0,
	0, 526, 0, 116, 117, 0, 0, 1642, 1628, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1616, 1650,
	0, 0, 1617, 1619, 1621, 0, 1623, 1624, 1625, 1629,
	1630, 1631, 1633, 1636, 1637, 1638, 1639, 0, 0, 0,
	0, 0, 0, 1626, 1635, 1627, 499, 501, 500, 0,
	0, 0, 0, 1615, 0, 1622, 505, 0, 0, 0,
	1614, 0, 0, 0, 0, 0, 1628, 0, 509, 0,
	0, 0, 0, 0, 0, 524, 0, 1642, 0, 0,
	0, 0, 502, 0, 1632, 0, 1616, 1650, 0, 0,
	1617, 1619, 1621, 1620, 1623, 1624, 1625, 1629, 1630, 1631,
	1633, 1636, 1637, 1638, 0, 507, 506, 513, 503, 0,
	0, 1626, 1635, 1627, 0, 0, 1639, 510, 511, 0,
	512, 516, 0, 0, 498, 0, 499, 501, 500, 0,
	0, 0, 0, 1615, 521, 0, 505, 0, 0, 0,
	1614, 0, 0, 0, 0, 1642, 0, 0, 509, 0,
	0, 0, 0, 0, 0, 524, 0, 0, 0, 0,
	0, 0, 502, 0, 1632, 0, 493, 0, 0, 0,
	0, 0, 0, 1620, 0, 0, 0, 525, 0, 0,
	527, 0, 0, 0, 1639, 526, 504, 508, 514, 0,
	515, 517, 0, 0, 518, 519, 520, 0, 0, 522,
	523, 1615, 0, 0, 0, 0, 0, 0, 1614, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1632, 0, 0, 0, 0, 0, 0, 0,
	0, 1620, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 504, 508, 514, 0,
	515, 517, 0, 0, 518, 519, 520, 0, 0, 522,
	523, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	499, 501, 500, 0, 0, 0, 0, 0, 0, 0,
	505, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 509, 0, 0, 0, 0, 0, 0, 524,
	0, 0, 0, 0, 0, 0, 502, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	504, 508, 514, 0, 515, 517, 0, 0, 518, 519,
	520, 0, 0, 522, 523,
}

var yyPact = [...]int{
	37611, -1000, -1000, -1000, -321, 10295, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 35526,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 35526,
	-315, 34980, 34980, -1000, -1000, 2155, -1000, 34433, 11429, 35526,
	328, 318, 35526, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 689,
	-1000, 33887, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 585,
	38239, 37164, 8030, -264, -1000, 2911, -105, 2066, 819, 825,
	1041, 1041, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 37549, 704, 33341, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 3012, 285, 704, 13620, 13,
	12, 2911, 346, 234, -1000, 1072, 37737, 158, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 8030,
	8030, 10295, -354, 10295, 8030, 35526, 35526, -1000, -1000, -1000,
	-1000, 585, 38239, 8030, 2066, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 12, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 4191, -1000, 1321, -1000, -1000, -1000, -1000, -1000,
	2476, 1320, 2065, 536, 35526, -1000, 1304, 536, -1000, -1000,
	-1000, 2911, 2911, -1000, 35526, 35526, 76, 1492, -1000, 335,
	323, 341, 1302, -1000, -1000, -1000, -1000, -1000, -1000, 432,
	2838, -1000, 35526, 35526, 2497, 35526, -1000, 1861, 474, 38433,
	2686, 1164, 719, 2522, -1000, -1000, 2475, -1000, 197, 208,
	141, 289, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 175,
	-1000, 2764, -1000, -1000, 184, -1000, -1000, 160, -1000, -1000,
	-1000, 6, -1000, -1000, -1000, -1000, -1000, -1000, -94, -1000,
	-1000, 844, 1952, 8030, -1000, 1796, -1000, 3284, -1000, -1000,
	-1000, -1000, 5204, 9722, 9722, 9722, 9722, -1000, -1000, 2329,
	8030, 2466, 2465, 2462, -1000, -1000, -1000, -1000, -1000, 1301,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1697,
	-1000, -1000, -1000, 9158, -1000, 2461, 2458, 2457, 2455, 2454,
	2450, 2449, 2443, 2437, 2436, 2435, 2430, 2428, 2427, 2208,
	10856, 2426, 2064, 2062, 2425, 2424, 2418, 2060, 2208, 2208,
	2417, 2415, 2414, 2412, 2411, 2408, 2406, 2403, 2401, 2396,
	2392, 2387, 2386, 2380, 2379, 2377, 2376, 2375, 2374, 2373,
	2372, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1244, -1000, 2365, 2671, 2737, 2264,
	2814, 2755, 2735, 2728, 2724, 1848, -1000, -1000, 61, -1000,
	-139, -1000, -1000, 803, -1000, 794, -1000, 35526, 35526, 35526,
	675, 580, 580, 580, 580, 580, 580, 651, 580, 35526,
	-153, 686, 684, 680, 580, -1000, -1000, -1000, -1000, -1000,
	-1000, -117, -1000, 1491, 1490, 2568, 770, -1000, -1000, -1000,
	-1000, 1118, 35526, -1000, 2289, 1410, 1410, 2772, 511, 508,
	506, 1410, 367, -1000, 1420, 1420, 1420, 1420, 1410, 383,
	495, 2737, 2737, 4, 1420, -28, 1410, 1410, -28, 1410,
	1410, 1410, 149, -308, -1000, -1000, -1000, 1420, 1420, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2758, 2753, 585, 35526,
	125, 35526, 585, 585, 585, 623, -75, 36618, 36072, 1861,
	473, 453, 1148, 1481, -1000, 1417, 35526, 35526, 1417, 1417,
	18039, 17493, -1000, 35526, -1000, 2737, 2264, -1000, 2195, 2106,
	2191, 2264, 585, 585, 585, 585, 585, 152, 585, 585,
	585, 585, 35526, 35526, 32795, 585, 585, 6896, 6896, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 10295, 1656,
	1775, 156, -72, -317, 193, -1000, -1000, 35526, 2654, 155,
	-1000, -1000, -1000, 2224, -1000, 2288, 2288, 2288, 2288, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2288, 2288,
	2313, 2363, -1000, -1000, 2284, 2284, 2284, 2224, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2310, 2310, 2312, 2312, 2310, 35526, 8030,
	35526, 2673, 321, 2359, -1000, 35526, 314, 2737, 2671, 2737,
	-1000, -1000, 1295, 1834, 2058, -1000, -1000, 335, 1381, -1000,
	976, -1000, -1000, -1000, -1000, 35526, -94, 310, -1000, -1000,
	2047, 2358, -1000, 482, 1150, 1193, -1000, 148, 38159, 28420,
	1861, 28420, 35526, -1000, -1000, -1000, -1000, -1000, -1000, 3,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 176, -1000, 8030, 8030, 8030, 8030, 8030,
	-1000, 635, 8594, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	9722, 9722, 9722, 9722, 9722, 9722, 9722, 9722, 9722, 9722,
	9722, 9722, 2326, 1465, 9722, 9722, 9722, 9722, 2106, 2727,
	1136, 229, -1000, -1000, -1000, -1000, -1000, 1529, 1952, 8030,
	8030, 8030, 35526, -1000, -1000, 37645, 8030, 8030, 37731, 8030,
	2722, 8030, 8030, 8030, 2190, 3732, 35526, 8030, -1000, 2180,
	2177, -1000, -1000, 1762, 8030, -1000, -1000, 8030, -1000, -1000,
	8030, 9722, 8030, -1000, -1000, -1000, 307, 2722, 2722, 1467,
	8030, 8030, 2722, 2722, 2722, 1460, 2722, 2722, 2722, 2722,
	2722, 2722, 2722, 2722, 2176, 2175, 2161, 2737, -264, 6332,
	-1000, -269, 2671, 8030, -1000, -1000, 8030, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2057, 2056, -330, -34, 814,
	806, 810, -1000, 2708, -1000, 2357, 2331, 1294, 580, -1000,
	-118, 35526, 1576, 35526, 28420, 35526, 35526, 1861, 35526, 35526,
	-184, 580, -162, 580, 580, 580, 35526, -1000, 2597, 28420,
	2577, 623, -1000, 35526, 1118, 2707, 35526, 2824, 9722, 9722,
	-1000, 32249, 1420, 1410, 1410, -1000, -1000, 35526, -1000, -1000,
	-1000, 1420, 35526, 1420, 1420, 2824, 1420, -1000, -1000, -1000,
	1410, 1410, -1000, -1000, -1000, -1000, 1420, 1420, -1000, -1000,
	2824, 35526, -2, 2824, 2824, -9, -1000, -1000, -1000, 35526,
	35526, 580, 35526, -1000, 35526, 35526, -1000, -1000, 35526, 3341,
	35526, 31703, 2745, -1000, 28420, 35526, 35526, 25690, -1000, 1036,
	-1000, -69, -1000, -36, -75, 1417, -75, 1417, -1000, 480,
	521, 16401, 430, 28420, 4640, -1000, -1000, 1417, 1417, 4640,
	4640, 1334, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1084,
	-1000, 164, 2671, -1000, -1000, -1000, -1000, -1000, 35526, 35526,
	28420, 1861, 35526, 585, 35526, 35526, 35526, 35526, -1000, 2330,
	-1000, 2685, 35526, 35526, 1183, -1000, -1000, 13074, 1293, 1183,
	-1000, 1604, -1000, 8030, 10295, -294, 8030, 10295, 10295, 8030,
	10295, -1000, 8030, 139, -1000, -1000, -1000, -1000, 1833, -1000,
	1820, -1000, -1000, -1000, -1000, -1000, 2052, 2052, -1000, 1819,
	-1000, -1000, -1000, -1000, 1818, -1000, -1000, 1816, -1000, -1000,
	-1000, 2156, 844, -1000, 2051, 2521, -265, -1000, 15292, 35526,
	35526, -1000, -1000, -265, -1000, 14729, 35526, 2671, -1000, 2671,
	35526, -1000, 2770, -1000, 335, 301, -1000, -1000, -1000, -1000,
	-1000, -1000, 1290, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1077, -1000, 35526, -1000, -1000, 148, 28420, 29512,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 207, -1000, -1000,
	162, -1000, 669, 116, 1380, -1000, -1000, 127, 163, 86,
	711, 1952, -1000, 1598, 1598, 1588, -1000, 514, -1000, -1000,
	-1000, -1000, 2329, -1000, -1000, -1000, 2762, 1844, -1000, 1605,
	1605, 1343, 1343, 1343, 1343, 1343, 1445, 1445, -1000, -1000,
	-1000, 5204, 2326, 9722, 9722, 9722, 9722, 550, 550, 3418,
	3516, -1000, 8030, 1599, -1000, 8030, 2240, 1857, 1252, 1281,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2153, 2151, 1824, 2836, 2150, 8030, -1000, -1000, 1367, 1363,
	1362, -1000, 1920, 7466, -1000, -1000, -1000, 2148, 1271, 2146,
	-1000, -1000, -1000, 2145, 1339, 1039, 2143, 1535, 2137, 1068,
	8030, 8030, 8030, 2136, 1332, 1331, 8030, 8030, 8030, 8030,
	2135, 8030, 8030, 8030, 8030, 8030, 8030, 8030, 8030, 37,
	37, 37, -1000, -1000, 1330, -1000, 1952, -1000, 2049, -1000,
	1153, 1062, -1000, 1831, -1000, -1000, -1000, 2013, -1000, -1000,
	812, 783, 797, 35526, 952, 11975, 35526, 35526, -1000, 2289,
	2682, 138, -1000, 986, -1000, 116, -109, 331, 859, 2495,
	2834, 2325, 35526, 580, 35526, 35526, 35526, 2705, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 31157, -1000, 2323, 1326,
	-1000, -1000, 8030, -1000, -1000, 2487, 35526, 35526, 2824, 2824,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 35526, 2824, 2824,
	1410, 1420, -1000, -1000, 1420, -1000, -1000, 1420, -1000, 1269,
	-1000, 35526, -1000, -1000, -1000, 2289, 1059, -1000, 846, 566,
	566, 834, 661, 2812, 14166, -1000, 1433, 795, 668, 2619,
	195, -1000, 1433, -215, 1433, 1433, 1433, 1433, 1433, 1433,
	1433, 419, 415, 1433, 1433, 1433, 1433, 1433, 1433, 1433,
	1433, 1433, 1433, 1433, 823, 1433, 1433, 1433, 1433, 1433,
	-1000, 1433, 2322, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	484, 134, 2742, 230, 226, 986, 2740, 237, 2821, 1116,
	-1000, -1000, -1000, -1000, 20230, 20230, 15855, 20230, -1000, 1400,
	-75, -57, -1000, -1000, 1036, 4640, 1036, 4640, -1000, -1000,
	655, -1000, -1000, 859, -1000, 35526, 35526, -1000, -1000, 2320,
	1488, -1000, -1000, 10856, -1000, 4640, 4640, -1000, -1000, 20776,
	35526, -1000, -103, -1000, -80, 2769, 1028, -1000, -1000, 1034,
	859, 2520, 35526, 1028, 1028, -1000, -1000, 11975, 35526, -1000,
	-1000, 2824, 6896, -1000, 25690, -1000, -1000, 30604, -1000, 30058,
	2824, 1498, -1000, 10295, 1724, 150, -1000, 185, -326, 143,
	1595, 142, 1952, -1000, -1000, 2132, 2131, 1325, -1000, 1318,
	2127, 1315, 1313, -1000, -38, -1000, 2656, 875, -1000, 2319,
	-1000, 1311, 2562, -1000, 1023, -1000, 1487, 1310, -1000, 875,
	1307, 2561, 1023, 2769, -1000, 1262, 75, -1000, -1000, 35526,
	2047, 1306, 29512, 955, -1000, 650, 1213, 1204, -1000, 28420,
	166, 28420, -1000, 28420, -1000, -1000, 312, -1000, 35526, 2661,
	-1000, -1000, -1000, 2013, 1485, -345, -1000, -1000, -1000, -1000,
	-1000, 1298, -1000, 550, 550, 3418, 3455, -1000, 9722, -1000,
	9722, 2697, 1463, -1000, 8030, 1692, 3333, 3333, 2391, 19131,
	35526, -1000, -1000, 8030, 8030, -1000, 2636, -1000, -1000, -1000,
	-1000, 8030, 8030, 1708, -1000, 35526, -1000, -1000, -1000, -1000,
	19131, -1000, 9722, -1000, 8030, 1112, 2624, 1297, 37, 37,
	37, 2582, 2563, 2559, 1287, 37, 2548, 2451, 2444, 2404,
	2393, 2370, 2361, 2354, -1000, 2314, -1000, -1000, 6332, -1000,
	-38, 8030, 8030, 8030, 2612, -1000, -1000, 115, -1000, 1482,
	-1000, -1000, -1000, 780, 154, 2125, 1020, -1000, -1000, 35526,
	-1000, -1000, -1000, 2124, 1017, -1000, -1000, -1000, 4287, 2288,
	2288, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2288, 2288, 2313, -1000, -1000, 2284, 2284, 2284, 2224, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2310, 2310,
	2312, 2312, 2310, -1000, 2289, 2704, -1000, 46, 1433, 497,
	28420, 447, -1000, 35526, 1699, 1480, 2519, 291, 2635, 35526,
	26236, 247, 35526, 2305, 2298, 2297, 290, 4287, 35526, 1090,
	-1000, 1198, 37737, -1000, 35526, 1952, -1000, 1861, -1000, 1410,
	-1000, -1000, 2824, 1273, -1000, -1000, 2824, 1410, 1410, 1420,
	35526, -1000, 2703, 3341, -1000, 35526, -1000, -1000, -1000, 640,
	-1000, 811, 580, 35526, 1637, 811, 1634, 2295, -1000, -1000,
	35526, 35526, 35526, 35526, -1000, -1000, 35526, -1000, 35526, 35526,
	35526, 35526, -1000, 35526, 35526, -1000, 35526, 1626, 1625, 2637,
	-1000, 1433, 1433, 745, -1000, -1000, 468, -1000, 1815, 1814,
	1812, 1811, 2042, 2041, 2039, 1433, 1433, 1809, 2037, 28966,
	2033, 934, 1808, 1807, 1805, 1783, 2031, 931, -1000, 2024,
	1768, 1766, 1764, 35526, 2293, 1959, -1000, -1000, 46, 1433,
	222, 35526, 1476, 497, 330, 1855, 16947, 35526, 25690, 25690,
	25690, 25690, -1000, 2546, 2545, -1000, 2542, 2538, 2549, 35526,
	25690, 2289, -1000, 28966, -1000, -1000, -1000, 2106, 1283, 2864,
	873, 8030, -1000, -1000, -73, -50, -1000, -1000, -1000, 28420,
	2022, 430, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2853, 35526, 35526, 594, 2123, -1000, 2822, -1000, 979, -1000,
	-1000, 1195, -1000, 2822, 1542, -322, 10295, 1518, 1422, -1000,
	8030, 10295, 8030, -295, 209, -298, -1000, -1000, -1000, 2021,
	-1000, -1000, -1000, 1792, -1000, 1791, 53, 59, 1624, -265,
	6332, 340, 35526, -265, 35526, 6332, -1000, 35526, 308, -265,
	-1000, 35526, 1782, -1000, -1000, -1000, 2827, 28420, 1861, 1392,
	27874, -1000, 183, -1000, 203, 479, 2020, -1000, 657, 114,
	2017, 2013, -1000, -1000, -1000, 9722, -1000, -1000, -1000, -1000,
	1952, 8030, 2122, -1000, 785, 785, 2118, 2116, -1000, 2288,
	2288, -1000, 2224, 2284, 2224, 785, 785, 2115, -1000, 1890,
	2279, -1000, 2273, 2225, 8030, -1000, 2113, 3303, 1275, -124,
	37, 37, -1000, -1000, -1000, -1000, 37, 37, 37, 37,
	-1000, 37, 37, 37, 37, 37, 37, 37, 37, 538,
	-1000, 53, 1952, 1952, -1000, -1000, 2643, -1000, 2013, 2011,
	-1000, 2010, 2009, 952, 4287, 692, 11975, 2638, 2695, 317,
	1858, -1000, -1000, -1000, 27328, 456, -1000, -1000, -1000, 540,
	241, 1779, 426, -1000, 35526, 237, 2603, 1471, 2006, 35526,
	-1000, -1000, -1000, -1000, -1000, 2635, -1000, 1100, 266, 1257,
	-1000, 1433, 1433, 12521, 2694, 2282, 2281, 12521, 12521, 12521,
	279, 1475, -1000, 536, 1147, 1177, 25690, 35526, -1000, 25144,
	2112, -1000, 859, 2824, -1000, 35526, -1000, 2824, 2824, 1410,
	-1000, 317, -1000, 2658, 4287, -1000, 35526, -1000, 35526, -1000,
	35526, 35526, 580, 8030, 2658, 35526, 633, -1000, -1000, 897,
	277, 560, 560, 974, -1000, 2677, -1000, -1000, -1000, 35526,
	-1000, -1000, -1000, -1000, -1000, -1000, 19131, 19131, 2738, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2002, 1996, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 35526, 1250, -1000, 1454, 1858, 27328, 1450, 1417,
	1971, 456, 1699, 1448, -1000, 1970, -1000, 889, 35526, 35526,
	-1000, 1070, -1000, 1447, 2485, 2518, 2485, -1000, -1000, -1000,
	-1000, 2534, -1000, 2287, -1000, -1000, 1070, -1000, -1000, -1000,
	-1000, -1000, 873, -1000, 2768, 811, 811, 811, 2111, -1000,
	-1000, -1000, 955, 2108, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2820, 2811, 26782, 2820, -1000, -322, 1444,
	-1000, 1651, 135, 1574, 35526, -1000, -1000, -1000, 2107, 2101,
	-271, 66, 2809, 2807, 2847, -1000, 2097, 928, -265, -1000,
	-1000, 875, -1000, -1000, -1000, -265, -1000, 875, -1000, -1000,
	1861, -1000, 200, -1000, -1000, -1000, -1000, -1000, -1000, 96,
	-1000, 35526, -1000, 926, 113, -1000, 1952, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 8030, -1000, -1000, -1000, 2219, -1000, -1000,
	8030, 2095, 1969, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2857, -1000, 2805,
	-271, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 4287,
	-1000, 1726, 317, -185, -1000, 1966, 111, -1000, -1000, -1000,
	1964, 1962, 1776, -1000, -1000, 1747, 1251, 121, -1000, -1000,
	-1000, -1000, -1000, -1000, 1855, 1780, 1443, -348, -1000, 2278,
	-1000, 1433, 1433, 1433, 35526, -1000, 26236, 1726, 1726, 2092,
	895, -1000, -1000, -1000, -1000, 317, 24052, 12521, 2091, 2089,
	2084, 543, 1441, 1435, -1000, 1774, 20230, 25690, 25144, 1003,
	-1000, 1166, -1000, -1000, -1000, 2824, -1000, -1000, 2824, -1000,
	-1000, -1000, 35526, 302, 2276, -1000, 2275, 2453, 342, 2263,
	2262, 35526, 2188, -1000, 2658, 35526, 549, 2625, -1000, -1000,
	-1000, -1000, -1000, 374, -1000, 35526, -1000, -1000, 1333, -1000,
	19131, -1000, -1000, 1247, -1000, 1959, 1958, -1000, 111, 1957,
	4640, -1000, -1000, 2603, 1955, -1000, 35526, 889, 889, 2857,
	35526, 6332, -1000, -1000, 8030, 2257, -1000, 8030, -1000, -1000,
	-1000, -1000, -1000, 2242, 2613, -1000, -1000, -1000, -1000, -1000,
	-1000, 8030, 8030, -1000, -1000, 570, 10295, -299, 205, -1000,
	-1000, -1000, -273, 1954, -1000, -1000, 2803, 1939, 1872, 35526,
	-1000, 875, 875, 859, -1000, -1000, -9, 421, -1000, 2076,
	-1000, 1977, 37, -1000, 128, 8030, -273, -178, -1000, -1000,
	-185, -1000, 316, -1000, -1000, 311, -1000, -1000, 239, -1000,
	-1000, 1742, 488, -1000, -1000, -1000, 1936, 1667, 1886, 23506,
	19131, 19677, 1929, -1000, -1000, -1000, -1000, -190, 12521, -1000,
	1224, -1000, 1433, 1433, 2079, 38158, 176, 38158, 827, 1418,
	-1000, 1770, -1000, 1769, -1000, 2824, 1003, 1166, -1000, -1000,
	1309, -1000, -1000, -1000, -1000, 302, -1000, -1000, 1601, 9722,
	-1000, -1000, 1923, 19677, 665, 1442, 1438, 667, 2233, -1000,
	381, 2846, -1000, -1000, -1000, 742, 2232, -1000, 1620, 1609,
	-1000, 35526, -1000, 23506, 23506, 309, 309, 23506, 23506, 2230,
	560, -1000, -1000, 9722, -1000, -1000, -1000, -1000, 1433, 1322,
	-1000, -1000, -1000, -1000, -1000, -1000, 1780, -1000, -1000, 2737,
	-1000, -1000, 1952, 35526, 1952, 24598, -1000, 2802, 2801, 1952,
	844, -1000, -322, 35526, 35526, -281, 1757, -1000, 1922, 62,
	-1000, -1000, 845, -283, 45, 72, 1437, -1000, -1000, -1000,
	2078, -1000, 694, -1000, -1000, -1000, 844, -281, 35526, -1000,
	379, -1000, -1000, 469, 1918, -1000, -1000, 232, -1000, -1000,
	-1000, -1000, -1000, 106, -1000, 1434, 1210, -1000, 2224, 8030,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 24052, 1726,
	1726, -190, 533, 38090, -1000, 795, -1000, -9, 533, 431,
	220, -1000, 1756, -1000, -1000, 2857, -1000, -1000, -1000, 3418,
	-1000, -1000, -1000, -1000, -1000, -1000, 1916, 1910, -1000, -1000,
	-1000, -1000, -1000, 1754, 2214, -53, 2732, 1908, -1000, -1000,
	2212, 1200, 1192, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1170, 1168, 23506, -1000, -1000, 3418, 19131, 1433, -1000, -1000,
	1154, 1129, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2211,
	-1000, -1000, 2800, -1000, 1907, 611, 52, 72, -1000, 2798,
	60, 2797, 2793, 1887, -1000, -1000, 836, -267, 35, 27,
	24, -1000, -1000, -1000, 8030, -1000, 2692, -1000, 173, -1000,
	95, -1000, -1000, -1000, 1886, 1883, -1000, 23506, 2677, 1965,
	-1000, -1000, -1000, -1000, 344, 2783, 38158, -1000, 1433, -1000,
	344, -1000, 288, -1000, 1409, -1000, 1719, -1000, 2737, -1000,
	-1000, 1925, 8030, 2208, 1433, 1895, -174, 23506, 2395, 2227,
	2221, 1973, 1105, -1000, 19131, -1000, -1000, 22960, 35526, 1872,
	-1000, 2205, 1715, 66, 47, 2782, -1000, 1872, 2781, 1872,
	1872, -1000, 1580, -1000, 22, 20, 18, -1000, -1000, -1000,
	-1000, 1877, -1000, -1000, -1000, -1000, 271, -1000, -1000, 2677,
	-1000, 2778, 470, -1000, 19131, -1000, -1000, -1000, 1709, -1000,
	-1000, -1000, 1924, -1000, 35526, -1000, 2516, -1000, 145, 1102,
	271, 309, 271, 309, 271, 309, 271, 309, 165, -1000,
	-1000, -1000, 1097, -1000, -1000, 2720, 18585, 43, -1000, -1000,
	-1000, 1875, -1000, 1872, -1000, -1000, 836, -1000, -1000, -1000,
	-313, -1000, 1433, 1871, 257, -1000, -1000, -1000, 22414, 359,
	357, 336, -1000, 542, -1000, -1000, -1000, 560, -1000, -1000,
	2503, 2502, 2832, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 35526, -1000, 35526, -1000, 1078, -1000, -1000,
	-1000, 1160, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1870,
	1702, -1000, 35526, -1000, 35526, 352, 1682, 9722, 2203, 9722,
	2201, 365, 2200, -1000, -1000, 2843, -1000, 2840, 748, 748,
	271, 271, 271, 271, -1000, 835, -1000, 1432, -1000, 21868,
	35526, -1000, -1000, -1000, 1076, 2199, 2776, -1000, 2925, 35526,
	2447, 35526, 2197, 1419, 9722, -1000, -1000, -1000, 1741, 389,
	-1000, 35526, 5768, -1000, 847, -1000, -1000, 529, 361, -1000,
	1073, -1000, 1069, 21322, 1680, 2110, -1000, -1000, -1000, -1000,
	-1000, 1952, 35526, 1047, -1000, 35526, 347, -1000, -1000, -1000,
	1014, -1000, -1000, -1000, -1000, 529, 2560, -1000, 1616, -1000,
	-1000, 38010, 649, -1000, -1000, 38010, 319, -1000, 518, 2053,
	-1000, -1000, 956, -1000, 35526, 653, 8030, -1000, 319, 38158,
	-1000, 8030, 943, -1000, 38158, 905, -1000, -1000,
}

var yyPgo = [...]int{
	0, 154, 2870, 231, 152, 3456, 73, 239, 213, 207,
	238, 3454, 3453, 2652, 2642, 3452, 3451, 3450, 3435, 3434,
	3433, 3433, 3431, 3413, 3412, 3411, 3410, 3409, 3408, 3407,
	3406, 3405, 3404, 3403, 3401, 3399, 3397, 3395, 3394, 3393,
	3390, 3389, 236, 3388, 3387, 3386, 3384, 3383, 3379, 3375,
	3374, 3373, 3372, 3371, 3370, 3368, 3367, 3366, 3364, 3362,
	3361, 3360, 3358, 3357, 3356, 3355, 3353, 3351, 3350, 3349,
	3346, 3345, 3342, 3341, 204, 3340, 2640, 3335, 3330, 3329,
	3328, 3327, 3326, 3324, 226, 3323, 3322, 3321, 3320, 3318,
	3316, 3312, 3306, 3300, 3299, 3298, 258, 3295, 3294, 3291,
	3290, 3289, 3286, 241, 3282, 148, 214, 3281, 3279, 3278,
	3277, 3276, 3264, 221, 202, 66, 3263, 44, 3261, 206,
	3259, 130, 3258, 125, 3257, 3256, 3255, 3254, 3249, 3246,
	3245, 3244, 3243, 3242, 3241, 3237, 3236, 3235, 3234, 3232,
	84, 3231, 244, 3230, 67, 3229, 3228, 106, 297, 209,
	234, 2441, 240, 235, 179, 150, 85, 3227, 2647, 3226,
	141, 220, 133, 24, 3224, 156, 3222, 136, 43, 46,
	233, 124, 54, 139, 121, 3216, 203, 98, 97, 3215,
	3214, 169, 243, 172, 3213, 110, 3208, 3207, 3205, 3202,
	183, 170, 3201, 3199, 111, 3198, 3197, 123, 3194, 70,
	180, 146, 174, 3193, 193, 119, 107, 105, 165, 3191,
	99, 3189, 3187, 3186, 3185, 163, 3184, 3183, 115, 61,
	3182, 3181, 3180, 68, 3178, 45, 3177, 3176, 31, 3174,
	62, 3170, 3168, 3165, 3164, 3163, 3162, 3161, 3160, 3159,
	3158, 3155, 69, 3153, 3152, 12, 17, 19, 3151, 26,
	3150, 147, 3149, 3148, 3147, 83, 81, 3146, 82, 1,
	47, 86, 3145, 217, 216, 91, 131, 3143, 405, 3142,
	3141, 3140, 140, 3139, 560, 3138, 3137, 3136, 3134, 3133,
	118, 3132, 212, 49, 3131, 113, 127, 3130, 37, 55,
	185, 189, 3124, 3123, 3120, 22, 188, 87, 29, 0,
	3119, 132, 3113, 3110, 3109, 242, 3108, 223, 175, 145,
	314, 265, 160, 3105, 3104, 71, 3103, 137, 64, 56,
	116, 10, 23, 157, 3098, 14, 164, 3095, 197, 3094,
	343, 7, 128, 3093, 3092, 32, 276, 3091, 3090, 3086,
	109, 3083, 3080, 151, 77, 3079, 3077, 3076, 3075, 34,
	3074, 36, 20, 3072, 92, 3057, 232, 3055, 225, 144,
	166, 155, 134, 215, 224, 72, 74, 3054, 1621, 129,
	94, 18, 3053, 219, 3052, 168, 117, 3051, 78, 3047,
	230, 359, 200, 3046, 167, 8, 41, 35, 3045, 9,
	3044, 177, 196, 3043, 3042, 21, 51, 3041, 30, 3040,
	3039, 3037, 3036, 5, 3034, 3033, 3032, 2, 4, 3031,
	3, 191, 3030, 3029, 3025, 3024, 48, 280, 3021, 138,
	162, 161, 3019, 89, 3018, 3017, 3016, 2488, 3014, 248,
	3013, 3012, 3011, 3010, 3009, 3008, 3006, 3003, 3002, 96,
	39, 3000, 2998, 2996, 2995, 76, 122, 2994, 2991, 2989,
	2988, 38, 158, 2985, 28, 2983, 33, 27, 42, 2982,
	114, 2981, 15, 171, 2980, 2979, 16, 2978, 2976, 11,
	13, 2975, 2974, 108, 2973, 90, 25, 142, 93, 2972,
	2971, 79, 198, 126, 2970, 2969, 228, 229, 192, 2968,
	178, 222, 237, 2965, 210, 2964, 2961, 2960, 2958, 2956,
	2955, 996, 2953, 2952, 227, 65, 88, 101, 2951, 2950,
	2949, 75, 143, 104, 103, 57, 80, 2948, 100, 190,
	2947, 181, 2946, 2943, 95, 2942, 2941, 2940, 2936, 2929,
	173, 2927, 2925, 176, 218, 2921, 2915, 2914, 2910, 2897,
	2896, 259, 285, 2875,
}

//line mysql_sql.y:10432
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accessModeUnion() tree.AccessModeType {
	v, _ := st.union.(tree.AccessModeType)
	return v
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) accountsSetOptionUnion() *tree.AccountsSetOption {
	v, _ := st.union.(*tree.AccountsSetOption)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) alterAccountAuthOptionUnion() tree.AlterAccountAuthOption {
	v, _ := st.union.(tree.AlterAccountAuthOption)
	return v
}

func (st *yySymType) alterColPositionUnion() *tree.ColumnPosition {
	v, _ := st.union.(*tree.ColumnPosition)
	return v
}

func (st *yySymType) alterColumnOrderUnion() *tree.AlterColumnOrder {
	v, _ := st.union.(*tree.AlterColumnOrder)
	return v
}

func (st *yySymType) alterColumnOrderByUnion() []*tree.AlterColumnOrder {
	v, _ := st.union.([]*tree.AlterColumnOrder)
	return v
}

func (st *yySymType) alterTableUnion() tree.AlterTable {
	v, _ := st.union.(tree.AlterTable)
	return v
}

func (st *yySymType) alterTableOptionUnion() tree.AlterTableOption {
	v, _ := st.union.(tree.AlterTableOption)
	return v
}

func (st *yySymType) alterTableOptionsUnion() tree.AlterTableOptions {
	v, _ := st.union.(tree.AlterTableOptions)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) clusterByOptionUnion() *tree.ClusterByOption {
	v, _ := st.union.(*tree.ClusterByOption)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) connectorOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cstrUnion() *tree.CStr {
	v, _ := st.union.(*tree.CStr)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) elseIfClauseUnion() *tree.ElseIfStmt {
	v, _ := st.union.(*tree.ElseIfStmt)
	return v
}

func (st *yySymType) elseIfClauseListUnion() []*tree.ElseIfStmt {
	v, _ := st.union.([]*tree.ElseIfStmt)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) frameBoundUnion() *tree.FrameBound {
	v, _ := st.union.(*tree.FrameBound)
	return v
}

func (st *yySymType) frameClauseUnion() *tree.FrameClause {
	v, _ := st.union.(*tree.FrameClause)
	return v
}

func (st *yySymType) frameTypeUnion() tree.FrameType {
	v, _ := st.union.(tree.FrameType)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcArgUnion() tree.FunctionArg {
	v, _ := st.union.(tree.FunctionArg)
	return v
}

func (st *yySymType) funcArgDeclUnion() *tree.FunctionArgDecl {
	v, _ := st.union.(*tree.FunctionArgDecl)
	return v
}

func (st *yySymType) funcArgsUnion() tree.FunctionArgs {
	v, _ := st.union.(tree.FunctionArgs)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcReturnUnion() *tree.ReturnType {
	v, _ := st.union.(*tree.ReturnType)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) functionNameUnion() *tree.FunctionName {
	v, _ := st.union.(*tree.FunctionName)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) incrementByOptionUnion() *tree.IncrementByOption {
	v, _ := st.union.(*tree.IncrementByOption)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) indexVisibilityUnion() tree.VisibleType {
	v, _ := st.union.(tree.VisibleType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) isolationLevelUnion() tree.IsolationLevelType {
	v, _ := st.union.(tree.IsolationLevelType)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) killOptionUnion() tree.KillOption {
	v, _ := st.union.(tree.KillOption)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) maxValueOptionUnion() *tree.MaxValueOption {
	v, _ := st.union.(*tree.MaxValueOption)
	return v
}

func (st *yySymType) minValueOptionUnion() *tree.MinValueOption {
	v, _ := st.union.(*tree.MinValueOption)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) procArgUnion() tree.ProcedureArg {
	v, _ := st.union.(tree.ProcedureArg)
	return v
}

func (st *yySymType) procArgDeclUnion() *tree.ProcedureArgDecl {
	v, _ := st.union.(*tree.ProcedureArgDecl)
	return v
}

func (st *yySymType) procArgTypeUnion() tree.InOutArgType {
	v, _ := st.union.(tree.InOutArgType)
	return v
}

func (st *yySymType) procArgsUnion() tree.ProcedureArgs {
	v, _ := st.union.(tree.ProcedureArgs)
	return v
}

func (st *yySymType) procNameUnion() *tree.ProcedureName {
	v, _ := st.union.(*tree.ProcedureName)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectLockInfoUnion() *tree.SelectLockInfo {
	v, _ := st.union.(*tree.SelectLockInfo)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) stageCommentUnion() tree.StageComment {
	v, _ := st.union.(tree.StageComment)
	return v
}

func (st *yySymType) stageCredentialsUnion() tree.StageCredentials {
	v, _ := st.union.(tree.StageCredentials)
	return v
}

func (st *yySymType) stageStatusUnion() tree.StageStatus {
	v, _ := st.union.(tree.StageStatus)
	return v
}

func (st *yySymType) stageUrlUnion() tree.StageUrl {
	v, _ := st.union.(tree.StageUrl)
	return v
}

func (st *yySymType) startWithOptionUnion() *tree.StartWithOption {
	v, _ := st.union.(*tree.StartWithOption)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementOptionUnion() tree.StatementOption {
	v, _ := st.union.(tree.StatementOption)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) streamOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) subscriptionOptionUnion() *tree.SubscriptionOption {
	v, _ := st.union.(*tree.SubscriptionOption)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableLockUnion() tree.TableLock {
	v, _ := st.union.(tree.TableLock)
	return v
}

func (st *yySymType) tableLockTypeUnion() tree.TableLockType {
	v, _ := st.union.(tree.TableLockType)
	return v
}

func (st *yySymType) tableLocksUnion() []tree.TableLock {
	v, _ := st.union.([]tree.TableLock)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) transactionCharacteristicUnion() *tree.TransactionCharacteristic {
	v, _ := st.union.(*tree.TransactionCharacteristic)
	return v
}

func (st *yySymType) transactionCharacteristicListUnion() []*tree.TransactionCharacteristic {
	v, _ := st.union.([]*tree.TransactionCharacteristic)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClause2Union() *tree.WhenStmt {
	v, _ := st.union.(*tree.WhenStmt)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whenClauseList2Union() []*tree.WhenStmt {
	v, _ := st.union.([]*tree.WhenStmt)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) windowSpecUnion() *tree.WindowSpec {
	v, _ := st.union.(*tree.WindowSpec)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 529, 539, 539, 5, 5, 2, 6, 6, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 111, 111, 110, 527, 527, 527, 528,
	528, 107, 128, 127, 130, 130, 129, 129, 126, 126,
	122, 125, 125, 124, 124, 123, 118, 120, 120, 119,
	121, 121, 108, 96, 109, 472, 472, 471, 471, 470,
	470, 424, 424, 469, 469, 469, 468, 468, 468, 467,
	467, 466, 466, 465, 465, 463, 463, 464, 462, 461,
	461, 461, 459, 459, 459, 455, 455, 457, 456, 456,
	458, 450, 450, 453, 453, 451, 451, 451, 451, 454,
	449, 449, 449, 448, 448, 95, 95, 95, 370, 370,
	94, 94, 384, 384, 384, 384, 384, 382, 382, 382,
	382, 382, 382, 381, 381, 380, 380, 385, 385, 383,
	383, 383, 383, 383, 383, 383, 383, 383, 383, 383,
	383, 383, 383, 383, 383, 383, 383, 383, 383, 383,
	383, 383, 383, 383, 383, 383, 383, 383, 383, 383,
	383, 383, 383, 383, 383, 383, 383, 383, 383, 383,
	383, 383, 383, 383, 383, 383, 383, 383, 383, 85,
	85, 85, 85, 85, 90, 90, 90, 534, 534, 533,
	533, 535, 535, 535, 535, 536, 536, 88, 88, 88,
	89, 379, 379, 379, 86, 87, 87, 369, 369, 374,
	374, 373, 373, 373, 373, 373, 373, 373, 373, 373,
	373, 373, 373, 373, 378, 378, 378, 376, 376, 375,
	375, 377, 377, 79, 79, 79, 82, 81, 368, 368,
	368, 368, 368, 368, 368, 368, 368, 80, 80, 80,
	80, 80, 80, 75, 75, 75, 75, 75, 74, 74,
	76, 76, 366, 366, 365, 91, 91, 92, 531, 531,
	530, 532, 532, 532, 532, 93, 99, 99, 99, 99,
	99, 99, 99, 98, 98, 101, 101, 100, 102, 84,
	84, 84, 84, 84, 84, 83, 83, 83, 83, 83,
	83, 83, 83, 83, 497, 497, 497, 499, 499, 303,
	304, 540, 306, 302, 302, 302, 493, 493, 494, 495,
	496, 496, 496, 97, 11, 11, 11, 11, 11, 11,
	11, 73, 78, 250, 250, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 238, 238, 238,
	233, 233, 233, 233, 234, 234, 235, 235, 236, 236,
	236, 236, 237, 237, 296, 296, 255, 255, 255, 257,
	257, 256, 254, 252, 252, 252, 252, 252, 252, 253,
	253, 253, 258, 258, 71, 77, 77, 77, 510, 510,
	72, 521, 521, 427, 427, 317, 317, 316, 316, 316,
	316, 316, 316, 316, 316, 316, 316, 316, 316, 316,
	316, 316, 316, 432, 433, 313, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 49, 52, 48, 48, 48,
	355, 355, 47, 541, 541, 291, 291, 60, 59, 51,
	61, 62, 63, 64, 65, 66, 46, 58, 58, 58,
	58, 58, 58, 58, 58, 69, 69, 444, 444, 543,
	543, 543, 67, 68, 426, 426, 426, 57, 56, 55,
	54, 53, 53, 45, 45, 44, 44, 50, 134, 135,
	310, 310, 310, 312, 312, 308, 542, 542, 398, 398,
	311, 311, 43, 43, 43, 43, 70, 309, 309, 290,
	307, 307, 307, 12, 12, 10, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 24,
	25, 27, 363, 363, 360, 26, 18, 17, 17, 21,
	20, 16, 16, 19, 22, 23, 23, 9, 9, 9,
	9, 13, 13, 14, 155, 155, 205, 205, 505, 505,
	501, 501, 502, 502, 502, 503, 503, 504, 504, 103,
	438, 438, 438, 438, 438, 438, 8, 177, 177, 437,
	437, 437, 437, 437, 437, 367, 367, 482, 482, 482,
	483, 176, 176, 171, 171, 439, 439, 332, 484, 484,
	447, 447, 446, 446, 445, 445, 174, 174, 175, 175,
	158, 158, 114, 114, 452, 452, 452, 452, 460, 460,
	423, 423, 242, 242, 283, 283, 284, 284, 148, 148,
	149, 149, 149, 149, 149, 149, 490, 490, 492, 492,
	491, 173, 173, 169, 169, 170, 170, 170, 168, 168,
	167, 166, 166, 165, 163, 163, 163, 164, 164, 164,
	181, 181, 151, 151, 151, 150, 150, 150, 150, 150,
	268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
	268, 268, 152, 152, 498, 498, 498, 428, 428, 428,
	435, 435, 265, 265, 266, 266, 264, 264, 153, 153,
	154, 154, 154, 154, 263, 263, 262, 156, 156, 162,
	161, 161, 157, 157, 157, 157, 273, 273, 272, 272,
	272, 272, 106, 112, 112, 113, 180, 180, 271, 270,
	270, 270, 179, 179, 178, 178, 172, 172, 160, 160,
	160, 160, 269, 159, 267, 526, 526, 525, 525, 524,
	522, 522, 522, 523, 523, 523, 523, 474, 474, 474,
	474, 474, 297, 297, 297, 301, 301, 300, 300, 300,
	300, 300, 305, 7, 7, 7, 7, 7, 7, 31,
	31, 31, 31, 31, 31, 31, 31, 31, 31, 37,
	189, 190, 38, 191, 191, 192, 192, 193, 193, 194,
	195, 196, 196, 196, 196, 36, 182, 182, 183, 183,
	184, 184, 185, 186, 186, 186, 188, 187, 538, 538,
	537, 35, 35, 28, 141, 141, 142, 142, 142, 142,
	144, 144, 239, 239, 239, 143, 143, 145, 145, 145,
	506, 509, 507, 507, 511, 511, 511, 512, 512, 512,
	512, 513, 513, 29, 131, 136, 516, 516, 516, 515,
	515, 517, 517, 518, 518, 287, 287, 288, 288, 139,
	140, 140, 138, 133, 147, 147, 147, 147, 147, 132,
	137, 508, 514, 514, 514, 364, 364, 361, 362, 362,
	359, 358, 358, 358, 520, 520, 519, 519, 519, 298,
	298, 30, 354, 354, 356, 357, 357, 357, 348, 348,
	348, 348, 34, 352, 352, 353, 353, 353, 353, 353,
	349, 349, 351, 351, 347, 347, 347, 347, 347, 33,
	146, 146, 346, 346, 343, 343, 341, 341, 342, 342,
	340, 340, 340, 344, 344, 41, 40, 40, 40, 345,
	345, 32, 32, 32, 116, 115, 115, 115, 115, 286,
	286, 285, 285, 117, 39, 217, 217, 412, 412, 412,
	412, 412, 430, 430, 430, 413, 413, 413, 414, 414,
	414, 415, 415, 415, 415, 415, 429, 429, 431, 431,
	431, 386, 386, 387, 387, 387, 390, 390, 404, 404,
	405, 405, 403, 403, 410, 410, 409, 409, 408, 408,
	407, 407, 406, 406, 406, 406, 401, 401, 400, 400,
	388, 388, 388, 388, 388, 389, 389, 389, 399, 399,
	402, 402, 227, 227, 261, 261, 225, 225, 226, 226,
	260, 260, 223, 223, 224, 224, 224, 259, 259, 259,
	259, 259, 259, 259, 259, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 259, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 259, 259, 259, 259, 259, 259,
	259, 259, 480, 480, 481, 229, 229, 240, 240, 240,
	240, 240, 240, 228, 228, 230, 230, 206, 206, 204,
	204, 197, 197, 198, 198, 199, 199, 199, 203, 203,
	202, 202, 202, 202, 200, 200, 201, 201, 201, 201,
	201, 201, 372, 372, 477, 477, 478, 478, 473, 473,
	473, 476, 476, 476, 476, 476, 479, 479, 479, 475,
	475, 207, 281, 281, 281, 299, 299, 299, 299, 280,
	280, 280, 222, 222, 221, 221, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 371, 371,
	314, 314, 315, 315, 249, 248, 248, 248, 248, 248,
	246, 247, 245, 245, 245, 245, 245, 244, 244, 243,
	243, 243, 350, 350, 241, 241, 232, 232, 232, 231,
	231, 231, 411, 321, 321, 321, 321, 321, 321, 321,
	321, 321, 321, 321, 321, 321, 323, 323, 323, 323,
	323, 323, 323, 323, 323, 323, 323, 323, 323, 323,
	323, 323, 323, 323, 323, 323, 323, 323, 279, 279,
	279, 324, 324, 329, 329, 489, 489, 488, 208, 208,
	208, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	218, 218, 218, 395, 395, 395, 395, 396, 396, 396,
	396, 397, 397, 397, 393, 393, 394, 394, 333, 334,
	334, 436, 436, 391, 391, 392, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 443, 443, 443, 275, 275,
	275, 275, 275, 275, 275, 275, 275, 275, 275, 275,
	275, 275, 275, 275, 500, 500, 500, 485, 485, 485,
	486, 486, 486, 486, 486, 486, 486, 486, 486, 486,
	486, 486, 487, 487, 487, 487, 487, 487, 487, 487,
	487, 487, 487, 487, 487, 487, 487, 487, 487, 277,
	277, 277, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 276, 335, 335, 336,
	336, 440, 440, 440, 440, 440, 440, 441, 441, 442,
	442, 442, 442, 434, 434, 434, 434, 434, 434, 434,
	434, 434, 434, 434, 434, 434, 434, 434, 434, 434,
	434, 434, 434, 434, 434, 434, 434, 434, 434, 434,
	434, 434, 322, 274, 274, 274, 337, 330, 330, 331,
	331, 325, 325, 325, 325, 325, 325, 325, 327, 327,
	327, 327, 327, 327, 327, 327, 327, 327, 327, 320,
	320, 320, 320, 320, 320, 320, 320, 320, 320, 320,
	326, 326, 328, 328, 339, 339, 339, 338, 338, 338,
	338, 338, 338, 338, 220, 220, 220, 220, 319, 319,
	319, 318, 318, 318, 318, 318, 318, 318, 318, 318,
	318, 318, 318, 210, 210, 210, 210, 214, 214, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 215, 215, 215, 215, 215, 213, 213,
	213, 213, 213, 211, 211, 211, 211, 211, 211, 211,
	211, 211, 211, 211, 211, 211, 211, 211, 211, 211,
	211, 104, 105, 105, 212, 282, 282, 416, 416, 419,
	419, 417, 417, 418, 420, 420, 420, 421, 421, 421,
	422, 422, 422, 425, 425, 289, 289, 289, 295, 295,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292,
}

var yyR2 = [...]int{
	0, 1, 1, 1, 1, 3, 3, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 6, 4, 0, 1, 1, 0,
	1, 5, 2, 2, 6, 9, 6, 9, 4, 7,
	8, 0, 1, 1, 2, 4, 6, 1, 2, 4,
	0, 2, 10, 10, 2, 0, 2, 1, 3, 3,
	3, 0, 2, 1, 3, 5, 0, 2, 3, 1,
	3, 1, 1, 1, 3, 1, 1, 1, 1, 0,
	3, 3, 0, 3, 3, 0, 1, 3, 0, 1,
	3, 0, 2, 1, 2, 3, 4, 3, 3, 1,
	0, 1, 1, 0, 1, 8, 5, 7, 0, 3,
	8, 5, 1, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 4, 1, 3, 1,
	2, 2, 2, 2, 2, 2, 1, 2, 2, 2,
	2, 1, 1, 2, 2, 1, 1, 1, 1, 1,
	2, 2, 2, 1, 2, 1, 2, 2, 1, 2,
	1, 1, 2, 2, 1, 1, 1, 3, 2, 2,
	2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 4, 4, 1, 3, 3,
	1, 2, 2, 2, 1, 2, 2, 3, 4, 4,
	6, 1, 1, 1, 2, 4, 6, 1, 4, 1,
	3, 3, 4, 4, 4, 4, 3, 3, 2, 4,
	4, 2, 2, 2, 1, 1, 1, 1, 1, 1,
	3, 1, 3, 1, 1, 1, 2, 2, 0, 1,
	4, 2, 4, 1, 5, 3, 2, 1, 2, 2,
	4, 4, 5, 2, 1, 3, 4, 4, 1, 2,
	9, 7, 1, 3, 3, 1, 1, 3, 1, 3,
	2, 1, 2, 1, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 4, 4, 2, 4, 3, 3, 1,
	1, 1, 1, 1, 1, 2, 3, 4, 7, 2,
	3, 3, 4, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 2, 1,
	1, 1, 1, 6, 1, 1, 1, 1, 1, 1,
	1, 7, 4, 1, 3, 2, 4, 5, 5, 6,
	5, 5, 3, 2, 2, 1, 3, 4, 3, 7,
	5, 8, 2, 2, 1, 3, 2, 0, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 0, 1, 2, 1,
	3, 2, 1, 2, 2, 1, 2, 3, 2, 3,
	3, 3, 1, 1, 7, 7, 8, 8, 0, 4,
	7, 0, 3, 0, 2, 0, 1, 1, 1, 1,
	4, 2, 2, 3, 3, 4, 5, 3, 4, 4,
	2, 2, 2, 3, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 4, 3, 2, 5, 5,
	0, 2, 7, 0, 1, 0, 1, 5, 5, 3,
	3, 2, 4, 4, 4, 4, 4, 1, 1, 1,
	3, 3, 1, 1, 1, 6, 8, 0, 1, 1,
	1, 1, 5, 5, 0, 1, 1, 3, 3, 3,
	4, 6, 7, 4, 4, 7, 8, 3, 3, 3,
	0, 2, 2, 0, 2, 2, 1, 1, 1, 1,
	0, 1, 4, 4, 5, 4, 3, 1, 3, 1,
	1, 3, 5, 2, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 4,
	4, 4, 1, 3, 1, 4, 6, 6, 4, 4,
	4, 4, 4, 3, 6, 3, 5, 1, 1, 2,
	2, 11, 8, 9, 1, 3, 2, 4, 0, 2,
	0, 1, 1, 1, 1, 0, 1, 0, 1, 4,
	2, 1, 5, 4, 4, 2, 5, 1, 3, 2,
	1, 5, 4, 4, 2, 0, 5, 0, 1, 3,
	3, 1, 3, 1, 3, 1, 3, 4, 0, 1,
	0, 1, 1, 3, 1, 1, 0, 4, 1, 3,
	2, 1, 0, 8, 0, 4, 7, 4, 0, 2,
	0, 2, 0, 2, 0, 4, 1, 3, 1, 1,
	5, 3, 4, 6, 4, 5, 2, 3, 1, 3,
	6, 0, 3, 0, 1, 2, 4, 4, 0, 1,
	3, 1, 3, 3, 0, 1, 1, 0, 2, 2,
	0, 2, 3, 3, 3, 1, 3, 3, 3, 3,
	1, 2, 2, 1, 2, 2, 1, 2, 2, 1,
	2, 2, 7, 7, 1, 1, 1, 0, 1, 1,
	1, 1, 0, 2, 0, 3, 0, 2, 1, 3,
	1, 2, 3, 5, 0, 1, 2, 1, 3, 1,
	1, 1, 4, 4, 4, 3, 2, 2, 2, 3,
	2, 3, 4, 1, 3, 4, 0, 2, 1, 1,
	2, 2, 0, 1, 2, 4, 1, 3, 1, 3,
	2, 3, 1, 4, 3, 0, 1, 1, 2, 5,
	2, 2, 2, 0, 2, 3, 3, 0, 1, 3,
	1, 3, 0, 1, 2, 1, 1, 0, 1, 2,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 7,
	1, 1, 7, 1, 3, 0, 1, 1, 3, 1,
	3, 0, 1, 1, 1, 13, 1, 3, 0, 1,
	1, 3, 1, 1, 2, 4, 1, 1, 0, 1,
	2, 9, 8, 7, 1, 2, 2, 3, 3, 3,
	0, 4, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 4, 1, 1, 3, 4, 3, 0, 1, 1,
	1, 0, 2, 7, 8, 8, 0, 3, 3, 0,
	2, 0, 3, 0, 5, 1, 3, 0, 3, 3,
	0, 2, 9, 6, 0, 2, 2, 3, 3, 4,
	4, 1, 0, 2, 2, 1, 3, 2, 1, 3,
	2, 1, 3, 2, 0, 1, 3, 4, 3, 1,
	1, 4, 1, 3, 1, 1, 1, 1, 0, 1,
	1, 1, 11, 0, 2, 3, 2, 3, 1, 1,
	1, 3, 3, 4, 0, 2, 2, 2, 2, 6,
	0, 4, 1, 1, 0, 3, 0, 1, 1, 2,
	4, 4, 4, 0, 1, 7, 9, 10, 8, 0,
	2, 11, 9, 11, 2, 2, 8, 4, 5, 1,
	3, 0, 3, 5, 10, 0, 2, 0, 3, 2,
	4, 3, 0, 2, 1, 0, 2, 3, 0, 2,
	3, 0, 3, 2, 4, 3, 0, 1, 0, 1,
	1, 0, 6, 0, 3, 5, 0, 4, 0, 3,
	1, 3, 4, 5, 0, 3, 1, 3, 2, 3,
	1, 2, 0, 4, 6, 5, 0, 2, 0, 2,
	4, 5, 4, 5, 1, 5, 6, 5, 0, 3,
	0, 1, 1, 3, 3, 3, 0, 4, 1, 3,
	3, 3, 0, 1, 1, 3, 2, 3, 3, 3,
	4, 4, 3, 3, 3, 3, 4, 4, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 3, 3, 3, 3, 3, 3, 3, 3, 1,
	5, 4, 1, 3, 3, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 1,
	3, 0, 1, 1, 3, 1, 1, 1, 1, 1,
	7, 9, 7, 9, 2, 1, 7, 9, 7, 9,
	8, 5, 0, 1, 0, 1, 1, 1, 1, 3,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 3, 1, 3, 5, 1, 1, 1, 1, 1,
	3, 5, 0, 1, 1, 2, 1, 2, 2, 1,
	1, 2, 2, 2, 3, 3, 2, 2, 1, 5,
	6, 4, 1, 1, 1, 5, 4, 1, 1, 2,
	0, 1, 1, 2, 5, 0, 1, 1, 2, 2,
	3, 3, 1, 1, 2, 2, 2, 0, 1, 2,
	2, 2, 0, 3, 0, 3, 1, 1, 1, 1,
	1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 1, 1, 1, 1, 3,
	5, 2, 2, 2, 2, 1, 1, 2, 5, 6,
	6, 6, 6, 1, 1, 1, 1, 1, 4, 4,
	4, 0, 2, 0, 1, 1, 2, 4, 1, 2,
	2, 1, 2, 2, 1, 2, 2, 2, 2, 2,
	0, 1, 1, 1, 2, 2, 2, 2, 2, 2,
	2, 1, 1, 1, 2, 5, 0, 1, 3, 0,
	1, 0, 2, 0, 1, 6, 8, 6, 6, 5,
	5, 5, 6, 6, 6, 6, 5, 6, 6, 6,
	6, 6, 6, 6, 6, 1, 1, 1, 4, 4,
	6, 8, 6, 4, 5, 4, 4, 4, 3, 4,
	6, 6, 7, 4, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 8, 4, 2, 3, 2, 4, 2, 2, 4,
	6, 2, 2, 4, 6, 4, 2, 0, 1, 2,
	3, 1, 1, 1, 1, 1, 1, 0, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 0, 1, 1, 3, 0, 1, 1,
	3, 3, 3, 3, 3, 2, 1, 1, 3, 4,
	3, 4, 3, 4, 3, 4, 3, 4, 1, 3,
	4, 4, 5, 4, 5, 3, 4, 5, 6, 1,
	0, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 1,
	1, 1, 2, 3, 1, 1, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 2, 2, 2, 1, 2,
	2, 2, 2, 2, 2, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 4, 4,
	1, 2, 3, 5, 1, 1, 3, 0, 1, 0,
	3, 0, 3, 3, 0, 3, 5, 0, 3, 5,
	0, 1, 1, 0, 1, 1, 2, 2, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1,
}

var yyChk = [...]int{
	-1000, -529, -539, -2, -5, 592, -1, -4, -105, -79,
	-7, -107, -108, -8, -103, -9, -10, -12, -83, -98,
	-100, -102, -101, -42, -11, -97, -74, -75, -85, -91,
	-94, -95, -96, -109, -104, -106, -148, -110, -111, 585,
	-80, -81, -82, -31, -30, -29, -28, -131, -136, 591,
	438, 13, 487, -13, -14, -490, -15, 256, -302, -303,
	-304, -306, -540, -43, -44, -45, -53, -54, -55, -56,
	-57, -67, -68, -69, -46, -47, -48, -51, -49, -60,
	-59, -61, -62, -63, -64, -65, -66, -50, -134, -135,
	-70, -52, -72, -71, -77, -73, -78, -133, -138, 231,
	-76, 75, -86, -87, -88, -89, -90, -92, -93, 363,
	369, 426, 584, 60, -149, -151, 596, 597, 157, 158,
	160, 161, -32, -33, -34, -35, -36, -37, -39, -38,
	-40, -41, 227, 15, 524, -16, -19, -17, -20, -18,
	-26, -27, -25, -22, -24, -132, -23, -137, 251, 250,
	37, 317, 318, 319, 367, 249, 228, 14, 30, 41,
	343, -150, 81, 229, -152, 12, 600, -6, -3, -2,
	-118, -122, -126, -129, -130, -127, -128, -4, -105, 115,
	241, 586, -299, 359, 587, 589, 588, 84, 92, -292,
	-294, 363, 369, 584, 597, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 540, 541, 542, 543,
	544, 545, 546, 547, 548, 549, 550, 551, 553, 554,
	555, 556, 557, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 490, 571, 572, 573, 574, 518, 570, 341,
	342, 521, 268, 292, 394, 298, 305, 157, 176, 170,
	198, 190, 165, 272, 310, 273, 91, 160, 473, 105,
	450, 423, 163, 287, 289, 291, 519, 294, 293, 295,
	297, 274, 344, 186, 181, 286, 270, 179, 275, 39,
	276, 203, 277, 278, 526, 446, 340, 452, 302, 421,
	180, 447, 290, 449, 207, 211, 464, 465, 174, 175,
	454, 467, 202, 205, 206, 248, 42, 523, 260, 468,
	209, 201, 197, 476, 306, 304, 200, 173, 196, 271,
	64, 213, 212, 214, 417, 418, 419, 420, 279, 280,
	357, 463, 193, 182, 345, 166, 22, 471, 255, 451,
	370, 281, 299, 307, 208, 210, 262, 267, 525, 425,
	266, 303, 469, 178, 259, 288, 254, 472, 167, 372,
	282, 161, 296, 466, 475, 63, 385, 172, 164, 245,
	158, 264, 269, 283, 284, 285, 516, 309, 308, 300,
	194, 261, 199, 184, 171, 195, 159, 263, 474, 386,
	582, 343, 404, 192, 189, 265, 238, 470, 453, 162,
	408, 387, 187, 311, 578, 579, 580, 358, 339, 312,
	313, 185, 252, 444, 445, 316, 414, 332, 388, 424,
	395, 389, 220, 320, 456, 458, 204, 581, 321, 322,
	323, 448, 324, 325, 326, 327, 362, 55, 57, 93,
	95, 598, -377, -375, -299, 584, 369, 363, 343, 597,
	-191, -299, 599, -158, 38, -204, -299, -158, -76, -14,
	-13, -150, -151, -204, 235, -307, 23, 421, -84, 422,
	231, 81, -299, -9, -96, -8, -103, -74, -148, 426,
	-305, -299, 317, 317, -305, 235, -299, 266, 402, -427,
	241, -381, -354, 267, -380, -356, -383, -357, 31, 227,
	229, 228, 263, 15, 367, 237, 13, 12, 368, 249,
	24, 25, 27, 14, 369, 371, 28, 372, 375, 376,
	377, 41, 380, 381, 256, 84, 92, 87, 274, -190,
	-299, -331, -325, 112, 257, -327, -320, -321, -323, -469,
	-463, -318, 81, 139, 140, 147, 113, -322, -411, 35,
	115, 533, 570, 488, -275, -276, -277, -278, -279, -299,
	-464, -462, 87, 96, 99, 102, 103, 101, 100, 151,
	183, 98, 88, 152, -151, 84, -485, 542, -293, 563,
	571, 572, 573, 574, 562, 60, -434, -442, 234, -440,
	150, 188, 252, 184, 13, 145, 414, 185, 539, 559,
	490, 543, 566, 535, 536, 537, 530, 531, 532, 534,
	544, 546, 558, -443, 554, 564, 565, 552, 567, 568,
	569, 86, 85, 557, 556, 545, 540, 541, 547, 529,
	538, 548, 549, 555, 560, 561, 351, 105, 352, 353,
	480, 344, 354, 241, 421, 69, 355, 356, 357, 358,
	359, 487, 360, 70, 361, 350, 256, 404, 362, 187,
	204, 492, 491, 493, 484, 481, 479, 482, 483, 485,
	486, 550, 551, 553, -112, -113, 576, -167, -168, -268,
	11, 6, 7, 8, 9, -527, 423, 525, 87, 162,
	159, -368, 162, 111, 167, 166, -368, 320, 262, 364,
	-141, 238, 341, 404, 324, 93, 266, -348, -346, 519,
	-345, -429, 314, 310, 236, -142, 246, 245, 106, 480,
	234, 108, 378, 305, 55, 57, -501, -502, 224, 225,
	226, -492, 513, -491, -299, 353, 95, 26, 235, 364,
	262, 458, 456, 457, 459, 460, 461, 462, -58, -444,
	-426, 453, 452, -311, 445, 451, 443, 455, 446, 342,
	326, 325, 227, 593, 514, -289, 388, 424, 477, 478,
	365, 425, 464, 466, 447, 105, 191, 188, 238, 235,
	341, 480, 404, 93, 324, -501, 159, 464, 466, 266,
	402, 40, -374, 414, -373, -375, 465, 476, 85, 86,
	463, -289, 105, 444, 444, -168, -268, -167, -149, -151,
	-106, -490, 236, 341, 404, 266, 237, 235, 517, 238,
	480, 234, 317, 364, 262, 324, 93, -428, -498, 31,
	-435, 221, 222, 223, 32, 33, -1, 119, 600, -325,
	-325, -6, 603, -6, -325, -299, -299, 154, -210, -214,
	-211, -213, -212, -216, -215, 188, 189, 150, 192, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 205, 206,
	203, 30, 204, 252, 184, 185, 186, 187, 207, 170,
	190, 522, 215, 171, 216, 172, 217, 173, 218, 174,
	175, 219, 176, 179, 180, 181, 182, 178, 153, 81,
	153, 87, -174, 258, -204, 153, -174, -168, -167, -168,
	-204, -280, -299, 423, 122, -84, -84, 422, -493, -494,
	-495, -497, 231, 422, 421, 153, 274, 16, -305, -305,
	79, -204, -356, 266, -381, -354, 35, 78, 154, 239,
	154, 78, 81, 365, 341, 404, 366, 480, 235, 378,
	238, 266, 379, 341, 404, 235, 238, 480, 266, 341,
	235, 238, 404, 266, 379, 443, 444, 238, 26, 370,
	373, 374, 444, -448, 476, 154, 111, 108, 109, 110,
	-325, 129, -338, 122, 123, 124, 125, 126, 127, 128,
	136, 135, 146, 139, 140, 141, 142, 143, 144, 145,
	137, 138, 132, 112, 130, 134, 131, 114, -151, -325,
	-331, 60, -323, -323, -323, -323, -411, -329, -325, 81,
	81, 81, 153, 100, 87, -325, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, -441, 81,
	81, -335, -336, 81, 81, -318, -280, 81, 87, 87,
	81, 81, 81, 87, -336, -336, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, -168, 154, 81,
	-114, 38, -170, 21, -152, -151, 20, 31, 32, 31,
	32, 31, 32, 31, 32, 96, 598, 220, 469, 524,
	165, 166, 167, -189, -299, -191, -182, -299, 238, -142,
	108, -343, 241, -343, -343, -343, -343, -343, 237, -343,
	-204, 517, 516, 235, 235, 235, -343, 487, 122, 122,
	58, -503, 169, 154, -492, -173, 81, -310, 130, 134,
	-310, 23, 264, 264, 264, -310, 304, -541, -542, 16,
	132, -308, -542, -308, -308, -310, -543, 237, 454, 42,
	265, 264, -169, -170, -169, 448, 444, -398, 449, 450,
	-312, -542, -311, -310, -310, -311, -310, -310, -310, 235,
	238, 480, 324, 594, -541, -541, 30, 30, -427, -204,
	-427, 514, -290, -299, -427, -427, -427, -504, 240, -534,
	-533, 467, -536, 469, 159, -375, 159, -375, -356, 266,
	266, 154, 122, 23, -376, 122, 133, -375, -375, -376,
	-376, -228, 40, -298, 150, -299, 87, -228, 40, -531,
	-530, -204, -169, -152, -151, 82, 82, 82, -427, -427,
	-427, -427, -427, -429, -427, -427, -427, -427, -305, -182,
	-191, 241, -427, -427, -153, -154, 141, -325, -299, -153,
	-3, -120, -119, 116, 117, 119, 587, 359, 586, 590,
	584, -375, 40, -422, 386, 385, -416, -418, 81, -417,
	81, -417, -417, -417, -417, -417, 81, 81, -419, 81,
	-419, -419, -416, -420, 81, -420, -421, 81, -421, -420,
	-299, -330, -331, -299, 38, -437, 60, -148, 81, 30,
	81, -299, -438, 60, -148, 81, 30, -169, -114, -170,
	153, 96, 87, -84, 82, 154, -496, 102, 103, -499,
	202, 194, -299, -99, 87, -7, -8, -9, -10, -42,
	-74, -148, -465, -463, 81, 31, 413, 78, 16, -382,
	235, 480, 364, 262, 238, 341, -380, -363, -360, -358,
	-298, -356, -359, -358, -385, -280, 444, -115, 428, 427,
	316, -325, -325, -325, -325, -325, 101, 112, 339, 102,
	103, -320, -339, 31, 312, 313, -321, -321, -321, -321,
	-321, -321, -321, -321, -321, -321, -321, -321, -328, -337,
	-411, 81, 132, 130, 134, 131, 114, -323, -323, -321,
	-321, 82, 154, -489, -488, 116, -325, -325, -325, -299,
	-486, -487, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 355, 350, 356, 354, 344, 362, 357,
	358, 187, 511, 512, 505, 506, 507, 508, 509, 510,
	-330, -330, -325, -486, -330, -274, 32, 31, -331, -331,
	-331, 82, -325, -500, 337, 336, 338, -171, -299, -330,
	82, 82, 82, 96, -331, -331, -330, -321, -330, -487,
	-274, -274, -274, 141, -331, -331, -274, -274, -274, -274,
	141, -274, -274, -274, -274, -274, -274, -274, -274, 82,
	82, 82, -169, -113, -446, -445, -325, 40, 577, -114,
	-325, -166, -165, -325, -528, 87, 87, 601, 470, 471,
	163, 166, 165, 34, 81, 81, 153, -343, 487, -204,
	112, -506, -299, -364, -361, -358, -299, -299, -354, -299,
	-299, 524, -343, 517, -343, -343, -343, -204, -239, 52,
	53, 54, -358, -143, 55, 56, -504, -491, 34, -172,
	-299, -264, 17, -323, -323, -358, 266, -541, -310, -310,
	-291, -290, -312, -307, -312, -312, -264, -542, -310, -310,
	-312, -308, -264, -299, 444, -264, -264, -398, -309, -299,
	-309, -343, -290, -291, -291, -204, -250, -251, 232, 348,
	349, 230, 228, 11, 229, -259, 305, -344, 488, -234,
	-235, 76, 41, -237, 390, 383, 268, 272, 91, 273,
	423, 274, 237, 276, 277, 278, 293, 295, 248, 279,
	280, 281, 414, 282, 158, 294, 283, 284, 285, 366,
	-229, 6, 327, 40, 50, 51, 437, 436, 527, 524,
	269, -506, -506, 30, 30, -364, -299, -299, -161, -156,
	-160, -157, -162, -267, -269, -159, 81, -204, -151, -299,
	154, 468, 470, 471, -534, -376, -534, -376, 31, 413,
	-379, 413, 31, -354, -373, 464, 466, -369, 87, 414,
	-359, -378, 78, 150, -445, -376, -376, -378, -378, 149,
	154, -532, 469, 470, 224, -114, -206, -204, -506, -363,
	-354, -299, -427, -206, -206, -299, -299, 81, 35, -299,
	-299, -263, 154, -262, 16, -300, -299, 34, 87, 153,
	-263, -121, -119, 118, -325, -6, 586, -325, -6, -6,
	-325, -6, -325, -425, 387, 96, 96, -282, 87, -282,
	96, 96, 96, 82, 87, -367, 78, -439, -332, -484,
	576, -176, 82, -171, -482, -483, -171, -175, -299, -439,
	-176, 82, -482, -114, -114, -299, 23, -84, -494, 153,
	154, -172, -382, -362, -359, -384, 141, -299, -370, 154,
	524, 604, 85, 239, -520, -519, 405, 82, 154, -449,
	240, 487, 87, 601, 421, 220, 101, 339, 102, 103,
	-411, -331, -328, -323, -323, -321, -321, -326, 253, -326,
	111, -325, -324, -488, 118, -325, 34, 34, 154, 79,
	153, 82, 82, 16, 16, 82, -325, 82, 82, 82,
	82, 16, 16, -325, 82, 153, 82, 82, 82, 82,
	79, 82, 154, 82, 154, -331, -325, -331, 82, 82,
	82, -325, -325, -325, -331, 82, -325, -325, -325, -325,
	-325, -325, -325, -325, -392, 439, -392, -392, 154, 82,
	87, 154, 22, 154, -163, 36, 37, -286, -285, 87,
	164, 167, 167, 166, -190, -192, -193, -194, -195, -196,
	132, 155, 156, -183, -184, -185, -186, -210, -280, 189,
	192, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	205, 206, 203, 204, 252, 184, 185, 186, 187, 207,
	170, 190, 171, 172, 173, 174, 175, 176, 179, 180,
	181, 182, 178, -299, -204, -173, 35, -509, 391, -521,
	154, 40, -519, 480, -139, 316, -347, 79, -146, 16,
	81, -204, -343, -204, -204, -204, -217, 34, 16, -155,
	-205, -299, 81, 82, 154, -325, -355, 79, -299, -291,
	-264, -264, -204, -299, -264, -264, -310, -312, -312, -308,
	153, -290, -173, 154, -203, -296, -200, -202, 243, -315,
	-201, 246, -478, 244, 242, 106, 247, 301, 107, 237,
	-296, -296, 243, -238, 239, 34, -296, -253, 237, 301,
	244, 20, -252, 237, 107, -299, 243, 247, 242, -295,
	122, -289, 149, 239, 42, 366, -295, 528, -295, -295,
	-295, -295, -295, -295, -295, 275, 275, -295, -295, -295,
	-295, -295, -295, -295, -295, -295, -295, -295, 159, -295,
	-295, -295, -295, -295, -295, 81, 270, 271, -510, 391,
	30, 347, 347, -521, 30, -147, 341, 30, -270, -271,
	-272, -273, 67, 71, 73, 68, 69, 70, 74, 30,
	154, -297, -301, 34, -299, 87, -297, -151, -156, -161,
	-297, 81, -533, -535, 472, 469, 475, -378, -378, 239,
	81, 122, -378, -378, 40, -298, -530, 476, 470, -181,
	23, 154, 78, -206, -183, -191, -264, -154, -156, -299,
	87, -299, 141, -264, 119, -6, 117, -125, -124, -123,
	120, 584, 590, 119, 119, 119, 82, 82, 82, 154,
	82, 82, 82, 154, 82, 154, -452, 449, 39, 154,
	81, 82, 154, 60, 154, 122, 82, 154, 82, 60,
	-181, 153, 423, -299, -463, 82, -384, 154, 239, 153,
	153, -360, 369, -298, -362, 20, 524, -280, 38, -286,
	122, 601, 82, -326, -326, 111, -323, -320, 82, 119,
	-325, 117, -208, -210, 385, 386, -208, -209, -215, 150,
	188, 252, 187, 186, 184, 385, 386, -228, -299, -325,
	-325, 82, -325, -325, 16, -299, -228, -321, -325, -168,
	82, 82, -391, -392, -391, -391, 82, 82, 82, 82,
	-391, 82, 82, 82, 82, 82, 82, 82, 82, 81,
	-445, -452, -325, -325, -165, -164, 43, 602, 154, 122,
	167, 377, 82, 154, -280, 82, 154, -210, -173, 34,
	-512, 451, 393, 403, -295, -317, -316, 343, 41, -432,
	414, 399, 400, -361, 266, -299, -518, 94, 122, 78,
	331, 332, 333, 334, -341, -342, -340, -344, -506, -227,
	-261, -299, 87, 81, -225, 524, -204, 81, 81, 81,
	-412, 321, -210, -204, -155, -299, 16, 154, -505, 153,
	-1, -299, -354, -310, -264, -542, -264, -310, -310, -312,
	-299, 34, -251, -207, -280, -201, -477, -478, -343, -299,
	107, -477, 107, 81, -207, -280, -280, -254, -309, -280,
	-299, -299, -299, -257, -256, -280, -299, -299, -299, 107,
	107, -233, 40, 47, 48, 49, -295, -295, 191, -236,
	40, 413, 415, 416, 96, 96, 96, 96, 87, 87,
	87, -295, -295, 96, 87, -301, 87, -479, 166, 44,
	45, 96, 96, 96, 96, 40, 87, -240, 40, 286,
	290, 287, 288, 289, 87, 96, 40, 96, 40, 96,
	40, -299, 81, -480, -481, 87, -512, -295, 347, -375,
	122, -317, -517, 316, -140, 91, 31, -177, 232, 229,
	-506, -366, -365, -280, -160, -160, -160, -160, 67, 67,
	67, 72, 67, 72, 67, -272, -366, -162, -173, -301,
	82, -526, -525, -524, -522, 75, 240, 76, -330, 469,
	473, 474, -362, -313, 87, -369, 14, -204, -204, -431,
	296, 297, 82, -266, 18, 153, -266, 115, -6, -121,
	-123, -325, -6, -325, 586, 359, 587, 87, 96, 96,
	-460, 434, 429, 431, 107, -332, -447, -446, 60, -148,
	-171, -439, -483, -445, -299, 60, -148, -439, -299, 96,
	16, -359, -354, 141, 141, -299, 370, -370, 87, 392,
	87, 235, 602, 87, -286, -320, -325, 82, -218, 175,
	174, -218, 82, 82, -417, -417, -416, -419, -416, -218,
	-218, 82, 82, 23, 82, 82, 82, -325, 82, 82,
	154, -436, 489, -391, -391, -391, -391, -391, -391, -391,
	-391, -391, -391, -391, -391, -391, -391, -334, -333, 258,
	-460, 44, 45, -285, 87, 87, 87, -194, -210, 233,
	-185, 40, 34, -148, -513, 91, -507, 87, -299, -514,
	91, 394, 152, 345, 40, 395, 396, 411, 340, 96,
	96, 401, -508, -299, -147, -516, 51, 122, 87, -204,
	-340, -289, 149, 277, 324, 82, 154, -295, -295, -197,
	-198, -199, -207, -200, -202, 34, 81, 81, -197, -197,
	-197, -413, 323, 20, 96, 140, -174, 79, 153, -156,
	-205, -299, 141, 82, -264, -299, -264, -264, -310, -148,
	-255, 44, 46, -210, -475, -299, -473, -475, -299, -473,
	-473, -343, -325, -255, -207, 239, 30, 229, -258, 329,
	330, -371, 302, 112, -371, 154, -163, -299, -228, -228,
	30, 87, 87, -206, 82, 154, 122, -513, -507, 122,
	-376, 87, -514, -518, 122, 87, 154, -177, -177, -264,
	154, 122, -179, -178, 78, 79, -180, 78, -178, 67,
	67, -264, -524, -523, 23, -478, -478, -478, 82, 82,
	-265, 19, 20, 141, -265, 119, 117, 119, 119, -299,
	82, 82, -423, 578, -456, -458, 429, 20, 20, 14,
	82, -439, -439, -354, -370, 414, -204, 154, 602, -325,
	82, -325, 82, 87, -168, 20, -423, -187, -210, -318,
	-148, -144, 524, 87, -511, 405, 87, 87, 96, 40,
	96, 152, 397, -433, -140, -515, 91, 122, 601, 81,
	-295, -295, -295, -299, -261, -318, -318, 82, 154, -148,
	-226, -260, -299, 87, -197, 82, 82, 82, -414, 257,
	96, 140, 96, 140, 96, -297, -156, -299, -264, -505,
	153, -264, -264, -280, -222, -221, -219, 101, 112, 40,
	383, -220, 91, 149, 291, 294, 293, 269, 292, -249,
	-314, 78, 389, 329, 330, -344, 578, 518, 242, 106,
	107, 371, -315, 81, 81, 79, 311, 81, 81, -475,
	82, -255, -280, 40, -258, 40, 302, -256, 149, -228,
	82, -481, 87, -511, 87, -378, -516, 87, -506, -168,
	-365, -445, -325, 81, -325, 81, 67, 11, 18, -325,
	-331, 241, -6, 587, 359, -242, 579, 87, 20, 87,
	-454, 87, -366, -117, -450, -398, 274, 82, 82, -391,
	-394, -393, -397, 435, 303, 442, -331, -242, 523, -144,
	-145, 59, 476, 20, 524, 344, 40, 96, 40, 398,
	87, 102, 103, -287, -288, 87, -349, -351, -280, 81,
	-228, -230, -298, 150, 87, -225, -199, 82, 154, -295,
	-295, 82, -223, -224, -259, -344, -116, -115, -223, -415,
	158, 96, 140, 96, 96, -264, -264, -219, 101, -321,
	87, -230, -231, 40, 290, 286, 122, 122, -232, 40,
	270, 271, -241, 81, 301, 14, 191, 81, 107, 107,
	-204, -349, -349, -476, 331, 332, 333, 335, 334, -476,
	-349, -349, 81, -372, -371, -321, -295, 149, -515, -169,
	-172, -474, -299, 242, 20, 20, -299, -299, -283, 580,
	96, 87, 431, -424, 581, -459, 434, -453, -451, 429,
	430, 431, 432, 122, 82, -396, 114, 397, 401, -319,
	-322, 96, 99, 183, 152, -283, -188, -299, 301, 87,
	392, 87, 344, 602, 154, 122, 82, 154, -416, -325,
	-260, -318, -318, -225, -386, 258, 154, -259, -289, -117,
	-386, -430, 166, 322, 524, 96, 140, 96, -168, 87,
	87, 96, 81, -440, 30, 87, -350, 81, 82, 82,
	82, 82, -349, -228, -295, 82, 82, 154, 81, 20,
	87, -461, 240, -457, -458, 433, -451, 20, 431, 20,
	20, 87, -395, -396, 401, -319, -322, 576, 440, 440,
	440, 34, 370, 414, -288, 87, -352, -351, -163, 82,
	-387, 310, 20, -259, -295, -387, 322, 96, 140, 96,
	-169, 82, -325, -335, -295, 82, -244, -243, 520, -349,
	-352, 79, -352, 79, -352, 79, -352, 79, 82, -228,
	-299, 242, -284, -299, -454, -468, 81, 96, -456, -455,
	-457, 20, -454, 20, -454, -454, 111, 441, 441, 441,
	87, -353, 248, 91, 524, 329, 330, -163, 20, -388,
	303, 304, -389, -402, 306, -228, 96, 82, -299, -248,
	-246, -247, 78, 447, 299, 300, 82, -476, -476, -476,
	-476, -249, 82, 154, -472, 30, 82, -467, -466, -281,
	-462, -299, 434, 435, 87, -454, -395, -538, -537, 595,
	-295, 87, 328, -280, 81, -400, 307, 81, -398, 81,
	-398, 107, 332, -371, -247, 78, -246, 78, 15, 14,
	-352, -352, -352, -352, -299, -471, -470, -469, 82, 154,
	153, 87, 96, -299, -385, -390, 308, 96, -321, 81,
	-321, 81, -399, 305, 81, -245, 296, 297, 30, 166,
	-245, 154, 122, -466, -299, 82, -404, 81, 20, 82,
	-385, 82, -385, 81, 122, -321, 101, 40, 298, -470,
	40, -325, 153, -405, -403, 258, -389, 82, 82, 82,
	-385, 96, 82, -299, 82, 154, -299, -401, 309, 82,
	-403, -406, 60, 96, -410, -407, 81, -259, 260, 132,
	-410, -259, -409, -408, 308, 261, 81, 82, 154, -299,
	257, 81, -331, -408, -407, -331, 82, 82,
}

var yyDef = [...]int{
	23, -2, 1, 2, 3, 19, 4, 20, 21, 22,
	24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
	34, 35, 36, 37, 38, 39, 40, 41, 42, 43,
	44, 45, 46, 47, 48, 49, 50, 51, 52, 0,
	263, 264, 265, 823, 824, 825, 826, 827, 828, 0,
	0, 0, 0, 597, 598, 0, 565, 0, 0, 0,
	0, 0, 0, 456, 457, 458, 459, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	483, 484, 354, 355, 356, 357, 358, 359, 360, 0,
	288, 284, 209, 210, 211, 212, 213, 295, 296, 433,
	0, 0, 0, 0, 678, -2, 56, 0, 277, 0,
	268, 268, 829, 830, 831, 832, 833, 834, 835, 836,
	837, 838, -2, 610, 0, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 343, 344,
	345, 339, 340, 342, 341, -2, 0, 610, 0, 0,
	0, 698, 0, 0, 715, 737, 23, 0, 7, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 0,
	0, 19, 0, 19, 0, 0, 0, 1195, 1196, 1197,
	1198, -2, 1690, 1668, 1835, 1847, 1848, 1849, 1850, 1851,
	1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861,
	1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871,
	1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881,
	1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1630,
	1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640,
	1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650,
	1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660,
	1661, 1662, 1663, 1664, 1665, 1666, 1667, 1669, 1670, 1671,
	1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681,
	1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1691, 1692,
	1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702,
	1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712,
	1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722,
	1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732,
	1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742,
	1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1753,
	1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763,
	1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773,
	1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783,
	1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793,
	1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803,
	1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813,
	1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823,
	1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833,
	1834, 1836, 0, 261, 259, 1668, 1690, 1752, 1785, 1835,
	0, 843, 0, 656, 0, 661, 1149, 656, 289, 599,
	600, 698, 698, 563, 0, 325, 0, 1681, 329, 0,
	0, 0, 560, 319, 320, 321, 322, 323, 324, 0,
	0, 822, 0, 0, 315, 0, 283, 1743, 0, 0,
	0, 0, 0, 0, 153, 952, 155, 954, 159, 166,
	0, 0, 171, 172, 175, 176, 177, 178, 179, 0,
	183, 0, 185, 188, 0, 190, 191, 0, 194, 195,
	196, 0, 206, 207, 208, 955, 956, 957, -2, 84,
	841, 1601, 1489, 0, 1496, 1497, 1508, 1519, 1275, 1276,
	1277, 1278, 0, 0, 0, 0, 0, 1285, 1286, 0,
	1303, 1851, 1890, 0, 1293, 1294, 1295, 1296, 1297, 93,
	105, 106, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 0,
	1549, 1550, 1551, 1462, 1262, 1195, 0, 1860, 0, 1880,
	1885, 1886, 1887, 1888, 1879, 0, 0, 1447, 0, 1437,
	0, 0, -2, -2, 0, 0, 1810, -2, 1857, 1876,
	1884, 1861, 1883, 1853, 1854, 1855, 1848, 1849, 1850, 1852,
	1862, 1864, 1875, 0, 1871, 1881, 1882, 0, 0, 0,
	0, 107, 108, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, 1453, -2, 1455, 1456,
	1458, -2, 1460, 1461, -2, 1464, 1465, 1466, -2, -2,
	1469, 1470, 1471, 1472, 1473, 1474, 1477, -2, -2, -2,
	-2, 1449, 1450, 1451, 1452, 1441, 1442, 1443, 1444, 1445,
	1446, -2, -2, -2, 698, 773, 0, -2, 0, 0,
	0, 720, 723, 726, 729, 0, 57, 58, 0, 278,
	279, 267, 269, 0, 273, 0, 266, 0, 0, 0,
	0, 984, 984, 984, 984, 984, 984, 0, 984, 0,
	0, 0, 0, 0, 984, 874, 959, 960, 961, 982,
	983, 0, 1037, 0, 0, 0, 615, 611, 612, 613,
	614, 686, 0, 688, 691, 540, 540, 487, 0, 0,
	0, 540, 0, 501, 493, 0, 0, 0, 540, 0,
	0, 693, 693, 0, 543, 550, 540, 540, -2, 540,
	540, 540, 0, 0, 507, 508, 509, 493, 493, 512,
	513, 514, 525, 526, 551, 1625, 0, 0, 433, 0,
	433, 0, 433, 433, 433, 617, 1780, 1688, 1757, 1743,
	0, 0, 234, 1810, 239, 0, 1689, 1706, 0, 0,
	1724, 0, -2, 0, 305, 693, 0, 699, 0, 698,
	0, 0, 433, 433, 433, 433, 433, 1036, 433, 433,
	433, 433, 0, 0, 0, 433, 433, 0, 0, 738,
	739, 734, 735, 736, 740, 741, 5, 6, 19, 0,
	0, 0, 0, 0, 0, 63, 62, 0, 1602, 1620,
	1554, 1555, 1556, 1607, 1558, 1611, 1611, 1611, 1611, 1587,
	1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1611, 1611,
	0, 0, 1600, 1578, 1609, 1609, 1609, 1607, 1604, 1559,
	1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569,
	1570, 1571, 1572, 1614, 1614, 1617, 1617, 1614, 0, 1487,
	0, 0, 0, 0, 660, 0, 0, 693, -2, 0,
	564, 326, 1199, 0, 0, 330, 331, 0, 0, 346,
	0, 349, 334, 335, 336, 0, 133, 0, 317, 318,
	0, 0, 285, 0, 0, 0, 434, 0, 0, 0,
	0, 0, 0, 163, 160, 167, 170, 180, 187, 0,
	199, 201, 204, 161, 168, 173, 174, 181, 202, 162,
	164, 165, 169, 203, 205, 182, 186, 200, 184, 189,
	192, 193, 198, 0, 134, 0, 0, 0, 0, 0,
	1495, 0, 0, 1527, 1528, 1529, 1530, 1531, 1532, 1533,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, -2, 1489,
	0, 0, 1281, 1282, 1283, 1284, 1287, 0, 1304, 0,
	0, 0, 0, 1548, 1552, 0, 1487, 1487, 0, 1487,
	1483, 0, 0, 0, 0, 0, 0, 1487, 1423, 0,
	0, 1425, 1438, 0, 0, 1427, 1428, 0, 1431, 1432,
	1487, 0, 1487, 1436, 1419, 1420, 0, 1483, 1483, 1483,
	0, 0, 1483, 1483, 1483, 1483, 1483, 1483, 1483, 1483,
	1483, 1483, 1483, 1483, 0, 0, 0, 693, 0, 0,
	681, 0, 662, 0, 717, 719, 0, 721, 722, 724,
	725, 727, 728, 730, 731, 59, 0, 0, 0, 0,
	271, 0, 276, 0, 840, 0, 0, 856, 984, 875,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 984, 0, 984, 984, 984, 0, -2, 0, 0,
	0, 617, 616, 0, 687, 0, 0, 746, 0, 0,
	486, 0, 493, 540, 540, 499, 500, 495, 494, 546,
	547, 543, 0, 543, 543, 746, 0, 519, 520, 521,
	540, 540, 527, 694, 528, 529, 543, 0, 548, 549,
	746, 0, 0, 746, 746, 0, 537, 538, 539, 0,
	0, 984, 0, 556, 495, 495, 1626, 1627, 0, 993,
	0, 0, 0, 559, 0, 0, 0, 0, 618, 214,
	217, 0, 220, 0, 1780, 0, 1780, 0, 227, 0,
	0, 0, 0, 0, 0, 257, 258, 0, 0, 0,
	0, 248, 251, 1143, 1144, 949, 950, 252, 253, 297,
	298, 0, 662, 716, 718, 712, 713, 714, 0, 0,
	0, 0, 0, 433, 0, 0, 0, 0, 593, 0,
	595, 0, 0, 0, 754, 748, 750, 817, 93, 754,
	8, 80, 77, 0, 19, 0, 0, 19, 19, 0,
	19, 262, 0, 1623, 1621, 1622, 1557, 1608, 0, 1583,
	0, 1584, 1585, 1586, 1596, 1597, 0, 0, 1579, 0,
	1580, 1581, 1582, 1573, 0, 1574, 1575, 0, 1576, 1577,
	260, 0, 1488, 844, 0, 635, 648, 630, 0, 637,
	0, 1150, 619, 648, 621, 0, 637, 662, 684, 662,
	0, 327, 0, 332, 0, 0, 348, 350, 351, 352,
	337, 338, 561, 313, 314, 306, 307, 308, 309, 310,
	311, 312, 316, 103, 0, 286, 287, 0, 0, 0,
	147, 148, 149, 150, 151, 152, 154, 138, 582, 584,
	941, 953, 0, 944, 0, 157, 197, 130, 0, 0,
	0, 1490, 1491, 1492, 1493, 1494, 1498, 0, 1500, 1502,
	1504, 1506, 0, 1524, -2, -2, 1263, 1264, 1265, 1266,
	1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1509, 1522,
	1523, 0, 0, 0, 0, 0, 0, 1520, 1520, 1515,
	0, 1279, 0, 1301, 1305, 0, 0, 0, 0, 94,
	1482, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398,
	1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408,
	1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418,
	0, 0, 1489, 0, 0, 0, 1484, 1485, 0, 0,
	0, 1378, 0, 0, 1384, 1385, 1386, 0, 643, 0,
	1448, 1424, 1439, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 772, 774, 0, 652, 654, 655, 0, 682,
	695, 700, 701, 704, 55, 60, 53, 1011, 280, 281,
	0, 0, 275, 0, -2, 858, 0, 0, 876, 691,
	0, 0, 890, 431, 935, 0, 0, 0, 951, 974,
	980, 0, 0, 984, 0, 0, 0, 1015, 877, 882,
	883, 884, 878, 879, 885, 886, 0, 689, 0, 0,
	786, 485, 0, 541, 542, 490, 1743, 495, 746, 746,
	502, 496, 503, 545, 504, 505, 506, 0, 746, 746,
	540, 543, 530, 544, 543, 533, 534, 0, 552, 557,
	553, 0, 555, 510, 511, 691, 362, 363, 404, 404,
	404, 387, 404, 0, 0, 375, 1628, 0, 0, 0,
	0, 384, 1628, 0, 1628, 1628, 1628, 1628, 1628, 1628,
	1628, 0, 0, 1628, 1628, 1628, 1628, 1628, 1628, 1628,
	1628, 1628, 1628, 1628, 0, 1628, 1628, 1628, 1628, 1628,
	1129, 1628, 0, 994, 394, 395, 396, 397, 402, 403,
	0, 428, 0, 0, 0, 431, 0, 924, 759, 0,
	760, 761, 757, 788, 812, 812, 0, 812, 792, 1149,
	0, 0, 225, 226, 215, 0, 216, 0, 228, 229,
	0, 231, 232, 233, 240, 1688, 1757, 235, 237, 0,
	0, 241, 254, 255, 256, 0, 0, 246, 247, 0,
	0, 300, 301, 303, 0, 710, 579, 1147, 580, 581,
	585, 0, 0, 588, 590, 591, 592, 858, 0, 929,
	930, 746, 0, 755, 0, 751, 818, 0, 820, 0,
	746, 0, 78, 19, 0, 71, 68, 0, 0, 0,
	0, 0, 1603, 1553, 1624, 0, 0, 0, 1605, 0,
	0, 0, 0, 61, 664, 626, 0, 629, 645, 0,
	649, 0, 0, 641, 634, 638, 0, 0, 658, 620,
	0, 0, 625, 710, 685, 1200, 0, 333, 347, 0,
	0, 0, 0, 141, 938, 0, 142, 146, 136, 0,
	0, 0, 943, 0, 940, 945, 0, 156, 0, 0,
	131, 132, 1005, 1011, 0, 0, 1499, 1501, 1503, 1505,
	1507, 0, 1510, 1520, 1520, 1516, 0, 1511, 0, 1513,
	0, 1490, 0, 1306, 0, 0, 0, 0, 0, 0,
	0, 1368, 1369, 0, 0, 1373, 0, 1375, 1376, 1377,
	1379, 0, 0, 0, 1383, 0, 1422, 1440, 1426, 1429,
	0, 1433, 0, 1435, 0, 698, 0, 0, 1343, 1343,
	1343, 0, 0, 0, 0, 1343, 0, 0, 0, 0,
	0, 0, 0, 0, 1298, 0, 1299, 1300, 0, 775,
	664, 0, 0, 0, 707, 705, 706, 0, 1009, 0,
	282, 270, 272, 0, 0, 0, 846, 847, 849, 0,
	852, 853, 854, 0, 859, 860, 862, 863, 0, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, 1673, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, 857, 691, 0, 985, 897, 1628, 435,
	0, 0, 937, 0, 913, 0, 0, 0, -2, 0,
	0, 1086, 0, 0, 0, 0, 1017, 0, 0, 0,
	604, 608, 23, 692, 0, 747, 488, 0, 489, 540,
	497, 498, 746, 1149, 522, 523, 746, 540, 540, 543,
	0, 554, 0, 993, 365, 0, 1158, 1159, 405, 0,
	1165, 1174, 984, 1232, 0, 1174, 0, 0, 1176, 1177,
	0, 0, 0, 0, 388, 389, 0, 374, 0, 0,
	0, 0, 373, 0, 0, 415, 0, 0, 0, 0,
	1629, 1628, 1628, 0, 382, 383, 0, 386, 0, 0,
	0, 0, 0, 0, 0, 1628, 1628, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1120, 0,
	0, 0, 0, 0, 0, 0, 1135, 1136, 897, 1628,
	0, 0, 0, 435, 911, 920, 0, 0, 0, 0,
	0, 0, 779, 0, 0, 778, 0, 0, 0, 0,
	0, 691, 813, 0, 815, 816, 790, -2, 0, 759,
	795, 1487, 218, 219, 0, 0, 224, 242, 244, 0,
	0, 0, 243, 245, 249, 250, 299, 302, 304, 680,
	0, 0, 0, 1038, 0, 596, 744, 749, 756, 819,
	821, 94, 752, 744, 0, 81, 19, 80, 72, 73,
	0, 19, 0, 0, 0, 0, 1613, 1612, 1598, 0,
	1599, 1610, 1615, 0, 1618, 0, 668, 0, 0, 648,
	650, 0, 0, 648, 0, 0, 657, 0, 0, 648,
	683, 0, 0, 562, 104, 353, 0, 0, 0, 0,
	0, 583, 0, 942, 138, 0, 0, 158, 0, 0,
	0, 1011, 1486, 1512, 1514, 0, 1521, 1517, 1280, 1288,
	1302, 0, 0, 1308, 1320, 1320, 0, 0, 1311, 1611,
	1611, 1314, 1607, 1609, 1607, 1320, 1320, 0, 95, 0,
	0, 1374, 0, 0, 0, 644, 0, 0, 0, 1341,
	1343, 1343, 1349, 1344, 1350, 1351, 1343, 1343, 1343, 1343,
	1356, 1343, 1343, 1343, 1343, 1343, 1343, 1343, 1343, 1339,
	653, 668, 696, 697, 702, 703, 0, 54, 1011, 0,
	274, 0, 0, 851, 0, 0, 0, 864, 0, 0,
	901, 898, 899, 900, 0, 932, 436, 437, 438, 439,
	0, 0, 0, 936, 0, 924, 906, 0, 0, 0,
	975, 976, 977, 978, 979, -2, 988, 0, 0, 0,
	1082, 1628, 1628, 1151, 0, 0, 0, 1151, 1151, 1151,
	1025, 0, 1016, 656, 0, -2, 0, 0, 606, 0,
	0, 787, 491, 746, 515, 0, 531, 746, 746, 540,
	558, 0, 364, 406, 0, 1164, 1189, 1175, 1189, 1233,
	1189, 1189, 984, 0, 406, 0, 0, 376, 412, 0,
	0, 0, 0, 372, 409, 704, 413, 414, 416, 0,
	418, 378, 390, 391, 392, 393, 0, 0, 0, 385,
	398, 399, 400, 401, 1097, 1098, 1099, 1102, 1103, 1104,
	1105, 0, 0, 1108, 1109, 1110, 1111, 1112, 1186, 1187,
	1188, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1137, 1138,
	1139, 1140, 1141, 1142, 1121, 1122, 1123, 1124, 1125, 1126,
	1127, 1128, 0, 0, 1132, 0, 901, 0, 0, 0,
	0, 932, 913, 0, 923, 0, 925, 926, 0, 0,
	627, 746, 292, 0, 782, 776, 0, 765, 780, 781,
	768, 0, 770, 0, 766, 767, 746, 758, 789, 814,
	791, 794, 796, 797, 803, 0, 0, 0, 0, 221,
	222, 223, 230, 0, 455, 236, 711, 1148, 586, 587,
	1039, 1040, 594, 742, 0, 0, 742, 76, 79, 0,
	74, 0, 0, 0, 0, 66, 64, 1606, 0, 0,
	670, 118, 0, 0, 0, 646, 0, 651, 648, 633,
	642, 632, 639, 640, 659, 648, 624, 623, 1201, 328,
	0, 939, 138, 143, 144, 145, 139, 137, 946, 0,
	948, 0, 1007, 0, 0, 1518, 1307, 1289, 1309, 1321,
	1322, 1310, 1290, 1291, 1312, 1313, 1315, 1316, 1317, 1318,
	1319, 1292, 1370, 0, 1372, 1380, 1381, 0, 1430, 1434,
	0, 0, 0, 1347, 1348, 1352, 1353, 1354, 1355, 1357,
	1358, 1359, 1360, 1361, 1362, 1363, 1364, 698, 1340, 0,
	670, 708, 709, 1010, 1012, 839, 842, 848, 850, 0,
	861, 0, 0, 880, 873, 0, 0, 892, 893, 903,
	0, 0, 0, 441, 442, 0, 0, 0, 454, 450,
	451, 452, 432, 931, 920, 909, 0, 0, 919, 0,
	989, 1628, 1628, 1628, 0, 995, 0, 0, 0, 0,
	1152, 1153, 1155, 1156, 1157, 0, 0, 1151, 0, 0,
	0, 1028, 0, 0, 1019, 0, 812, 0, 0, 746,
	605, 608, 609, 690, 492, 746, 535, 532, 746, 361,
	377, 407, 0, -2, 0, 1190, 0, 1178, 1190, 0,
	0, 1189, 0, 366, 406, 0, 0, 0, 419, 422,
	423, 420, 1228, 0, 421, 0, 411, 417, 1100, 1101,
	0, 1106, 1107, 0, 1131, 0, 0, 424, 0, 0,
	0, 425, 430, 906, 0, 921, 0, 927, 928, 698,
	0, 0, 762, 783, 0, 0, 763, 0, 764, 769,
	771, 291, 798, 0, 0, 800, 801, 802, 793, 238,
	732, 0, 0, 753, 733, 0, 19, 0, 0, 69,
	1616, 1619, 672, 0, 669, 119, 0, 0, 0, 0,
	647, 631, 622, 140, 135, 947, 121, 0, 1008, 0,
	1382, 0, 1343, 1342, 1336, 0, 672, 0, 867, 865,
	880, 872, 887, 902, 891, 0, 933, 934, 0, 443,
	444, 0, 447, 453, 904, 905, 0, 0, 917, 0,
	0, 0, 0, 981, 1083, 1084, 1085, 1086, 0, 998,
	0, 1088, 1628, 1628, 0, -2, 0, -2, 1031, 0,
	1026, 0, 1018, 0, 1021, 746, 746, -2, 602, 607,
	0, 516, 536, 408, 1191, -2, 1204, 1206, 0, 994,
	1209, 1210, 0, 0, 0, 0, 0, 0, 1254, 1218,
	0, 0, 1222, 1223, 1224, 0, 0, 1227, 0, 1536,
	1537, 0, 1231, 0, 0, 0, 0, 0, 0, 0,
	1172, 367, 368, 0, 370, 371, 1229, 410, 1628, 380,
	1130, 1133, 1134, 429, 426, 427, 909, 912, 628, 693,
	293, 294, 784, 0, 777, 807, 804, 0, 0, 743,
	745, 70, 75, 0, 0, 674, 0, 671, 0, 665,
	667, 129, 636, 91, 112, 0, 0, 1371, 1421, 1346,
	0, 1337, 0, 1331, 1332, 1333, 1338, 674, 0, 871,
	0, 888, 889, 0, 0, 440, 445, 0, 448, 449,
	910, 907, 908, 0, 915, 0, 0, 970, 1607, 0,
	990, 991, 1145, 1146, 992, 996, 1154, 1087, 0, 0,
	0, 1086, 1041, -2, 1094, 0, 1002, 121, 1041, 1022,
	0, 1029, 0, 1027, 1020, 698, 603, 1205, 1207, 1208,
	1211, 1212, 1213, 1259, 1260, 1261, 0, 0, 1216, 1256,
	1257, 1258, 1217, 0, 0, 0, 0, 0, 1534, 1535,
	1252, 0, 0, 1179, 1181, 1182, 1183, 1184, 1185, 1180,
	0, 0, 0, 1171, 1173, 369, 0, 1628, 922, 290,
	0, 0, 808, 810, 805, 806, 65, 67, 82, 0,
	673, 120, 0, 83, 0, 109, 0, 122, 123, 0,
	0, 0, 0, 0, 1345, 1334, 0, 0, 0, 0,
	0, 1538, 1539, 1540, 0, 663, 0, 866, 0, 894,
	0, 896, 446, 914, 917, 0, 963, 0, 704, 0,
	1089, 1090, 1091, 997, 1043, 0, 993, 1096, 1628, 1004,
	1043, 1014, 0, 1024, 0, 1033, 0, 1030, 693, 1214,
	1215, 0, 0, 1437, 1628, 0, 1247, 0, 963, 963,
	963, 963, 0, 379, 0, 785, 799, 0, 0, 0,
	92, 96, 0, 118, 115, 0, 124, 0, 0, 0,
	0, 1006, 0, 1323, 0, 0, 0, 1327, 1328, 1329,
	1330, 0, 881, 895, 916, 918, 962, 971, 972, 704,
	1001, 0, 1080, 1095, 0, 1003, 1023, 1032, 0, 1035,
	601, 1255, 0, 1221, 0, 1226, 1235, 1248, 0, 0,
	1160, 0, 1162, 0, 1166, 0, 1168, 0, 0, 381,
	809, 811, 0, 676, 666, 85, 0, 0, 113, 114,
	116, 0, 125, 0, 127, 128, 0, 1324, 1325, 1326,
	868, 964, 1628, 0, 0, 968, 969, 973, 0, 1068,
	0, 0, 1074, 0, 1081, 1100, 1034, 1219, 1225, 1234,
	1236, 1237, 0, 1249, 1250, 1251, 1253, 963, 963, 963,
	963, 1170, 675, 0, 1013, 0, 97, 0, 99, 101,
	102, 1192, 110, 111, 117, 126, 1335, 855, 869, 0,
	0, 966, 0, 1044, 0, 1046, 0, 0, 0, 0,
	0, 1078, 0, 1220, 1238, 0, 1239, 0, 0, 0,
	1161, 1163, 1167, 1169, 677, 86, 87, 0, 98, 0,
	0, 870, 965, 967, 0, 1048, 0, 1069, 0, 0,
	0, 0, 0, 0, 0, 1240, 1242, 1243, 0, 0,
	1241, 0, 0, 100, 1193, 1045, 1042, 0, 1080, 1070,
	0, 1072, 0, 0, 0, 0, 1244, 1246, 1245, 88,
	89, 90, 0, 0, 1050, 0, 1066, 1071, 1073, 1075,
	0, 1079, 1077, 1194, 1049, 0, 1062, 1047, 0, 1076,
	1051, -2, 0, 1067, 1052, -2, 0, 1060, 0, 0,
	1053, 1061, 0, 1056, 0, 0, 0, 1055, 0, -2,
	1063, 0, 0, 1057, -2, 0, 1065, 1064,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 113, 3, 3, 3, 144, 136, 3,
	81, 82, 141, 139, 154, 140, 153, 142, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 603, 600,
	123, 122, 124, 3, 604, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 146, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 601, 135, 602, 147,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 95, 96, 97, 98, 99, 100, 101, 102, 103,
	104, 105, 106, 107, 108, 109, 110, 111, 112, 114,
	115, 116, 117, 118, 119, 120, 121, 125, 126, 127,
	128, 129, 130, 131, 132, 133, 134, 137, 138, 143,
	145, 148, 149, 150, 151, 152, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:758
		{
			yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:765
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:771
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 6:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:779
		{
			yyLOCAL = tree.NewCompoundStmt(yyDollar[2].statementsUnion())
		}
		yyVAL.union = yyLOCAL
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:785
		{
			yyLOCAL = []tree.Statement{yyDollar[1].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 8:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:789
		{
			yyLOCAL = append(yyDollar[1].statementsUnion(), yyDollar[3].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:804
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 19:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:808
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:814
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:819
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 23:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:823
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:855
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:863
		{
			yyLOCAL = &tree.BackupStart{
				Timestamp: yyDollar[2].str,
				IsS3:      false,
				Dir:       yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:871
		{
			yyLOCAL = &tree.BackupStart{
				Timestamp: yyDollar[2].str,
				IsS3:      true,
				Option:    yyDollar[5].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:881
		{
			var connectionId uint64
			switch v := yyDollar[3].item.(type) {
			case uint64:
				connectionId = v
			case int64:
				connectionId = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}

			yyLOCAL = &tree.Kill{
				Option:       yyDollar[2].killOptionUnion(),
				ConnectionId: connectionId,
				StmtOption:   yyDollar[4].statementOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:901
		{
			yyLOCAL = tree.KillOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:907
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeConnection,
			}
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:914
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeQuery,
			}
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:922
		{
			yyLOCAL = tree.StatementOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:928
		{
			yyLOCAL = tree.StatementOption{
				Exist:       true,
				StatementId: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:937
		{
			yyLOCAL = &tree.CallStmt{
				Name: yyDollar[2].procNameUnion(),
				Args: yyDollar[4].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:947
		{
			yyLOCAL = &tree.LeaveStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:955
		{
			yyLOCAL = &tree.IterateStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:963
		{
			yyLOCAL = &tree.WhileStmt{
				Name: "",
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:971
		{
			yyLOCAL = &tree.WhileStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Cond: yyDollar[4].exprUnion(),
				Body: yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:981
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
				Cond: yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:989
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
				Cond: yyDollar[6].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:999
		{
			yyLOCAL = &tree.LoopStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1006
		{
			yyLOCAL = &tree.LoopStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1015
		{
			yyLOCAL = &tree.IfStmt{
				Cond:  yyDollar[2].exprUnion(),
				Body:  yyDollar[4].statementsUnion(),
				Elifs: yyDollar[5].elseIfClauseListUnion(),
				Else:  yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1025
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1029
		{
			yyLOCAL = yyDollar[1].elseIfClauseListUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1035
		{
			yyLOCAL = []*tree.ElseIfStmt{yyDollar[1].elseIfClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1039
		{
			yyLOCAL = append(yyDollar[1].elseIfClauseListUnion(), yyDollar[2].elseIfClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ElseIfStmt
//line mysql_sql.y:1045
		{
			yyLOCAL = &tree.ElseIfStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1054
		{
			yyLOCAL = &tree.CaseStmt{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseList2Union(),
				Else:  yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1064
		{
			yyLOCAL = []*tree.WhenStmt{yyDollar[1].whenClause2Union()}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1068
		{
			yyLOCAL = append(yyDollar[1].whenClauseList2Union(), yyDollar[2].whenClause2Union())
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.WhenStmt
//line mysql_sql.y:1074
		{
			yyLOCAL = &tree.WhenStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1083
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1087
		{
			yyLOCAL = yyDollar[2].statementsUnion()
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1093
		{
			ep := &tree.ExportParam{
				Outfile:     true,
				QueryId:     yyDollar[3].str,
				FilePath:    yyDollar[5].str,
				Fields:      yyDollar[6].fieldsUnion(),
				Lines:       yyDollar[7].linesUnion(),
				Header:      yyDollar[8].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[9].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[10].strsUnion(),
			}
			yyLOCAL = &tree.MoDump{
				ExportParams: ep,
			}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1114
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[9].tailParamUnion()
			yyLOCAL.(*tree.Load).Param.Parallel = yyDollar[10].unsignedOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1127
		{
			yyLOCAL = &tree.LoadExtension{
				Name: tree.Identifier(yyDollar[2].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1134
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1138
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1144
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1148
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1154
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1161
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1169
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1173
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error parallel flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1187
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1191
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1195
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1200
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1204
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1208
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1214
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1223
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1234
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1238
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1244
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1248
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1254
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1258
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1264
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1288
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1307
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1311
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1315
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1320
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1324
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1331
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[3].str,
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1339
		{
			yyVAL.str = ""
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1346
		{
			yyVAL.str = yyDollar[3].str
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1351
		{
			yyVAL.str = "\n"
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1358
		{
			yyVAL.str = yyDollar[3].str
		}
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1363
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1367
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1391
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1395
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1401
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1407
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1425
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1442
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1465
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1469
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1473
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1478
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1482
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1488
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1501
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1512
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1525
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1529
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1539
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1552
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1565
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1571
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1577
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1584
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].cstrUnion().Compare(),
				TabName: yyDollar[3].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1592
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1601
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1605
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1609
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1613
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1617
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1621
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1628
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1632
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1638
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1645
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1654
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1658
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1664
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1668
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1672
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1676
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1680
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1684
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1688
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1692
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1696
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1700
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1704
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1708
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1712
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1716
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1720
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1724
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1728
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1732
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1736
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1740
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1744
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1748
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1752
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1756
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1760
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1764
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1768
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1772
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1776
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1780
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1784
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1788
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1792
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1796
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1800
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1804
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1808
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1812
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1816
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1820
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1824
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1828
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1832
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1836
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1840
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1844
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1848
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1852
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1856
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1860
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1873
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        false,
				CharacterList: yyDollar[3].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1880
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        true,
				CharacterList: yyDollar[4].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1887
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        false,
				CharacterList: yyDollar[4].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.TransactionCharacteristic
//line mysql_sql.y:1897
		{
			yyLOCAL = []*tree.TransactionCharacteristic{yyDollar[1].transactionCharacteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.TransactionCharacteristic
//line mysql_sql.y:1901
		{
			yyLOCAL = append(yyDollar[1].transactionCharacteristicListUnion(), yyDollar[3].transactionCharacteristicUnion())
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TransactionCharacteristic
//line mysql_sql.y:1907
		{
			yyLOCAL = &tree.TransactionCharacteristic{
				IsLevel:   true,
				Isolation: yyDollar[3].isolationLevelUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TransactionCharacteristic
//line mysql_sql.y:1914
		{
			yyLOCAL = &tree.TransactionCharacteristic{
				Access: yyDollar[1].accessModeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1922
		{
			yyLOCAL = tree.ISOLATION_LEVEL_REPEATABLE_READ
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1926
		{
			yyLOCAL = tree.ISOLATION_LEVEL_READ_COMMITTED
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1930
		{
			yyLOCAL = tree.ISOLATION_LEVEL_READ_UNCOMMITTED
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1934
		{
			yyLOCAL = tree.ISOLATION_LEVEL_SERIALIZABLE
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccessModeType
//line mysql_sql.y:1940
		{
			yyLOCAL = tree.ACCESS_MODE_READ_WRITE
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccessModeType
//line mysql_sql.y:1944
		{
			yyLOCAL = tree.ACCESS_MODE_READ_ONLY
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1950
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1957
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1964
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1973
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:2003
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:2007
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:2011
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2017
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2023
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2027
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:2034
		{
			yyVAL.str = yyDollar[3].str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:2040
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:2044
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2050
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2058
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2067
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2076
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2084
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2092
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2115
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2138
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2145
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2152
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     strings.ToLower(yyDollar[1].str),
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2160
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2167
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2174
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2183
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2187
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2191
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2197
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2201
		{
			yyVAL.str = yyDollar[1].str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2207
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2211
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare() + "." + yyDollar[3].cstrUnion().Compare()
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2217
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2221
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2232
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2238
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2243
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2247
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2251
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2255
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2259
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2263
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2267
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2271
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2275
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2281
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2285
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2289
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2293
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2298
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2303
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2309
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].cstrUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2316
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2322
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2329
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2336
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2346
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2353
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2364
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2375
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2379
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:2385
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2395
		{
			yyLOCAL = &tree.LockTableStmt{TableLocks: yyDollar[3].tableLocksUnion()}
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2401
		{
			yyLOCAL = []tree.TableLock{yyDollar[1].tableLockUnion()}
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2405
		{
			yyLOCAL = append(yyDollar[1].tableLocksUnion(), yyDollar[3].tableLockUnion())
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLock
//line mysql_sql.y:2411
		{
			yyLOCAL = tree.TableLock{Table: *yyDollar[1].tableNameUnion(), LockType: yyDollar[2].tableLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2417
		{
			yyLOCAL = tree.TableLockRead
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2421
		{
			yyLOCAL = tree.TableLockReadLocal
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2425
		{
			yyLOCAL = tree.TableLockWrite
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2429
		{
			yyLOCAL = tree.TableLockLowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2435
		{
			yyLOCAL = &tree.UnLockTableStmt{}
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2447
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2453
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2457
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2463
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2467
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2473
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2479
		{
			yyLOCAL = tree.NewReset(tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2490
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2496
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2500
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2504
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2508
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2512
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2516
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2524
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2532
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2542
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2583
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2587
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:2593
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2599
		{
			yyVAL.str = yyDollar[1].str
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2604
		{
			yyVAL.str = "true"
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2605
		{
			yyVAL.str = "false"
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2606
		{
			yyVAL.str = yyDollar[1].str
		}
	case 353:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2611
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2627
		{
			yyLOCAL = &tree.AlterView{
				Name:     yyDollar[4].tableNameUnion(),
				ColNames: yyDollar[5].identifierListUnion(),
				AsSource: yyDollar[7].selectUnion(),
				IfExists: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2638
		{
			yyLOCAL = &tree.AlterTable{
				Table:   yyDollar[3].tableNameUnion(),
				Options: yyDollar[4].alterTableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2647
		{
			yyLOCAL = []tree.AlterTableOption{yyDollar[1].alterTableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2651
		{
			yyLOCAL = append(yyDollar[1].alterTableOptionsUnion(), yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2657
		{
			opt := &tree.AlterOptionAdd{
				Def: yyDollar[2].tableDefUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2664
		{
			opt := &tree.AlterTableModifyColumnClause{
				Typ:       tree.AlterTableModifyColumn,
				NewColumn: yyDollar[3].columnTableDefUnion(),
				Position:  yyDollar[4].alterColPositionUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2673
		{
			opt := &tree.AlterTableChangeColumnClause{
				Typ:           tree.AlterTableChangeColumn,
				OldColumnName: yyDollar[3].unresolvedNameUnion(),
				NewColumn:     yyDollar[4].columnTableDefUnion(),
				Position:      yyDollar[5].alterColPositionUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2683
		{
			opt := &tree.AlterTableRenameColumnClause{
				Typ:           tree.AlterTableRenameColumn,
				OldColumnName: yyDollar[3].unresolvedNameUnion(),
				NewColumnName: yyDollar[5].unresolvedNameUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2692
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:         tree.AlterTableAlterColumn,
				ColumnName:  yyDollar[3].unresolvedNameUnion(),
				DefalutExpr: tree.NewAttributeDefault(yyDollar[6].exprUnion()),
				OptionType:  tree.AlterColumnOptionSetDefault,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2702
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:        tree.AlterTableAlterColumn,
				ColumnName: yyDollar[3].unresolvedNameUnion(),
				Visibility: yyDollar[5].indexVisibilityUnion(),
				OptionType: tree.AlterColumnOptionSetVisibility,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2712
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:        tree.AlterTableAlterColumn,
				ColumnName: yyDollar[3].unresolvedNameUnion(),
				OptionType: tree.AlterColumnOptionDropDefault,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2721
		{
			opt := &tree.AlterTableOrderByColumnClause{
				Typ:              tree.AlterTableOrderByColumn,
				AlterOrderByList: yyDollar[3].alterColumnOrderByUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2729
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2733
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2737
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[1].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2741
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2745
		{
			yyLOCAL = tree.AlterTableOption(
				&tree.AlterAddCol{
					Column:   yyDollar[3].columnTableDefUnion(),
					Position: yyDollar[4].alterColPositionUnion(),
				},
			)
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2754
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2760
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2764
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2768
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2772
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2776
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2780
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2784
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2788
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2793
		{
			yyVAL.str = ""
		}
	case 404:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2824
		{
			yyVAL.str = ""
		}
	case 405:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2828
		{
			yyVAL.str = string("COLUMN")
		}
	case 406:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2833
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ: tree.ColumnPositionNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2839
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ: tree.ColumnPositionFirst,
			}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2845
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ:            tree.ColumnPositionAfter,
				RelativeColumn: yyDollar[2].unresolvedNameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.AlterColumnOrder
//line mysql_sql.y:2854
		{
			yyLOCAL = []*tree.AlterColumnOrder{yyDollar[1].alterColumnOrderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.AlterColumnOrder
//line mysql_sql.y:2858
		{
			yyLOCAL = append(yyDollar[1].alterColumnOrderByUnion(), yyDollar[3].alterColumnOrderUnion())
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AlterColumnOrder
//line mysql_sql.y:2864
		{
			yyLOCAL = &tree.AlterColumnOrder{Column: yyDollar[1].unresolvedNameUnion(), Direction: yyDollar[2].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2871
		{
			yyLOCAL = &tree.AlterTableName{
				Name: yyDollar[1].unresolvedObjectNameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2879
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropIndex,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2886
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropKey,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2893
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[1].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2900
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2907
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropForeignKey,
				Name: tree.Identifier(yyDollar[3].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2914
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ: tree.AlterTableDropPrimaryKey,
			}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2922
		{
			yyLOCAL = &tree.AlterOptionAlterIndex{
				Visibility: yyDollar[3].indexVisibilityUnion(),
				Name:       tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2929
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type:    yyDollar[1].str,
				Enforce: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2936
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type:    yyDollar[1].str,
				Enforce: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2945
		{
			yyLOCAL = tree.VISIBLE_TYPE_VISIBLE
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2949
		{
			yyLOCAL = tree.VISIBLE_TYPE_INVISIBLE
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2956
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].alterAccountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2968
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				DbName:         yyDollar[3].str,
				UpdateConfig:   yyDollar[7].str,
				IsAccountLevel: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2976
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				AccountName:    yyDollar[4].str,
				UpdateConfig:   yyDollar[8].str,
				IsAccountLevel: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2984
		{
			assignments := []*tree.VarAssignmentExpr{
				&tree.VarAssignmentExpr{
					System: true,
					Global: true,
					Name:   yyDollar[6].str,
					Value:  yyDollar[8].exprUnion(),
				},
			}
			yyLOCAL = &tree.SetVar{Assignments: assignments}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2997
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:3003
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist:          true,
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3014
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:3025
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:3029
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3034
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3038
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3043
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3047
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3063
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3067
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3071
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3075
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3079
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3083
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3087
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3091
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3095
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3099
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3103
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3107
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3111
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3115
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3119
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3123
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3129
		{
			yyVAL.item = nil
		}
	case 454:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3134
		{
			yyVAL.item = nil
		}
	case 485:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3174
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3180
		{
			yyLOCAL = &tree.ShowStages{
				Like: yyDollar[3].comparisionExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3188
		{
			yyLOCAL = &tree.ShowGrants{ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3192
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion(), ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3196
		{
			s := &tree.ShowGrants{}
			roles := []*tree.Role{tree.NewRole(yyDollar[5].cstrUnion().Compare())}
			s.Roles = roles
			s.ShowGrantType = tree.GrantForRole
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:3205
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:3209
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3215
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3220
		{
		}
	case 495:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3224
		{
		}
	case 497:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3229
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3239
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3249
		{
			yyLOCAL = &tree.ShowRolesStmt{
				Like: yyDollar[3].comparisionExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3257
		{
			yyLOCAL = &tree.ShowNodeList{}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3263
		{
			yyLOCAL = &tree.ShowLocks{}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3269
		{
			yyLOCAL = &tree.ShowTableNumber{DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3275
		{
			yyLOCAL = &tree.ShowColumnNumber{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3281
		{
			yyLOCAL = &tree.ShowTableValues{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3287
		{
			yyLOCAL = &tree.ShowTableSize{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3293
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3302
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3306
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3310
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3314
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3318
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3322
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3326
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3330
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3336
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3343
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[7].cstrUnion().Compare()), ExplicitSchema: true}
			tbl := tree.NewTableName(tree.Identifier(yyDollar[5].cstrUnion().Compare()), prefix)
			yyLOCAL = &tree.ShowIndex{
				TableName: *tbl,
				Where:     yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3353
		{
		}
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3355
		{
		}
	case 522:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3364
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3374
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3383
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3387
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3391
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3397
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3403
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3409
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3415
		{
			yyLOCAL = &tree.ShowSequences{
				DBName: yyDollar[3].str,
				Where:  yyDollar[4].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3424
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3434
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3446
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3450
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3456
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3468
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3482
		{
			yyLOCAL = &tree.ShowAccounts{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3488
		{
			yyLOCAL = &tree.ShowPublications{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3495
		{
			yyLOCAL = &tree.ShowSubscriptions{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3500
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3504
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3508
		{
			yyLOCAL = tree.NewComparisonExpr(tree.ILIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3513
		{
			yyVAL.str = ""
		}
	case 544:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3517
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 545:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3523
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3536
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3540
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3546
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3551
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3555
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3559
		{
			yyLOCAL = &tree.ShowCreatePublications{Name: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3565
		{
			yyLOCAL = &tree.ShowBackendServers{}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3571
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3575
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3581
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3587
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3591
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3595
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3601
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3605
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3629
		{
			yyLOCAL = &tree.DropSequence{
				IfExists: yyDollar[3].boolValUnion(),
				Names:    yyDollar[4].tableNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3638
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3647
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3656
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3660
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:3666
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3675
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3684
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3694
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[4].boolValUnion(), Names: yyDollar[5].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3698
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3704
		{
			yyLOCAL = &tree.DropConnector{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3710
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3716
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3720
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3726
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3732
		{
			yyLOCAL = &tree.DropFunction{
				Name: yyDollar[3].functionNameUnion(),
				Args: yyDollar[5].funcArgsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3741
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[3].procNameUnion(),
				IfExists: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3748
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[5].procNameUnion(),
				IfExists: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3759
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3764
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3771
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3787
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3800
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3811
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3815
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3821
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3826
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3833
		{
		}
	case 609:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3835
		{
		}
	case 610:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3838
		{
		}
	case 615:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3847
		{
		}
	case 617:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3851
		{
		}
	case 619:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3856
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3865
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3872
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3878
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3886
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3893
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3900
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3920
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateExprsUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3930
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3934
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3940
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3947
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3953
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3961
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3968
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3975
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3994
		{
			yyLOCAL = []*tree.UpdateExpr{}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3998
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:4003
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:4007
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:4011
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:4017
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4026
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4030
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4036
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4040
		{
			yyVAL.str = yyDollar[3].cstrUnion().Compare()
		}
	case 645:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4046
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4050
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4056
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4061
		{
		}
	case 650:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4065
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4072
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4076
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4083
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4088
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4092
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4098
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4102
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4108
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4112
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:4117
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:4121
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4134
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4141
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4148
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4166
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:4185
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:4191
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4198
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4202
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4215
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4219
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4224
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4228
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4235
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4240
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4247
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4253
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion(), SelectLockInfo: yyDollar[5].selectLockInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4257
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4261
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4265
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), SelectLockInfo: yyDollar[6].selectLockInfoUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4269
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4273
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:4279
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:4286
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:4295
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:4299
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:4305
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4313
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4317
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4322
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4326
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4332
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4336
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4340
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4345
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4349
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4355
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4361
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4365
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:4371
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4376
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4380
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4384
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4389
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4393
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4397
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SelectLockInfo
//line mysql_sql.y:4402
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SelectLockInfo
//line mysql_sql.y:4406
		{
			yyLOCAL = &tree.SelectLockInfo{
				LockType: tree.SelectLockForUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4414
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4418
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4422
		{
			valuesStmt := yyDollar[2].statementUnion().(*tree.ValuesStatement)
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{
				Select: &tree.ValuesClause{
					Rows:    valuesStmt.Rows,
					RowWord: true,
				},
				OrderBy: valuesStmt.OrderBy,
				Limit:   valuesStmt.Limit,
			}}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4436
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4440
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4450
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4460
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4470
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4482
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4490
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4498
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4507
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4515
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4523
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4531
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4539
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4547
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4555
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4563
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4571
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4581
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4592
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4606
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 735:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4610
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 736:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4614
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 737:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4619
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4623
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4627
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4636
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4640
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4645
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4649
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4654
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4658
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4664
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4668
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4674
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4678
		{
			yyDollar[2].cstrUnion().SetConfig(0)
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].cstrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4683
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4687
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4692
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4700
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4706
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4714
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4722
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4732
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4738
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4747
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4756
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4765
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4775
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 767:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4779
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 768:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4789
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 769:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4793
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 770:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4797
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4801
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 772:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4807
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4817
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4821
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4827
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4833
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4837
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4843
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4849
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 780:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4853
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 781:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4857
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 782:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4863
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4867
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4873
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4877
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4883
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4887
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4893
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4897
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4907
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4920
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:4926
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4932
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].cstrUnion().Compare()))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:4945
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4956
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4963
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4967
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:4973
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4983
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4987
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4991
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4996
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:5000
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:5004
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:5008
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5013
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5017
		{
			yyLOCAL = []string{yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5021
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5025
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5029
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5034
		{
			yyVAL.str = ""
		}
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5038
		{
			yyVAL.str = yyDollar[1].str
		}
	case 814:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5042
		{
			yyVAL.str = yyDollar[2].str
		}
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5048
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 817:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5054
		{
			yyLOCAL = tree.NewCStr("", yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5058
		{
			yyLOCAL = yyDollar[1].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5062
		{
			yyLOCAL = yyDollar[2].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5066
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5070
		{
			yyLOCAL = tree.NewCStr(yyDollar[2].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5076
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 839:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5112
		{
			yyLOCAL = &tree.CreateExtension{
				Language: yyDollar[3].str,
				Name:     tree.Identifier(yyDollar[5].str),
				Filename: tree.Identifier(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5122
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5128
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 842:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5134
		{
			yyLOCAL = &tree.CreateProcedure{
				Name: yyDollar[3].procNameUnion(),
				Args: yyDollar[5].procArgsUnion(),
				Body: yyDollar[7].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:5144
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[1].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:5149
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().ToLower()), ExplicitSchema: true}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[3].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5155
		{
			yyLOCAL = tree.ProcedureArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5162
		{
			yyLOCAL = tree.ProcedureArgs{yyDollar[1].procArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5166
		{
			yyLOCAL = append(yyDollar[1].procArgsUnion(), yyDollar[3].procArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArg
//line mysql_sql.y:5172
		{
			yyLOCAL = tree.ProcedureArg(yyDollar[1].procArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureArgDecl
//line mysql_sql.y:5178
		{
			yyLOCAL = tree.NewProcedureArgDecl(yyDollar[1].procArgTypeUnion(), yyDollar[2].unresolvedNameUnion(), yyDollar[3].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5183
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5187
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5191
		{
			yyLOCAL = tree.TYPE_OUT
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5195
		{
			yyLOCAL = tree.TYPE_INOUT
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5202
		{
			fun := &tree.CreateFunction{
				Name:       yyDollar[3].functionNameUnion(),
				Args:       yyDollar[5].funcArgsUnion(),
				ReturnType: yyDollar[8].funcReturnUnion(),
				Language:   yyDollar[10].str,
				Body:       yyDollar[12].str,
			}

			if yyDollar[10].str == "python" {
				if yyDollar[13].str == "" {
					yylex.Error("no handler error")
					return 1
				}
				body := &tree.PythonFunctionBody{
					Handler: yyDollar[13].str,
					As:      yyDollar[12].str,
				}
				bytes, _ := json.Marshal(body)
				fun.Body = string(bytes)
			}

			yyLOCAL = fun
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:5229
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:5234
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5240
		{
			yyLOCAL = tree.FunctionArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5247
		{
			yyLOCAL = tree.FunctionArgs{yyDollar[1].funcArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5251
		{
			yyLOCAL = append(yyDollar[1].funcArgsUnion(), yyDollar[3].funcArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArg
//line mysql_sql.y:5257
		{
			yyLOCAL = tree.FunctionArg(yyDollar[1].funcArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5263
		{
			yyLOCAL = tree.NewFunctionArgDecl(nil, yyDollar[1].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5267
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5271
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5277
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReturnType
//line mysql_sql.y:5283
		{
			yyLOCAL = tree.NewReturnType(yyDollar[1].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5288
		{
			yyVAL.str = ""
		}
	case 870:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5295
		{
			yyVAL.str = yyDollar[2].str
		}
	case 871:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5301
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[5].tableNameUnion(),
				ColNames:    yyDollar[6].identifierListUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5310
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[4].tableNameUnion(),
				ColNames:    yyDollar[5].identifierListUnion(),
				AsSource:    yyDollar[7].selectUnion(),
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5321
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5333
		{
			yyVAL.str = yyDollar[1].str
		}
	case 875:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5337
		{
			yyVAL.str = yyVAL.str + yyDollar[2].str
		}
	case 876:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5343
		{
			yyVAL.str = "OR REPLACE"
		}
	case 877:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5347
		{
			yyVAL.str = "ALGORITHM = " + yyDollar[3].str
		}
	case 878:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5351
		{
			yyVAL.str = "DEFINER = "
		}
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5355
		{
			yyVAL.str = "SQL SECURITY " + yyDollar[3].str
		}
	case 880:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5360
		{
			yyVAL.str = ""
		}
	case 881:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:5364
		{
			yyVAL.str = "WITH " + yyDollar[2].str + " CHECK OPTION"
		}
	case 887:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5378
		{
			yyVAL.str = ""
		}
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5386
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 891:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:5392
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5402
		{
			yyVAL.str = yyDollar[1].str
		}
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5406
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 894:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5412
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5419
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5425
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5433
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5439
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5446
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5453
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusRestricted,
			}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5461
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5467
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5476
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5488
		{
			yyLOCAL = &tree.CreatePublication{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Database:    tree.Identifier(yyDollar[6].cstrUnion().Compare()),
				AccountsSet: yyDollar[7].accountsSetOptionUnion(),
				Comment:     yyDollar[8].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5500
		{
			yyLOCAL = &tree.CreateStage{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Url:         yyDollar[5].str,
				Credentials: yyDollar[6].stageCredentialsUnion(),
				Status:      yyDollar[7].stageStatusUnion(),
				Comment:     yyDollar[8].stageCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5512
		{
			yyLOCAL = tree.StageStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5518
		{
			yyLOCAL = tree.StageStatus{
				Exist:  true,
				Option: tree.StageStatusEnabled,
			}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5525
		{
			yyLOCAL = tree.StageStatus{
				Exist:  true,
				Option: tree.StageStatusDisabled,
			}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageComment
//line mysql_sql.y:5533
		{
			yyLOCAL = tree.StageComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.StageComment
//line mysql_sql.y:5539
		{
			yyLOCAL = tree.StageComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageUrl
//line mysql_sql.y:5547
		{
			yyLOCAL = tree.StageUrl{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageUrl
//line mysql_sql.y:5553
		{
			yyLOCAL = tree.StageUrl{
				Exist: true,
				Url:   yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageCredentials
//line mysql_sql.y:5561
		{
			yyLOCAL = tree.StageCredentials{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.StageCredentials
//line mysql_sql.y:5567
		{
			yyLOCAL = tree.StageCredentials{
				Exist:       true,
				Credentials: yyDollar[4].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5576
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5580
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5585
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5589
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5596
		{
			yyVAL.str = yyDollar[3].str
		}
	case 920:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5601
		{
			yyVAL.str = ""
		}
	case 921:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5605
		{
			yyVAL.str = yyDollar[2].str
		}
	case 922:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5611
		{
			yyLOCAL = &tree.AlterStage{
				IfNotExists:       yyDollar[3].boolValUnion(),
				Name:              tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				UrlOption:         yyDollar[6].stageUrlUnion(),
				CredentialsOption: yyDollar[7].stageCredentialsUnion(),
				StatusOption:      yyDollar[8].stageStatusUnion(),
				Comment:           yyDollar[9].stageCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5625
		{
			yyLOCAL = &tree.AlterPublication{
				IfExists:    yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				AccountsSet: yyDollar[5].accountsSetOptionUnion(),
				Comment:     yyDollar[6].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5635
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5639
		{
			yyLOCAL = &tree.AccountsSetOption{
				All: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5645
		{
			yyLOCAL = &tree.AccountsSetOption{
				SetAccounts: yyDollar[2].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5651
		{
			yyLOCAL = &tree.AccountsSetOption{
				AddAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5657
		{
			yyLOCAL = &tree.AccountsSetOption{
				DropAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5666
		{
			yyLOCAL = &tree.DropPublication{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5675
		{
			yyLOCAL = &tree.DropStage{
				IfNotExists: yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5684
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 932:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5689
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5695
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5703
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5809
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5813
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5819
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5829
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5833
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5839
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5849
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5853
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5857
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5862
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5866
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5872
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5879
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5885
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5894
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 951:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5901
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:5910
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:5914
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:5920
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5934
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5938
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5942
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5947
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5951
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5955
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5959
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5965
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5984
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5988
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6010
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6014
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6018
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6022
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6026
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6032
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6036
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:6042
		{
			// Order is parsed but just ignored as MySQL dtree.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:6047
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6052
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6056
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6060
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6064
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6068
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6074
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Name:               tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				SubscriptionOption: yyDollar[5].subscriptionOptionUnion(),
				CreateOptions:      yyDollar[6].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:6085
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:6089
		{
			yyLOCAL = &tree.SubscriptionOption{From: tree.Identifier(yyDollar[2].str), Publication: tree.Identifier(yyDollar[4].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6099
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6103
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6108
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6112
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6118
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6122
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6128
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6132
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6136
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6141
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6145
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6151
		{
			yyLOCAL = &tree.CreateConnector{
				ConnectorName: yyDollar[3].tableNameUnion(),
				Options:       yyDollar[6].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6160
		{
			yyLOCAL = &tree.CreateStream{
				Replace:     yyDollar[2].streamOptionalUnion(),
				Source:      false,
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				StreamName:  yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Options:     yyDollar[9].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6171
		{
			yyLOCAL = &tree.CreateStream{
				Replace:     yyDollar[2].streamOptionalUnion(),
				Source:      true,
				IfNotExists: yyDollar[5].ifNotExistsUnion(),
				StreamName:  yyDollar[6].tableNameUnion(),
				Defs:        yyDollar[8].tableDefsUnion(),
				Options:     yyDollar[10].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6182
		{
			yyLOCAL = &tree.CreateStream{
				Replace:     yyDollar[2].streamOptionalUnion(),
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				StreamName:  yyDollar[5].tableNameUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				Options:     yyDollar[6].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6193
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6197
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6203
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6215
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6224
		{
			yyLOCAL = &tree.CreateTable{
				IsClusterTable:  true,
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6237
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6244
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Filepath:     yyDollar[2].str,
					CompressType: tree.AUTO,
					Format:       tree.CSV,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6254
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.INLINE,
					Format:   yyDollar[4].str,
					Data:     yyDollar[8].str,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6264
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Option: yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6272
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.S3,
					Option:   yyDollar[4].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6283
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6287
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6292
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6296
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:6303
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6314
		{
			yyLOCAL = &tree.CreateSequence{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        yyDollar[4].tableNameUnion(),
				Type:        yyDollar[5].columnTypeUnion(),
				IncrementBy: yyDollar[6].incrementByOptionUnion(),
				MinValue:    yyDollar[7].minValueOptionUnion(),
				MaxValue:    yyDollar[8].maxValueOptionUnion(),
				StartWith:   yyDollar[9].startWithOptionUnion(),
				Cycle:       yyDollar[10].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6327
		{
			locale := ""
			fstr := "bigint"
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: fstr,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6341
		{
			yyLOCAL = yyDollar[2].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6345
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6349
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6356
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6363
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6370
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6377
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6381
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6385
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6389
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6393
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6400
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6407
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6411
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6418
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6425
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6429
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6436
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6443
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6450
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6457
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6461
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6466
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6470
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6474
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:6479
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:6483
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6493
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6497
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: []*tree.UnresolvedName{yyDollar[3].unresolvedNameUnion()},
			}

		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6504
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: yyDollar[4].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6511
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6515
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6524
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6528
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6534
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6538
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:6544
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:6553
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6563
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6567
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6573
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6577
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:6583
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:6590
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6599
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6603
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6608
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6612
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6617
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6621
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6626
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6630
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6640
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6644
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6655
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6663
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6671
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6679
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6690
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6699
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6709
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6719
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6723
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6728
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6732
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6738
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6742
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6748
		{
			yyLOCAL = &tree.CreateConnectorWithOption{Key: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6752
		{
			yyLOCAL = &tree.CreateConnectorWithOption{Key: tree.Identifier(yyDollar[1].str), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6757
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6761
		{
			yyLOCAL = yyDollar[3].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6767
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6771
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6777
		{
			yyLOCAL = &tree.CreateStreamWithOption{Key: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6781
		{
			yyLOCAL = &tree.CreateStreamWithOption{Key: tree.Identifier(yyDollar[1].str), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6786
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6790
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6796
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6800
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6804
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6810
		{
			yyLOCAL = tree.NewTableOptionAUTOEXTEND_SIZE(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6814
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6818
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6822
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6826
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6830
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6834
		{
			str := util.DealCommentString(yyDollar[3].str)
			yyLOCAL = tree.NewTableOptionComment(str)
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6839
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6843
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6847
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6851
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6855
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6859
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6863
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6867
		{
			yyLOCAL = tree.NewTableOptionEngineAttr(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6871
		{
			yyLOCAL = tree.NewTableOptionInsertMethod(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6875
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6879
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6883
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6887
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6891
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6895
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6899
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6903
		{
			yyLOCAL = tree.NewTTableOptionStartTrans(true)
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6907
		{
			yyLOCAL = tree.NewTTableOptionSecondaryEngineAttr(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6911
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6915
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6919
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6923
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6927
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6931
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6935
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].cstrUnion().Compare(), "")
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6939
		{
			yyLOCAL = tree.NewTableOptionTablespace("", yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6943
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6947
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:6953
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:6957
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:6963
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6969
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1136:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6973
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6979
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6983
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6987
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6991
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6995
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6999
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:7013
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:7017
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:7026
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:7031
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:7037
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:7044
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:7048
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7054
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7058
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7062
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7068
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7072
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7078
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7087
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7096
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7119
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7144
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.ForeignKey:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.UniqueIndex:
					v.ConstraintSymbol = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7158
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7164
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7173
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7182
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7191
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7200
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7210
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7218
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7224
		{
			yyVAL.str = ""
		}
	case 1175:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7228
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7238
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7244
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7250
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].cstrUnion().Compare()
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7269
		{
			yyVAL.str = ""
		}
	case 1190:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7273
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 1191:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:7279
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7285
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7289
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7293
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7299
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7303
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7307
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7311
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7317
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7321
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7325
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7330
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7334
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7340
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7344
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7350
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7354
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7358
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7362
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7366
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7370
		{
			str := util.DealCommentString(yyDollar[2].str)
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7375
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7379
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7383
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7387
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7391
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7395
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7399
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7403
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7407
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7411
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7424
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7428
		{
			yyLOCAL = tree.NewAttributeVisable(true)
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7432
		{
			yyLOCAL = tree.NewAttributeVisable(false)
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7436
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7440
		{
			yyLOCAL = tree.NewAttributeHeader(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7444
		{
			yyLOCAL = tree.NewAttributeHeaders()
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7450
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7454
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7459
		{
			yyVAL.str = ""
		}
	case 1231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7463
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7469
		{
			yyVAL.str = ""
		}
	case 1233:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7473
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 1234:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:7479
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7491
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7498
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7505
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7512
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7519
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7528
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7534
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7540
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7544
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7548
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7552
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7556
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7561
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7568
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7572
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7576
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:7581
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:7585
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:7590
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:7594
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:7610
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7616
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7620
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7624
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7628
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7632
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7636
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7640
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7644
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7648
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7652
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7656
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7660
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7664
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7670
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7674
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7678
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7682
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7686
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7690
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7694
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7698
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7702
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7706
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7710
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7714
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7719
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7727
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7731
		{
			yyLOCAL = tree.NewBitCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7735
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7739
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7748
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7752
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7756
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7760
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7764
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7770
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7778
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7786
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7795
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7799
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7804
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7808
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:7814
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:7818
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:7824
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7833
		{
			t := yyVAL.columnTypeUnion()
			str := strings.ToLower(t.InternalType.FamilyString)
			if str == "binary" {
				t.InternalType.Scale = -1
			} else if str == "char" {
				if t.InternalType.DisplayWith == -1 {
					t.InternalType.FamilyString = "varchar"
					t.InternalType.Oid = uint32(defines.MYSQL_TYPE_VARCHAR)
				}
			}
		}
	case 1309:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7845
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7862
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7879
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7892
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7905
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7917
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7931
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Scale:              yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7946
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Scale:              yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7961
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7978
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7993
		{
		}
	case 1324:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8000
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8004
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8008
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8014
		{
			yyLOCAL = &tree.FrameBound{Type: tree.CurrentRow}
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8018
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8022
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8026
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:8032
		{
			yyLOCAL = tree.Rows
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:8036
		{
			yyLOCAL = tree.Range
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:8040
		{
			yyLOCAL = tree.Groups
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8046
		{
			yyLOCAL = &tree.FrameClause{
				Type:  yyDollar[1].frameTypeUnion(),
				Start: yyDollar[2].frameBoundUnion(),
				End:   &tree.FrameBound{Type: tree.CurrentRow},
			}
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8054
		{
			yyLOCAL = &tree.FrameClause{
				Type:   yyDollar[1].frameTypeUnion(),
				HasEnd: true,
				Start:  yyDollar[3].frameBoundUnion(),
				End:    yyDollar[5].frameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8064
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8068
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8075
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8080
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8084
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8089
		{
			yyVAL.str = ","
		}
	case 1342:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:8093
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1343:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:8098
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:8105
		{
			hasFrame := true
			var f *tree.FrameClause
			if yyDollar[5].frameClauseUnion() != nil {
				f = yyDollar[5].frameClauseUnion()
			} else {
				hasFrame = false
				f = &tree.FrameClause{Type: tree.Range}
				if yyDollar[4].orderByUnion() == nil {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.Following, UnBounded: true}
				} else {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.CurrentRow}
				}
			}
			yyLOCAL = &tree.WindowSpec{
				PartitionBy: yyDollar[3].exprsUnion(),
				OrderBy:     yyDollar[4].orderByUnion(),
				Frame:       f,
				HasFrame:    hasFrame,
			}
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8131
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      append(yyDollar[4].exprsUnion(), tree.NewNumValWithType(constant.MakeString(yyDollar[6].str), yyDollar[6].str, false, tree.P_char)),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[8].windowSpecUnion(),
				OrderBy:    yyDollar[5].orderByUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8142
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8152
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8162
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8172
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8181
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8190
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8200
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8210
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8220
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8230
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8240
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8250
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8260
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8270
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8280
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8290
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8300
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8310
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8329
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8337
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8345
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8353
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8361
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			timeUinit := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8371
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8379
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8388
		{
			name := tree.SetUnresolvedName("nextval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8396
		{
			name := tree.SetUnresolvedName("setval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8404
		{
			name := tree.SetUnresolvedName("currval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8412
		{
			name := tree.SetUnresolvedName("lastval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8420
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(0), "0", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8431
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(1), "1", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8441
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(2), "2", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8453
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(3), "3", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8464
		{
			column := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:8486
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1419:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8522
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8534
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8546
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8557
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8565
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8572
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1425:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8579
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1426:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8591
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1427:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8599
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].exprUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1428:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8609
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].unresolvedNameUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1429:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8619
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1430:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8627
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1431:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8638
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1432:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8647
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1433:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8656
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1434:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8664
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1435:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8674
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1436:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8682
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1437:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8692
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1438:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8696
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1439:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8702
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1440:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8706
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1447:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8725
		{
		}
	case 1448:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:8727
		{
		}
	case 1482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8768
		{
			name := tree.SetUnresolvedName("interval")
			str := strings.ToLower(yyDollar[3].str)
			arg2 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1483:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8779
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1484:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8783
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1485:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8787
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:8793
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1487:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8798
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1488:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8802
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1489:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8808
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8812
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8819
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8823
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1493:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8827
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1494:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8835
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1495:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8839
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1496:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8843
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1497:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8847
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1498:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8853
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1499:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8857
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1500:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8861
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1501:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8865
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1502:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8869
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1503:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8873
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1504:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8877
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1505:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8881
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1506:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8885
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1507:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8889
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1509:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8897
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1510:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8901
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1511:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8905
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1512:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8909
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1513:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8913
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.ILIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1514:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8917
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_ILIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1515:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8921
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1516:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8925
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1517:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8929
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1518:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8933
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1520:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8939
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1521:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8943
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1522:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8949
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1523:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8953
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1524:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8960
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1525:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8964
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1526:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8968
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1527:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8974
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1528:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8978
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8982
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1530:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8986
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1531:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8990
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1532:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8994
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1533:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8998
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1534:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:9004
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1535:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:9008
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1536:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:9012
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1537:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:9016
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1538:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9022
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1539:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9035
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1540:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9040
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1541:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9046
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1542:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9050
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1543:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9063
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1544:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9068
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1545:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9072
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1546:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9076
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1547:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9080
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1548:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9084
		{
			if strings.HasPrefix(yyDollar[2].str, "0x") {
				yyDollar[2].str = yyDollar[2].str[2:]
			}
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_bit)
		}
		yyVAL.union = yyLOCAL
	case 1549:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9091
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1550:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9095
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1551:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9109
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1552:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9113
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_ScoreBinary)
		}
		yyVAL.union = yyLOCAL
	case 1553:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9120
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1557:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9131
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1558:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9136
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1559:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9142
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1560:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9154
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1561:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9166
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1562:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9178
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1563:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9191
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1564:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9204
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1565:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9217
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1566:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9230
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1567:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9243
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1568:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9256
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1569:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9269
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1570:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9282
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1571:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9295
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1572:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9308
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1573:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9323
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for double out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1574:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9350
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for float out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for float out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1575:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9392
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1576:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9428
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1577:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9464
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1578:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9481
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1579:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9493
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        yyDollar[2].lengthOptUnion(),
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1580:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9513
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        yyDollar[2].lengthOptUnion(),
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1581:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9533
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        yyDollar[2].lengthOptUnion(),
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1582:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9553
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1583:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9569
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1584:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9582
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1585:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9595
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1586:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9608
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1587:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9621
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1588:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9633
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1589:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9645
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1590:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9657
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1591:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9669
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1592:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9681
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1593:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9693
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1594:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9705
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1595:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9717
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1596:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9729
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.ArrayFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1597:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9742
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.ArrayFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1598:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9755
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1599:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9768
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1600:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9781
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1601:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9796
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1602:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9804
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1603:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9813
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1604:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9823
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1605:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:9846
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1606:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:9851
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1607:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9857
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1609:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9864
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1610:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9868
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1611:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9873
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1612:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9877
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1613:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9883
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1614:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9889
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1615:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9896
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1616:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9903
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1617:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9912
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 38, // this is the default precision for decimal
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1618:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9919
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1619:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9926
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1620:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9935
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1621:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9939
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1622:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9943
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1623:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:9949
		{
		}
	case 1624:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9951
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1628:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:9961
		{
			yyVAL.str = ""
		}
	case 1629:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:9965
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}
