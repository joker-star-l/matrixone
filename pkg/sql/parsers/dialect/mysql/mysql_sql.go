// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const LOWER_THAN_ORDER = 57352
const ORDER = 57353
const SELECT = 57354
const INSERT = 57355
const UPDATE = 57356
const DELETE = 57357
const FROM = 57358
const WHERE = 57359
const GROUP = 57360
const HAVING = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const AFTER = 57388
const INSTANT = 57389
const INPLACE = 57390
const COPY = 57391
const DISABLE = 57392
const ENABLE = 57393
const UNDEFINED = 57394
const MERGE = 57395
const TEMPTABLE = 57396
const DEFINER = 57397
const INVOKER = 57398
const SQL = 57399
const SECURITY = 57400
const CASCADED = 57401
const VALUES = 57402
const NEXT = 57403
const VALUE = 57404
const SHARE = 57405
const MODE = 57406
const SQL_NO_CACHE = 57407
const SQL_CACHE = 57408
const JOIN = 57409
const STRAIGHT_JOIN = 57410
const LEFT = 57411
const RIGHT = 57412
const INNER = 57413
const OUTER = 57414
const CROSS = 57415
const NATURAL = 57416
const USE = 57417
const FORCE = 57418
const LOWER_THAN_ON = 57419
const ON = 57420
const USING = 57421
const SUBQUERY_AS_EXPR = 57422
const LOWER_THAN_STRING = 57423
const ID = 57424
const AT_ID = 57425
const AT_AT_ID = 57426
const STRING = 57427
const VALUE_ARG = 57428
const LIST_ARG = 57429
const COMMENT = 57430
const COMMENT_KEYWORD = 57431
const QUOTE_ID = 57432
const STAGE = 57433
const CREDENTIALS = 57434
const STAGES = 57435
const INTEGRAL = 57436
const HEX = 57437
const BIT_LITERAL = 57438
const FLOAT = 57439
const HEXNUM = 57440
const NULL = 57441
const TRUE = 57442
const FALSE = 57443
const LOWER_THAN_CHARSET = 57444
const CHARSET = 57445
const UNIQUE = 57446
const KEY = 57447
const OR = 57448
const PIPE_CONCAT = 57449
const XOR = 57450
const AND = 57451
const NOT = 57452
const BETWEEN = 57453
const CASE = 57454
const WHEN = 57455
const THEN = 57456
const ELSE = 57457
const END = 57458
const ELSEIF = 57459
const LOWER_THAN_EQ = 57460
const LE = 57461
const GE = 57462
const NE = 57463
const NULL_SAFE_EQUAL = 57464
const IS = 57465
const LIKE = 57466
const REGEXP = 57467
const IN = 57468
const ASSIGNMENT = 57469
const ILIKE = 57470
const SHIFT_LEFT = 57471
const SHIFT_RIGHT = 57472
const DIV = 57473
const MOD = 57474
const UNARY = 57475
const COLLATE = 57476
const BINARY = 57477
const UNDERSCORE_BINARY = 57478
const INTERVAL = 57479
const OUT = 57480
const INOUT = 57481
const BEGIN = 57482
const START = 57483
const TRANSACTION = 57484
const COMMIT = 57485
const ROLLBACK = 57486
const WORK = 57487
const CONSISTENT = 57488
const SNAPSHOT = 57489
const CHAIN = 57490
const NO = 57491
const RELEASE = 57492
const PRIORITY = 57493
const QUICK = 57494
const BIT = 57495
const TINYINT = 57496
const SMALLINT = 57497
const MEDIUMINT = 57498
const INT = 57499
const INTEGER = 57500
const BIGINT = 57501
const INTNUM = 57502
const REAL = 57503
const DOUBLE = 57504
const FLOAT_TYPE = 57505
const DECIMAL = 57506
const NUMERIC = 57507
const DECIMAL_VALUE = 57508
const TIME = 57509
const TIMESTAMP = 57510
const DATETIME = 57511
const YEAR = 57512
const CHAR = 57513
const VARCHAR = 57514
const BOOL = 57515
const CHARACTER = 57516
const VARBINARY = 57517
const NCHAR = 57518
const TEXT = 57519
const TINYTEXT = 57520
const MEDIUMTEXT = 57521
const LONGTEXT = 57522
const BLOB = 57523
const TINYBLOB = 57524
const MEDIUMBLOB = 57525
const LONGBLOB = 57526
const JSON = 57527
const ENUM = 57528
const UUID = 57529
const VECF32 = 57530
const VECF64 = 57531
const GEOMETRY = 57532
const POINT = 57533
const LINESTRING = 57534
const POLYGON = 57535
const GEOMETRYCOLLECTION = 57536
const MULTIPOINT = 57537
const MULTILINESTRING = 57538
const MULTIPOLYGON = 57539
const INT1 = 57540
const INT2 = 57541
const INT3 = 57542
const INT4 = 57543
const INT8 = 57544
const S3OPTION = 57545
const SQL_SMALL_RESULT = 57546
const SQL_BIG_RESULT = 57547
const SQL_BUFFER_RESULT = 57548
const LOW_PRIORITY = 57549
const HIGH_PRIORITY = 57550
const DELAYED = 57551
const CREATE = 57552
const ALTER = 57553
const DROP = 57554
const RENAME = 57555
const ANALYZE = 57556
const ADD = 57557
const RETURNS = 57558
const SCHEMA = 57559
const TABLE = 57560
const SEQUENCE = 57561
const INDEX = 57562
const VIEW = 57563
const TO = 57564
const IGNORE = 57565
const IF = 57566
const PRIMARY = 57567
const COLUMN = 57568
const CONSTRAINT = 57569
const SPATIAL = 57570
const FULLTEXT = 57571
const FOREIGN = 57572
const KEY_BLOCK_SIZE = 57573
const SHOW = 57574
const DESCRIBE = 57575
const EXPLAIN = 57576
const DATE = 57577
const ESCAPE = 57578
const REPAIR = 57579
const OPTIMIZE = 57580
const TRUNCATE = 57581
const MAXVALUE = 57582
const PARTITION = 57583
const REORGANIZE = 57584
const LESS = 57585
const THAN = 57586
const PROCEDURE = 57587
const TRIGGER = 57588
const STATUS = 57589
const VARIABLES = 57590
const ROLE = 57591
const PROXY = 57592
const AVG_ROW_LENGTH = 57593
const STORAGE = 57594
const DISK = 57595
const MEMORY = 57596
const CHECKSUM = 57597
const COMPRESSION = 57598
const DATA = 57599
const DIRECTORY = 57600
const DELAY_KEY_WRITE = 57601
const ENCRYPTION = 57602
const ENGINE = 57603
const MAX_ROWS = 57604
const MIN_ROWS = 57605
const PACK_KEYS = 57606
const ROW_FORMAT = 57607
const STATS_AUTO_RECALC = 57608
const STATS_PERSISTENT = 57609
const STATS_SAMPLE_PAGES = 57610
const DYNAMIC = 57611
const COMPRESSED = 57612
const REDUNDANT = 57613
const COMPACT = 57614
const FIXED = 57615
const COLUMN_FORMAT = 57616
const AUTO_RANDOM = 57617
const ENGINE_ATTRIBUTE = 57618
const SECONDARY_ENGINE_ATTRIBUTE = 57619
const INSERT_METHOD = 57620
const RESTRICT = 57621
const CASCADE = 57622
const ACTION = 57623
const PARTIAL = 57624
const SIMPLE = 57625
const CHECK = 57626
const ENFORCED = 57627
const RANGE = 57628
const LIST = 57629
const ALGORITHM = 57630
const LINEAR = 57631
const PARTITIONS = 57632
const SUBPARTITION = 57633
const SUBPARTITIONS = 57634
const CLUSTER = 57635
const TYPE = 57636
const ANY = 57637
const SOME = 57638
const EXTERNAL = 57639
const LOCALFILE = 57640
const URL = 57641
const PREPARE = 57642
const DEALLOCATE = 57643
const RESET = 57644
const EXTENSION = 57645
const INCREMENT = 57646
const CYCLE = 57647
const MINVALUE = 57648
const PUBLICATION = 57649
const SUBSCRIPTIONS = 57650
const PUBLICATIONS = 57651
const PROPERTIES = 57652
const PARSER = 57653
const VISIBLE = 57654
const INVISIBLE = 57655
const BTREE = 57656
const HASH = 57657
const RTREE = 57658
const BSI = 57659
const ZONEMAP = 57660
const LEADING = 57661
const BOTH = 57662
const TRAILING = 57663
const UNKNOWN = 57664
const EXPIRE = 57665
const ACCOUNT = 57666
const ACCOUNTS = 57667
const UNLOCK = 57668
const DAY = 57669
const NEVER = 57670
const PUMP = 57671
const MYSQL_COMPATIBILITY_MODE = 57672
const MODIFY = 57673
const CHANGE = 57674
const SECOND = 57675
const ASCII = 57676
const COALESCE = 57677
const COLLATION = 57678
const HOUR = 57679
const MICROSECOND = 57680
const MINUTE = 57681
const MONTH = 57682
const QUARTER = 57683
const REPEAT = 57684
const REVERSE = 57685
const ROW_COUNT = 57686
const WEEK = 57687
const REVOKE = 57688
const FUNCTION = 57689
const PRIVILEGES = 57690
const TABLESPACE = 57691
const EXECUTE = 57692
const SUPER = 57693
const GRANT = 57694
const OPTION = 57695
const REFERENCES = 57696
const REPLICATION = 57697
const SLAVE = 57698
const CLIENT = 57699
const USAGE = 57700
const RELOAD = 57701
const FILE = 57702
const TEMPORARY = 57703
const ROUTINE = 57704
const EVENT = 57705
const SHUTDOWN = 57706
const NULLX = 57707
const AUTO_INCREMENT = 57708
const APPROXNUM = 57709
const SIGNED = 57710
const UNSIGNED = 57711
const ZEROFILL = 57712
const ENGINES = 57713
const LOW_CARDINALITY = 57714
const AUTOEXTEND_SIZE = 57715
const ADMIN_NAME = 57716
const RANDOM = 57717
const SUSPEND = 57718
const ATTRIBUTE = 57719
const HISTORY = 57720
const REUSE = 57721
const CURRENT = 57722
const OPTIONAL = 57723
const FAILED_LOGIN_ATTEMPTS = 57724
const PASSWORD_LOCK_TIME = 57725
const UNBOUNDED = 57726
const SECONDARY = 57727
const RESTRICTED = 57728
const USER = 57729
const IDENTIFIED = 57730
const CIPHER = 57731
const ISSUER = 57732
const X509 = 57733
const SUBJECT = 57734
const SAN = 57735
const REQUIRE = 57736
const SSL = 57737
const NONE = 57738
const PASSWORD = 57739
const SHARED = 57740
const EXCLUSIVE = 57741
const MAX_QUERIES_PER_HOUR = 57742
const MAX_UPDATES_PER_HOUR = 57743
const MAX_CONNECTIONS_PER_HOUR = 57744
const MAX_USER_CONNECTIONS = 57745
const FORMAT = 57746
const VERBOSE = 57747
const CONNECTION = 57748
const TRIGGERS = 57749
const PROFILES = 57750
const LOAD = 57751
const INLINE = 57752
const INFILE = 57753
const TERMINATED = 57754
const OPTIONALLY = 57755
const ENCLOSED = 57756
const ESCAPED = 57757
const STARTING = 57758
const LINES = 57759
const ROWS = 57760
const IMPORT = 57761
const DISCARD = 57762
const MODUMP = 57763
const OVER = 57764
const PRECEDING = 57765
const FOLLOWING = 57766
const GROUPS = 57767
const DATABASES = 57768
const TABLES = 57769
const SEQUENCES = 57770
const EXTENDED = 57771
const FULL = 57772
const PROCESSLIST = 57773
const FIELDS = 57774
const COLUMNS = 57775
const OPEN = 57776
const ERRORS = 57777
const WARNINGS = 57778
const INDEXES = 57779
const SCHEMAS = 57780
const NODE = 57781
const LOCKS = 57782
const ROLES = 57783
const TABLE_NUMBER = 57784
const COLUMN_NUMBER = 57785
const TABLE_VALUES = 57786
const TABLE_SIZE = 57787
const NAMES = 57788
const GLOBAL = 57789
const PERSIST = 57790
const SESSION = 57791
const ISOLATION = 57792
const LEVEL = 57793
const READ = 57794
const WRITE = 57795
const ONLY = 57796
const REPEATABLE = 57797
const COMMITTED = 57798
const UNCOMMITTED = 57799
const SERIALIZABLE = 57800
const LOCAL = 57801
const EVENTS = 57802
const PLUGINS = 57803
const CURRENT_TIMESTAMP = 57804
const DATABASE = 57805
const CURRENT_TIME = 57806
const LOCALTIME = 57807
const LOCALTIMESTAMP = 57808
const UTC_DATE = 57809
const UTC_TIME = 57810
const UTC_TIMESTAMP = 57811
const REPLACE = 57812
const CONVERT = 57813
const SEPARATOR = 57814
const TIMESTAMPDIFF = 57815
const CURRENT_DATE = 57816
const CURRENT_USER = 57817
const CURRENT_ROLE = 57818
const SECOND_MICROSECOND = 57819
const MINUTE_MICROSECOND = 57820
const MINUTE_SECOND = 57821
const HOUR_MICROSECOND = 57822
const HOUR_SECOND = 57823
const HOUR_MINUTE = 57824
const DAY_MICROSECOND = 57825
const DAY_SECOND = 57826
const DAY_MINUTE = 57827
const DAY_HOUR = 57828
const YEAR_MONTH = 57829
const SQL_TSI_HOUR = 57830
const SQL_TSI_DAY = 57831
const SQL_TSI_WEEK = 57832
const SQL_TSI_MONTH = 57833
const SQL_TSI_QUARTER = 57834
const SQL_TSI_YEAR = 57835
const SQL_TSI_SECOND = 57836
const SQL_TSI_MINUTE = 57837
const RECURSIVE = 57838
const CONFIG = 57839
const DRAINER = 57840
const SOURCE = 57841
const STREAM = 57842
const HEADERS = 57843
const CONNECTOR = 57844
const CONNECTORS = 57845
const DAEMON = 57846
const PAUSE = 57847
const CANCEL = 57848
const TASK = 57849
const RESUME = 57850
const MATCH = 57851
const AGAINST = 57852
const BOOLEAN = 57853
const LANGUAGE = 57854
const WITH = 57855
const QUERY = 57856
const EXPANSION = 57857
const WITHOUT = 57858
const VALIDATION = 57859
const ADDDATE = 57860
const BIT_AND = 57861
const BIT_OR = 57862
const BIT_XOR = 57863
const CAST = 57864
const COUNT = 57865
const APPROX_COUNT = 57866
const APPROX_COUNT_DISTINCT = 57867
const APPROX_PERCENTILE = 57868
const CURDATE = 57869
const CURTIME = 57870
const DATE_ADD = 57871
const DATE_SUB = 57872
const EXTRACT = 57873
const GROUP_CONCAT = 57874
const MAX = 57875
const MID = 57876
const MIN = 57877
const NOW = 57878
const POSITION = 57879
const SESSION_USER = 57880
const STD = 57881
const STDDEV = 57882
const MEDIAN = 57883
const STDDEV_POP = 57884
const STDDEV_SAMP = 57885
const SUBDATE = 57886
const SUBSTR = 57887
const SUBSTRING = 57888
const SUM = 57889
const SYSDATE = 57890
const SYSTEM_USER = 57891
const TRANSLATE = 57892
const TRIM = 57893
const VARIANCE = 57894
const VAR_POP = 57895
const VAR_SAMP = 57896
const AVG = 57897
const RANK = 57898
const ROW_NUMBER = 57899
const DENSE_RANK = 57900
const BIT_CAST = 57901
const NEXTVAL = 57902
const SETVAL = 57903
const CURRVAL = 57904
const LASTVAL = 57905
const ARROW = 57906
const ROW = 57907
const OUTFILE = 57908
const HEADER = 57909
const MAX_FILE_SIZE = 57910
const FORCE_QUOTE = 57911
const PARALLEL = 57912
const UNUSED = 57913
const BINDINGS = 57914
const DO = 57915
const DECLARE = 57916
const LOOP = 57917
const WHILE = 57918
const LEAVE = 57919
const ITERATE = 57920
const UNTIL = 57921
const CALL = 57922
const SPBEGIN = 57923
const BACKEND = 57924
const SERVERS = 57925
const HANDLER = 57926
const KILL = 57927
const BACKUP = 57928
const FILESYSTEM = 57929
const QUERY_RESULT = 57930

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"LOWER_THAN_ORDER",
	"ORDER",
	"SELECT",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"AFTER",
	"INSTANT",
	"INPLACE",
	"COPY",
	"DISABLE",
	"ENABLE",
	"UNDEFINED",
	"MERGE",
	"TEMPTABLE",
	"DEFINER",
	"INVOKER",
	"SQL",
	"SECURITY",
	"CASCADED",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"QUOTE_ID",
	"STAGE",
	"CREDENTIALS",
	"STAGES",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"ELSEIF",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"ILIKE",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"OUT",
	"INOUT",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"VECF32",
	"VECF64",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"S3OPTION",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"RETURNS",
	"SCHEMA",
	"TABLE",
	"SEQUENCE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"ENGINE_ATTRIBUTE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"INSERT_METHOD",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"CLUSTER",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"RESET",
	"EXTENSION",
	"INCREMENT",
	"CYCLE",
	"MINVALUE",
	"PUBLICATION",
	"SUBSCRIPTIONS",
	"PUBLICATIONS",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"ACCOUNTS",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"MYSQL_COMPATIBILITY_MODE",
	"MODIFY",
	"CHANGE",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"AUTOEXTEND_SIZE",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"RESTRICTED",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"SHARED",
	"EXCLUSIVE",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INLINE",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"DISCARD",
	"MODUMP",
	"OVER",
	"PRECEDING",
	"FOLLOWING",
	"GROUPS",
	"DATABASES",
	"TABLES",
	"SEQUENCES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NODE",
	"LOCKS",
	"ROLES",
	"TABLE_NUMBER",
	"COLUMN_NUMBER",
	"TABLE_VALUES",
	"TABLE_SIZE",
	"NAMES",
	"GLOBAL",
	"PERSIST",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"SOURCE",
	"STREAM",
	"HEADERS",
	"CONNECTOR",
	"CONNECTORS",
	"DAEMON",
	"PAUSE",
	"CANCEL",
	"TASK",
	"RESUME",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"MEDIAN",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"RANK",
	"ROW_NUMBER",
	"DENSE_RANK",
	"BIT_CAST",
	"NEXTVAL",
	"SETVAL",
	"CURRVAL",
	"LASTVAL",
	"ARROW",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"PARALLEL",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"LOOP",
	"WHILE",
	"LEAVE",
	"ITERATE",
	"UNTIL",
	"CALL",
	"SPBEGIN",
	"BACKEND",
	"SERVERS",
	"HANDLER",
	"KILL",
	"BACKUP",
	"FILESYSTEM",
	"QUERY_RESULT",
	"';'",
	"'{'",
	"'}'",
	"':'",
	"'@'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:10559

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 117,
	21, 702,
	-2, 683,
	-1, 137,
	235, 1053,
	237, 966,
	-2, 1011,
	-1, 161,
	42, 520,
	237, 520,
	264, 527,
	265, 527,
	454, 520,
	-2, 553,
	-1, 200,
	609, 1774,
	-2, 435,
	-1, 546,
	316, 133,
	427, 133,
	428, 133,
	-2, 1682,
	-1, 610,
	81, 1474,
	-2, 1829,
	-1, 611,
	81, 1492,
	-2, 1800,
	-1, 615,
	81, 1493,
	-2, 1828,
	-1, 641,
	81, 1404,
	-2, 1897,
	-1, 642,
	81, 1405,
	-2, 1896,
	-1, 643,
	81, 1406,
	-2, 1886,
	-1, 644,
	81, 1860,
	-2, 1881,
	-1, 645,
	81, 1861,
	-2, 1882,
	-1, 646,
	81, 1862,
	-2, 1888,
	-1, 647,
	81, 1863,
	-2, 1870,
	-1, 648,
	81, 1864,
	-2, 1879,
	-1, 649,
	81, 1865,
	-2, 1889,
	-1, 650,
	81, 1866,
	-2, 1890,
	-1, 651,
	81, 1867,
	-2, 1895,
	-1, 652,
	81, 1868,
	-2, 1900,
	-1, 653,
	81, 1869,
	-2, 1901,
	-1, 655,
	81, 1471,
	-2, 1668,
	-1, 659,
	81, 1476,
	-2, 1683,
	-1, 662,
	81, 1480,
	-2, 1701,
	-1, 666,
	81, 1484,
	-2, 1743,
	-1, 667,
	81, 1485,
	-2, 1824,
	-1, 675,
	81, 1495,
	-2, 1809,
	-1, 676,
	81, 1496,
	-2, 1853,
	-1, 677,
	81, 1497,
	-2, 1819,
	-1, 678,
	81, 1498,
	-2, 1843,
	-1, 689,
	81, 1382,
	-2, 1891,
	-1, 690,
	81, 1383,
	-2, 1892,
	-1, 691,
	81, 1384,
	-2, 1893,
	-1, 695,
	21, 703,
	-2, 666,
	-1, 774,
	449, 553,
	450, 553,
	-2, 521,
	-1, 820,
	122, 1668,
	133, 1668,
	153, 1668,
	-2, 1642,
	-1, 930,
	21, 703,
	-2, 666,
	-1, 1030,
	21, 702,
	-2, 1279,
	-1, 1410,
	81, 1542,
	-2, 1826,
	-1, 1411,
	81, 1543,
	-2, 1827,
	-1, 1550,
	82, 852,
	-2, 858,
	-1, 1950,
	105, 1001,
	149, 1001,
	188, 1001,
	191, 1001,
	277, 1001,
	-2, 994,
	-1, 2089,
	21, 702,
	-2, 796,
	-1, 2122,
	82, 1628,
	154, 1628,
	-2, 1811,
	-1, 2123,
	82, 1628,
	154, 1628,
	-2, 1810,
	-1, 2124,
	82, 1604,
	154, 1604,
	-2, 1797,
	-1, 2125,
	82, 1605,
	154, 1605,
	-2, 1802,
	-1, 2126,
	82, 1606,
	154, 1606,
	-2, 1731,
	-1, 2127,
	82, 1607,
	154, 1607,
	-2, 1725,
	-1, 2128,
	82, 1608,
	154, 1608,
	-2, 1658,
	-1, 2129,
	82, 1609,
	154, 1609,
	-2, 1799,
	-1, 2130,
	82, 1610,
	154, 1610,
	-2, 1729,
	-1, 2131,
	82, 1611,
	154, 1611,
	-2, 1724,
	-1, 2132,
	82, 1612,
	154, 1612,
	-2, 1715,
	-1, 2133,
	82, 1628,
	154, 1628,
	-2, 1716,
	-1, 2134,
	82, 1628,
	154, 1628,
	-2, 1717,
	-1, 2136,
	82, 1617,
	154, 1617,
	-2, 1843,
	-1, 2137,
	82, 1595,
	154, 1595,
	-2, 1829,
	-1, 2138,
	82, 1626,
	154, 1626,
	-2, 1800,
	-1, 2139,
	82, 1626,
	154, 1626,
	-2, 1828,
	-1, 2140,
	82, 1626,
	154, 1626,
	-2, 1684,
	-1, 2141,
	82, 1624,
	154, 1624,
	-2, 1819,
	-1, 2142,
	82, 1621,
	154, 1621,
	-2, 1706,
	-1, 2143,
	81, 1576,
	82, 1576,
	154, 1576,
	385, 1576,
	386, 1576,
	387, 1576,
	-2, 1657,
	-1, 2144,
	81, 1577,
	82, 1577,
	154, 1577,
	385, 1577,
	386, 1577,
	387, 1577,
	-2, 1659,
	-1, 2145,
	81, 1580,
	82, 1580,
	154, 1580,
	385, 1580,
	386, 1580,
	387, 1580,
	-2, 1801,
	-1, 2146,
	81, 1582,
	82, 1582,
	154, 1582,
	385, 1582,
	386, 1582,
	387, 1582,
	-2, 1783,
	-1, 2147,
	81, 1584,
	82, 1584,
	154, 1584,
	385, 1584,
	386, 1584,
	387, 1584,
	-2, 1730,
	-1, 2148,
	81, 1586,
	82, 1586,
	154, 1586,
	385, 1586,
	386, 1586,
	387, 1586,
	-2, 1711,
	-1, 2149,
	81, 1587,
	82, 1587,
	154, 1587,
	385, 1587,
	386, 1587,
	387, 1587,
	-2, 1712,
	-1, 2150,
	81, 1589,
	82, 1589,
	154, 1589,
	385, 1589,
	386, 1589,
	387, 1589,
	-2, 1656,
	-1, 2151,
	82, 1631,
	154, 1631,
	385, 1631,
	386, 1631,
	387, 1631,
	-2, 1689,
	-1, 2152,
	82, 1631,
	154, 1631,
	385, 1631,
	386, 1631,
	387, 1631,
	-2, 1702,
	-1, 2153,
	82, 1634,
	154, 1634,
	385, 1634,
	386, 1634,
	387, 1634,
	-2, 1685,
	-1, 2154,
	82, 1634,
	154, 1634,
	385, 1634,
	386, 1634,
	387, 1634,
	-2, 1746,
	-1, 2155,
	82, 1631,
	154, 1631,
	385, 1631,
	386, 1631,
	387, 1631,
	-2, 1767,
	-1, 2329,
	105, 1001,
	149, 1001,
	188, 1001,
	191, 1001,
	277, 1001,
	-2, 995,
	-1, 2342,
	79, 612,
	154, 612,
	-2, 1166,
	-1, 2683,
	191, 1001,
	301, 1247,
	-2, 1219,
	-1, 2825,
	105, 1001,
	149, 1001,
	188, 1001,
	191, 1001,
	-2, 1109,
	-1, 2827,
	105, 1001,
	149, 1001,
	188, 1001,
	191, 1001,
	-2, 1109,
	-1, 2837,
	79, 612,
	154, 612,
	-2, 1167,
	-1, 2846,
	191, 1001,
	301, 1247,
	-2, 1220,
	-1, 2978,
	105, 1001,
	149, 1001,
	188, 1001,
	191, 1001,
	-2, 1110,
	-1, 3357,
	82, 1071,
	154, 1071,
	-2, 1001,
	-1, 3361,
	82, 1071,
	154, 1071,
	-2, 1001,
	-1, 3375,
	82, 1075,
	154, 1075,
	-2, 1001,
	-1, 3380,
	82, 1076,
	154, 1076,
	-2, 1001,
}

const yyPrivate = 57344

const yyLast = 39043

var yyAct = [...]int{
	577, 1630, 3361, 3360, 3369, 3340, 191, 1390, 555, 3227,
	557, 3289, 3310, 550, 3235, 579, 3253, 3236, 2927, 2701,
	565, 3142, 2922, 1914, 1242, 3019, 3157, 2860, 1182, 3133,
	1063, 2766, 3161, 1328, 2966, 2965, 2963, 3054, 607, 2767,
	459, 3091, 819, 2363, 2925, 696, 1318, 2300, 2795, 3044,
	469, 3143, 474, 474, 1583, 3145, 2812, 559, 474, 490,
	499, 2847, 1991, 499, 2977, 2970, 2345, 1393, 2984, 2942,
	2614, 176, 1386, 2654, 2980, 2917, 2460, 2461, 1719, 1716,
	2643, 2120, 2443, 2801, 2383, 2698, 2459, 2687, 2083, 2680,
	2828, 510, 2764, 1684, 1818, 2453, 2752, 2118, 1994, 1787,
	2482, 2733, 2456, 2612, 504, 2320, 2622, 2627, 2624, 1734,
	2686, 2660, 1134, 2615, 548, 1960, 924, 1927, 2330, 1235,
	1918, 2067, 2521, 1530, 2559, 1796, 1917, 2171, 1814, 1795,
	1788, 554, 1319, 1761, 1712, 2084, 1687, 1314, 2504, 1813,
	750, 825, 1322, 2072, 1685, 6, 1155, 1622, 549, 1538,
	1612, 2304, 1959, 2264, 55, 1560, 2309, 2365, 187, 8,
	1992, 2116, 876, 1847, 2188, 459, 1190, 1815, 2234, 468,
	2111, 2337, 1384, 558, 1251, 1692, 1281, 1221, 116, 1987,
	1825, 1941, 2617, 1595, 2616, 1440, 1171, 1327, 547, 1424,
	566, 191, 1594, 191, 2265, 867, 868, 186, 7, 1375,
	486, 556, 861, 862, 782, 1794, 26, 866, 1777, 15,
	35, 941, 1288, 823, 1383, 13, 1791, 812, 1751, 1559,
	1218, 1102, 1447, 14, 1167, 1220, 483, 473, 473, 1157,
	2091, 693, 1446, 481, 32, 749, 549, 512, 1274, 513,
	23, 16, 727, 10, 1183, 177, 1280, 167, 173, 747,
	498, 732, 1822, 1307, 1064, 3085, 2290, 864, 1389, 695,
	2290, 1832, 863, 2815, 865, 495, 2290, 2759, 491, 2223,
	2177, 1585, 2175, 2174, 493, 2172, 769, 1543, 813, 1295,
	1191, 1291, 494, 860, 860, 859, 175, 1119, 3296, 860,
	470, 1203, 2915, 492, 2517, 1293, 999, 1000, 1001, 998,
	2515, 1766, 3050, 479, 999, 1000, 1001, 998, 3045, 2918,
	2765, 1534, 1058, 502, 3147, 1790, 694, 2029, 458, 3102,
	704, 858, 2952, 829, 174, 962, 2209, 2299, 3218, 2217,
	174, 740, 1819, 741, 8, 174, 174, 51, 163, 138,
	174, 174, 2301, 2943, 174, 1120, 1952, 826, 1342, 3072,
	2850, 3180, 1261, 1335, 1260, 174, 174, 51, 163, 138,
	1259, 832, 830, 3103, 831, 174, 51, 163, 138, 722,
	1554, 1129, 115, 7, 509, 2583, 1830, 1147, 1339, 828,
	508, 1945, 735, 1332, 731, 697, 3074, 970, 2862, 2536,
	972, 1199, 2529, 168, 1200, 2109, 996, 2489, 2490, 1341,
	2110, 2853, 2488, 115, 1334, 168, 1121, 1697, 1698, 168,
	168, 2848, 1696, 168, 1729, 801, 2870, 2871, 973, 1222,
	2097, 1224, 2849, 2096, 168, 168, 2098, 2189, 705, 977,
	791, 1360, 978, 684, 168, 683, 685, 686, 1608, 687,
	688, 1376, 1544, 1545, 1380, 2306, 1186, 1392, 1179, 3272,
	1185, 1188, 1189, 1188, 1189, 2307, 3270, 994, 822, 2854,
	980, 821, 3239, 3240, 989, 3150, 3211, 3150, 1379, 3149,
	3210, 3148, 3209, 474, 3149, 3148, 2936, 1905, 3213, 3052,
	1202, 3257, 3258, 474, 934, 3217, 2021, 3055, 3056, 3057,
	3058, 2768, 36, 966, 2522, 3135, 3135, 1128, 2523, 3138,
	2524, 499, 499, 2305, 474, 3048, 2768, 1396, 2204, 935,
	737, 1834, 730, 3154, 2399, 944, 1707, 2777, 968, 1703,
	1371, 734, 733, 2802, 1826, 929, 931, 933, 1294, 1292,
	971, 974, 2638, 2061, 2809, 975, 3080, 2957, 716, 870,
	1939, 1713, 723, 944, 1774, 2293, 2628, 1381, 738, 3215,
	2549, 496, 2869, 824, 1995, 2872, 967, 797, 795, 2547,
	796, 1301, 1300, 991, 2214, 1002, 3220, 3221, 965, 543,
	1378, 137, 545, 172, 1031, 992, 993, 544, 2027, 2858,
	2916, 739, 1040, 2516, 2068, 2447, 729, 2064, 2063, 3083,
	728, 1481, 928, 161, 1032, 2312, 715, 2954, 976, 957,
	721, 2855, 2859, 2857, 2856, 1047, 2636, 3265, 2935, 934,
	3238, 2652, 2632, 2661, 3107, 2937, 3172, 719, 1395, 1394,
	2699, 2700, 930, 1831, 2338, 982, 3067, 3167, 983, 3068,
	2884, 3274, 969, 501, 500, 2452, 1201, 1947, 3269, 2864,
	2865, 2877, 3354, 1177, 829, 3099, 802, 3162, 926, 1131,
	1130, 3229, 1068, 1212, 738, 3370, 985, 3301, 932, 1727,
	1728, 2633, 2634, 798, 3225, 3226, 1067, 3229, 826, 987,
	988, 1118, 3308, 3067, 979, 1166, 3068, 2635, 2887, 953,
	720, 2872, 3070, 3153, 3010, 3313, 1377, 2703, 937, 938,
	1997, 3062, 3334, 2851, 495, 495, 2038, 491, 491, 2863,
	828, 1820, 1820, 493, 493, 946, 945, 2037, 1820, 3084,
	2780, 494, 494, 3069, 2553, 829, 1126, 469, 2318, 2928,
	2289, 948, 492, 492, 2630, 740, 800, 741, 1231, 3070,
	3005, 981, 1230, 946, 945, 955, 2113, 1164, 1099, 826,
	1163, 1836, 1838, 1839, 1162, 954, 939, 2058, 2059, 750,
	497, 950, 951, 3101, 860, 3371, 736, 860, 1038, 860,
	3069, 860, 3341, 1034, 1035, 1036, 1037, 3219, 860, 986,
	3108, 828, 860, 1181, 1180, 3092, 2301, 1821, 2173, 497,
	3377, 1833, 1402, 1405, 1406, 925, 1296, 2600, 1187, 2324,
	2325, 2326, 2327, 1403, 984, 726, 3365, 1184, 474, 2829,
	1214, 3100, 799, 3075, 2999, 1848, 459, 459, 507, 1990,
	2913, 52, 1135, 694, 508, 459, 459, 1188, 1189, 1246,
	1246, 3314, 474, 3132, 1188, 1189, 1996, 1219, 2868, 962,
	2695, 1998, 2953, 1136, 1137, 1138, 1139, 2639, 1141, 2218,
	52, 3081, 139, 1146, 1248, 499, 1275, 469, 139, 2629,
	1284, 1284, 1253, 139, 139, 2550, 3275, 2210, 139, 139,
	1178, 191, 139, 1283, 1283, 824, 169, 170, 1714, 171,
	459, 1076, 1077, 139, 139, 2241, 2101, 2702, 2499, 2500,
	3214, 2007, 956, 139, 2025, 1999, 1127, 2400, 1823, 2401,
	2402, 1244, 1244, 2010, 2867, 2958, 1140, 2311, 1706, 1990,
	2012, 1704, 1372, 919, 915, 916, 917, 918, 1132, 2246,
	2000, 2245, 2244, 2242, 961, 2484, 2486, 2631, 2552, 2699,
	2700, 1326, 1302, 1329, 3364, 2789, 1145, 3063, 1337, 1144,
	1143, 3144, 503, 2696, 1835, 3012, 1240, 1241, 2397, 2427,
	1152, 1104, 744, 745, 746, 2292, 1106, 1921, 1358, 1173,
	1174, 3311, 3312, 2315, 2316, 1124, 3376, 2011, 1343, 1547,
	3006, 3007, 1246, 1548, 1246, 934, 2561, 2560, 2314, 695,
	1133, 1923, 1922, 1210, 3063, 739, 1920, 2243, 3064, 1837,
	496, 496, 1160, 1213, 1546, 2418, 2419, 1165, 3020, 3021,
	3022, 3024, 3023, 707, 1175, 1122, 1123, 1252, 1154, 1353,
	1354, 2050, 1193, 1194, 708, 1196, 1197, 1198, 1391, 1204,
	1205, 1397, 1398, 1399, 1400, 1401, 1276, 742, 792, 711,
	1404, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420,
	1421, 1422, 1423, 2985, 1586, 1316, 1317, 1435, 1436, 2666,
	2001, 1168, 1172, 1172, 1172, 1445, 3383, 1229, 1192, 1321,
	3001, 1195, 1325, 3382, 3000, 1442, 1443, 1444, 3373, 1494,
	3316, 1324, 2024, 1478, 1943, 1168, 1168, 2808, 997, 2343,
	710, 1488, 2730, 1254, 713, 712, 962, 479, 2191, 829,
	2485, 1267, 1503, 829, 1226, 1228, 2006, 1484, 1485, 1486,
	2004, 1357, 1388, 1238, 1239, 1273, 1754, 1285, 3355, 1356,
	1500, 794, 1880, 1501, 793, 1879, 1286, 2417, 1912, 1586,
	2247, 2248, 2726, 2792, 2344, 1532, 1510, 1511, 997, 1536,
	2779, 1908, 1539, 698, 2081, 997, 1369, 3350, 1528, 1275,
	3374, 1305, 2697, 1308, 1309, 1557, 1407, 1246, 1562, 1563,
	1349, 1565, 1566, 474, 1310, 1311, 495, 474, 1297, 491,
	1246, 1373, 1344, 3344, 750, 493, 1366, 1584, 3343, 1363,
	3321, 698, 1246, 494, 1374, 1362, 3291, 792, 1214, 3247,
	1828, 2082, 695, 490, 492, 2209, 1345, 997, 1942, 2705,
	1531, 803, 2082, 2502, 1493, 2428, 2430, 2431, 2432, 2429,
	1365, 1364, 1607, 1361, 999, 1000, 1001, 998, 1382, 3351,
	1613, 1613, 1387, 1214, 3241, 1214, 1214, 2344, 2295, 474,
	474, 2650, 1557, 1557, 1611, 1426, 1246, 1681, 1682, 1694,
	1385, 1556, 851, 856, 857, 1828, 2196, 960, 1433, 1434,
	1828, 1564, 1828, 459, 1752, 1246, 1476, 1477, 3292, 1480,
	1911, 3248, 1552, 1553, 3190, 1555, 2730, 1495, 2082, 1532,
	794, 1930, 3126, 793, 1532, 1532, 1568, 1569, 1570, 3125,
	1502, 2113, 1504, 474, 1557, 1246, 997, 1739, 1819, 474,
	474, 474, 1744, 1745, 1931, 1932, 3088, 3121, 1695, 1749,
	1750, 1985, 3120, 1479, 1756, 1632, 1913, 999, 1000, 1001,
	998, 191, 3119, 1169, 191, 191, 1884, 191, 1676, 1677,
	1810, 1505, 962, 1764, 1100, 3118, 1767, 1725, 1153, 1770,
	3087, 2946, 1772, 1438, 1615, 1232, 3088, 3338, 1567, 2891,
	1722, 1723, 1571, 1708, 3127, 3293, 1535, 2840, 2821, 2714,
	3033, 1964, 1529, 2581, 2479, 1494, 1494, 1798, 1596, 2651,
	1598, 1599, 1494, 1494, 2271, 2667, 1700, 1805, 1702, 3088,
	1736, 1614, 2263, 1604, 3088, 2224, 2207, 1738, 1720, 1721,
	1587, 1588, 1765, 1715, 3088, 1768, 1769, 1551, 1771, 2506,
	2346, 1584, 1580, 1859, 1605, 1246, 1817, 3088, 1741, 1742,
	1743, 2889, 3088, 2947, 1619, 1620, 1616, 1591, 2212, 1581,
	1724, 2113, 2200, 1592, 1593, 1561, 2211, 1617, 1618, 1597,
	2822, 2715, 999, 1000, 1001, 998, 2082, 2203, 1576, 1170,
	1602, 1603, 853, 854, 855, 2198, 997, 1333, 2193, 2186,
	1589, 1340, 2184, 959, 997, 1811, 2182, 997, 1964, 2180,
	927, 1980, 496, 1963, 1909, 1680, 1890, 1889, 1735, 1799,
	1845, 1846, 1367, 1168, 1735, 1735, 1735, 1600, 1858, 1683,
	1709, 1699, 1851, 1701, 1875, 1855, 1860, 1601, 1878, 1809,
	1793, 1841, 1606, 2662, 2194, 1609, 1610, 1793, 1172, 1869,
	1759, 1868, 1867, 1747, 1561, 1730, 1346, 1044, 947, 1737,
	927, 922, 920, 1827, 1014, 1483, 1482, 2199, 709, 829,
	2194, 2187, 1350, 2757, 2185, 1866, 829, 2671, 2181, 960,
	1762, 2181, 3168, 1873, 1760, 1964, 1908, 2093, 997, 997,
	1483, 1482, 2544, 826, 1017, 1018, 1019, 1020, 1021, 1014,
	826, 1886, 1779, 1385, 2986, 1158, 1891, 1892, 1893, 1159,
	997, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 2663,
	1885, 997, 1887, 997, 997, 828, 3169, 3330, 1802, 1894,
	548, 1807, 828, 474, 474, 1828, 474, 495, 1800, 2832,
	491, 1236, 3317, 1808, 1351, 1803, 493, 1804, 2987, 474,
	474, 474, 1237, 1812, 494, 1234, 2172, 2830, 1169, 927,
	2022, 1961, 829, 2664, 3086, 492, 3059, 3003, 3002, 2814,
	2731, 1968, 1214, 2724, 2719, 1516, 2716, 1432, 1849, 1840,
	1965, 2231, 1973, 2833, 1208, 1209, 826, 1211, 2645, 1215,
	1216, 1217, 714, 1429, 1431, 1428, 1214, 1430, 1842, 1426,
	1509, 2831, 2449, 2322, 2291, 1853, 999, 1000, 1001, 998,
	2017, 1843, 1844, 2222, 2197, 2103, 1149, 2760, 828, 1148,
	2166, 1763, 1262, 1263, 1264, 1265, 1266, 936, 1268, 1269,
	1270, 1271, 1272, 1441, 1441, 1854, 1278, 1279, 1015, 1016,
	1017, 1018, 1019, 1020, 1021, 1014, 1289, 1936, 1763, 2508,
	1558, 1506, 1507, 1508, 1233, 2023, 1512, 1513, 1514, 1515,
	1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1001, 998,
	2086, 2086, 1694, 2086, 1170, 3208, 1915, 1916, 998, 3015,
	1997, 2000, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1003,
	3014, 459, 459, 2525, 1532, 2389, 1532, 2388, 2371, 934,
	1904, 1906, 1907, 2369, 2994, 1246, 474, 1046, 1934, 1935,
	3359, 1937, 2960, 2961, 1532, 1532, 2321, 1498, 1924, 3347,
	1045, 474, 1944, 3302, 1953, 1954, 1955, 934, 2156, 469,
	3333, 1499, 3297, 1284, 3231, 1694, 2955, 3199, 2161, 3170,
	2163, 3111, 1068, 2806, 191, 2439, 1283, 1984, 999, 1000,
	1001, 998, 1977, 3104, 2437, 1978, 1067, 1972, 3046, 2088,
	2099, 2092, 2100, 2435, 1969, 2090, 999, 1000, 1001, 998,
	2121, 999, 1000, 1001, 998, 2758, 2424, 2107, 1979, 1981,
	2104, 2105, 2176, 2989, 2002, 2003, 1989, 2008, 1988, 2988,
	2205, 3332, 2956, 1817, 999, 1000, 1001, 998, 2834, 2807,
	1246, 2438, 1246, 2233, 1246, 999, 1000, 1001, 998, 934,
	2436, 2001, 2805, 1289, 1976, 2167, 1996, 1990, 1995, 2434,
	1993, 1998, 3177, 496, 2637, 2540, 829, 2520, 2160, 2519,
	2115, 2422, 2423, 2421, 999, 1000, 1001, 998, 2420, 2412,
	1246, 2250, 2065, 2168, 1970, 1971, 2406, 2405, 2232, 2574,
	826, 2404, 2219, 2094, 1974, 1975, 2257, 2251, 2252, 2403,
	1782, 1246, 1781, 1780, 2249, 2254, 2255, 999, 1000, 1001,
	998, 2259, 1172, 1776, 2215, 1999, 1290, 1775, 2260, 1733,
	2108, 1252, 828, 1732, 1731, 2258, 1022, 1023, 1015, 1016,
	1017, 1018, 1019, 1020, 1021, 1014, 1735, 1347, 2157, 1117,
	2813, 3232, 1532, 2454, 2623, 2284, 2285, 1539, 2573, 2159,
	934, 2261, 1244, 3173, 934, 1871, 3320, 474, 2235, 2235,
	3160, 2256, 3264, 1246, 3262, 3060, 2319, 999, 1000, 1001,
	998, 2923, 1557, 1244, 999, 1000, 1001, 998, 3259, 2342,
	2221, 3156, 2964, 2216, 3141, 2348, 999, 1000, 1001, 998,
	3130, 2930, 3115, 2296, 2202, 543, 2950, 2121, 545, 3110,
	2208, 2357, 2229, 544, 2206, 3109, 3082, 2282, 934, 1226,
	1228, 3047, 2213, 2996, 2973, 2959, 2368, 999, 1000, 1001,
	998, 1870, 2921, 934, 934, 934, 1613, 2225, 2226, 934,
	2919, 2379, 2380, 2381, 934, 2898, 2385, 2386, 2895, 2387,
	2893, 2240, 2444, 2158, 2804, 2331, 2238, 999, 1000, 1001,
	998, 2803, 2165, 999, 1000, 1001, 998, 2800, 2332, 2339,
	2785, 2725, 2086, 2266, 2267, 2721, 2712, 2374, 2375, 2272,
	2228, 2711, 2378, 2646, 2607, 2606, 2440, 2384, 2605, 2349,
	1632, 2929, 1919, 2286, 459, 2359, 2827, 2554, 2551, 1557,
	934, 1694, 1694, 1694, 1694, 2283, 1740, 2518, 1385, 2493,
	2433, 2298, 934, 1694, 2303, 2425, 2086, 999, 1000, 1001,
	998, 2881, 2366, 2415, 2413, 2297, 2366, 2409, 2317, 2408,
	2407, 2362, 1246, 592, 117, 1910, 1857, 2367, 2347, 117,
	1784, 2341, 2302, 2462, 474, 474, 2373, 999, 1000, 1001,
	998, 8, 640, 639, 2028, 2462, 2030, 2031, 2032, 2033,
	2034, 2035, 2036, 2361, 2340, 2039, 2040, 2041, 2042, 2043,
	2044, 2045, 2046, 2047, 2048, 2049, 2356, 2051, 2052, 2053,
	2054, 2055, 2364, 2056, 2358, 2370, 2377, 1778, 2475, 480,
	7, 1542, 117, 999, 1000, 1001, 998, 1541, 1348, 191,
	1075, 1071, 1070, 923, 191, 706, 2826, 2414, 580, 590,
	999, 1000, 1001, 998, 2825, 2791, 2512, 581, 2514, 589,
	582, 586, 585, 583, 584, 1494, 2784, 1494, 2772, 2350,
	2535, 1561, 2763, 2503, 2539, 2762, 1532, 2354, 2355, 2749,
	1246, 1532, 2445, 2546, 2748, 2463, 2464, 2465, 2466, 2476,
	2672, 2478, 2450, 2782, 2474, 2610, 2579, 2572, 2564, 2563,
	2477, 695, 2558, 2501, 2294, 1863, 2183, 2179, 2494, 2178,
	2509, 2491, 587, 1895, 2351, 2513, 3372, 2557, 2353, 999,
	1000, 1001, 998, 1888, 2352, 1883, 1013, 1012, 1022, 1023,
	1015, 1016, 1017, 1018, 1019, 1020, 1021, 1014, 1881, 1877,
	2578, 1531, 827, 1876, 588, 1882, 2534, 1316, 1317, 117,
	174, 2487, 163, 138, 1874, 1321, 2577, 1865, 1325, 2496,
	2497, 2567, 1862, 2569, 117, 2532, 117, 1324, 2511, 1861,
	934, 2538, 2543, 2510, 2507, 1856, 1783, 1527, 1526, 2626,
	1525, 2548, 999, 1000, 1001, 998, 2528, 1497, 1496, 2641,
	2531, 1487, 2526, 1258, 474, 174, 2533, 999, 1000, 1001,
	998, 1256, 3329, 3323, 2655, 934, 934, 934, 2542, 3309,
	3306, 3304, 2448, 3198, 1694, 1961, 1065, 2670, 829, 168,
	2555, 1467, 3280, 2674, 3128, 829, 3117, 3112, 1304, 2556,
	3028, 3013, 2562, 3278, 2576, 3009, 2685, 2906, 2688, 2904,
	2688, 2688, 2570, 2571, 2649, 934, 2879, 1309, 2609, 999,
	1000, 1001, 998, 2568, 2878, 2875, 2692, 1310, 1311, 2707,
	999, 1000, 1001, 998, 168, 2874, 1246, 1246, 2816, 2620,
	2619, 2704, 1315, 1306, 2331, 1320, 2601, 1323, 2706, 1312,
	1156, 2604, 2441, 2608, 2372, 2336, 2584, 2585, 2335, 2334,
	2708, 2709, 2586, 2587, 2588, 2589, 2308, 2590, 2591, 2592,
	2593, 2594, 2595, 2596, 2597, 2333, 2281, 2668, 2657, 2658,
	2659, 2642, 474, 2192, 2102, 2683, 2057, 2626, 2648, 2575,
	1962, 1933, 1427, 2684, 168, 1746, 1550, 2665, 1557, 1557,
	2669, 1370, 1336, 2693, 2280, 1313, 1101, 1098, 1244, 1244,
	2678, 1097, 1096, 3189, 3348, 999, 1000, 1001, 998, 1095,
	2689, 2690, 1094, 1093, 2691, 1092, 1091, 1090, 2694, 1089,
	999, 1000, 1001, 998, 1088, 2565, 2566, 1087, 1086, 2647,
	1085, 1084, 1083, 934, 1082, 1081, 1080, 2250, 1463, 1079,
	2395, 2396, 3187, 2279, 1460, 829, 2761, 3327, 1462, 1459,
	1461, 1465, 1466, 1078, 2410, 2411, 1464, 1013, 1012, 1022,
	1023, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1014, 999,
	1000, 1001, 998, 1074, 1073, 1072, 2121, 1069, 2446, 1062,
	1061, 2713, 2717, 474, 1059, 2718, 1058, 2723, 2722, 1057,
	2727, 2728, 1056, 1055, 1054, 1053, 1052, 2738, 2720, 1051,
	1013, 1012, 1022, 1023, 1015, 1016, 1017, 1018, 1019, 1020,
	1021, 1014, 2742, 2745, 2746, 2747, 2677, 1050, 2781, 1049,
	1048, 117, 117, 827, 1043, 2783, 1042, 1041, 964, 921,
	2750, 2734, 2735, 3185, 2756, 1013, 1012, 1022, 1023, 1015,
	1016, 1017, 1018, 1019, 1020, 1021, 1014, 1735, 3183, 2278,
	2796, 934, 2673, 2277, 2876, 3237, 2675, 2676, 2276, 2773,
	1967, 3358, 1949, 2775, 2275, 952, 2774, 2737, 2776, 2323,
	2114, 1786, 963, 2740, 2786, 999, 1000, 1001, 998, 999,
	1000, 1001, 998, 2820, 999, 1000, 1001, 998, 2739, 3325,
	999, 1000, 1001, 998, 1030, 2468, 2086, 1694, 2837, 1470,
	1471, 1472, 1473, 1474, 1475, 1468, 1469, 699, 700, 701,
	702, 2274, 698, 934, 2471, 2469, 2530, 2467, 2908, 2472,
	2470, 2201, 2685, 2537, 2788, 2909, 934, 2074, 2077, 2078,
	2079, 2075, 2195, 2076, 2080, 1150, 934, 999, 1000, 1001,
	998, 1246, 1013, 1012, 1022, 1023, 1015, 1016, 1017, 1018,
	1019, 1020, 1021, 1014, 2798, 102, 2844, 1557, 2778, 1578,
	1579, 934, 2729, 54, 1532, 2890, 2273, 2839, 2811, 2883,
	2473, 2644, 2078, 2079, 2907, 1532, 2873, 2741, 2903, 2384,
	471, 2905, 2288, 1257, 2835, 1573, 1574, 1575, 2866, 191,
	2836, 2026, 999, 1000, 1001, 998, 829, 2911, 2270, 2843,
	53, 2886, 934, 829, 2462, 2900, 829, 2751, 2391, 2880,
	1668, 476, 2885, 1244, 2882, 2392, 2393, 2394, 2912, 477,
	2888, 2602, 2603, 934, 999, 1000, 1001, 998, 2892, 1298,
	2896, 1107, 2894, 475, 2897, 2269, 2069, 2220, 2901, 2910,
	2902, 2190, 2681, 2899, 2682, 2462, 1103, 934, 1246, 1246,
	1330, 2938, 1940, 2655, 1915, 1916, 478, 2979, 1748, 2979,
	2914, 999, 1000, 1001, 998, 958, 2621, 2618, 2611, 2944,
	2360, 1983, 2969, 2074, 2077, 2078, 2079, 2075, 2924, 2076,
	2080, 1957, 1582, 2679, 1549, 1246, 3250, 2268, 3114, 2995,
	2967, 1483, 1482, 2945, 2939, 1115, 1116, 1113, 1114, 2951,
	2710, 2941, 2744, 474, 2066, 934, 934, 1111, 1112, 934,
	934, 2975, 2976, 999, 1000, 1001, 998, 1109, 1110, 2062,
	1244, 2971, 2983, 3031, 2982, 1679, 2974, 1207, 1206, 990,
	2112, 3030, 1806, 3025, 2839, 1584, 1161, 3038, 2993, 2873,
	3017, 3018, 2992, 1142, 3026, 3027, 3042, 3043, 2967, 2967,
	2997, 2866, 2967, 2967, 2262, 1105, 3324, 2971, 1255, 3035,
	3223, 3205, 3203, 480, 3163, 3140, 3139, 3137, 2931, 3129,
	2838, 3041, 3040, 1025, 2920, 1029, 2841, 2787, 2796, 2842,
	999, 1000, 1001, 998, 3034, 3066, 2770, 2769, 2754, 3036,
	2013, 1026, 1028, 1024, 117, 1027, 1013, 1012, 1022, 1023,
	1015, 1016, 1017, 1018, 1019, 1020, 1021, 1014, 1108, 2753,
	3094, 2505, 3090, 2253, 1586, 2541, 3061, 3282, 3281, 3071,
	3065, 2230, 1951, 1864, 949, 3281, 3076, 3282, 3079, 699,
	700, 701, 702, 3011, 698, 2771, 3077, 3078, 2495, 999,
	1000, 1001, 998, 1437, 3089, 698, 1176, 999, 1000, 1001,
	998, 178, 3, 3095, 62, 3097, 2, 3096, 117, 934,
	3294, 3295, 117, 1246, 1223, 2095, 3105, 1726, 1250, 999,
	1000, 1001, 998, 117, 1, 1540, 703, 2480, 3016, 2481,
	3113, 2743, 2483, 117, 1824, 2451, 2060, 3123, 1938, 2640,
	1151, 743, 1489, 1355, 3122, 850, 943, 1352, 942, 940,
	1439, 594, 2967, 3152, 1789, 2442, 2416, 3037, 3249, 3288,
	3197, 3252, 1368, 3146, 1047, 578, 3131, 3051, 3201, 934,
	3053, 3136, 3134, 2926, 1829, 3164, 995, 2527, 765, 631,
	605, 1060, 1338, 1331, 2790, 1244, 2582, 2990, 2991, 852,
	604, 2793, 2810, 3159, 2799, 2313, 2498, 3098, 934, 849,
	766, 1773, 3155, 3158, 3049, 1246, 3174, 1299, 3192, 3195,
	3166, 1303, 2967, 1982, 3171, 3106, 2817, 2818, 2819, 3368,
	3357, 3339, 2823, 2824, 3175, 3182, 3184, 3186, 3188, 3191,
	3322, 3228, 3196, 3181, 3353, 3268, 3307, 2934, 2932, 2933,
	3204, 2967, 3206, 3207, 3202, 3200, 1246, 3300, 3224, 514,
	1705, 457, 810, 3029, 1785, 515, 1966, 3233, 3216, 3116,
	724, 1948, 725, 717, 3222, 2329, 2328, 1408, 1004, 1425,
	3230, 2598, 2599, 1039, 553, 1852, 2310, 1244, 2861, 3256,
	2492, 61, 60, 59, 58, 1755, 199, 596, 198, 3242,
	2962, 3243, 3194, 3244, 3255, 3245, 3254, 576, 3246, 575,
	574, 573, 572, 2073, 934, 2071, 2070, 1689, 3260, 3146,
	3261, 1688, 1753, 2653, 2382, 2376, 2009, 2014, 1244, 1621,
	3234, 3178, 3179, 3008, 3271, 3273, 2426, 1572, 2005, 3287,
	1638, 3279, 3276, 3277, 2398, 1635, 1634, 2390, 3004, 2998,
	1665, 3290, 2794, 2978, 2845, 2846, 3298, 3266, 934, 3283,
	3284, 3285, 3286, 2852, 1956, 3299, 875, 871, 873, 3303,
	874, 3305, 872, 2948, 2949, 2239, 1986, 2613, 1929, 1928,
	1926, 1925, 1125, 3256, 3319, 3315, 3151, 3212, 2940, 2119,
	2117, 2736, 2732, 1797, 1537, 934, 2287, 934, 3255, 3318,
	1690, 1391, 3326, 1686, 3328, 1950, 3073, 1577, 3331, 718,
	1946, 99, 1693, 152, 48, 89, 88, 3290, 3335, 98,
	934, 3337, 150, 47, 3342, 183, 182, 3346, 185, 3349,
	184, 181, 3352, 2169, 2170, 180, 1287, 179, 1391, 2981,
	1391, 692, 38, 37, 33, 12, 11, 3356, 34, 3363,
	2580, 21, 22, 3367, 20, 3366, 1359, 19, 25, 31,
	30, 3375, 110, 1391, 109, 29, 3032, 3363, 3380, 3379,
	108, 107, 3367, 1012, 1022, 1023, 1015, 1016, 1017, 1018,
	1019, 1020, 1021, 1014, 117, 106, 105, 117, 117, 104,
	117, 2227, 28, 18, 42, 41, 3378, 40, 9, 97,
	95, 3381, 27, 1013, 1012, 1022, 1023, 1015, 1016, 1017,
	1018, 1019, 1020, 1021, 1014, 1013, 1012, 1022, 1023, 1015,
	1016, 1017, 1018, 1019, 1020, 1021, 1014, 96, 827, 93,
	94, 92, 90, 73, 72, 827, 71, 86, 85, 84,
	83, 82, 81, 79, 117, 80, 764, 1850, 70, 69,
	68, 67, 66, 91, 77, 87, 78, 76, 75, 74,
	65, 612, 64, 63, 136, 135, 134, 133, 132, 130,
	348, 1013, 1012, 1022, 1023, 1015, 1016, 1017, 1018, 1019,
	1020, 1021, 1014, 567, 131, 129, 128, 291, 1533, 127,
	318, 126, 125, 124, 43, 44, 45, 46, 146, 145,
	147, 149, 151, 452, 148, 453, 153, 143, 603, 141,
	3124, 379, 332, 144, 142, 140, 56, 663, 671, 100,
	17, 1030, 24, 4, 0, 0, 1717, 0, 0, 560,
	0, 0, 593, 640, 639, 580, 590, 0, 0, 266,
	197, 454, 0, 455, 581, 0, 589, 582, 586, 585,
	583, 584, 0, 655, 0, 0, 0, 0, 0, 0,
	551, 564, 0, 568, 0, 0, 0, 0, 0, 0,
	0, 0, 3165, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 561, 562, 0,
	0, 3176, 0, 613, 0, 563, 0, 0, 1718, 587,
	591, 0, 0, 0, 0, 256, 384, 401, 267, 375,
	414, 272, 382, 262, 347, 371, 0, 0, 258, 399,
	381, 329, 310, 311, 257, 0, 366, 289, 302, 286,
	345, 588, 611, 615, 285, 677, 609, 409, 260, 0,
	408, 344, 395, 400, 330, 324, 259, 397, 328, 323,
	314, 293, 678, 315, 316, 306, 356, 322, 357, 307,
	334, 333, 335, 0, 0, 0, 0, 0, 437, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 606, 0, 0, 0, 411, 0, 0, 661,
	0, 0, 0, 383, 3263, 0, 317, 0, 0, 0,
	610, 0, 369, 350, 674, 552, 0, 367, 320, 396,
	358, 402, 385, 410, 363, 359, 251, 386, 288, 331,
	263, 265, 283, 290, 292, 294, 295, 340, 341, 353,
	374, 387, 388, 389, 287, 273, 368, 274, 304, 275,
	252, 279, 278, 280, 376, 281, 254, 354, 393, 0,
	300, 364, 327, 255, 326, 355, 392, 391, 264, 418,
	424, 425, 0, 0, 430, 0, 0, 0, 438, 443,
	444, 445, 447, 448, 449, 450, 0, 0, 0, 0,
	432, 0, 0, 0, 0, 2089, 0, 423, 298, 248,
	249, 466, 659, 346, 0, 0, 0, 0, 673, 654,
	656, 657, 660, 664, 665, 666, 667, 668, 670, 672,
	676, 465, 0, 0, 0, 0, 0, 462, 352, 0,
	373, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 380, 404, 416, 433, 436, 0, 0,
	0, 0, 253, 435, 0, 0, 0, 0, 1693, 0,
	0, 0, 675, 0, 0, 0, 415, 117, 0, 0,
	0, 0, 614, 0, 0, 336, 337, 338, 339, 662,
	0, 271, 434, 362, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 428, 429, 297, 303, 446, 305, 270, 351,
	299, 413, 312, 0, 439, 0, 440, 0, 0, 0,
	0, 343, 308, 309, 377, 313, 321, 365, 412, 349,
	370, 268, 403, 378, 325, 0, 0, 684, 658, 683,
	685, 686, 682, 687, 688, 669, 571, 0, 618, 680,
	679, 681, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 390, 0, 246, 276, 277, 282,
	463, 460, 394, 464, 0, 250, 0, 319, 0, 360,
	296, 0, 0, 647, 624, 625, 626, 569, 627, 621,
	622, 623, 648, 616, 644, 645, 595, 619, 628, 643,
	629, 646, 649, 650, 689, 690, 635, 691, 632, 651,
	642, 641, 630, 617, 652, 653, 602, 597, 633, 634,
	620, 636, 637, 638, 570, 598, 599, 600, 601, 0,
	0, 0, 419, 420, 421, 442, 405, 0, 461, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 467, 456, 0, 612, 0, 117, 0, 0, 0,
	0, 0, 0, 348, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 567, 0, 0, 0,
	291, 0, 0, 318, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 452, 0, 453, 0,
	0, 603, 0, 0, 379, 332, 0, 0, 0, 0,
	663, 671, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 560, 0, 0, 593, 640, 639, 580, 590,
	0, 0, 266, 197, 454, 0, 455, 581, 0, 589,
	582, 586, 585, 583, 584, 0, 655, 0, 0, 0,
	0, 0, 0, 551, 564, 0, 568, 0, 0, 0,
	0, 0, 0, 0, 1693, 1693, 1693, 1693, 0, 0,
	0, 0, 0, 0, 0, 0, 1693, 0, 0, 0,
	561, 562, 0, 0, 0, 0, 613, 0, 563, 0,
	0, 608, 587, 591, 0, 0, 0, 0, 256, 384,
	401, 267, 375, 414, 272, 382, 262, 347, 371, 0,
	0, 258, 399, 381, 329, 310, 311, 257, 0, 366,
	289, 302, 286, 345, 588, 611, 615, 285, 677, 609,
	409, 260, 0, 408, 344, 395, 400, 330, 324, 259,
	397, 328, 323, 314, 293, 678, 315, 316, 306, 356,
	322, 357, 307, 334, 333, 335, 0, 0, 0, 0,
	0, 437, 117, 0, 0, 0, 0, 117, 0, 0,
	0, 0, 0, 0, 0, 606, 0, 0, 0, 411,
	0, 0, 661, 0, 0, 0, 383, 117, 0, 317,
	0, 0, 0, 610, 117, 369, 350, 674, 552, 0,
	367, 320, 396, 358, 402, 385, 410, 363, 359, 251,
	386, 288, 331, 263, 265, 283, 290, 292, 294, 295,
	340, 341, 353, 374, 387, 388, 389, 287, 273, 368,
	274, 304, 275, 252, 279, 278, 280, 376, 281, 254,
	354, 393, 0, 300, 364, 327, 255, 326, 355, 392,
	391, 264, 418, 424, 425, 0, 0, 430, 0, 0,
	0, 438, 443, 444, 445, 447, 448, 449, 450, 0,
	0, 0, 0, 432, 0, 0, 0, 1491, 1490, 1492,
	423, 298, 248, 249, 466, 659, 346, 0, 0, 0,
	0, 673, 654, 656, 657, 660, 664, 665, 666, 667,
	668, 670, 672, 676, 465, 0, 0, 0, 0, 0,
	462, 352, 0, 373, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 380, 404, 416, 433,
	436, 0, 0, 0, 0, 253, 435, 1693, 0, 0,
	0, 0, 0, 0, 0, 675, 0, 0, 0, 415,
	0, 0, 0, 0, 117, 614, 0, 0, 336, 337,
	338, 339, 662, 0, 271, 434, 362, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 428, 429, 297, 303, 446,
	305, 270, 351, 299, 413, 312, 0, 439, 0, 440,
	0, 0, 0, 0, 343, 308, 309, 377, 313, 321,
	365, 412, 349, 370, 268, 403, 378, 325, 0, 0,
	684, 658, 683, 685, 686, 682, 687, 688, 669, 571,
	0, 618, 680, 679, 681, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 390, 0, 246,
	276, 277, 282, 463, 460, 394, 464, 0, 250, 0,
	319, 0, 360, 296, 0, 0, 647, 624, 625, 626,
	569, 627, 621, 622, 623, 648, 616, 644, 645, 595,
	619, 628, 643, 629, 646, 649, 650, 689, 690, 635,
	691, 632, 651, 642, 641, 630, 617, 652, 653, 602,
	597, 633, 634, 620, 636, 637, 638, 570, 598, 599,
	600, 601, 0, 0, 0, 419, 420, 421, 442, 405,
	0, 461, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 467, 456, 0, 0, 0, 174,
	612, 0, 0, 0, 0, 0, 0, 0, 0, 348,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 567, 0, 0, 0, 291, 0, 0, 318,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 452, 0, 453, 0, 0, 1033, 0, 0,
	379, 332, 0, 0, 0, 117, 663, 671, 0, 0,
	0, 0, 117, 0, 0, 117, 0, 0, 560, 0,
	0, 593, 640, 639, 580, 590, 0, 0, 266, 197,
	454, 0, 455, 581, 0, 589, 582, 586, 585, 583,
	584, 0, 655, 0, 0, 0, 0, 0, 0, 551,
	564, 0, 568, 0, 0, 0, 0, 0, 0, 0,
	1693, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 561, 562, 0, 0,
	0, 0, 613, 0, 563, 0, 0, 608, 587, 591,
	0, 0, 0, 0, 256, 384, 401, 267, 375, 414,
	272, 382, 262, 347, 371, 0, 0, 258, 399, 381,
	329, 310, 311, 257, 0, 366, 289, 302, 286, 345,
	588, 611, 615, 285, 677, 609, 409, 260, 0, 408,
	344, 395, 400, 330, 324, 259, 397, 328, 323, 314,
	293, 678, 315, 316, 306, 356, 322, 357, 307, 334,
	333, 335, 117, 0, 0, 0, 0, 437, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 606, 0, 0, 0, 411, 0, 0, 661, 0,
	0, 0, 383, 0, 0, 317, 0, 0, 0, 610,
	0, 369, 350, 674, 552, 0, 367, 320, 396, 358,
	402, 385, 410, 363, 359, 251, 386, 288, 331, 263,
	265, 283, 290, 292, 294, 295, 340, 341, 353, 374,
	387, 388, 389, 287, 273, 368, 274, 304, 275, 252,
	279, 278, 280, 376, 281, 254, 354, 393, 0, 300,
	364, 327, 255, 326, 355, 392, 391, 264, 418, 424,
	425, 0, 0, 430, 0, 0, 0, 438, 443, 444,
	445, 447, 448, 449, 450, 0, 0, 0, 0, 432,
	0, 0, 0, 0, 0, 0, 423, 298, 248, 249,
	466, 659, 346, 0, 0, 0, 0, 673, 654, 656,
	657, 660, 664, 665, 666, 667, 668, 670, 672, 676,
	465, 0, 0, 0, 0, 0, 462, 352, 0, 373,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 380, 404, 416, 433, 436, 0, 0, 0,
	0, 253, 435, 0, 0, 0, 0, 0, 0, 0,
	0, 675, 0, 0, 0, 415, 0, 0, 0, 0,
	0, 614, 0, 0, 336, 337, 338, 339, 662, 0,
	271, 434, 362, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 428, 429, 297, 303, 446, 305, 270, 351, 299,
	413, 312, 0, 439, 0, 440, 0, 0, 0, 0,
	343, 308, 309, 377, 313, 321, 365, 412, 349, 370,
	268, 403, 378, 325, 0, 0, 684, 658, 683, 685,
	686, 682, 687, 688, 669, 571, 0, 618, 680, 679,
	681, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 390, 0, 246, 276, 277, 282, 463,
	460, 394, 464, 0, 250, 0, 319, 139, 360, 296,
	0, 0, 647, 624, 625, 626, 569, 627, 621, 622,
	623, 648, 616, 644, 645, 595, 619, 628, 643, 629,
	646, 649, 650, 689, 690, 635, 691, 632, 651, 642,
	641, 630, 617, 652, 653, 602, 597, 633, 634, 620,
	636, 637, 638, 570, 598, 599, 600, 601, 0, 0,
	612, 419, 420, 421, 442, 405, 0, 461, 0, 348,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	467, 456, 567, 0, 0, 0, 291, 3336, 0, 318,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 452, 0, 453, 0, 0, 603, 0, 0,
	379, 332, 0, 0, 0, 0, 663, 671, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 560, 0,
	0, 593, 640, 639, 580, 590, 0, 0, 266, 197,
	454, 0, 455, 581, 0, 589, 582, 586, 585, 583,
	584, 0, 655, 0, 0, 0, 0, 0, 0, 551,
	564, 0, 568, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 561, 562, 0, 0,
	0, 0, 613, 0, 563, 0, 0, 608, 587, 591,
	0, 0, 0, 0, 256, 384, 401, 267, 375, 414,
	272, 382, 262, 347, 371, 0, 0, 258, 399, 381,
	329, 310, 311, 257, 0, 366, 289, 302, 286, 345,
	588, 611, 615, 285, 677, 609, 409, 260, 0, 408,
	344, 395, 400, 330, 324, 259, 397, 328, 323, 314,
	293, 678, 315, 316, 306, 356, 322, 357, 307, 334,
	333, 335, 0, 0, 0, 0, 0, 437, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 606, 0, 0, 0, 411, 0, 0, 661, 0,
	0, 0, 383, 0, 0, 317, 0, 0, 0, 610,
	0, 369, 350, 674, 552, 0, 367, 320, 396, 358,
	402, 385, 410, 363, 359, 251, 386, 288, 331, 263,
	265, 283, 290, 292, 294, 295, 340, 341, 353, 374,
	387, 388, 389, 287, 273, 368, 274, 304, 275, 252,
	279, 278, 280, 376, 281, 254, 354, 393, 0, 300,
	364, 327, 255, 326, 355, 392, 391, 264, 418, 424,
	425, 0, 0, 430, 0, 0, 0, 438, 443, 444,
	445, 447, 448, 449, 450, 0, 0, 0, 0, 432,
	0, 0, 0, 0, 0, 0, 423, 298, 248, 249,
	466, 659, 346, 0, 0, 0, 0, 673, 654, 656,
	657, 660, 664, 665, 666, 667, 668, 670, 672, 676,
	465, 0, 0, 0, 0, 0, 462, 352, 0, 373,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 380, 404, 416, 433, 436, 0, 0, 0,
	0, 253, 435, 0, 0, 0, 0, 0, 0, 0,
	0, 675, 0, 0, 0, 415, 0, 0, 0, 0,
	0, 614, 0, 0, 336, 337, 338, 339, 662, 0,
	271, 434, 362, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 428, 429, 297, 303, 446, 305, 270, 351, 299,
	413, 312, 0, 439, 0, 440, 0, 0, 0, 0,
	343, 308, 309, 377, 313, 321, 365, 412, 349, 370,
	268, 403, 378, 325, 0, 0, 684, 658, 683, 685,
	686, 682, 687, 688, 669, 571, 0, 618, 680, 679,
	681, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 390, 0, 246, 276, 277, 282, 463,
	460, 394, 464, 0, 250, 0, 319, 0, 360, 296,
	0, 0, 647, 624, 625, 626, 569, 627, 621, 622,
	623, 648, 616, 644, 645, 595, 619, 628, 643, 629,
	646, 649, 650, 689, 690, 635, 691, 632, 651, 642,
	641, 630, 617, 652, 653, 602, 597, 633, 634, 620,
	636, 637, 638, 570, 598, 599, 600, 601, 0, 0,
	612, 419, 420, 421, 442, 405, 0, 461, 0, 348,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	467, 456, 567, 0, 0, 0, 291, 1533, 0, 318,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 452, 0, 453, 0, 0, 603, 0, 0,
	379, 332, 0, 0, 0, 0, 663, 671, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 560, 0,
	0, 593, 640, 639, 580, 590, 0, 0, 266, 197,
	454, 0, 455, 581, 0, 589, 582, 586, 585, 583,
	584, 0, 655, 0, 0, 0, 0, 0, 0, 551,
	564, 0, 568, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 561, 562, 0, 0,
	0, 0, 613, 0, 563, 0, 0, 608, 587, 591,
	0, 0, 0, 0, 256, 384, 401, 267, 375, 414,
	272, 382, 262, 347, 371, 0, 0, 258, 399, 381,
	329, 310, 311, 257, 0, 366, 289, 302, 286, 345,
	588, 611, 615, 285, 677, 609, 409, 260, 0, 408,
	344, 395, 400, 330, 324, 259, 397, 328, 323, 314,
	293, 678, 315, 316, 306, 356, 322, 357, 307, 334,
	333, 335, 0, 0, 0, 0, 0, 437, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 606, 0, 0, 0, 411, 0, 0, 661, 0,
	0, 0, 383, 0, 0, 317, 0, 0, 0, 610,
	0, 369, 350, 674, 552, 0, 367, 320, 396, 358,
	402, 385, 410, 363, 359, 251, 386, 288, 331, 263,
	265, 283, 290, 292, 294, 295, 340, 341, 353, 374,
	387, 388, 389, 287, 273, 368, 274, 304, 275, 252,
	279, 278, 280, 376, 281, 254, 354, 393, 0, 300,
	364, 327, 255, 326, 355, 392, 391, 264, 418, 424,
	425, 0, 0, 430, 0, 0, 0, 438, 443, 444,
	445, 447, 448, 449, 450, 0, 0, 0, 0, 432,
	0, 0, 0, 0, 0, 0, 423, 298, 248, 249,
	466, 659, 346, 0, 0, 0, 0, 673, 654, 656,
	657, 660, 664, 665, 666, 667, 668, 670, 672, 676,
	465, 0, 0, 0, 0, 0, 462, 352, 0, 373,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 380, 404, 416, 433, 436, 0, 0, 0,
	0, 253, 435, 0, 0, 0, 0, 0, 0, 0,
	0, 675, 0, 0, 0, 415, 0, 0, 0, 0,
	0, 614, 0, 0, 336, 337, 338, 339, 662, 0,
	271, 434, 362, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 428, 429, 297, 303, 446, 305, 270, 351, 299,
	413, 312, 0, 439, 0, 440, 0, 0, 0, 0,
	343, 308, 309, 377, 313, 321, 365, 412, 349, 370,
	268, 403, 378, 325, 0, 0, 684, 658, 683, 685,
	686, 682, 687, 688, 669, 571, 0, 618, 680, 679,
	681, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 390, 0, 246, 276, 277, 282, 463,
	460, 394, 464, 0, 250, 0, 319, 0, 360, 296,
	0, 0, 647, 624, 625, 626, 569, 627, 621, 622,
	623, 648, 616, 644, 645, 595, 619, 628, 643, 629,
	646, 649, 650, 689, 690, 635, 691, 632, 651, 642,
	641, 630, 617, 652, 653, 602, 597, 633, 634, 620,
	636, 637, 638, 570, 598, 599, 600, 601, 0, 0,
	612, 419, 420, 421, 442, 405, 0, 461, 0, 348,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	467, 456, 567, 0, 0, 0, 291, 0, 0, 318,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 452, 0, 453, 0, 0, 603, 0, 0,
	379, 332, 0, 0, 0, 0, 663, 671, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 560, 0,
	0, 593, 640, 639, 580, 590, 0, 0, 266, 197,
	454, 0, 455, 581, 0, 589, 582, 586, 585, 583,
	584, 0, 655, 0, 0, 0, 0, 0, 0, 551,
	564, 0, 568, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 561, 562, 1282, 0,
	0, 0, 613, 0, 563, 0, 0, 608, 587, 591,
	0, 0, 0, 0, 256, 384, 401, 267, 375, 414,
	272, 382, 262, 347, 371, 0, 0, 258, 399, 381,
	329, 310, 311, 257, 0, 366, 289, 302, 286, 345,
	588, 611, 615, 285, 677, 609, 409, 260, 0, 408,
	344, 395, 400, 330, 324, 259, 397, 328, 323, 314,
	293, 678, 315, 316, 306, 356, 322, 357, 307, 334,
	333, 335, 0, 0, 0, 0, 0, 437, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 606, 0, 0, 0, 411, 0, 0, 661, 0,
	0, 0, 383, 0, 0, 317, 0, 0, 0, 610,
	0, 369, 350, 674, 552, 0, 367, 320, 396, 358,
	402, 385, 410, 363, 359, 251, 386, 288, 331, 263,
	265, 283, 290, 292, 294, 295, 340, 341, 353, 374,
	387, 388, 389, 287, 273, 368, 274, 304, 275, 252,
	279, 278, 280, 376, 281, 254, 354, 393, 0, 300,
	364, 327, 255, 326, 355, 392, 391, 264, 418, 424,
	425, 0, 0, 430, 0, 0, 0, 438, 443, 444,
	445, 447, 448, 449, 450, 0, 0, 0, 0, 432,
	0, 0, 0, 0, 0, 0, 423, 298, 248, 249,
	466, 659, 346, 0, 0, 0, 0, 673, 654, 656,
	657, 660, 664, 665, 666, 667, 668, 670, 672, 676,
	465, 0, 0, 0, 0, 0, 462, 352, 0, 373,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 380, 404, 416, 433, 436, 0, 0, 0,
	0, 253, 435, 0, 0, 0, 0, 0, 0, 0,
	0, 675, 0, 0, 0, 415, 0, 0, 0, 0,
	0, 614, 0, 0, 336, 337, 338, 339, 662, 0,
	271, 434, 362, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 428, 429, 297, 303, 446, 305, 270, 351, 299,
	413, 312, 0, 439, 0, 440, 0, 0, 0, 0,
	343, 308, 309, 377, 313, 321, 365, 412, 349, 370,
	268, 403, 378, 325, 0, 0, 684, 658, 683, 685,
	686, 682, 687, 688, 669, 571, 0, 618, 680, 679,
	681, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 390, 0, 246, 276, 277, 282, 463,
	460, 394, 464, 0, 250, 0, 319, 0, 360, 296,
	0, 0, 647, 624, 625, 626, 569, 627, 621, 622,
	623, 648, 616, 644, 645, 595, 619, 628, 643, 629,
	646, 649, 650, 689, 690, 635, 691, 632, 651, 642,
	641, 630, 617, 652, 653, 602, 597, 633, 634, 620,
	636, 637, 638, 570, 598, 599, 600, 601, 0, 0,
	0, 419, 420, 421, 442, 405, 612, 461, 0, 1872,
	0, 0, 0, 0, 0, 348, 0, 0, 0, 0,
	467, 456, 0, 0, 0, 0, 0, 0, 567, 0,
	0, 0, 291, 0, 0, 318, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 452, 0,
	453, 0, 0, 603, 0, 0, 379, 332, 0, 0,
	0, 0, 663, 671, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 560, 0, 0, 593, 640, 639,
	580, 590, 0, 0, 266, 197, 454, 0, 455, 581,
	0, 589, 582, 586, 585, 583, 584, 0, 655, 0,
	0, 0, 0, 0, 0, 551, 564, 0, 568, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 561, 562, 0, 0, 0, 0, 613, 0,
	563, 0, 0, 608, 587, 591, 0, 0, 0, 0,
	256, 384, 401, 267, 375, 414, 272, 382, 262, 347,
	371, 0, 0, 258, 399, 381, 329, 310, 311, 257,
	0, 366, 289, 302, 286, 345, 588, 611, 615, 285,
	677, 609, 409, 260, 0, 408, 344, 395, 400, 330,
	324, 259, 397, 328, 323, 314, 293, 678, 315, 316,
	306, 356, 322, 357, 307, 334, 333, 335, 0, 0,
	0, 0, 0, 437, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 606, 0, 0,
	0, 411, 0, 0, 661, 0, 0, 0, 383, 0,
	0, 317, 0, 0, 0, 610, 0, 369, 350, 674,
	552, 0, 367, 320, 396, 358, 402, 385, 410, 363,
	359, 251, 386, 288, 331, 263, 265, 283, 290, 292,
	294, 295, 340, 341, 353, 374, 387, 388, 389, 287,
	273, 368, 274, 304, 275, 252, 279, 278, 280, 376,
	281, 254, 354, 393, 0, 300, 364, 327, 255, 326,
	355, 392, 391, 264, 418, 424, 425, 0, 0, 430,
	0, 0, 0, 438, 443, 444, 445, 447, 448, 449,
	450, 0, 0, 0, 0, 432, 0, 0, 0, 0,
	0, 0, 423, 298, 248, 249, 466, 659, 346, 0,
	0, 0, 0, 673, 654, 656, 657, 660, 664, 665,
	666, 667, 668, 670, 672, 676, 465, 0, 0, 0,
	0, 0, 462, 352, 0, 373, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 380, 404,
	416, 433, 436, 0, 0, 0, 0, 253, 435, 0,
	0, 0, 0, 0, 0, 0, 0, 675, 0, 0,
	0, 415, 0, 0, 0, 0, 0, 614, 0, 0,
	336, 337, 338, 339, 662, 0, 271, 434, 362, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 428, 429, 297,
	303, 446, 305, 270, 351, 299, 413, 312, 0, 439,
	0, 440, 0, 0, 0, 0, 343, 308, 309, 377,
	313, 321, 365, 412, 349, 370, 268, 403, 378, 325,
	0, 0, 684, 658, 683, 685, 686, 682, 687, 688,
	669, 571, 0, 618, 680, 679, 681, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 390,
	0, 246, 276, 277, 282, 463, 460, 394, 464, 0,
	250, 0, 319, 0, 360, 296, 0, 0, 647, 624,
	625, 626, 569, 627, 621, 622, 623, 648, 616, 644,
	645, 595, 619, 628, 643, 629, 646, 649, 650, 689,
	690, 635, 691, 632, 651, 642, 641, 630, 617, 652,
	653, 602, 597, 633, 634, 620, 636, 637, 638, 570,
	598, 599, 600, 601, 0, 0, 612, 419, 420, 421,
	442, 405, 0, 461, 0, 348, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 467, 456, 567, 0,
	0, 0, 291, 0, 0, 318, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 452, 0,
	453, 0, 0, 603, 0, 0, 379, 332, 0, 0,
	0, 0, 663, 671, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 560, 0, 0, 593, 640, 639,
	580, 590, 0, 0, 266, 197, 454, 0, 455, 581,
	0, 589, 582, 586, 585, 583, 584, 0, 655, 0,
	0, 0, 0, 0, 0, 551, 564, 0, 568, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 561, 562, 0, 0, 0, 0, 613, 0,
	563, 0, 0, 608, 587, 591, 0, 0, 0, 0,
	256, 384, 401, 267, 375, 414, 272, 382, 262, 347,
	371, 0, 0, 258, 399, 381, 329, 310, 311, 257,
	0, 366, 289, 302, 286, 345, 588, 611, 615, 285,
	677, 609, 409, 260, 0, 408, 344, 395, 400, 330,
	324, 259, 397, 328, 323, 314, 293, 678, 315, 316,
	306, 356, 322, 357, 307, 334, 333, 335, 0, 0,
	0, 0, 0, 437, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 606, 0, 0,
	0, 411, 0, 0, 661, 0, 0, 0, 383, 0,
	0, 317, 0, 0, 0, 610, 0, 369, 350, 674,
	552, 0, 367, 320, 396, 358, 402, 385, 410, 363,
	359, 251, 386, 288, 331, 263, 265, 283, 290, 292,
	294, 295, 340, 341, 353, 374, 387, 388, 389, 287,
	273, 368, 274, 304, 275, 252, 279, 278, 280, 376,
	281, 254, 354, 393, 0, 300, 364, 327, 255, 326,
	355, 392, 391, 264, 418, 424, 425, 0, 0, 430,
	0, 0, 0, 438, 443, 444, 445, 447, 448, 449,
	450, 0, 0, 0, 0, 432, 0, 0, 0, 0,
	0, 0, 423, 298, 248, 249, 466, 659, 346, 0,
	0, 0, 0, 673, 654, 656, 657, 660, 664, 665,
	666, 667, 668, 670, 672, 676, 465, 0, 0, 0,
	0, 0, 462, 352, 0, 373, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 380, 404,
	416, 433, 436, 0, 0, 0, 0, 253, 435, 0,
	0, 0, 0, 0, 0, 0, 0, 675, 0, 0,
	0, 415, 0, 0, 0, 0, 0, 614, 0, 0,
	336, 337, 338, 339, 662, 0, 271, 434, 362, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 428, 429, 297,
	303, 446, 305, 270, 351, 299, 413, 312, 0, 439,
	0, 440, 0, 0, 0, 0, 343, 308, 309, 377,
	313, 321, 365, 412, 349, 370, 268, 403, 378, 325,
	0, 0, 684, 658, 683, 685, 686, 682, 687, 688,
	669, 571, 0, 618, 680, 679, 681, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 390,
	0, 246, 276, 277, 282, 463, 460, 394, 464, 0,
	250, 0, 319, 0, 360, 296, 0, 0, 647, 624,
	625, 626, 569, 627, 621, 622, 623, 648, 616, 644,
	645, 595, 619, 628, 643, 629, 646, 649, 650, 689,
	690, 635, 691, 632, 651, 642, 641, 630, 617, 652,
	653, 602, 597, 633, 634, 620, 636, 637, 638, 570,
	598, 599, 600, 601, 0, 0, 612, 419, 420, 421,
	442, 405, 0, 461, 0, 348, 0, 0, 0, 0,
	0, 0, 0, 0, 1409, 0, 467, 456, 567, 0,
	0, 0, 291, 0, 0, 318, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 452, 0,
	453, 0, 0, 603, 0, 0, 379, 332, 0, 0,
	0, 0, 663, 671, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 560, 0, 0, 593, 640, 639,
	580, 590, 0, 0, 266, 197, 454, 0, 455, 581,
	0, 589, 582, 586, 585, 583, 584, 0, 655, 0,
	0, 0, 0, 0, 0, 0, 564, 0, 568, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 561, 562, 0, 0, 0, 0, 613, 0,
	563, 0, 0, 608, 587, 591, 0, 0, 0, 0,
	256, 384, 401, 267, 375, 414, 272, 382, 262, 347,
	371, 0, 0, 258, 399, 381, 329, 310, 311, 257,
	0, 366, 289, 302, 286, 345, 588, 611, 615, 285,
	677, 609, 409, 260, 0, 408, 344, 395, 400, 330,
	324, 259, 397, 328, 323, 314, 293, 678, 315, 316,
	306, 356, 322, 357, 307, 334, 333, 335, 0, 0,
	0, 0, 0, 437, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 606, 0, 0,
	0, 411, 0, 0, 661, 0, 0, 0, 383, 0,
	0, 317, 0, 0, 0, 610, 0, 369, 350, 674,
	0, 0, 367, 320, 396, 358, 402, 385, 410, 363,
	359, 251, 386, 288, 331, 263, 265, 283, 290, 292,
	294, 295, 340, 341, 353, 374, 387, 388, 389, 287,
	273, 368, 274, 304, 275, 252, 279, 278, 280, 376,
	281, 254, 354, 393, 0, 300, 364, 327, 255, 326,
	355, 392, 391, 264, 418, 1410, 1411, 0, 0, 430,
	0, 0, 0, 438, 443, 444, 445, 447, 448, 449,
	450, 0, 0, 0, 0, 432, 0, 0, 0, 0,
	0, 0, 423, 298, 248, 249, 466, 659, 346, 0,
	0, 0, 0, 673, 654, 656, 657, 660, 664, 665,
	666, 667, 668, 670, 672, 676, 465, 0, 0, 0,
	0, 0, 462, 352, 0, 373, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 380, 404,
	416, 433, 436, 0, 0, 0, 0, 253, 435, 0,
	0, 0, 0, 0, 0, 0, 0, 675, 0, 0,
	0, 415, 0, 0, 0, 0, 0, 614, 0, 0,
	336, 337, 338, 339, 662, 0, 271, 434, 362, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 428, 429, 297,
	303, 446, 305, 270, 351, 299, 413, 312, 0, 439,
	0, 440, 0, 0, 0, 0, 343, 308, 309, 377,
	313, 321, 365, 412, 349, 370, 268, 403, 378, 325,
	0, 0, 684, 658, 683, 685, 686, 682, 687, 688,
	669, 571, 0, 618, 680, 679, 681, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 390,
	0, 246, 276, 277, 282, 463, 460, 394, 464, 0,
	250, 0, 319, 0, 360, 296, 0, 0, 647, 624,
	625, 626, 569, 627, 621, 622, 623, 648, 616, 644,
	645, 595, 619, 628, 643, 629, 646, 649, 650, 689,
	690, 635, 691, 632, 651, 642, 641, 630, 617, 652,
	653, 602, 597, 633, 634, 620, 636, 637, 638, 570,
	598, 599, 600, 601, 0, 0, 612, 419, 420, 421,
	442, 405, 0, 461, 0, 348, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 467, 456, 567, 0,
	0, 0, 291, 0, 0, 318, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 452, 0,
	453, 0, 0, 603, 0, 0, 379, 332, 0, 0,
	0, 0, 663, 671, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 593, 640, 639,
	580, 590, 0, 0, 266, 197, 454, 0, 455, 581,
	0, 589, 582, 586, 585, 583, 584, 0, 655, 0,
	0, 0, 0, 0, 0, 551, 564, 0, 568, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 561, 562, 0, 0, 0, 0, 613, 0,
	563, 0, 0, 608, 587, 591, 0, 0, 0, 0,
	256, 384, 401, 267, 375, 414, 272, 382, 262, 347,
	371, 0, 0, 258, 399, 381, 329, 310, 311, 257,
	0, 366, 289, 302, 286, 345, 588, 611, 615, 285,
	677, 609, 409, 260, 0, 408, 344, 395, 400, 330,
	324, 259, 397, 328, 323, 314, 293, 678, 315, 316,
	306, 356, 322, 357, 307, 334, 333, 335, 0, 0,
	0, 0, 0, 437, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 606, 0, 0,
	0, 411, 0, 0, 661, 0, 0, 0, 383, 0,
	0, 317, 0, 0, 0, 610, 0, 369, 350, 674,
	552, 0, 367, 320, 396, 358, 402, 385, 410, 363,
	359, 251, 386, 288, 331, 263, 265, 283, 290, 292,
	294, 295, 340, 341, 353, 374, 387, 388, 389, 287,
	273, 368, 274, 304, 275, 252, 279, 278, 280, 376,
	281, 254, 354, 393, 0, 300, 364, 327, 255, 326,
	355, 392, 391, 264, 418, 424, 425, 0, 0, 430,
	0, 0, 0, 438, 443, 444, 445, 447, 448, 449,
	450, 0, 0, 0, 0, 432, 0, 0, 0, 0,
	0, 0, 423, 298, 248, 249, 466, 659, 346, 0,
	0, 0, 0, 673, 654, 656, 657, 660, 664, 665,
	666, 667, 668, 670, 672, 676, 465, 0, 0, 0,
	0, 0, 462, 352, 0, 373, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 380, 404,
	416, 433, 436, 0, 0, 0, 0, 253, 435, 0,
	0, 0, 0, 0, 0, 0, 0, 675, 0, 0,
	0, 415, 0, 0, 0, 0, 0, 614, 0, 0,
	336, 337, 338, 339, 662, 0, 271, 434, 362, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 428, 429, 297,
	303, 446, 305, 270, 351, 299, 413, 312, 0, 439,
	0, 440, 0, 0, 0, 0, 343, 308, 309, 377,
	313, 321, 365, 412, 349, 370, 268, 403, 378, 325,
	0, 0, 684, 658, 683, 685, 686, 682, 687, 688,
	669, 571, 0, 618, 680, 679, 681, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 390,
	0, 246, 276, 277, 282, 463, 460, 394, 464, 0,
	250, 0, 319, 0, 360, 296, 0, 0, 647, 624,
	625, 626, 569, 627, 621, 622, 623, 648, 616, 644,
	645, 595, 619, 628, 643, 629, 646, 649, 650, 689,
	690, 635, 691, 632, 651, 642, 641, 630, 617, 652,
	653, 602, 597, 633, 634, 620, 636, 637, 638, 570,
	598, 599, 600, 601, 0, 0, 612, 419, 420, 421,
	442, 405, 0, 461, 0, 348, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 467, 456, 567, 0,
	0, 0, 291, 0, 0, 318, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 452, 0,
	453, 0, 0, 603, 0, 0, 379, 332, 0, 0,
	0, 0, 663, 671, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 560, 0, 0, 593, 640, 639,
	580, 590, 0, 0, 266, 197, 454, 0, 455, 581,
	0, 589, 582, 586, 585, 583, 584, 0, 655, 0,
	0, 0, 0, 0, 0, 0, 564, 0, 568, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 561, 562, 0, 0, 0, 0, 613, 0,
	563, 0, 0, 608, 587, 591, 0, 0, 0, 0,
	256, 384, 401, 267, 375, 414, 272, 382, 262, 347,
	371, 0, 0, 258, 399, 381, 329, 310, 311, 257,
	0, 366, 289, 302, 286, 345, 588, 611, 615, 285,
	677, 609, 409, 260, 0, 408, 344, 395, 400, 330,
	324, 259, 397, 328, 323, 314, 293, 678, 315, 316,
	306, 356, 322, 357, 307, 334, 333, 335, 0, 0,
	0, 0, 0, 437, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 606, 0, 0,
	0, 411, 0, 0, 661, 0, 0, 0, 383, 0,
	0, 317, 0, 0, 0, 610, 0, 369, 350, 674,
	0, 0, 367, 320, 396, 358, 402, 385, 410, 363,
	359, 251, 386, 288, 331, 263, 265, 283, 290, 292,
	294, 295, 340, 341, 353, 374, 387, 388, 389, 287,
	273, 368, 274, 304, 275, 252, 279, 278, 280, 376,
	281, 254, 354, 393, 0, 300, 364, 327, 255, 326,
	355, 392, 391, 264, 418, 424, 425, 0, 0, 430,
	0, 0, 0, 438, 443, 444, 445, 447, 448, 449,
	450, 0, 0, 0, 0, 432, 0, 0, 0, 0,
	0, 0, 423, 298, 248, 249, 466, 659, 346, 0,
	0, 0, 0, 673, 654, 656, 657, 660, 664, 665,
	666, 667, 668, 670, 672, 676, 465, 0, 0, 0,
	0, 0, 462, 352, 0, 373, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 380, 404,
	416, 433, 436, 0, 0, 0, 0, 253, 435, 0,
	0, 0, 0, 0, 0, 0, 0, 675, 0, 0,
	0, 415, 0, 0, 0, 0, 0, 614, 0, 0,
	336, 337, 338, 339, 662, 0, 271, 434, 362, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 428, 429, 297,
	303, 446, 305, 270, 351, 299, 413, 312, 0, 439,
	0, 440, 0, 0, 0, 0, 343, 308, 309, 377,
	313, 321, 365, 412, 349, 370, 268, 403, 378, 325,
	0, 0, 684, 658, 683, 685, 686, 682, 687, 688,
	669, 571, 0, 618, 680, 679, 681, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 390,
	0, 246, 276, 277, 282, 463, 460, 394, 464, 0,
	250, 0, 319, 0, 360, 296, 0, 0, 647, 624,
	625, 626, 569, 627, 621, 622, 623, 648, 616, 644,
	645, 595, 619, 628, 643, 629, 646, 649, 650, 689,
	690, 635, 691, 632, 651, 642, 641, 630, 617, 652,
	653, 602, 597, 633, 634, 620, 636, 637, 638, 570,
	598, 599, 600, 601, 0, 0, 0, 419, 420, 421,
	442, 405, 0, 461, 174, 51, 163, 138, 0, 0,
	0, 0, 0, 0, 348, 0, 467, 456, 0, 0,
	0, 0, 164, 0, 0, 0, 0, 0, 0, 156,
	0, 291, 0, 165, 318, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 452, 0, 453,
	0, 0, 115, 0, 0, 379, 332, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 103, 0, 0,
	0, 0, 0, 168, 0, 0, 196, 0, 0, 0,
	0, 0, 0, 266, 197, 454, 0, 455, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 188, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 256,
	384, 401, 267, 375, 414, 272, 382, 262, 347, 371,
	0, 0, 258, 399, 381, 329, 310, 311, 257, 0,
	366, 289, 302, 286, 345, 0, 398, 426, 285, 417,
	0, 409, 260, 0, 408, 344, 395, 400, 330, 324,
	259, 397, 328, 323, 314, 293, 441, 315, 316, 306,
	356, 322, 357, 307, 334, 333, 335, 0, 0, 0,
	0, 0, 437, 0, 0, 0, 0, 0, 0, 137,
	162, 172, 0, 101, 0, 0, 0, 0, 0, 0,
	411, 0, 0, 189, 0, 0, 0, 383, 0, 0,
	317, 161, 155, 154, 427, 0, 369, 350, 57, 0,
	0, 367, 320, 396, 358, 402, 385, 410, 363, 359,
	251, 386, 288, 331, 263, 265, 283, 290, 292, 294,
	295, 340, 341, 353, 374, 387, 388, 389, 287, 273,
	368, 274, 304, 275, 252, 279, 278, 280, 376, 281,
	254, 354, 393, 0, 300, 364, 327, 255, 326, 355,
	392, 391, 264, 418, 424, 425, 0, 0, 430, 157,
	158, 159, 438, 443, 444, 445, 447, 448, 449, 450,
	0, 0, 0, 0, 432, 0, 0, 0, 0, 0,
	0, 423, 298, 248, 249, 406, 284, 346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 342,
	422, 192, 0, 0, 451, 200, 0, 0, 0, 160,
	0, 201, 352, 0, 373, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 380, 404, 416,
	433, 436, 0, 0, 0, 0, 253, 435, 0, 0,
	0, 0, 0, 0, 0, 0, 407, 0, 0, 0,
	415, 0, 0, 0, 0, 0, 431, 0, 0, 336,
	337, 338, 339, 301, 0, 271, 434, 362, 113, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	50, 0, 0, 0, 0, 0, 428, 429, 297, 303,
	446, 305, 270, 351, 299, 413, 312, 0, 439, 0,
	440, 0, 0, 0, 0, 343, 308, 309, 377, 313,
	321, 365, 412, 349, 370, 268, 403, 378, 325, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 52,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 390, 0,
	246, 276, 277, 282, 361, 261, 394, 372, 0, 250,
	0, 319, 139, 360, 296, 0, 0, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	0, 227, 228, 229, 230, 231, 232, 233, 234, 235,
	236, 237, 238, 239, 240, 0, 0, 0, 247, 242,
	243, 244, 245, 0, 0, 0, 419, 420, 421, 442,
	405, 348, 202, 39, 190, 193, 195, 194, 0, 49,
	5, 0, 0, 0, 118, 203, 456, 0, 291, 0,
	0, 318, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 452, 0, 453, 0, 0, 0,
	0, 0, 379, 332, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1066, 0, 0, 196, 0, 0, 580, 590, 0, 0,
	266, 197, 454, 0, 455, 581, 0, 589, 582, 586,
	585, 583, 584, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	587, 0, 0, 0, 0, 0, 256, 384, 401, 267,
	375, 414, 272, 382, 262, 347, 371, 0, 0, 258,
	399, 381, 329, 310, 311, 257, 0, 366, 289, 302,
	286, 345, 588, 398, 426, 285, 417, 0, 409, 260,
	0, 408, 344, 395, 400, 330, 324, 259, 397, 328,
	323, 314, 293, 441, 315, 316, 306, 356, 322, 357,
	307, 334, 333, 335, 0, 0, 0, 0, 0, 437,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 411, 0, 0,
	0, 0, 0, 0, 383, 0, 0, 317, 0, 0,
	0, 427, 0, 369, 350, 0, 0, 0, 367, 320,
	396, 358, 402, 385, 410, 363, 359, 251, 386, 288,
	331, 263, 265, 283, 290, 292, 294, 295, 340, 341,
	353, 374, 387, 388, 389, 287, 273, 368, 274, 304,
	275, 252, 279, 278, 280, 376, 281, 254, 354, 393,
	0, 300, 364, 327, 255, 326, 355, 392, 391, 264,
	418, 424, 425, 0, 0, 430, 0, 0, 0, 438,
	443, 444, 445, 447, 448, 449, 450, 0, 0, 0,
	0, 432, 0, 0, 0, 0, 0, 0, 423, 298,
	248, 249, 466, 284, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 342, 422, 0, 0,
	0, 451, 465, 0, 0, 0, 0, 0, 462, 352,
	0, 373, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 380, 404, 416, 433, 436, 0,
	0, 0, 0, 253, 435, 0, 0, 0, 0, 0,
	0, 0, 0, 407, 0, 0, 0, 415, 0, 0,
	0, 0, 0, 431, 0, 0, 336, 337, 338, 339,
	301, 0, 271, 434, 362, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 428, 429, 297, 303, 446, 305, 270,
	351, 299, 413, 312, 0, 439, 0, 440, 0, 0,
	0, 0, 343, 308, 309, 377, 313, 321, 365, 412,
	349, 370, 268, 403, 378, 325, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 390, 0, 246, 276, 277,
	282, 463, 460, 394, 464, 0, 250, 0, 319, 0,
	360, 296, 0, 0, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 0, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 0, 0, 0, 247, 242, 243, 244, 245,
	0, 0, 0, 419, 420, 421, 442, 405, 0, 461,
	174, 51, 163, 138, 0, 0, 0, 0, 0, 0,
	348, 484, 467, 456, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 291, 0, 0,
	318, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 452, 0, 453, 0, 0, 0, 0,
	0, 379, 332, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 489,
	0, 0, 196, 0, 0, 0, 0, 0, 0, 266,
	197, 454, 0, 455, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 256, 384, 401, 267, 375,
	414, 272, 382, 262, 347, 371, 0, 0, 258, 399,
	381, 329, 310, 311, 257, 0, 366, 289, 302, 286,
	345, 0, 398, 426, 285, 417, 0, 409, 260, 0,
	408, 344, 395, 400, 330, 324, 259, 397, 328, 323,
	314, 293, 441, 315, 316, 306, 356, 322, 357, 307,
	334, 333, 335, 0, 0, 0, 0, 0, 437, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 488,
	0, 0, 0, 0, 0, 0, 411, 0, 0, 0,
	0, 0, 0, 383, 0, 0, 317, 0, 0, 0,
	427, 0, 369, 350, 0, 0, 0, 367, 320, 396,
	358, 402, 385, 410, 363, 359, 251, 386, 288, 331,
	263, 265, 283, 290, 292, 294, 295, 340, 341, 353,
	374, 387, 388, 389, 287, 273, 368, 274, 304, 275,
	252, 279, 278, 280, 376, 281, 254, 354, 393, 0,
	300, 364, 327, 255, 326, 355, 392, 391, 264, 418,
	424, 425, 0, 0, 430, 0, 0, 0, 438, 443,
	444, 445, 447, 448, 449, 450, 0, 0, 0, 0,
	432, 0, 0, 0, 0, 0, 0, 423, 298, 248,
	249, 466, 284, 346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 342, 422, 0, 0, 0,
	451, 465, 0, 0, 0, 0, 0, 462, 352, 0,
	373, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 380, 404, 416, 433, 436, 0, 0,
	0, 0, 253, 435, 0, 0, 0, 0, 0, 0,
	0, 0, 407, 0, 0, 0, 415, 0, 0, 0,
	0, 0, 431, 0, 0, 336, 337, 338, 339, 485,
	487, 271, 434, 362, 497, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 428, 429, 297, 303, 446, 305, 270, 351,
	299, 413, 312, 0, 439, 0, 440, 0, 0, 0,
	0, 343, 308, 309, 377, 313, 321, 365, 412, 349,
	370, 268, 403, 378, 325, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 52, 0, 0, 241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 390, 0, 246, 276, 277, 282,
	463, 460, 394, 464, 0, 250, 0, 319, 139, 360,
	296, 0, 0, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 0, 227, 228, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 0, 348, 0, 247, 242, 243, 244, 245, 0,
	893, 0, 419, 420, 421, 442, 405, 0, 461, 291,
	0, 0, 318, 0, 0, 0, 0, 0, 0, 0,
	0, 467, 456, 0, 0, 452, 0, 453, 0, 0,
	0, 0, 0, 379, 332, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 0, 0, 0, 0, 0,
	0, 266, 197, 454, 0, 455, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	879, 0, 0, 0, 0, 0, 0, 256, 384, 401,
	267, 375, 414, 272, 382, 262, 347, 371, 0, 0,
	2143, 2145, 2146, 2147, 2148, 2149, 2150, 0, 2155, 2151,
	2152, 2153, 2154, 0, 2138, 2139, 2140, 2141, 877, 2122,
	2144, 0, 2123, 344, 2124, 2125, 2126, 2127, 2128, 2129,
	2130, 2131, 2132, 2135, 2136, 2133, 2134, 2142, 356, 322,
	357, 307, 334, 333, 335, 904, 906, 908, 910, 913,
	437, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 411, 0,
	0, 0, 0, 0, 0, 383, 0, 0, 317, 0,
	0, 0, 2137, 0, 369, 350, 0, 0, 0, 367,
	320, 396, 358, 402, 385, 410, 363, 359, 251, 386,
	288, 331, 263, 265, 283, 290, 292, 294, 295, 340,
	341, 353, 374, 387, 388, 389, 287, 273, 368, 274,
	304, 275, 252, 279, 278, 280, 376, 281, 254, 354,
	393, 0, 300, 364, 327, 255, 326, 355, 392, 391,
	264, 418, 424, 425, 0, 0, 430, 0, 0, 0,
	438, 443, 444, 445, 447, 448, 449, 450, 0, 0,
	0, 0, 432, 0, 0, 0, 0, 0, 0, 423,
	298, 248, 249, 466, 284, 346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 342, 422, 0,
	0, 0, 451, 465, 0, 0, 0, 0, 0, 462,
	352, 0, 373, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 380, 404, 416, 433, 436,
	0, 0, 0, 0, 253, 435, 0, 0, 0, 0,
	0, 0, 0, 0, 407, 0, 0, 0, 415, 0,
	0, 0, 0, 0, 431, 0, 0, 336, 337, 338,
	339, 301, 0, 271, 434, 362, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 428, 429, 297, 303, 446, 305,
	270, 351, 299, 413, 312, 0, 439, 0, 440, 0,
	0, 0, 0, 343, 308, 309, 377, 313, 321, 365,
	412, 349, 370, 268, 403, 378, 325, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 390, 0, 246, 276,
	277, 282, 463, 460, 394, 464, 0, 250, 903, 319,
	0, 360, 296, 0, 0, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 0, 227,
	228, 229, 230, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 0, 348, 0, 247, 242, 243, 244,
	245, 0, 0, 0, 419, 420, 421, 442, 405, 0,
	461, 291, 0, 0, 318, 0, 0, 0, 0, 0,
	0, 0, 0, 467, 456, 0, 0, 452, 0, 453,
	0, 0, 0, 0, 0, 379, 332, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 196, 0, 0, 0,
	0, 0, 0, 266, 197, 454, 0, 455, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 1997, 2000,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 256,
	384, 401, 267, 375, 414, 272, 382, 262, 347, 371,
	0, 0, 258, 399, 381, 329, 310, 311, 257, 0,
	366, 289, 302, 286, 345, 0, 398, 426, 285, 417,
	0, 409, 260, 0, 408, 344, 395, 400, 330, 324,
	259, 397, 328, 323, 314, 293, 441, 315, 316, 306,
	356, 322, 357, 307, 334, 333, 335, 0, 0, 0,
	0, 0, 437, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2001,
	411, 0, 0, 0, 1996, 0, 1995, 383, 1993, 1998,
	317, 0, 0, 0, 427, 0, 369, 350, 0, 0,
	0, 367, 320, 396, 358, 402, 385, 410, 363, 359,
	251, 386, 288, 331, 263, 265, 283, 290, 292, 294,
	295, 340, 341, 353, 374, 387, 388, 389, 287, 273,
	368, 274, 304, 275, 252, 279, 278, 280, 376, 281,
	254, 354, 393, 1999, 300, 364, 327, 255, 326, 355,
	392, 391, 264, 418, 424, 425, 0, 0, 430, 0,
	0, 0, 438, 443, 444, 445, 447, 448, 449, 450,
	0, 0, 0, 0, 432, 0, 0, 0, 0, 0,
	0, 423, 298, 248, 249, 466, 284, 346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 342,
	422, 0, 0, 0, 451, 465, 0, 0, 0, 0,
	0, 462, 352, 0, 373, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 380, 404, 416,
	433, 436, 0, 0, 0, 0, 253, 435, 0, 0,
	0, 0, 0, 0, 0, 0, 407, 0, 0, 0,
	415, 0, 0, 0, 0, 0, 431, 0, 0, 336,
	337, 338, 339, 301, 0, 271, 434, 362, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 428, 429, 297, 303,
	446, 305, 270, 351, 299, 413, 312, 0, 439, 0,
	440, 0, 0, 0, 0, 343, 308, 309, 377, 313,
	321, 365, 412, 349, 370, 268, 403, 378, 325, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 390, 0,
	246, 276, 277, 282, 463, 460, 394, 464, 0, 250,
	0, 319, 0, 360, 296, 0, 0, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	0, 227, 228, 229, 230, 231, 232, 233, 234, 235,
	236, 237, 238, 239, 240, 0, 0, 0, 247, 242,
	243, 244, 245, 348, 0, 0, 419, 420, 421, 442,
	405, 0, 461, 0, 0, 1757, 0, 0, 0, 0,
	291, 0, 0, 318, 0, 467, 456, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 452, 0, 453, 0,
	0, 0, 0, 0, 379, 332, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 0, 0, 1758, 0,
	0, 0, 266, 197, 454, 0, 455, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 999,
	1000, 1001, 998, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 256, 384,
	401, 267, 375, 414, 272, 382, 262, 347, 371, 0,
	0, 258, 399, 381, 329, 310, 311, 257, 0, 366,
	289, 302, 286, 345, 0, 398, 426, 285, 417, 0,
	409, 260, 0, 408, 344, 395, 400, 330, 324, 259,
	397, 328, 323, 314, 293, 441, 315, 316, 306, 356,
	322, 357, 307, 334, 333, 335, 0, 0, 0, 0,
	0, 437, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 411,
	0, 0, 0, 0, 0, 0, 383, 0, 0, 317,
	0, 0, 0, 427, 0, 369, 350, 0, 0, 0,
	367, 320, 396, 358, 402, 385, 410, 363, 359, 251,
	386, 288, 331, 263, 265, 283, 290, 292, 294, 295,
	340, 341, 353, 374, 387, 388, 389, 287, 273, 368,
	274, 304, 275, 252, 279, 278, 280, 376, 281, 254,
	354, 393, 0, 300, 364, 327, 255, 326, 355, 392,
	391, 264, 418, 424, 425, 0, 0, 430, 0, 0,
	0, 438, 443, 444, 445, 447, 448, 449, 450, 0,
	0, 0, 0, 432, 0, 0, 0, 0, 0, 0,
	423, 298, 248, 249, 466, 284, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 342, 422,
	0, 0, 0, 451, 465, 0, 0, 0, 0, 0,
	462, 352, 0, 373, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 380, 404, 416, 433,
	436, 0, 0, 0, 0, 253, 435, 0, 0, 0,
	0, 0, 0, 0, 0, 407, 0, 0, 0, 415,
	0, 0, 0, 0, 0, 431, 0, 0, 336, 337,
	338, 339, 301, 0, 271, 434, 362, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 428, 429, 297, 303, 446,
	305, 270, 351, 299, 413, 312, 0, 439, 0, 440,
	0, 0, 0, 0, 343, 308, 309, 377, 313, 321,
	365, 412, 349, 370, 268, 403, 378, 325, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 390, 0, 246,
	276, 277, 282, 463, 460, 394, 464, 0, 250, 0,
	319, 0, 360, 296, 0, 0, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 0,
	227, 228, 229, 230, 231, 232, 233, 234, 235, 236,
	237, 238, 239, 240, 0, 348, 0, 247, 242, 243,
	244, 245, 0, 0, 0, 419, 420, 421, 442, 405,
	0, 461, 291, 809, 0, 318, 0, 0, 0, 0,
	0, 0, 0, 0, 467, 456, 0, 0, 452, 0,
	453, 0, 0, 0, 0, 0, 379, 332, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 816, 817,
	0, 0, 0, 0, 266, 197, 454, 0, 455, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 820, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 384, 804, 267, 375, 414, 272, 382, 262, 347,
	371, 0, 0, 258, 399, 381, 329, 310, 311, 257,
	0, 366, 289, 302, 286, 345, 0, 398, 426, 285,
	417, 794, 409, 260, 793, 408, 344, 395, 400, 330,
	324, 259, 397, 328, 323, 314, 293, 441, 315, 316,
	306, 356, 322, 357, 307, 334, 333, 335, 0, 0,
	0, 0, 0, 437, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 411, 0, 0, 0, 0, 0, 0, 383, 0,
	0, 317, 0, 0, 0, 427, 0, 369, 350, 0,
	0, 0, 367, 320, 396, 358, 402, 385, 410, 807,
	359, 251, 386, 288, 331, 263, 265, 283, 290, 292,
	294, 295, 340, 341, 353, 374, 387, 388, 389, 287,
	273, 368, 274, 304, 275, 252, 279, 278, 280, 376,
	281, 254, 354, 393, 0, 300, 364, 327, 255, 326,
	355, 392, 391, 264, 418, 424, 425, 0, 0, 430,
	0, 0, 0, 438, 443, 444, 445, 447, 448, 449,
	450, 0, 0, 0, 0, 432, 0, 0, 0, 0,
	0, 0, 423, 298, 248, 249, 466, 284, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	342, 422, 0, 0, 0, 451, 465, 0, 0, 0,
	0, 0, 462, 352, 0, 373, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 380, 404,
	416, 433, 436, 0, 0, 0, 0, 253, 435, 0,
	0, 0, 0, 0, 0, 808, 0, 407, 0, 0,
	0, 415, 0, 0, 0, 0, 0, 811, 0, 0,
	336, 337, 338, 339, 301, 0, 271, 434, 362, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 428, 429, 297,
	303, 446, 305, 270, 351, 299, 413, 312, 0, 439,
	0, 440, 0, 0, 0, 0, 818, 805, 814, 806,
	313, 321, 365, 412, 349, 370, 268, 403, 378, 815,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 390,
	0, 246, 276, 277, 282, 463, 460, 394, 464, 0,
	250, 0, 319, 0, 360, 296, 0, 0, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 0, 227, 228, 229, 230, 231, 232, 233, 234,
	235, 236, 237, 238, 239, 240, 0, 348, 0, 247,
	242, 243, 244, 245, 0, 0, 0, 419, 420, 421,
	442, 405, 0, 461, 291, 0, 0, 318, 0, 0,
	0, 0, 0, 0, 0, 0, 467, 456, 0, 0,
	452, 0, 453, 0, 0, 0, 0, 0, 379, 332,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	0, 0, 0, 0, 0, 0, 266, 197, 454, 0,
	455, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 2016, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 256, 384, 401, 267, 375, 414, 272, 382,
	262, 347, 371, 0, 0, 258, 399, 381, 329, 310,
	311, 257, 0, 366, 289, 302, 286, 345, 0, 398,
	426, 285, 417, 0, 409, 260, 0, 408, 344, 395,
	400, 330, 324, 259, 397, 328, 323, 314, 293, 441,
	315, 316, 306, 356, 322, 357, 307, 334, 333, 335,
	0, 0, 0, 0, 0, 437, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2015, 411, 0, 0, 0, 2020, 2018, 0,
	383, 0, 2019, 317, 0, 0, 0, 427, 0, 369,
	350, 0, 0, 0, 367, 320, 396, 358, 402, 385,
	410, 363, 359, 251, 386, 288, 331, 263, 265, 283,
	290, 292, 294, 295, 340, 341, 353, 374, 387, 388,
	389, 287, 273, 368, 274, 304, 275, 252, 279, 278,
	280, 376, 281, 254, 354, 393, 0, 300, 364, 327,
	255, 326, 355, 392, 391, 264, 418, 424, 425, 0,
	0, 430, 0, 0, 0, 438, 443, 444, 445, 447,
	448, 449, 450, 0, 0, 0, 0, 432, 0, 0,
	0, 0, 0, 0, 423, 298, 248, 249, 466, 284,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 342, 422, 0, 0, 0, 451, 465, 0,
	0, 0, 0, 0, 462, 352, 0, 373, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	380, 404, 416, 433, 436, 0, 0, 0, 0, 253,
	435, 0, 0, 0, 0, 0, 0, 0, 0, 407,
	0, 0, 0, 415, 0, 0, 0, 0, 0, 431,
	0, 0, 336, 337, 338, 339, 301, 0, 271, 434,
	362, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 428,
	429, 297, 303, 446, 305, 270, 351, 299, 413, 312,
	0, 439, 0, 440, 0, 0, 0, 0, 343, 308,
	309, 377, 313, 321, 365, 412, 349, 370, 268, 403,
	378, 325, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 390, 0, 246, 276, 277, 282, 463, 460, 394,
	464, 0, 250, 0, 319, 0, 360, 296, 0, 0,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 0, 227, 228, 229, 230, 231, 232,
	233, 234, 235, 236, 237, 238, 239, 240, 0, 0,
	0, 247, 242, 243, 244, 245, 174, 0, 0, 419,
	420, 421, 442, 405, 0, 461, 348, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 467, 456,
	0, 0, 0, 291, 0, 0, 318, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 452,
	0, 453, 0, 0, 115, 0, 0, 379, 332, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 168, 1801, 0, 196, 0,
	0, 0, 0, 0, 0, 266, 197, 454, 0, 455,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 384, 401, 267, 375, 414, 272, 382, 262,
	347, 371, 0, 0, 258, 399, 381, 329, 310, 311,
	257, 0, 366, 289, 302, 286, 345, 0, 398, 426,
	285, 417, 0, 409, 260, 0, 408, 344, 395, 400,
	330, 324, 259, 397, 328, 323, 314, 293, 441, 315,
	316, 306, 356, 322, 357, 307, 334, 333, 335, 0,
	0, 0, 0, 0, 437, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 411, 0, 0, 0, 0, 0, 0, 383,
	0, 0, 317, 0, 0, 0, 427, 0, 369, 350,
	0, 0, 0, 367, 320, 396, 358, 402, 385, 410,
	363, 359, 251, 386, 288, 331, 263, 265, 283, 290,
	292, 294, 295, 340, 341, 353, 374, 387, 388, 389,
	287, 273, 368, 274, 304, 275, 252, 279, 278, 280,
	376, 281, 254, 354, 393, 0, 300, 364, 327, 255,
	326, 355, 392, 391, 264, 418, 424, 425, 0, 0,
	430, 0, 0, 0, 438, 443, 444, 445, 447, 448,
	449, 450, 0, 0, 0, 0, 432, 0, 0, 0,
	0, 0, 0, 423, 298, 248, 249, 466, 284, 346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 342, 422, 0, 0, 0, 451, 465, 0, 0,
	0, 0, 0, 462, 352, 0, 373, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 380,
	404, 416, 433, 436, 0, 0, 0, 0, 253, 435,
	0, 0, 0, 0, 0, 0, 0, 0, 407, 0,
	0, 0, 415, 0, 0, 0, 0, 0, 431, 0,
	0, 336, 337, 338, 339, 301, 0, 271, 434, 362,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 428, 429,
	297, 303, 446, 305, 270, 351, 299, 413, 312, 0,
	439, 0, 440, 0, 0, 0, 0, 343, 308, 309,
	377, 313, 321, 365, 412, 349, 370, 268, 403, 378,
	325, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	390, 0, 246, 276, 277, 282, 463, 460, 394, 464,
	0, 250, 0, 319, 139, 360, 296, 0, 0, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 0, 227, 228, 229, 230, 231, 232, 233,
	234, 235, 236, 237, 238, 239, 240, 0, 0, 0,
	247, 242, 243, 244, 245, 174, 0, 0, 419, 420,
	421, 442, 405, 0, 461, 348, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 467, 456, 0,
	0, 0, 291, 0, 0, 318, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 452, 0,
	453, 0, 0, 115, 0, 0, 379, 332, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 168, 1792, 0, 196, 0, 0,
	0, 0, 0, 0, 266, 197, 454, 0, 455, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 384, 401, 267, 375, 414, 272, 382, 262, 347,
	371, 0, 0, 258, 399, 381, 329, 310, 311, 257,
	0, 366, 289, 302, 286, 345, 0, 398, 426, 285,
	417, 0, 409, 260, 0, 408, 344, 395, 400, 330,
	324, 259, 397, 328, 323, 314, 293, 441, 315, 316,
	306, 356, 322, 357, 307, 334, 333, 335, 0, 0,
	0, 0, 0, 437, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 411, 0, 0, 0, 0, 0, 0, 383, 0,
	0, 317, 0, 0, 0, 427, 0, 369, 350, 0,
	0, 0, 367, 320, 396, 358, 402, 385, 410, 363,
	359, 251, 386, 288, 331, 263, 265, 283, 290, 292,
	294, 295, 340, 341, 353, 374, 387, 388, 389, 287,
	273, 368, 274, 304, 275, 252, 279, 278, 280, 376,
	281, 254, 354, 393, 0, 300, 364, 327, 255, 326,
	355, 392, 391, 264, 418, 424, 425, 0, 0, 430,
	0, 0, 0, 438, 443, 444, 445, 447, 448, 449,
	450, 0, 0, 0, 0, 432, 0, 0, 0, 0,
	0, 0, 423, 298, 248, 249, 466, 284, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	342, 422, 0, 0, 0, 451, 465, 0, 0, 0,
	0, 0, 462, 352, 0, 373, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 380, 404,
	416, 433, 436, 0, 0, 0, 0, 253, 435, 0,
	0, 0, 0, 0, 0, 0, 0, 407, 0, 0,
	0, 415, 0, 0, 0, 0, 0, 431, 0, 0,
	336, 337, 338, 339, 301, 0, 271, 434, 362, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 428, 429, 297,
	303, 446, 305, 270, 351, 299, 413, 312, 0, 439,
	0, 440, 0, 0, 0, 0, 343, 308, 309, 377,
	313, 321, 365, 412, 349, 370, 268, 403, 378, 325,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 390,
	0, 246, 276, 277, 282, 463, 460, 394, 464, 0,
	250, 0, 319, 139, 360, 296, 0, 0, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 0, 227, 228, 229, 230, 231, 232, 233, 234,
	235, 236, 237, 238, 239, 240, 0, 0, 0, 247,
	242, 243, 244, 245, 174, 0, 0, 419, 420, 421,
	442, 405, 0, 461, 348, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 467, 456, 0, 0,
	0, 291, 0, 0, 318, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 452, 0, 453,
	0, 0, 115, 0, 0, 379, 332, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1691, 0, 0, 196, 0, 0, 0,
	0, 0, 0, 266, 197, 454, 0, 455, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 256,
	384, 401, 267, 375, 414, 272, 382, 262, 347, 371,
	0, 0, 258, 399, 381, 329, 310, 311, 257, 0,
	366, 289, 302, 286, 345, 0, 398, 426, 285, 417,
	0, 409, 260, 0, 408, 344, 395, 400, 330, 324,
	259, 397, 328, 323, 314, 293, 441, 315, 316, 306,
	356, 322, 357, 307, 334, 333, 335, 0, 0, 0,
	0, 0, 437, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	411, 0, 0, 0, 0, 0, 0, 383, 0, 0,
	317, 0, 0, 0, 427, 0, 369, 350, 0, 0,
	0, 367, 320, 396, 358, 402, 385, 410, 363, 359,
	251, 386, 288, 331, 263, 265, 283, 290, 292, 294,
	295, 340, 341, 353, 374, 387, 388, 389, 287, 273,
	368, 274, 304, 275, 252, 279, 278, 280, 376, 281,
	254, 354, 393, 0, 300, 364, 327, 255, 326, 355,
	392, 391, 264, 418, 424, 425, 0, 0, 430, 0,
	0, 0, 438, 443, 444, 445, 447, 448, 449, 450,
	0, 0, 0, 0, 432, 0, 0, 0, 0, 0,
	0, 423, 298, 248, 249, 466, 284, 346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 342,
	422, 0, 0, 0, 451, 465, 0, 0, 0, 0,
	0, 462, 352, 0, 373, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 380, 404, 416,
	433, 436, 0, 0, 0, 0, 253, 435, 0, 0,
	0, 0, 0, 0, 0, 0, 407, 0, 0, 0,
	415, 0, 0, 0, 0, 0, 431, 0, 0, 336,
	337, 338, 339, 301, 0, 271, 434, 362, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 428, 429, 297, 303,
	446, 305, 270, 351, 299, 413, 312, 0, 439, 0,
	440, 0, 0, 0, 0, 343, 308, 309, 377, 313,
	321, 365, 412, 349, 370, 268, 403, 378, 325, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 390, 0,
	246, 276, 277, 282, 463, 460, 394, 464, 0, 250,
	0, 319, 139, 360, 296, 0, 0, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	0, 227, 228, 229, 230, 231, 232, 233, 234, 235,
	236, 237, 238, 239, 240, 0, 348, 0, 247, 242,
	243, 244, 245, 0, 0, 0, 419, 420, 421, 442,
	405, 0, 461, 291, 0, 0, 318, 0, 0, 0,
	0, 0, 0, 0, 0, 467, 456, 0, 0, 452,
	0, 453, 0, 0, 0, 0, 0, 379, 332, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 196, 816,
	817, 0, 0, 0, 0, 266, 197, 454, 0, 455,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 820,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 384, 401, 267, 375, 414, 272, 382, 262,
	347, 371, 0, 0, 258, 399, 381, 329, 310, 311,
	257, 0, 366, 289, 302, 286, 345, 0, 398, 426,
	285, 417, 794, 409, 260, 793, 408, 344, 395, 400,
	330, 324, 259, 397, 328, 323, 314, 293, 441, 315,
	316, 306, 356, 322, 357, 307, 334, 333, 335, 0,
	0, 0, 0, 0, 437, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 411, 0, 0, 0, 0, 0, 0, 383,
	0, 0, 317, 0, 0, 0, 427, 0, 369, 350,
	0, 0, 0, 367, 320, 396, 358, 402, 385, 410,
	363, 359, 251, 386, 288, 331, 263, 265, 283, 290,
	292, 294, 295, 340, 341, 353, 374, 387, 388, 389,
	287, 273, 368, 274, 304, 275, 252, 279, 278, 280,
	376, 281, 254, 354, 393, 0, 300, 364, 327, 255,
	326, 355, 392, 391, 264, 418, 424, 425, 0, 0,
	430, 0, 0, 0, 438, 443, 444, 445, 447, 448,
	449, 450, 0, 0, 0, 0, 432, 0, 0, 0,
	0, 0, 0, 423, 298, 248, 249, 466, 284, 346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 342, 422, 0, 0, 0, 451, 465, 0, 0,
	0, 0, 0, 462, 352, 0, 373, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 380,
	404, 416, 433, 436, 0, 0, 0, 0, 253, 435,
	0, 0, 0, 0, 0, 0, 0, 0, 407, 0,
	0, 0, 415, 0, 0, 0, 0, 0, 431, 0,
	0, 336, 337, 338, 339, 301, 0, 271, 434, 362,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 428, 429,
	297, 303, 446, 305, 270, 351, 299, 413, 312, 0,
	439, 0, 440, 0, 0, 0, 0, 818, 1710, 814,
	1711, 313, 321, 365, 412, 349, 370, 268, 403, 378,
	815, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	390, 0, 246, 276, 277, 282, 463, 460, 394, 464,
	0, 250, 0, 319, 0, 360, 296, 0, 0, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 0, 227, 228, 229, 230, 231, 232, 233,
	234, 235, 236, 237, 238, 239, 240, 0, 348, 0,
	247, 242, 243, 244, 245, 0, 0, 2455, 419, 420,
	421, 442, 405, 0, 461, 291, 0, 0, 318, 0,
	0, 0, 0, 0, 0, 0, 0, 467, 456, 0,
	0, 452, 0, 453, 0, 0, 0, 0, 0, 379,
	332, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	196, 0, 0, 0, 0, 0, 0, 266, 197, 454,
	0, 455, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 256, 384, 401, 267, 375, 414, 272,
	382, 262, 347, 371, 0, 0, 258, 399, 381, 329,
	310, 311, 257, 0, 366, 289, 302, 286, 345, 0,
	398, 426, 285, 417, 0, 409, 260, 0, 408, 344,
	395, 400, 330, 324, 259, 397, 328, 323, 314, 293,
	441, 315, 316, 306, 356, 322, 357, 307, 334, 333,
	335, 0, 0, 0, 0, 0, 437, 0, 0, 0,
	0, 0, 0, 0, 0, 2458, 0, 0, 2457, 0,
	0, 0, 0, 0, 411, 0, 0, 0, 0, 0,
	0, 383, 0, 0, 317, 0, 0, 0, 427, 0,
	369, 350, 0, 0, 0, 367, 320, 396, 358, 402,
	385, 410, 363, 359, 251, 386, 288, 331, 263, 265,
	283, 290, 292, 294, 295, 340, 341, 353, 374, 387,
	388, 389, 287, 273, 368, 274, 304, 275, 252, 279,
	278, 280, 376, 281, 254, 354, 393, 0, 300, 364,
	327, 255, 326, 355, 392, 391, 264, 418, 424, 425,
	0, 0, 430, 0, 0, 0, 438, 443, 444, 445,
	447, 448, 449, 450, 0, 0, 0, 0, 432, 0,
	0, 0, 0, 0, 0, 423, 298, 248, 249, 466,
	284, 346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 342, 422, 0, 0, 0, 451, 465,
	0, 0, 0, 0, 0, 462, 352, 0, 373, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 380, 404, 416, 433, 436, 0, 0, 0, 0,
	253, 435, 0, 0, 0, 0, 0, 0, 0, 0,
	407, 0, 0, 0, 415, 0, 0, 0, 0, 0,
	431, 0, 0, 336, 337, 338, 339, 301, 0, 271,
	434, 362, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	428, 429, 297, 303, 446, 305, 270, 351, 299, 413,
	312, 0, 439, 0, 440, 0, 0, 0, 0, 343,
	308, 309, 377, 313, 321, 365, 412, 349, 370, 268,
	403, 378, 325, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 390, 0, 246, 276, 277, 282, 463, 460,
	394, 464, 0, 250, 0, 319, 0, 360, 296, 0,
	0, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 0, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 0,
	348, 0, 247, 242, 243, 244, 245, 0, 0, 0,
	419, 420, 421, 442, 405, 0, 461, 291, 1249, 0,
	318, 0, 0, 0, 0, 0, 0, 0, 0, 467,
	456, 0, 0, 452, 0, 453, 0, 0, 0, 0,
	0, 379, 332, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 0, 0, 1247, 0, 0, 0, 266,
	197, 454, 0, 455, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1245, 0,
	0, 0, 0, 0, 0, 256, 384, 401, 267, 375,
	414, 272, 382, 262, 347, 371, 0, 0, 258, 399,
	381, 329, 310, 311, 257, 0, 366, 289, 302, 286,
	345, 0, 398, 426, 285, 417, 0, 409, 260, 0,
	408, 344, 395, 400, 330, 324, 259, 397, 328, 323,
	314, 293, 441, 315, 316, 306, 356, 322, 357, 307,
	334, 333, 335, 0, 0, 0, 0, 0, 437, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 411, 0, 0, 0,
	0, 0, 0, 383, 0, 0, 317, 0, 0, 0,
	427, 0, 369, 350, 0, 0, 0, 367, 320, 396,
	358, 402, 385, 410, 363, 359, 251, 386, 288, 331,
	263, 265, 283, 290, 292, 294, 295, 340, 341, 353,
	374, 387, 388, 389, 287, 273, 368, 274, 304, 275,
	252, 279, 278, 280, 376, 281, 254, 354, 393, 0,
	300, 364, 327, 255, 326, 355, 392, 391, 264, 418,
	424, 425, 0, 0, 430, 0, 0, 0, 438, 443,
	444, 445, 447, 448, 449, 450, 0, 0, 0, 0,
	432, 0, 0, 0, 0, 0, 0, 423, 298, 248,
	249, 466, 284, 346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 342, 422, 0, 0, 0,
	451, 465, 0, 0, 0, 0, 0, 462, 352, 0,
	373, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 380, 404, 416, 433, 436, 0, 0,
	0, 0, 253, 435, 0, 0, 0, 0, 0, 0,
	0, 0, 407, 0, 0, 0, 415, 0, 0, 0,
	0, 0, 431, 0, 0, 336, 337, 338, 339, 301,
	0, 271, 434, 362, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 428, 429, 297, 303, 446, 305, 270, 351,
	299, 413, 312, 0, 439, 0, 440, 0, 0, 0,
	0, 343, 308, 309, 377, 313, 321, 365, 412, 349,
	370, 268, 403, 378, 325, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 390, 0, 246, 276, 277, 282,
	463, 460, 394, 464, 0, 250, 0, 319, 0, 360,
	296, 0, 0, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 0, 227, 228, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 0, 348, 0, 247, 242, 243, 244, 245, 0,
	0, 0, 419, 420, 421, 442, 405, 0, 461, 291,
	1243, 0, 318, 0, 0, 0, 0, 0, 0, 0,
	0, 467, 456, 0, 0, 452, 0, 453, 0, 0,
	0, 0, 0, 379, 332, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 0, 0, 1247, 0, 0,
	0, 266, 197, 454, 0, 455, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1245, 0, 0, 0, 0, 0, 0, 256, 384, 401,
	267, 375, 414, 272, 382, 262, 347, 371, 0, 0,
	258, 399, 381, 329, 310, 311, 257, 0, 366, 289,
	302, 286, 345, 0, 398, 426, 285, 417, 0, 409,
	260, 0, 408, 344, 395, 400, 330, 324, 259, 397,
	328, 323, 314, 293, 441, 315, 316, 306, 356, 322,
	357, 307, 334, 333, 335, 0, 0, 0, 0, 0,
	437, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 411, 0,
	0, 0, 0, 0, 0, 383, 0, 0, 317, 0,
	0, 0, 427, 0, 369, 350, 0, 0, 0, 367,
	320, 396, 358, 402, 385, 410, 363, 359, 251, 386,
	288, 331, 263, 265, 283, 290, 292, 294, 295, 340,
	341, 353, 374, 387, 388, 389, 287, 273, 368, 274,
	304, 275, 252, 279, 278, 280, 376, 281, 254, 354,
	393, 0, 300, 364, 327, 255, 326, 355, 392, 391,
	264, 418, 424, 425, 0, 0, 430, 0, 0, 0,
	438, 443, 444, 445, 447, 448, 449, 450, 0, 0,
	0, 0, 432, 0, 0, 0, 0, 0, 0, 423,
	298, 248, 249, 466, 284, 346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 342, 422, 0,
	0, 0, 451, 465, 0, 0, 0, 0, 0, 462,
	352, 0, 373, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 380, 404, 416, 433, 436,
	0, 0, 0, 0, 253, 435, 0, 0, 0, 0,
	0, 0, 0, 0, 407, 0, 0, 0, 415, 0,
	0, 0, 0, 0, 431, 0, 0, 336, 337, 338,
	339, 301, 0, 271, 434, 362, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 428, 429, 297, 303, 446, 305,
	270, 351, 299, 413, 312, 0, 439, 0, 440, 0,
	0, 0, 0, 343, 308, 309, 377, 313, 321, 365,
	412, 349, 370, 268, 403, 378, 325, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 390, 0, 246, 276,
	277, 282, 463, 460, 394, 464, 0, 250, 0, 319,
	0, 360, 296, 0, 0, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 0, 227,
	228, 229, 230, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 0, 348, 0, 247, 242, 243, 244,
	245, 0, 0, 0, 419, 420, 421, 442, 405, 0,
	461, 291, 0, 0, 318, 0, 0, 0, 0, 0,
	0, 0, 0, 467, 456, 0, 0, 452, 0, 453,
	0, 0, 0, 0, 0, 379, 332, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3251, 0, 196, 640, 0, 0,
	0, 0, 0, 266, 197, 454, 0, 455, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 256,
	384, 401, 267, 375, 414, 272, 382, 262, 347, 371,
	0, 0, 258, 399, 381, 329, 310, 311, 257, 0,
	366, 289, 302, 286, 345, 0, 398, 426, 285, 417,
	0, 409, 260, 0, 408, 344, 395, 400, 330, 324,
	259, 397, 328, 323, 314, 293, 441, 315, 316, 306,
	356, 322, 357, 307, 334, 333, 335, 0, 0, 0,
	0, 0, 437, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	411, 0, 0, 0, 0, 0, 0, 383, 0, 0,
	317, 0, 0, 0, 427, 0, 369, 350, 0, 0,
	0, 367, 320, 396, 358, 402, 385, 410, 363, 359,
	251, 386, 288, 331, 263, 265, 283, 290, 292, 294,
	295, 340, 341, 353, 374, 387, 388, 389, 287, 273,
	368, 274, 304, 275, 252, 279, 278, 280, 376, 281,
	254, 354, 393, 0, 300, 364, 327, 255, 326, 355,
	392, 391, 264, 418, 424, 425, 0, 0, 430, 0,
	0, 0, 438, 443, 444, 445, 447, 448, 449, 450,
	0, 0, 0, 0, 432, 0, 0, 0, 0, 0,
	0, 423, 298, 248, 249, 466, 284, 346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 342,
	422, 0, 0, 0, 451, 465, 0, 0, 0, 0,
	0, 462, 352, 0, 373, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 380, 404, 416,
	433, 436, 0, 0, 0, 0, 253, 435, 0, 0,
	0, 0, 0, 0, 0, 0, 407, 0, 0, 0,
	415, 0, 0, 0, 0, 0, 431, 0, 0, 336,
	337, 338, 339, 301, 0, 271, 434, 362, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 428, 429, 297, 303,
	446, 305, 270, 351, 299, 413, 312, 0, 439, 0,
	440, 0, 0, 0, 0, 343, 308, 309, 377, 313,
	321, 365, 412, 349, 370, 268, 403, 378, 325, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 390, 0,
	246, 276, 277, 282, 463, 460, 394, 464, 0, 250,
	0, 319, 0, 360, 296, 0, 0, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	0, 227, 228, 229, 230, 231, 232, 233, 234, 235,
	236, 237, 238, 239, 240, 0, 348, 0, 247, 242,
	243, 244, 245, 0, 0, 0, 419, 420, 421, 442,
	405, 0, 461, 291, 0, 0, 318, 0, 0, 0,
	0, 0, 0, 0, 0, 467, 456, 0, 0, 452,
	0, 453, 0, 0, 0, 0, 0, 379, 332, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 196, 0,
	0, 1247, 0, 0, 0, 266, 197, 454, 0, 455,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1245, 0, 0, 0, 0, 0,
	0, 256, 384, 401, 267, 375, 414, 272, 382, 262,
	347, 371, 0, 0, 258, 399, 381, 329, 310, 311,
	257, 0, 366, 289, 302, 286, 345, 0, 398, 426,
	285, 417, 0, 409, 260, 0, 408, 344, 395, 400,
	330, 324, 259, 397, 328, 323, 314, 293, 441, 315,
	316, 306, 356, 322, 357, 307, 334, 333, 335, 0,
	0, 0, 0, 0, 437, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 411, 0, 0, 0, 0, 0, 0, 383,
	0, 0, 317, 0, 0, 0, 427, 0, 369, 350,
	0, 0, 0, 367, 320, 396, 358, 402, 385, 410,
	363, 359, 251, 386, 288, 331, 263, 265, 283, 290,
	292, 294, 295, 340, 341, 353, 374, 387, 388, 389,
	287, 273, 368, 274, 304, 275, 252, 279, 278, 280,
	376, 281, 254, 354, 393, 0, 300, 364, 327, 255,
	326, 355, 392, 391, 264, 418, 424, 425, 0, 0,
	430, 0, 0, 0, 438, 443, 444, 445, 447, 448,
	449, 450, 0, 0, 0, 0, 432, 0, 0, 0,
	0, 0, 0, 423, 298, 248, 249, 466, 284, 346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 342, 422, 0, 0, 0, 451, 465, 0, 0,
	0, 0, 0, 462, 352, 0, 373, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 380,
	404, 416, 433, 436, 0, 0, 0, 0, 253, 435,
	0, 0, 0, 0, 0, 0, 0, 0, 407, 0,
	0, 0, 415, 0, 0, 0, 0, 0, 431, 0,
	0, 336, 337, 338, 339, 301, 0, 271, 434, 362,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 428, 429,
	297, 303, 446, 305, 270, 351, 299, 413, 312, 0,
	439, 0, 440, 0, 0, 0, 0, 343, 308, 309,
	377, 313, 321, 365, 412, 349, 370, 268, 403, 378,
	325, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	390, 0, 246, 276, 277, 282, 463, 460, 394, 464,
	0, 250, 0, 319, 0, 360, 296, 0, 0, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 0, 227, 228, 229, 230, 231, 232, 233,
	234, 235, 236, 237, 238, 239, 240, 0, 348, 0,
	247, 242, 243, 244, 245, 0, 0, 0, 419, 420,
	421, 442, 405, 0, 461, 291, 0, 0, 318, 0,
	0, 0, 0, 0, 0, 0, 0, 467, 456, 0,
	0, 452, 0, 453, 0, 0, 0, 0, 0, 379,
	332, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	196, 0, 0, 1247, 0, 0, 0, 266, 197, 454,
	0, 455, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2972, 0, 0, 0,
	0, 0, 0, 256, 384, 401, 267, 375, 414, 272,
	382, 262, 347, 371, 0, 0, 258, 399, 381, 329,
	310, 311, 257, 0, 366, 289, 302, 286, 345, 0,
	398, 426, 285, 417, 0, 409, 260, 0, 408, 344,
	395, 400, 330, 324, 259, 397, 328, 323, 314, 293,
	441, 315, 316, 306, 356, 322, 357, 307, 334, 333,
	335, 0, 0, 0, 0, 0, 437, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 411, 0, 0, 0, 0, 0,
	0, 383, 0, 0, 317, 0, 0, 0, 427, 0,
	369, 350, 0, 0, 0, 367, 320, 396, 358, 402,
	385, 410, 363, 359, 251, 386, 288, 331, 263, 265,
	283, 290, 292, 294, 295, 340, 341, 353, 374, 387,
	388, 389, 287, 273, 368, 274, 304, 275, 252, 279,
	278, 280, 376, 281, 254, 354, 393, 0, 300, 364,
	327, 255, 326, 355, 392, 391, 264, 418, 424, 425,
	0, 0, 430, 0, 0, 0, 438, 443, 444, 445,
	447, 448, 449, 450, 0, 0, 0, 0, 432, 0,
	0, 0, 0, 0, 0, 423, 298, 248, 249, 466,
	284, 346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 342, 422, 0, 0, 0, 451, 465,
	0, 0, 0, 0, 0, 462, 352, 0, 373, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 380, 404, 416, 433, 436, 0, 0, 0, 0,
	253, 435, 0, 0, 0, 0, 0, 0, 0, 0,
	407, 0, 0, 0, 415, 0, 0, 0, 0, 0,
	431, 0, 0, 336, 337, 338, 339, 301, 0, 271,
	434, 362, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	428, 429, 297, 303, 446, 305, 270, 351, 299, 413,
	312, 0, 439, 0, 440, 0, 0, 0, 0, 343,
	308, 309, 377, 313, 321, 365, 412, 349, 370, 268,
	403, 378, 325, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 390, 0, 246, 276, 277, 282, 463, 460,
	394, 464, 0, 250, 0, 319, 0, 360, 296, 0,
	0, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 0, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 0,
	0, 0, 247, 242, 243, 244, 245, 348, 0, 0,
	419, 420, 421, 442, 405, 0, 461, 0, 0, 2085,
	0, 0, 0, 0, 291, 0, 0, 318, 0, 467,
	456, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	452, 0, 453, 0, 0, 0, 0, 0, 379, 332,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	0, 0, 2087, 0, 0, 0, 266, 197, 454, 0,
	455, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 256, 384, 401, 267, 375, 414, 272, 382,
	262, 347, 371, 0, 0, 258, 399, 381, 329, 310,
	311, 257, 0, 366, 289, 302, 286, 345, 0, 398,
	426, 285, 417, 0, 409, 260, 0, 408, 344, 395,
	400, 330, 324, 259, 397, 328, 323, 314, 293, 441,
	315, 316, 306, 356, 322, 357, 307, 334, 333, 335,
	0, 0, 0, 0, 0, 437, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 411, 0, 0, 0, 0, 0, 0,
	383, 0, 0, 317, 0, 0, 0, 427, 0, 369,
	350, 0, 0, 0, 367, 320, 396, 358, 402, 385,
	410, 363, 359, 251, 386, 288, 331, 263, 265, 283,
	290, 292, 294, 295, 340, 341, 353, 374, 387, 388,
	389, 287, 273, 368, 274, 304, 275, 252, 279, 278,
	280, 376, 281, 254, 354, 393, 0, 300, 364, 327,
	255, 326, 355, 392, 391, 264, 418, 424, 425, 0,
	0, 430, 0, 0, 0, 438, 443, 444, 445, 447,
	448, 449, 450, 0, 0, 0, 0, 432, 0, 0,
	0, 0, 0, 0, 423, 298, 248, 249, 466, 284,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 342, 422, 0, 0, 0, 451, 465, 0,
	0, 0, 0, 0, 462, 352, 0, 373, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	380, 404, 416, 433, 436, 0, 0, 0, 0, 253,
	435, 0, 0, 0, 0, 0, 0, 0, 0, 407,
	0, 0, 0, 415, 0, 0, 0, 0, 0, 431,
	0, 0, 336, 337, 338, 339, 301, 0, 271, 434,
	362, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 428,
	429, 297, 303, 446, 305, 270, 351, 299, 413, 312,
	0, 439, 0, 440, 0, 0, 0, 0, 343, 308,
	309, 377, 313, 321, 365, 412, 349, 370, 268, 403,
	378, 325, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 390, 0, 246, 276, 277, 282, 463, 460, 394,
	464, 0, 250, 0, 319, 0, 360, 296, 0, 0,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 0, 227, 228, 229, 230, 231, 232,
	233, 234, 235, 236, 237, 238, 239, 240, 0, 348,
	0, 247, 242, 243, 244, 245, 0, 0, 0, 419,
	420, 421, 442, 405, 0, 461, 291, 2106, 0, 318,
	0, 0, 0, 0, 0, 0, 0, 0, 467, 456,
	0, 0, 452, 0, 453, 0, 0, 0, 0, 0,
	379, 332, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 196, 0, 0, 1247, 0, 0, 0, 266, 197,
	454, 0, 455, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 256, 384, 401, 267, 375, 414,
	272, 382, 262, 347, 371, 0, 0, 258, 399, 381,
	329, 310, 311, 257, 0, 366, 289, 302, 286, 345,
	0, 398, 426, 285, 417, 0, 409, 260, 0, 408,
	344, 395, 400, 330, 324, 259, 397, 328, 323, 314,
	293, 441, 315, 316, 306, 356, 322, 357, 307, 334,
	333, 335, 0, 0, 0, 0, 0, 437, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 411, 0, 0, 0, 0,
	0, 0, 383, 0, 0, 317, 0, 0, 0, 427,
	0, 369, 350, 0, 0, 0, 367, 320, 396, 358,
	402, 385, 410, 363, 359, 251, 386, 288, 331, 263,
	265, 283, 290, 292, 294, 295, 340, 341, 353, 374,
	387, 388, 389, 287, 273, 368, 274, 304, 275, 252,
	279, 278, 280, 376, 281, 254, 354, 393, 0, 300,
	364, 327, 255, 326, 355, 392, 391, 264, 418, 424,
	425, 0, 0, 430, 0, 0, 0, 438, 443, 444,
	445, 447, 448, 449, 450, 0, 0, 0, 0, 432,
	0, 0, 0, 0, 0, 0, 423, 298, 248, 249,
	466, 284, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 342, 422, 0, 0, 0, 451,
	465, 0, 0, 0, 0, 0, 462, 352, 0, 373,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 380, 404, 416, 433, 436, 0, 0, 0,
	0, 253, 435, 0, 0, 0, 0, 0, 0, 0,
	0, 407, 0, 0, 0, 415, 0, 0, 0, 0,
	0, 431, 0, 0, 336, 337, 338, 339, 301, 0,
	271, 434, 362, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 428, 429, 297, 303, 446, 305, 270, 351, 299,
	413, 312, 0, 439, 0, 440, 0, 0, 0, 0,
	343, 308, 309, 377, 313, 321, 365, 412, 349, 370,
	268, 403, 378, 325, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 390, 0, 246, 276, 277, 282, 463,
	460, 394, 464, 0, 250, 0, 319, 0, 360, 296,
	0, 0, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 0, 227, 228, 229, 230,
	231, 232, 233, 234, 235, 236, 237, 238, 239, 240,
	0, 348, 0, 247, 242, 243, 244, 245, 0, 0,
	0, 419, 420, 421, 442, 405, 0, 461, 291, 0,
	0, 318, 0, 0, 0, 0, 0, 0, 0, 0,
	467, 456, 0, 0, 452, 0, 453, 0, 0, 0,
	0, 0, 379, 332, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3345, 0, 196, 0, 0, 0, 0, 0, 0,
	266, 197, 454, 0, 455, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 384, 401, 267,
	375, 414, 272, 382, 262, 347, 371, 0, 0, 258,
	399, 381, 329, 310, 311, 257, 0, 366, 289, 302,
	286, 345, 0, 398, 426, 285, 417, 0, 409, 260,
	0, 408, 344, 395, 400, 330, 324, 259, 397, 328,
	323, 314, 293, 441, 315, 316, 306, 356, 322, 357,
	307, 334, 333, 335, 0, 0, 0, 0, 0, 437,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 411, 0, 0,
	0, 0, 0, 0, 383, 0, 0, 317, 0, 0,
	0, 427, 0, 369, 350, 0, 0, 0, 367, 320,
	396, 358, 402, 385, 410, 363, 359, 251, 386, 288,
	331, 263, 265, 283, 290, 292, 294, 295, 340, 341,
	353, 374, 387, 388, 389, 287, 273, 368, 274, 304,
	275, 252, 279, 278, 280, 376, 281, 254, 354, 393,
	0, 300, 364, 327, 255, 326, 355, 392, 391, 264,
	418, 424, 425, 0, 0, 430, 0, 0, 0, 438,
	443, 444, 445, 447, 448, 449, 450, 0, 0, 0,
	0, 432, 0, 0, 0, 0, 0, 0, 423, 298,
	248, 249, 466, 284, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 342, 422, 0, 0,
	0, 451, 465, 0, 0, 0, 0, 0, 462, 352,
	0, 373, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 380, 404, 416, 433, 436, 0,
	0, 0, 0, 253, 435, 0, 0, 0, 0, 0,
	0, 0, 0, 407, 0, 0, 0, 415, 0, 0,
	0, 0, 0, 431, 0, 0, 336, 337, 338, 339,
	301, 0, 271, 434, 362, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 428, 429, 297, 303, 446, 305, 270,
	351, 299, 413, 312, 0, 439, 0, 440, 0, 0,
	0, 0, 343, 308, 309, 377, 313, 321, 365, 412,
	349, 370, 268, 403, 378, 325, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 390, 0, 246, 276, 277,
	282, 463, 460, 394, 464, 0, 250, 0, 319, 0,
	360, 296, 0, 0, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 0, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 0, 348, 0, 247, 242, 243, 244, 245,
	0, 0, 0, 419, 420, 421, 442, 405, 0, 461,
	291, 0, 0, 318, 0, 0, 0, 0, 0, 0,
	0, 0, 467, 456, 0, 0, 452, 0, 453, 0,
	0, 0, 0, 0, 379, 332, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 640, 0, 0, 0,
	0, 0, 266, 197, 454, 0, 455, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 256, 384,
	401, 267, 375, 414, 272, 382, 262, 347, 371, 0,
	0, 258, 399, 381, 329, 310, 311, 257, 0, 366,
	289, 302, 286, 345, 0, 398, 426, 285, 417, 0,
	409, 260, 0, 408, 344, 395, 400, 330, 324, 259,
	397, 328, 323, 314, 293, 441, 315, 316, 306, 356,
	322, 357, 307, 334, 333, 335, 0, 0, 0, 0,
	0, 437, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 411,
	0, 0, 0, 0, 0, 0, 383, 0, 0, 317,
	0, 0, 0, 427, 0, 369, 350, 0, 0, 0,
	367, 320, 396, 358, 402, 385, 410, 363, 359, 251,
	386, 288, 331, 263, 265, 283, 290, 292, 294, 295,
	340, 341, 353, 374, 387, 388, 389, 287, 273, 368,
	274, 304, 275, 252, 279, 278, 280, 376, 281, 254,
	354, 393, 0, 300, 364, 327, 255, 326, 355, 392,
	391, 264, 418, 424, 425, 0, 0, 430, 0, 0,
	0, 438, 443, 444, 445, 447, 448, 449, 450, 0,
	0, 0, 0, 432, 0, 0, 0, 0, 0, 0,
	423, 298, 248, 249, 466, 284, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 342, 422,
	0, 0, 0, 451, 465, 0, 0, 0, 0, 0,
	462, 352, 0, 373, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 380, 404, 416, 433,
	436, 0, 0, 0, 0, 253, 435, 0, 0, 0,
	0, 0, 0, 0, 0, 407, 0, 0, 0, 415,
	0, 0, 0, 0, 0, 431, 0, 0, 336, 337,
	338, 339, 301, 0, 271, 434, 362, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 428, 429, 297, 303, 446,
	305, 270, 351, 299, 413, 312, 0, 439, 0, 440,
	0, 0, 0, 0, 343, 308, 309, 377, 313, 321,
	365, 412, 349, 370, 268, 403, 378, 325, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 390, 0, 246,
	276, 277, 282, 463, 460, 394, 464, 0, 250, 0,
	319, 0, 360, 296, 0, 0, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 0,
	227, 228, 229, 230, 231, 232, 233, 234, 235, 236,
	237, 238, 239, 240, 0, 348, 0, 247, 242, 243,
	244, 245, 0, 0, 0, 419, 420, 421, 442, 405,
	0, 461, 291, 0, 0, 318, 0, 0, 0, 0,
	0, 0, 0, 0, 467, 456, 0, 0, 452, 0,
	453, 0, 0, 0, 0, 0, 379, 332, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3267, 0, 0, 196, 0, 0,
	0, 0, 0, 0, 266, 197, 454, 0, 455, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 384, 401, 267, 375, 414, 272, 382, 262, 347,
	371, 0, 0, 258, 399, 381, 329, 310, 311, 257,
	0, 366, 289, 302, 286, 345, 0, 398, 426, 285,
	417, 0, 409, 260, 0, 408, 344, 395, 400, 330,
	324, 259, 397, 328, 323, 314, 293, 441, 315, 316,
	306, 356, 322, 357, 307, 334, 333, 335, 0, 0,
	0, 0, 0, 437, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 411, 0, 0, 0, 0, 0, 0, 383, 0,
	0, 317, 0, 0, 0, 427, 0, 369, 350, 0,
	0, 0, 367, 320, 396, 358, 402, 385, 410, 363,
	359, 251, 386, 288, 331, 263, 265, 283, 290, 292,
	294, 295, 340, 341, 353, 374, 387, 388, 389, 287,
	273, 368, 274, 304, 275, 252, 279, 278, 280, 376,
	281, 254, 354, 393, 0, 300, 364, 327, 255, 326,
	355, 392, 391, 264, 418, 424, 425, 0, 0, 430,
	0, 0, 0, 438, 443, 444, 445, 447, 448, 449,
	450, 0, 0, 0, 0, 432, 0, 0, 0, 0,
	0, 0, 423, 298, 248, 249, 466, 284, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	342, 422, 0, 0, 0, 451, 465, 0, 0, 0,
	0, 0, 462, 352, 0, 373, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 380, 404,
	416, 433, 436, 0, 0, 0, 0, 253, 435, 0,
	0, 0, 0, 0, 0, 0, 0, 407, 0, 0,
	0, 415, 0, 0, 0, 0, 0, 431, 0, 0,
	336, 337, 338, 339, 301, 0, 271, 434, 362, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 428, 429, 297,
	303, 446, 305, 270, 351, 299, 413, 312, 0, 439,
	0, 440, 0, 0, 0, 0, 343, 308, 309, 377,
	313, 321, 365, 412, 349, 370, 268, 403, 378, 325,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 390,
	0, 246, 276, 277, 282, 463, 460, 394, 464, 0,
	250, 0, 319, 0, 360, 296, 0, 0, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 0, 227, 228, 229, 230, 231, 232, 233, 234,
	235, 236, 237, 238, 239, 240, 0, 348, 0, 247,
	242, 243, 244, 245, 0, 0, 0, 419, 420, 421,
	442, 405, 0, 461, 291, 0, 0, 318, 0, 0,
	0, 0, 0, 0, 0, 0, 467, 456, 0, 0,
	452, 0, 453, 0, 0, 0, 0, 0, 379, 332,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	0, 0, 0, 0, 0, 0, 266, 197, 454, 0,
	455, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 256, 384, 401, 267, 375, 414, 272, 382,
	262, 347, 371, 0, 0, 258, 399, 381, 329, 310,
	311, 257, 0, 366, 289, 302, 286, 345, 0, 398,
	426, 285, 417, 0, 409, 260, 0, 408, 344, 395,
	400, 330, 324, 259, 397, 328, 323, 314, 293, 441,
	315, 316, 306, 356, 322, 357, 307, 334, 333, 335,
	0, 0, 0, 0, 0, 437, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 411, 0, 0, 0, 3193, 0, 0,
	383, 0, 0, 317, 0, 0, 0, 427, 0, 369,
	350, 0, 0, 0, 367, 320, 396, 358, 402, 385,
	410, 363, 359, 251, 386, 288, 331, 263, 265, 283,
	290, 292, 294, 295, 340, 341, 353, 374, 387, 388,
	389, 287, 273, 368, 274, 304, 275, 252, 279, 278,
	280, 376, 281, 254, 354, 393, 0, 300, 364, 327,
	255, 326, 355, 392, 391, 264, 418, 424, 425, 0,
	0, 430, 0, 0, 0, 438, 443, 444, 445, 447,
	448, 449, 450, 0, 0, 0, 0, 432, 0, 0,
	0, 0, 0, 0, 423, 298, 248, 249, 466, 284,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 342, 422, 0, 0, 0, 451, 465, 0,
	0, 0, 0, 0, 462, 352, 0, 373, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	380, 404, 416, 433, 436, 0, 0, 0, 0, 253,
	435, 0, 0, 0, 0, 0, 0, 0, 0, 407,
	0, 0, 0, 415, 0, 0, 0, 0, 0, 431,
	0, 0, 336, 337, 338, 339, 301, 0, 271, 434,
	362, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 428,
	429, 297, 303, 446, 305, 270, 351, 299, 413, 312,
	0, 439, 0, 440, 0, 0, 0, 0, 343, 308,
	309, 377, 313, 321, 365, 412, 349, 370, 268, 403,
	378, 325, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 390, 0, 246, 276, 277, 282, 463, 460, 394,
	464, 0, 250, 0, 319, 0, 360, 296, 0, 0,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 0, 227, 228, 229, 230, 231, 232,
	233, 234, 235, 236, 237, 238, 239, 240, 0, 348,
	0, 247, 242, 243, 244, 245, 0, 0, 0, 419,
	420, 421, 442, 405, 0, 461, 291, 0, 0, 318,
	0, 0, 0, 0, 0, 0, 0, 0, 467, 456,
	0, 0, 452, 0, 453, 0, 0, 0, 0, 0,
	379, 332, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2968, 0,
	0, 196, 0, 0, 0, 0, 0, 0, 266, 197,
	454, 0, 455, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 256, 384, 401, 267, 375, 414,
	272, 382, 262, 347, 371, 0, 0, 258, 399, 381,
	329, 310, 311, 257, 0, 366, 289, 302, 286, 345,
	0, 398, 426, 285, 417, 0, 409, 260, 0, 408,
	344, 395, 400, 330, 324, 259, 397, 328, 323, 314,
	293, 441, 315, 316, 306, 356, 322, 357, 307, 334,
	333, 335, 0, 0, 0, 0, 0, 437, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 411, 0, 0, 0, 0,
	0, 0, 383, 0, 0, 317, 0, 0, 0, 427,
	0, 369, 350, 0, 0, 0, 367, 320, 396, 358,
	402, 385, 410, 363, 359, 251, 386, 288, 331, 263,
	265, 283, 290, 292, 294, 295, 340, 341, 353, 374,
	387, 388, 389, 287, 273, 368, 274, 304, 275, 252,
	279, 278, 280, 376, 281, 254, 354, 393, 0, 300,
	364, 327, 255, 326, 355, 392, 391, 264, 418, 424,
	425, 0, 0, 430, 0, 0, 0, 438, 443, 444,
	445, 447, 448, 449, 450, 0, 0, 0, 0, 432,
	0, 0, 0, 0, 0, 0, 423, 298, 248, 249,
	466, 284, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 342, 422, 0, 0, 0, 451,
	465, 0, 0, 0, 0, 0, 462, 352, 0, 373,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 380, 404, 416, 433, 436, 0, 0, 0,
	0, 253, 435, 0, 0, 0, 0, 0, 0, 0,
	0, 407, 0, 0, 0, 415, 0, 0, 0, 0,
	0, 431, 0, 0, 336, 337, 338, 339, 301, 0,
	271, 434, 362, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 428, 429, 297, 303, 446, 305, 270, 351, 299,
	413, 312, 0, 439, 0, 440, 0, 0, 0, 0,
	343, 308, 309, 377, 313, 321, 365, 412, 349, 370,
	268, 403, 378, 325, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 390, 0, 246, 276, 277, 282, 463,
	460, 394, 464, 0, 250, 0, 319, 0, 360, 296,
	0, 0, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 0, 227, 228, 229, 230,
	231, 232, 233, 234, 235, 236, 237, 238, 239, 240,
	0, 348, 0, 247, 242, 243, 244, 245, 0, 0,
	0, 419, 420, 421, 442, 405, 0, 461, 291, 0,
	0, 318, 0, 0, 0, 0, 0, 0, 0, 0,
	467, 456, 0, 0, 452, 0, 453, 0, 0, 0,
	0, 0, 379, 332, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 0, 0, 2797, 0, 0, 0,
	266, 197, 454, 0, 455, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 384, 401, 267,
	375, 414, 272, 382, 262, 347, 371, 0, 0, 258,
	399, 381, 329, 310, 311, 257, 0, 366, 289, 302,
	286, 345, 0, 398, 426, 285, 417, 0, 409, 260,
	0, 408, 344, 395, 400, 330, 324, 259, 397, 328,
	323, 314, 293, 441, 315, 316, 306, 356, 322, 357,
	307, 334, 333, 335, 0, 0, 0, 0, 0, 437,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 411, 0, 0,
	0, 0, 0, 0, 383, 0, 0, 317, 0, 0,
	0, 427, 0, 369, 350, 0, 0, 0, 367, 320,
	396, 358, 402, 385, 410, 363, 359, 251, 386, 288,
	331, 263, 265, 283, 290, 292, 294, 295, 340, 341,
	353, 374, 387, 388, 389, 287, 273, 368, 274, 304,
	275, 252, 279, 278, 280, 376, 281, 254, 354, 393,
	0, 300, 364, 327, 255, 326, 355, 392, 391, 264,
	418, 424, 425, 0, 0, 430, 0, 0, 0, 438,
	443, 444, 445, 447, 448, 449, 450, 0, 0, 0,
	0, 432, 0, 0, 0, 0, 0, 0, 423, 298,
	248, 249, 466, 284, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 342, 422, 0, 0,
	0, 451, 465, 0, 0, 0, 0, 0, 462, 352,
	0, 373, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 380, 404, 416, 433, 436, 0,
	0, 0, 0, 253, 435, 0, 0, 0, 0, 0,
	0, 0, 0, 407, 0, 0, 0, 415, 0, 0,
	0, 0, 0, 431, 0, 0, 336, 337, 338, 339,
	301, 0, 271, 434, 362, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 428, 429, 297, 303, 446, 305, 270,
	351, 299, 413, 312, 0, 439, 0, 440, 0, 0,
	0, 0, 343, 308, 309, 377, 313, 321, 365, 412,
	349, 370, 268, 403, 378, 325, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 390, 0, 246, 276, 277,
	282, 463, 460, 394, 464, 0, 250, 0, 319, 0,
	360, 296, 0, 0, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 0, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 0, 348, 0, 247, 242, 243, 244, 245,
	0, 0, 0, 419, 420, 421, 442, 405, 0, 461,
	291, 0, 0, 318, 0, 0, 0, 0, 0, 0,
	0, 0, 467, 456, 0, 0, 452, 0, 453, 0,
	0, 0, 0, 0, 379, 332, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 0, 0, 0, 0,
	0, 0, 266, 197, 454, 0, 455, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 256, 384,
	401, 267, 375, 414, 272, 382, 262, 347, 371, 0,
	0, 258, 399, 381, 329, 310, 311, 257, 0, 366,
	289, 302, 286, 345, 0, 398, 426, 285, 417, 0,
	409, 260, 0, 408, 344, 395, 400, 330, 324, 259,
	397, 328, 323, 314, 293, 441, 315, 316, 306, 356,
	322, 357, 307, 334, 333, 335, 0, 0, 0, 0,
	0, 437, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 411,
	0, 0, 0, 3039, 0, 0, 383, 0, 0, 317,
	0, 0, 0, 427, 0, 369, 350, 0, 0, 0,
	367, 320, 396, 358, 402, 385, 410, 363, 359, 251,
	386, 288, 331, 263, 265, 283, 290, 292, 294, 295,
	340, 341, 353, 374, 387, 388, 389, 287, 273, 368,
	274, 304, 275, 252, 279, 278, 280, 376, 281, 254,
	354, 393, 0, 300, 364, 327, 255, 326, 355, 392,
	391, 264, 418, 424, 425, 0, 0, 430, 0, 0,
	0, 438, 443, 444, 445, 447, 448, 449, 450, 0,
	0, 0, 0, 432, 0, 0, 0, 0, 0, 0,
	423, 298, 248, 249, 466, 284, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 342, 422,
	0, 0, 0, 451, 465, 0, 0, 0, 0, 0,
	462, 352, 0, 373, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 380, 404, 416, 433,
	436, 0, 0, 0, 0, 253, 435, 0, 0, 0,
	0, 0, 0, 0, 0, 407, 0, 0, 0, 415,
	0, 0, 0, 0, 0, 431, 0, 0, 336, 337,
	338, 339, 301, 0, 271, 434, 362, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 428, 429, 297, 303, 446,
	305, 270, 351, 299, 413, 312, 0, 439, 0, 440,
	0, 0, 0, 0, 343, 308, 309, 377, 313, 321,
	365, 412, 349, 370, 268, 403, 378, 325, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 390, 0, 246,
	276, 277, 282, 463, 460, 394, 464, 0, 250, 0,
	319, 0, 360, 296, 0, 0, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 0,
	227, 228, 229, 230, 231, 232, 233, 234, 235, 236,
	237, 238, 239, 240, 0, 348, 0, 247, 242, 243,
	244, 245, 0, 0, 0, 419, 420, 421, 442, 405,
	0, 461, 291, 0, 0, 318, 0, 0, 0, 0,
	0, 0, 0, 0, 467, 456, 0, 0, 452, 0,
	453, 0, 0, 0, 0, 0, 379, 332, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 0, 0,
	2656, 0, 0, 0, 266, 197, 454, 0, 455, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 384, 401, 267, 375, 414, 272, 382, 262, 347,
	371, 0, 0, 258, 399, 381, 329, 310, 311, 257,
	0, 366, 289, 302, 286, 345, 0, 398, 426, 285,
	417, 0, 409, 260, 0, 408, 344, 395, 400, 330,
	324, 259, 397, 328, 323, 314, 293, 441, 315, 316,
	306, 356, 322, 357, 307, 334, 333, 335, 0, 0,
	0, 0, 0, 437, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 411, 0, 0, 0, 0, 0, 0, 383, 0,
	0, 317, 0, 0, 0, 427, 0, 369, 350, 0,
	0, 0, 367, 320, 396, 358, 402, 385, 410, 363,
	359, 251, 386, 288, 331, 263, 265, 283, 290, 292,
	294, 295, 340, 341, 353, 374, 387, 388, 389, 287,
	273, 368, 274, 304, 275, 252, 279, 278, 280, 376,
	281, 254, 354, 393, 0, 300, 364, 327, 255, 326,
	355, 392, 391, 264, 418, 424, 425, 0, 0, 430,
	0, 0, 0, 438, 443, 444, 445, 447, 448, 449,
	450, 0, 0, 0, 0, 432, 0, 0, 0, 0,
	0, 0, 423, 298, 248, 249, 466, 284, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	342, 422, 0, 0, 0, 451, 465, 0, 0, 0,
	0, 0, 462, 352, 0, 373, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 380, 404,
	416, 433, 436, 0, 0, 0, 0, 253, 435, 0,
	0, 0, 0, 0, 0, 0, 0, 407, 0, 0,
	0, 415, 0, 0, 0, 0, 0, 431, 0, 0,
	336, 337, 338, 339, 301, 0, 271, 434, 362, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 428, 429, 297,
	303, 446, 305, 270, 351, 299, 413, 312, 0, 439,
	0, 440, 0, 0, 0, 0, 343, 308, 309, 377,
	313, 321, 365, 412, 349, 370, 268, 403, 378, 325,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 390,
	0, 246, 276, 277, 282, 463, 460, 394, 464, 0,
	250, 0, 319, 0, 360, 296, 0, 0, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 0, 227, 228, 229, 230, 231, 232, 233, 234,
	235, 236, 237, 238, 239, 240, 0, 348, 0, 247,
	242, 243, 244, 245, 0, 0, 0, 419, 420, 421,
	442, 405, 0, 461, 291, 0, 0, 318, 0, 0,
	0, 0, 0, 0, 0, 0, 467, 456, 0, 0,
	452, 0, 453, 0, 0, 0, 0, 0, 379, 332,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	0, 0, 0, 0, 0, 0, 266, 197, 454, 0,
	455, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2671, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 256, 384, 401, 267, 375, 414, 272, 382,
	262, 347, 371, 0, 0, 258, 399, 381, 329, 310,
	311, 257, 0, 366, 289, 302, 286, 345, 0, 398,
	426, 285, 417, 0, 409, 260, 0, 408, 344, 395,
	400, 330, 324, 259, 397, 328, 323, 314, 293, 441,
	315, 316, 306, 356, 322, 357, 307, 334, 333, 335,
	0, 0, 0, 0, 0, 437, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 411, 0, 0, 0, 0, 0, 0,
	383, 0, 0, 317, 0, 0, 0, 427, 0, 369,
	350, 0, 0, 0, 367, 320, 396, 358, 402, 385,
	410, 363, 359, 251, 386, 288, 331, 263, 265, 283,
	290, 292, 294, 295, 340, 341, 353, 374, 387, 388,
	389, 287, 273, 368, 274, 304, 275, 252, 279, 278,
	280, 376, 281, 254, 354, 393, 0, 300, 364, 327,
	255, 326, 355, 392, 391, 264, 418, 424, 425, 0,
	0, 430, 0, 0, 0, 438, 443, 444, 445, 447,
	448, 449, 450, 0, 0, 0, 0, 432, 0, 0,
	0, 0, 0, 0, 423, 298, 248, 249, 466, 284,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 342, 422, 0, 0, 0, 451, 465, 0,
	0, 0, 0, 0, 462, 352, 0, 373, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	380, 404, 416, 433, 436, 0, 0, 0, 0, 253,
	435, 0, 0, 0, 0, 0, 0, 0, 0, 407,
	0, 0, 0, 415, 0, 0, 0, 0, 0, 431,
	0, 0, 336, 337, 338, 339, 301, 0, 271, 434,
	362, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 428,
	429, 297, 303, 446, 305, 270, 351, 299, 413, 312,
	0, 439, 0, 440, 0, 0, 0, 0, 343, 308,
	309, 377, 313, 321, 365, 412, 349, 370, 268, 403,
	378, 325, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 390, 0, 246, 276, 277, 282, 463, 460, 394,
	464, 0, 250, 0, 319, 0, 360, 296, 0, 0,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 0, 227, 228, 229, 230, 231, 232,
	233, 234, 235, 236, 237, 238, 239, 240, 0, 348,
	0, 247, 242, 243, 244, 245, 0, 0, 0, 419,
	420, 421, 442, 405, 0, 461, 291, 0, 0, 318,
	0, 0, 0, 0, 0, 0, 0, 0, 467, 456,
	0, 0, 452, 0, 453, 0, 0, 0, 0, 0,
	379, 332, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1691, 0,
	0, 196, 0, 0, 0, 0, 0, 0, 266, 197,
	454, 0, 455, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 256, 384, 401, 267, 375, 414,
	272, 382, 262, 347, 371, 0, 0, 258, 399, 381,
	329, 310, 311, 257, 0, 366, 289, 302, 286, 345,
	0, 398, 426, 285, 417, 0, 409, 260, 0, 408,
	344, 395, 400, 330, 324, 259, 397, 328, 323, 314,
	293, 441, 315, 316, 306, 356, 322, 357, 307, 334,
	333, 335, 0, 0, 0, 0, 0, 437, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 411, 0, 0, 0, 0,
	0, 0, 383, 0, 0, 317, 0, 0, 0, 427,
	0, 369, 350, 0, 0, 0, 367, 320, 396, 358,
	402, 385, 410, 363, 359, 251, 386, 288, 331, 263,
	265, 283, 290, 292, 294, 295, 340, 341, 353, 374,
	387, 388, 389, 287, 273, 368, 274, 304, 275, 252,
	279, 278, 280, 376, 281, 254, 354, 393, 0, 300,
	364, 327, 255, 326, 355, 392, 391, 264, 418, 424,
	425, 0, 0, 430, 0, 0, 0, 438, 443, 444,
	445, 447, 448, 449, 450, 0, 0, 0, 0, 432,
	0, 0, 0, 0, 0, 0, 423, 298, 248, 249,
	466, 284, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 342, 422, 0, 0, 0, 451,
	465, 0, 0, 0, 0, 0, 462, 352, 0, 373,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 380, 404, 416, 433, 436, 0, 0, 0,
	0, 253, 435, 0, 0, 0, 0, 0, 0, 0,
	0, 407, 0, 0, 0, 415, 0, 0, 0, 0,
	0, 431, 0, 0, 336, 337, 338, 339, 301, 0,
	271, 434, 362, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 428, 429, 297, 303, 446, 305, 270, 351, 299,
	413, 312, 0, 439, 0, 440, 0, 0, 0, 0,
	343, 308, 309, 377, 313, 321, 365, 412, 349, 370,
	268, 403, 378, 325, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 390, 0, 246, 276, 277, 282, 463,
	460, 394, 464, 0, 250, 0, 319, 0, 360, 296,
	0, 0, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 0, 227, 228, 229, 230,
	231, 232, 233, 234, 235, 236, 237, 238, 239, 240,
	0, 348, 0, 247, 242, 243, 244, 245, 0, 0,
	0, 419, 420, 421, 442, 405, 0, 461, 291, 0,
	0, 318, 0, 0, 0, 0, 0, 0, 0, 0,
	467, 456, 0, 0, 452, 0, 453, 0, 0, 0,
	0, 0, 379, 332, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 0, 0, 0, 0, 0, 0,
	266, 197, 454, 0, 455, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2755, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 384, 401, 267,
	375, 414, 272, 382, 262, 347, 371, 0, 0, 258,
	399, 381, 329, 310, 311, 257, 0, 366, 289, 302,
	286, 345, 0, 398, 426, 285, 417, 0, 409, 260,
	0, 408, 344, 395, 400, 330, 324, 259, 397, 328,
	323, 314, 293, 441, 315, 316, 306, 356, 322, 357,
	307, 334, 333, 335, 0, 0, 0, 0, 0, 437,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 411, 0, 0,
	0, 0, 0, 0, 383, 0, 0, 317, 0, 0,
	0, 427, 0, 369, 350, 0, 0, 0, 367, 320,
	396, 358, 402, 385, 410, 363, 359, 251, 386, 288,
	331, 263, 265, 283, 290, 292, 294, 295, 340, 341,
	353, 374, 387, 388, 389, 287, 273, 368, 274, 304,
	275, 252, 279, 278, 280, 376, 281, 254, 354, 393,
	0, 300, 364, 327, 255, 326, 355, 392, 391, 264,
	418, 424, 425, 0, 0, 430, 0, 0, 0, 438,
	443, 444, 445, 447, 448, 449, 450, 0, 0, 0,
	0, 432, 0, 0, 0, 0, 0, 0, 423, 298,
	248, 249, 466, 284, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 342, 422, 0, 0,
	0, 451, 465, 0, 0, 0, 0, 0, 462, 352,
	0, 373, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 380, 404, 416, 433, 436, 0,
	0, 0, 0, 253, 435, 0, 0, 0, 0, 0,
	0, 0, 0, 407, 0, 0, 0, 415, 0, 0,
	0, 0, 0, 431, 0, 0, 336, 337, 338, 339,
	301, 0, 271, 434, 362, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 428, 429, 297, 303, 446, 305, 270,
	351, 299, 413, 312, 0, 439, 0, 440, 0, 0,
	0, 0, 343, 308, 309, 377, 313, 321, 365, 412,
	349, 370, 268, 403, 378, 325, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 390, 0, 246, 276, 277,
	282, 463, 460, 394, 464, 0, 250, 0, 319, 0,
	360, 296, 0, 0, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 0, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 0, 348, 0, 247, 242, 243, 244, 245,
	0, 0, 0, 419, 420, 421, 442, 405, 0, 461,
	291, 0, 0, 318, 0, 0, 0, 0, 0, 0,
	0, 0, 467, 456, 0, 0, 452, 0, 453, 0,
	0, 0, 0, 0, 379, 332, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 0, 0, 2625, 0,
	0, 0, 266, 197, 454, 0, 455, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 256, 384,
	401, 267, 375, 414, 272, 382, 262, 347, 371, 0,
	0, 258, 399, 381, 329, 310, 311, 257, 0, 366,
	289, 302, 286, 345, 0, 398, 426, 285, 417, 0,
	409, 260, 0, 408, 344, 395, 400, 330, 324, 259,
	397, 328, 323, 314, 293, 441, 315, 316, 306, 356,
	322, 357, 307, 334, 333, 335, 0, 0, 0, 0,
	0, 437, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 411,
	0, 0, 0, 0, 0, 0, 383, 0, 0, 317,
	0, 0, 0, 427, 0, 369, 350, 0, 0, 0,
	367, 320, 396, 358, 402, 385, 410, 363, 359, 251,
	386, 288, 331, 263, 265, 283, 290, 292, 294, 295,
	340, 341, 353, 374, 387, 388, 389, 287, 273, 368,
	274, 304, 275, 252, 279, 278, 280, 376, 281, 254,
	354, 393, 0, 300, 364, 327, 255, 326, 355, 392,
	391, 264, 418, 424, 425, 0, 0, 430, 0, 0,
	0, 438, 443, 444, 445, 447, 448, 449, 450, 0,
	0, 0, 0, 432, 0, 0, 0, 0, 0, 0,
	423, 298, 248, 249, 466, 284, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 342, 422,
	0, 0, 0, 451, 465, 0, 0, 0, 0, 0,
	462, 352, 0, 373, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 380, 404, 416, 433,
	436, 0, 0, 0, 0, 253, 435, 0, 0, 0,
	0, 0, 0, 0, 0, 407, 0, 0, 0, 415,
	0, 0, 0, 0, 0, 431, 0, 0, 336, 337,
	338, 339, 301, 0, 271, 434, 362, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 428, 429, 297, 303, 446,
	305, 270, 351, 299, 413, 312, 0, 439, 0, 440,
	0, 0, 0, 0, 343, 308, 309, 377, 313, 321,
	365, 412, 349, 370, 268, 403, 378, 325, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 390, 0, 246,
	276, 277, 282, 463, 460, 394, 464, 0, 250, 0,
	319, 0, 360, 296, 0, 0, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 0,
	227, 228, 229, 230, 231, 232, 233, 234, 235, 236,
	237, 238, 239, 240, 0, 348, 0, 247, 242, 243,
	244, 245, 0, 0, 0, 419, 420, 421, 442, 405,
	0, 461, 291, 0, 0, 318, 0, 0, 0, 0,
	0, 0, 0, 0, 467, 456, 0, 0, 452, 0,
	453, 0, 0, 0, 0, 0, 379, 332, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 0, 0,
	0, 0, 0, 0, 266, 197, 454, 0, 455, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2545, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 384, 401, 267, 375, 414, 272, 382, 262, 347,
	371, 0, 0, 258, 399, 381, 329, 310, 311, 257,
	0, 366, 289, 302, 286, 345, 0, 398, 426, 285,
	417, 0, 409, 260, 0, 408, 344, 395, 400, 330,
	324, 259, 397, 328, 323, 314, 293, 441, 315, 316,
	306, 356, 322, 357, 307, 334, 333, 335, 0, 0,
	0, 0, 0, 437, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 411, 0, 0, 0, 0, 0, 0, 383, 0,
	0, 317, 0, 0, 0, 427, 0, 369, 350, 0,
	0, 0, 367, 320, 396, 358, 402, 385, 410, 363,
	359, 251, 386, 288, 331, 263, 265, 283, 290, 292,
	294, 295, 340, 341, 353, 374, 387, 388, 389, 287,
	273, 368, 274, 304, 275, 252, 279, 278, 280, 376,
	281, 254, 354, 393, 0, 300, 364, 327, 255, 326,
	355, 392, 391, 264, 418, 424, 425, 0, 0, 430,
	0, 0, 0, 438, 443, 444, 445, 447, 448, 449,
	450, 0, 0, 0, 0, 432, 0, 0, 0, 0,
	0, 0, 423, 298, 248, 249, 466, 284, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	342, 422, 0, 0, 0, 451, 465, 0, 0, 0,
	0, 0, 462, 352, 0, 373, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 380, 404,
	416, 433, 436, 0, 0, 0, 0, 253, 435, 0,
	0, 0, 0, 0, 0, 0, 0, 407, 0, 0,
	0, 415, 0, 0, 0, 0, 0, 431, 0, 0,
	336, 337, 338, 339, 301, 0, 271, 434, 362, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 428, 429, 297,
	303, 446, 305, 270, 351, 299, 413, 312, 0, 439,
	0, 440, 0, 0, 0, 0, 343, 308, 309, 377,
	313, 321, 365, 412, 349, 370, 268, 403, 378, 325,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 390,
	0, 246, 276, 277, 282, 463, 460, 394, 464, 0,
	250, 0, 319, 0, 360, 296, 0, 0, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 0, 227, 228, 229, 230, 231, 232, 233, 234,
	235, 236, 237, 238, 239, 240, 0, 348, 0, 247,
	242, 243, 244, 245, 0, 0, 0, 419, 420, 421,
	442, 405, 0, 461, 291, 0, 0, 318, 0, 0,
	0, 0, 0, 0, 0, 0, 467, 456, 0, 0,
	452, 0, 453, 0, 0, 0, 0, 0, 379, 332,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	0, 0, 1247, 0, 0, 0, 266, 197, 454, 0,
	455, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 256, 384, 401, 267, 375, 414, 272, 382,
	262, 347, 371, 0, 0, 258, 399, 381, 329, 310,
	311, 257, 0, 366, 289, 302, 286, 345, 0, 398,
	426, 285, 417, 0, 409, 260, 0, 408, 344, 395,
	400, 330, 324, 259, 397, 328, 323, 314, 293, 441,
	315, 316, 306, 356, 322, 357, 307, 334, 333, 335,
	0, 0, 0, 0, 0, 437, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 411, 0, 0, 0, 0, 0, 0,
	383, 0, 0, 317, 0, 0, 0, 427, 0, 369,
	350, 0, 0, 0, 367, 320, 396, 358, 402, 385,
	410, 363, 359, 251, 386, 288, 331, 263, 265, 283,
	290, 292, 294, 295, 340, 341, 353, 374, 387, 388,
	389, 287, 273, 368, 274, 304, 275, 252, 279, 278,
	280, 376, 281, 254, 354, 393, 0, 300, 364, 327,
	255, 326, 355, 392, 391, 264, 418, 424, 425, 0,
	0, 430, 0, 0, 0, 438, 443, 444, 445, 447,
	448, 449, 450, 0, 0, 0, 0, 432, 0, 0,
	0, 0, 0, 0, 423, 298, 248, 249, 466, 284,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 342, 422, 0, 0, 0, 451, 465, 0,
	0, 0, 0, 0, 462, 352, 0, 373, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	380, 404, 416, 433, 436, 0, 0, 0, 0, 253,
	435, 0, 0, 0, 0, 0, 0, 0, 0, 407,
	0, 0, 0, 415, 0, 0, 0, 0, 0, 431,
	0, 0, 336, 337, 338, 339, 301, 0, 271, 434,
	362, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 428,
	429, 297, 303, 446, 305, 270, 351, 299, 413, 312,
	0, 439, 0, 440, 0, 0, 0, 0, 343, 308,
	309, 377, 313, 321, 365, 412, 349, 370, 268, 403,
	378, 325, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 390, 0, 246, 276, 277, 282, 463, 460, 394,
	464, 0, 250, 0, 319, 0, 360, 296, 0, 0,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 0, 227, 228, 229, 230, 231, 232,
	233, 234, 235, 236, 237, 238, 239, 240, 0, 348,
	0, 247, 242, 243, 244, 245, 0, 0, 0, 419,
	420, 421, 442, 405, 0, 461, 291, 0, 0, 318,
	0, 0, 0, 0, 0, 0, 0, 0, 467, 456,
	0, 0, 452, 0, 453, 0, 0, 0, 0, 0,
	379, 332, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 196, 0, 0, 2087, 0, 0, 0, 266, 197,
	454, 0, 455, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 256, 384, 401, 267, 375, 414,
	272, 382, 262, 347, 371, 0, 0, 258, 399, 381,
	329, 310, 311, 257, 0, 366, 289, 302, 286, 345,
	0, 398, 426, 285, 417, 0, 409, 260, 0, 408,
	344, 395, 400, 330, 324, 259, 397, 328, 323, 314,
	293, 441, 315, 316, 306, 356, 322, 357, 307, 334,
	333, 335, 0, 0, 0, 0, 0, 437, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 411, 0, 0, 0, 0,
	0, 0, 383, 0, 0, 317, 0, 0, 0, 427,
	0, 369, 350, 0, 0, 0, 367, 320, 396, 358,
	402, 385, 410, 363, 359, 251, 386, 288, 331, 263,
	265, 283, 290, 292, 294, 295, 340, 341, 353, 374,
	387, 388, 389, 287, 273, 368, 274, 304, 275, 252,
	279, 278, 280, 376, 281, 254, 354, 393, 0, 300,
	364, 327, 255, 326, 355, 392, 391, 264, 418, 424,
	425, 0, 0, 430, 0, 0, 0, 438, 443, 444,
	445, 447, 448, 449, 450, 0, 0, 0, 0, 432,
	0, 0, 0, 0, 0, 0, 423, 298, 248, 249,
	466, 284, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 342, 422, 0, 0, 0, 451,
	465, 0, 0, 0, 0, 0, 462, 352, 0, 373,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 380, 404, 416, 433, 436, 0, 0, 0,
	0, 253, 435, 0, 0, 0, 0, 0, 0, 0,
	0, 407, 0, 0, 0, 415, 0, 0, 0, 0,
	0, 431, 0, 0, 336, 337, 338, 339, 301, 0,
	271, 434, 362, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 428, 429, 297, 303, 446, 305, 270, 351, 299,
	413, 312, 0, 439, 0, 440, 0, 0, 0, 0,
	343, 308, 309, 377, 313, 321, 365, 412, 349, 370,
	268, 403, 378, 325, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 390, 0, 246, 276, 277, 282, 463,
	460, 394, 464, 0, 250, 0, 319, 0, 360, 296,
	0, 0, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 0, 227, 228, 229, 230,
	231, 232, 233, 234, 235, 236, 237, 238, 239, 240,
	0, 348, 0, 247, 242, 243, 244, 245, 0, 0,
	0, 419, 420, 421, 442, 405, 0, 461, 291, 0,
	0, 318, 0, 0, 0, 0, 0, 0, 0, 0,
	467, 456, 0, 0, 452, 0, 453, 0, 0, 0,
	0, 0, 379, 332, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 0, 0, 0, 0, 0, 0,
	266, 197, 454, 0, 455, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1816, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 384, 401, 267,
	375, 414, 272, 382, 262, 347, 371, 0, 0, 258,
	399, 381, 329, 310, 311, 257, 0, 366, 289, 302,
	286, 345, 0, 398, 426, 285, 417, 0, 409, 260,
	0, 408, 344, 395, 400, 330, 324, 259, 397, 328,
	323, 314, 293, 441, 315, 316, 306, 356, 322, 357,
	307, 334, 333, 335, 0, 0, 0, 0, 0, 437,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 411, 0, 0,
	0, 0, 0, 0, 383, 0, 0, 317, 0, 0,
	0, 427, 0, 369, 350, 0, 0, 0, 367, 320,
	396, 358, 402, 385, 410, 363, 359, 251, 386, 288,
	331, 263, 265, 283, 290, 292, 294, 295, 340, 341,
	353, 374, 387, 388, 389, 287, 273, 368, 274, 304,
	275, 252, 279, 278, 280, 376, 281, 254, 354, 393,
	0, 300, 364, 327, 255, 326, 355, 392, 391, 264,
	418, 424, 425, 0, 0, 430, 0, 0, 0, 438,
	443, 444, 445, 447, 448, 449, 450, 0, 0, 0,
	0, 432, 0, 0, 0, 0, 0, 0, 423, 298,
	248, 249, 466, 284, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 342, 422, 0, 0,
	0, 451, 465, 0, 0, 0, 0, 0, 462, 352,
	0, 373, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 380, 404, 416, 433, 436, 0,
	0, 0, 0, 253, 435, 0, 0, 0, 0, 0,
	0, 0, 0, 407, 0, 0, 0, 415, 0, 0,
	0, 0, 0, 431, 0, 0, 336, 337, 338, 339,
	301, 0, 271, 434, 362, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 428, 429, 297, 303, 446, 305, 270,
	351, 299, 413, 312, 0, 439, 0, 440, 0, 0,
	0, 0, 343, 308, 309, 377, 313, 321, 365, 412,
	349, 370, 268, 403, 378, 325, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 390, 0, 246, 276, 277,
	282, 463, 460, 394, 464, 0, 250, 0, 319, 0,
	360, 296, 0, 0, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 0, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 0, 348, 0, 247, 242, 243, 244, 245,
	0, 0, 0, 419, 420, 421, 442, 405, 0, 461,
	291, 0, 0, 318, 0, 0, 0, 0, 0, 0,
	0, 0, 467, 456, 0, 0, 452, 0, 453, 0,
	0, 0, 0, 0, 379, 332, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 0, 0, 0, 0,
	0, 0, 266, 197, 454, 0, 455, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2164, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 256, 384,
	401, 267, 375, 414, 272, 382, 262, 347, 371, 0,
	0, 258, 399, 381, 329, 310, 311, 257, 0, 366,
	289, 302, 286, 345, 0, 398, 426, 285, 417, 0,
	409, 260, 0, 408, 344, 395, 400, 330, 324, 259,
	397, 328, 323, 314, 293, 441, 315, 316, 306, 356,
	322, 357, 307, 334, 333, 335, 0, 0, 0, 0,
	0, 437, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 411,
	0, 0, 0, 0, 0, 0, 383, 0, 0, 317,
	0, 0, 0, 427, 0, 369, 350, 0, 0, 0,
	367, 320, 396, 358, 402, 385, 410, 363, 359, 251,
	386, 288, 331, 263, 265, 283, 290, 292, 294, 295,
	340, 341, 353, 374, 387, 388, 389, 287, 273, 368,
	274, 304, 275, 252, 279, 278, 280, 376, 281, 254,
	354, 393, 0, 300, 364, 327, 255, 326, 355, 392,
	391, 264, 418, 424, 425, 0, 0, 430, 0, 0,
	0, 438, 443, 444, 445, 447, 448, 449, 450, 0,
	0, 0, 0, 432, 0, 0, 0, 0, 0, 0,
	423, 298, 248, 249, 466, 284, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 342, 422,
	0, 0, 0, 451, 465, 0, 0, 0, 0, 0,
	462, 352, 0, 373, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 380, 404, 416, 433,
	436, 0, 0, 0, 0, 253, 435, 0, 0, 0,
	0, 0, 0, 0, 0, 407, 0, 0, 0, 415,
	0, 0, 0, 0, 0, 431, 0, 0, 336, 337,
	338, 339, 301, 0, 271, 434, 362, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 428, 429, 297, 303, 446,
	305, 270, 351, 299, 413, 312, 0, 439, 0, 440,
	0, 0, 0, 0, 343, 308, 309, 377, 313, 321,
	365, 412, 349, 370, 268, 403, 378, 325, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 390, 0, 246,
	276, 277, 282, 463, 460, 394, 464, 0, 250, 0,
	319, 0, 360, 296, 0, 0, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 0,
	227, 228, 229, 230, 231, 232, 233, 234, 235, 236,
	237, 238, 239, 240, 0, 348, 0, 247, 242, 243,
	244, 245, 0, 0, 0, 419, 420, 421, 442, 405,
	0, 461, 291, 0, 0, 318, 0, 0, 0, 0,
	0, 0, 0, 0, 467, 456, 0, 0, 452, 0,
	453, 0, 0, 0, 0, 0, 379, 332, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 0, 0,
	2162, 0, 0, 0, 266, 197, 454, 0, 455, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 384, 401, 267, 375, 414, 272, 382, 262, 347,
	371, 0, 0, 258, 399, 381, 329, 310, 311, 257,
	0, 366, 289, 302, 286, 345, 0, 398, 426, 285,
	417, 0, 409, 260, 0, 408, 344, 395, 400, 330,
	324, 259, 397, 328, 323, 314, 293, 441, 315, 316,
	306, 356, 322, 357, 307, 334, 333, 335, 0, 0,
	0, 0, 0, 437, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 411, 0, 0, 0, 0, 0, 0, 383, 0,
	0, 317, 0, 0, 0, 427, 0, 369, 350, 0,
	0, 0, 367, 320, 396, 358, 402, 385, 410, 363,
	359, 251, 386, 288, 331, 263, 265, 283, 290, 292,
	294, 295, 340, 341, 353, 374, 387, 388, 389, 287,
	273, 368, 274, 304, 275, 252, 279, 278, 280, 376,
	281, 254, 354, 393, 0, 300, 364, 327, 255, 326,
	355, 392, 391, 264, 418, 424, 425, 0, 0, 430,
	0, 0, 0, 438, 443, 444, 445, 447, 448, 449,
	450, 0, 0, 0, 0, 432, 0, 0, 0, 0,
	0, 0, 423, 298, 248, 249, 466, 284, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	342, 422, 0, 0, 0, 451, 465, 0, 0, 0,
	0, 0, 462, 352, 0, 373, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 380, 404,
	416, 433, 436, 0, 0, 0, 0, 253, 435, 0,
	0, 0, 0, 0, 0, 0, 0, 407, 0, 0,
	0, 415, 0, 0, 0, 0, 0, 431, 0, 0,
	336, 337, 338, 339, 301, 0, 271, 434, 362, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 428, 429, 297,
	303, 446, 305, 270, 351, 299, 413, 312, 0, 439,
	0, 440, 0, 0, 0, 0, 343, 308, 309, 377,
	313, 321, 365, 412, 349, 370, 268, 403, 378, 325,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 390,
	0, 246, 276, 277, 282, 463, 460, 394, 464, 0,
	250, 0, 319, 0, 360, 296, 0, 0, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 0, 227, 228, 229, 230, 231, 232, 233, 234,
	235, 236, 237, 238, 239, 240, 0, 0, 1958, 247,
	242, 243, 244, 245, 348, 0, 0, 419, 420, 421,
	442, 405, 0, 461, 0, 0, 0, 0, 0, 0,
	0, 291, 0, 0, 318, 0, 467, 456, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 452, 0, 453,
	0, 0, 0, 0, 0, 379, 332, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 196, 0, 0, 0,
	0, 0, 0, 266, 197, 454, 0, 455, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 256,
	384, 401, 267, 375, 414, 272, 382, 262, 347, 371,
	0, 0, 258, 399, 381, 329, 310, 311, 257, 0,
	366, 289, 302, 286, 345, 0, 398, 426, 285, 417,
	0, 409, 260, 0, 408, 344, 395, 400, 330, 324,
	259, 397, 328, 323, 314, 293, 441, 315, 316, 306,
	356, 322, 357, 307, 334, 333, 335, 0, 0, 0,
	0, 0, 437, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	411, 0, 0, 0, 0, 0, 0, 383, 0, 0,
	317, 0, 0, 0, 427, 0, 369, 350, 0, 0,
	0, 367, 320, 396, 358, 402, 385, 410, 363, 359,
	251, 386, 288, 331, 263, 265, 283, 290, 292, 294,
	295, 340, 341, 353, 374, 387, 388, 389, 287, 273,
	368, 274, 304, 275, 252, 279, 278, 280, 376, 281,
	254, 354, 393, 0, 300, 364, 327, 255, 326, 355,
	392, 391, 264, 418, 424, 425, 0, 0, 430, 0,
	0, 0, 438, 443, 444, 445, 447, 448, 449, 450,
	0, 0, 0, 0, 432, 0, 0, 0, 0, 0,
	0, 423, 298, 248, 249, 466, 284, 346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 342,
	422, 0, 0, 0, 451, 465, 0, 0, 0, 0,
	0, 462, 352, 0, 373, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 380, 404, 416,
	433, 436, 0, 0, 0, 0, 253, 435, 0, 0,
	0, 0, 0, 0, 0, 0, 407, 0, 0, 0,
	415, 0, 0, 0, 0, 0, 431, 0, 0, 336,
	337, 338, 339, 301, 0, 271, 434, 362, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 428, 429, 297, 303,
	446, 305, 270, 351, 299, 413, 312, 0, 439, 0,
	440, 0, 0, 0, 0, 343, 308, 309, 377, 313,
	321, 365, 412, 349, 370, 268, 403, 378, 325, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 390, 0,
	246, 276, 277, 282, 463, 460, 394, 464, 0, 250,
	0, 319, 0, 360, 296, 0, 0, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	0, 227, 228, 229, 230, 231, 232, 233, 234, 235,
	236, 237, 238, 239, 240, 0, 348, 0, 247, 242,
	243, 244, 245, 0, 1678, 0, 419, 420, 421, 442,
	405, 0, 461, 291, 0, 0, 318, 0, 0, 0,
	0, 0, 0, 0, 0, 467, 456, 0, 0, 452,
	0, 453, 0, 0, 0, 0, 0, 379, 332, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 196, 0,
	0, 0, 0, 0, 0, 266, 197, 454, 0, 455,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 384, 401, 267, 375, 414, 272, 382, 262,
	347, 371, 0, 0, 258, 399, 381, 329, 310, 311,
	257, 0, 366, 289, 302, 286, 345, 0, 398, 426,
	285, 417, 0, 409, 260, 0, 408, 344, 395, 400,
	330, 324, 259, 397, 328, 323, 314, 293, 441, 315,
	316, 306, 356, 322, 357, 307, 334, 333, 335, 0,
	0, 0, 0, 0, 437, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 411, 0, 0, 0, 0, 0, 0, 383,
	0, 0, 317, 0, 0, 0, 427, 0, 369, 350,
	0, 0, 0, 367, 320, 396, 358, 402, 385, 410,
	363, 359, 251, 386, 288, 331, 263, 265, 283, 290,
	292, 294, 295, 340, 341, 353, 374, 387, 388, 389,
	287, 273, 368, 274, 304, 275, 252, 279, 278, 280,
	376, 281, 254, 354, 393, 0, 300, 364, 327, 255,
	326, 355, 392, 391, 264, 418, 424, 425, 0, 0,
	430, 0, 0, 0, 438, 443, 444, 445, 447, 448,
	449, 450, 0, 0, 0, 0, 432, 0, 0, 0,
	0, 0, 0, 423, 298, 248, 249, 466, 284, 346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 342, 422, 0, 0, 0, 451, 465, 0, 0,
	0, 0, 0, 462, 352, 0, 373, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 380,
	404, 416, 433, 436, 0, 0, 0, 0, 253, 435,
	0, 0, 0, 0, 0, 0, 0, 0, 407, 0,
	0, 0, 415, 0, 0, 0, 0, 0, 431, 0,
	0, 336, 337, 338, 339, 301, 0, 271, 434, 362,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 428, 429,
	297, 303, 446, 305, 270, 351, 299, 413, 312, 0,
	439, 0, 440, 0, 0, 0, 0, 343, 308, 309,
	377, 313, 321, 365, 412, 349, 370, 268, 403, 378,
	325, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	390, 0, 246, 276, 277, 282, 463, 460, 394, 464,
	0, 250, 0, 319, 0, 360, 296, 0, 0, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 0, 227, 228, 229, 230, 231, 232, 233,
	234, 235, 236, 237, 238, 239, 240, 0, 348, 0,
	247, 242, 243, 244, 245, 0, 0, 0, 419, 420,
	421, 442, 405, 0, 461, 291, 0, 0, 318, 0,
	0, 0, 0, 0, 0, 0, 0, 467, 456, 0,
	0, 452, 0, 453, 0, 0, 0, 0, 0, 379,
	332, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	196, 0, 0, 1247, 0, 0, 0, 266, 197, 454,
	0, 455, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 256, 384, 401, 267, 375, 414, 272,
	382, 262, 347, 371, 0, 0, 258, 399, 381, 329,
	310, 311, 257, 0, 366, 289, 302, 286, 345, 0,
	398, 426, 285, 417, 0, 409, 260, 0, 408, 344,
	395, 400, 330, 324, 259, 397, 328, 323, 314, 293,
	441, 315, 316, 306, 356, 322, 357, 307, 334, 333,
	335, 0, 0, 0, 0, 0, 437, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 411, 0, 0, 0, 0, 0,
	0, 383, 0, 0, 317, 0, 0, 0, 427, 0,
	369, 350, 0, 0, 0, 367, 320, 396, 358, 402,
	385, 410, 1590, 359, 251, 386, 288, 331, 263, 265,
	283, 290, 292, 294, 295, 340, 341, 353, 374, 387,
	388, 389, 287, 273, 368, 274, 304, 275, 252, 279,
	278, 280, 376, 281, 254, 354, 393, 0, 300, 364,
	327, 255, 326, 355, 392, 391, 264, 418, 424, 425,
	0, 0, 430, 0, 0, 0, 438, 443, 444, 445,
	447, 448, 449, 450, 0, 0, 0, 0, 432, 0,
	0, 0, 0, 0, 0, 423, 298, 248, 249, 466,
	284, 346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 342, 422, 0, 0, 0, 451, 465,
	0, 0, 0, 0, 0, 462, 352, 0, 373, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 380, 404, 416, 433, 436, 0, 0, 0, 0,
	253, 435, 0, 0, 0, 0, 0, 0, 0, 0,
	407, 0, 0, 0, 415, 0, 0, 0, 0, 0,
	431, 0, 0, 336, 337, 338, 339, 301, 0, 271,
	434, 362, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	428, 429, 297, 303, 446, 305, 270, 351, 299, 413,
	312, 0, 439, 0, 440, 0, 0, 0, 0, 343,
	308, 309, 377, 313, 321, 365, 412, 349, 370, 268,
	403, 378, 325, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 390, 0, 246, 276, 277, 282, 463, 460,
	394, 464, 0, 250, 0, 319, 0, 360, 296, 0,
	0, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 0, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 0,
	348, 0, 247, 242, 243, 244, 245, 0, 0, 0,
	419, 420, 421, 442, 405, 0, 461, 291, 0, 0,
	318, 0, 0, 0, 0, 0, 0, 0, 0, 467,
	456, 0, 0, 452, 0, 453, 0, 0, 0, 0,
	0, 379, 332, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 0, 0, 0, 0, 0, 0, 266,
	197, 454, 0, 455, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 256, 384, 401, 267, 375,
	414, 272, 382, 262, 347, 371, 0, 0, 258, 399,
	381, 329, 310, 311, 257, 0, 366, 289, 302, 286,
	345, 0, 398, 426, 285, 417, 0, 409, 260, 0,
	408, 344, 395, 400, 330, 324, 259, 397, 328, 323,
	314, 293, 441, 315, 316, 306, 356, 322, 357, 307,
	334, 333, 335, 0, 0, 0, 0, 0, 437, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 411, 0, 0, 1277,
	0, 0, 0, 383, 0, 0, 317, 0, 0, 0,
	427, 0, 369, 350, 0, 0, 0, 367, 320, 396,
	358, 402, 385, 410, 363, 359, 251, 386, 288, 331,
	263, 265, 283, 290, 292, 294, 295, 340, 341, 353,
	374, 387, 388, 389, 287, 273, 368, 274, 304, 275,
	252, 279, 278, 280, 376, 281, 254, 354, 393, 0,
	300, 364, 327, 255, 326, 355, 392, 391, 264, 418,
	424, 425, 0, 0, 430, 0, 0, 0, 438, 443,
	444, 445, 447, 448, 449, 450, 0, 0, 0, 0,
	432, 0, 0, 0, 0, 0, 0, 423, 298, 248,
	249, 466, 284, 346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 342, 422, 0, 0, 0,
	451, 465, 0, 0, 0, 0, 0, 462, 352, 0,
	373, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 380, 404, 416, 433, 436, 0, 0,
	0, 0, 253, 435, 0, 0, 0, 0, 0, 0,
	0, 0, 407, 0, 0, 0, 415, 0, 0, 0,
	0, 0, 431, 0, 0, 336, 337, 338, 339, 301,
	0, 271, 434, 362, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 428, 429, 297, 303, 446, 305, 270, 351,
	299, 413, 312, 0, 439, 0, 440, 0, 0, 0,
	0, 343, 308, 309, 377, 313, 321, 365, 412, 349,
	370, 268, 403, 378, 325, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 390, 0, 246, 276, 277, 282,
	463, 460, 394, 464, 0, 250, 0, 319, 0, 360,
	296, 0, 0, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 0, 227, 228, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 0, 348, 0, 247, 242, 243, 244, 245, 0,
	0, 0, 419, 420, 421, 442, 405, 0, 461, 291,
	0, 0, 318, 0, 0, 0, 0, 0, 0, 0,
	0, 467, 456, 0, 0, 452, 0, 453, 0, 0,
	0, 0, 0, 379, 332, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 0, 0, 0, 0, 0,
	0, 266, 197, 454, 0, 455, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 256, 384, 401,
	267, 375, 414, 272, 382, 262, 347, 371, 0, 0,
	258, 399, 381, 329, 310, 311, 257, 0, 366, 289,
	302, 286, 345, 0, 398, 426, 285, 417, 0, 409,
	260, 0, 408, 344, 395, 400, 330, 324, 259, 397,
	328, 323, 314, 293, 441, 315, 316, 306, 356, 322,
	357, 307, 334, 333, 335, 0, 0, 0, 0, 0,
	437, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 411, 0,
	0, 0, 0, 0, 0, 383, 0, 0, 317, 0,
	0, 0, 427, 0, 369, 350, 0, 0, 0, 367,
	320, 396, 358, 402, 385, 410, 363, 359, 251, 386,
	288, 331, 263, 265, 283, 290, 292, 294, 295, 340,
	341, 353, 374, 387, 388, 389, 287, 273, 368, 274,
	304, 275, 252, 279, 278, 280, 376, 281, 254, 354,
	393, 0, 300, 364, 327, 255, 326, 355, 392, 391,
	264, 418, 424, 425, 0, 0, 430, 0, 0, 0,
	438, 443, 444, 445, 447, 448, 449, 450, 0, 0,
	0, 0, 432, 0, 0, 0, 0, 0, 0, 423,
	298, 248, 249, 466, 284, 346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 342, 422, 0,
	0, 0, 451, 465, 0, 0, 0, 0, 0, 462,
	352, 0, 373, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 380, 404, 416, 433, 436,
	0, 0, 0, 0, 253, 435, 0, 0, 0, 0,
	0, 0, 0, 0, 407, 0, 0, 0, 415, 0,
	0, 0, 0, 0, 431, 0, 0, 336, 337, 338,
	339, 301, 0, 271, 434, 362, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 428, 429, 297, 303, 446, 305,
	270, 351, 299, 413, 312, 0, 439, 0, 440, 0,
	0, 0, 0, 343, 308, 309, 377, 313, 321, 365,
	412, 349, 370, 268, 403, 378, 325, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 748, 0, 0, 390, 0, 246, 276,
	277, 282, 463, 460, 394, 464, 0, 250, 0, 319,
	0, 360, 296, 0, 0, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 0, 227,
	228, 229, 230, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 0, 348, 0, 247, 242, 243, 244,
	245, 0, 0, 0, 419, 420, 421, 442, 405, 0,
	461, 291, 0, 0, 318, 0, 0, 0, 0, 0,
	0, 0, 0, 467, 456, 0, 0, 452, 0, 453,
	0, 0, 0, 0, 0, 379, 332, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 196, 0, 0, 0,
	0, 0, 0, 266, 197, 454, 0, 455, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 256,
	384, 401, 267, 375, 414, 272, 382, 262, 347, 371,
	0, 0, 258, 399, 381, 329, 310, 311, 257, 0,
	366, 289, 302, 286, 345, 0, 398, 426, 285, 417,
	0, 409, 260, 0, 408, 344, 395, 400, 330, 324,
	259, 397, 328, 323, 314, 293, 441, 315, 316, 306,
	356, 322, 357, 307, 334, 333, 335, 0, 0, 0,
	0, 0, 437, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	411, 0, 0, 0, 0, 0, 0, 383, 0, 0,
	317, 0, 0, 0, 427, 0, 369, 350, 0, 0,
	0, 367, 320, 396, 358, 402, 385, 410, 505, 359,
	251, 386, 288, 331, 263, 265, 283, 290, 292, 294,
	295, 340, 341, 353, 374, 387, 388, 389, 287, 273,
	368, 274, 304, 275, 252, 279, 278, 280, 376, 281,
	254, 354, 393, 0, 300, 364, 327, 255, 326, 355,
	392, 391, 264, 418, 424, 425, 0, 0, 430, 0,
	0, 0, 438, 443, 444, 445, 447, 448, 449, 450,
	0, 0, 0, 0, 432, 0, 0, 0, 0, 0,
	0, 423, 298, 248, 249, 466, 284, 346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 342,
	422, 0, 0, 0, 451, 465, 0, 0, 0, 0,
	0, 462, 352, 0, 373, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 380, 404, 416,
	433, 436, 0, 0, 0, 0, 253, 435, 0, 0,
	0, 0, 0, 0, 506, 0, 407, 0, 0, 0,
	415, 0, 0, 0, 0, 0, 431, 0, 0, 336,
	337, 338, 339, 301, 0, 271, 434, 362, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 428, 429, 297, 303,
	446, 305, 270, 351, 299, 413, 312, 0, 439, 0,
	440, 0, 0, 0, 0, 343, 308, 309, 377, 313,
	321, 365, 412, 349, 370, 268, 403, 378, 325, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 390, 0,
	246, 276, 277, 282, 463, 460, 394, 464, 0, 250,
	0, 319, 0, 360, 296, 0, 0, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	0, 227, 228, 229, 230, 231, 232, 233, 234, 235,
	236, 237, 238, 239, 240, 0, 348, 0, 247, 242,
	243, 244, 245, 0, 0, 0, 419, 420, 421, 442,
	405, 0, 461, 291, 0, 0, 318, 0, 0, 0,
	0, 0, 0, 0, 0, 467, 456, 0, 0, 452,
	0, 453, 0, 0, 0, 0, 0, 379, 332, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 196, 0,
	0, 0, 0, 0, 0, 266, 197, 454, 0, 455,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 384, 401, 267, 375, 414, 272, 382, 262,
	347, 371, 0, 0, 258, 399, 381, 329, 310, 311,
	257, 0, 366, 289, 302, 286, 345, 0, 398, 426,
	285, 417, 0, 409, 260, 0, 408, 344, 395, 400,
	330, 324, 259, 397, 328, 323, 314, 293, 441, 315,
	316, 306, 356, 322, 357, 307, 334, 333, 335, 0,
	0, 0, 0, 0, 437, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 482,
	0, 0, 411, 0, 0, 0, 0, 0, 0, 383,
	0, 0, 317, 0, 0, 0, 427, 0, 369, 350,
	0, 0, 0, 367, 320, 396, 358, 402, 385, 410,
	363, 359, 251, 386, 288, 331, 263, 265, 283, 290,
	292, 294, 295, 340, 341, 353, 374, 387, 388, 389,
	287, 273, 368, 274, 304, 275, 252, 279, 278, 280,
	376, 281, 254, 354, 393, 0, 300, 364, 327, 255,
	326, 355, 392, 391, 264, 418, 424, 425, 0, 0,
	430, 0, 0, 0, 438, 443, 444, 445, 447, 448,
	449, 450, 0, 0, 0, 0, 432, 0, 0, 0,
	0, 0, 0, 423, 298, 248, 249, 466, 284, 346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 342, 422, 0, 0, 0, 451, 465, 0, 0,
	0, 0, 0, 462, 352, 0, 373, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 380,
	404, 416, 433, 436, 0, 0, 0, 0, 253, 435,
	0, 0, 0, 0, 0, 0, 0, 0, 407, 0,
	0, 0, 415, 0, 0, 0, 0, 0, 431, 0,
	0, 336, 337, 338, 339, 301, 0, 271, 434, 362,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 428, 429,
	297, 303, 446, 305, 270, 351, 299, 413, 312, 0,
	439, 0, 440, 0, 0, 0, 0, 343, 308, 309,
	377, 313, 321, 365, 412, 349, 370, 268, 403, 378,
	325, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	390, 0, 246, 276, 277, 282, 463, 460, 394, 464,
	0, 250, 0, 319, 0, 360, 296, 0, 0, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 0, 227, 228, 229, 230, 231, 232, 233,
	234, 235, 236, 237, 238, 239, 240, 0, 0, 348,
	247, 242, 243, 244, 245, 0, 0, 0, 419, 420,
	421, 442, 405, 0, 461, 472, 291, 0, 0, 318,
	0, 0, 0, 0, 0, 0, 0, 467, 456, 0,
	0, 0, 452, 0, 453, 0, 0, 0, 0, 0,
	379, 332, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 196, 0, 0, 0, 0, 0, 0, 266, 197,
	454, 0, 455, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 256, 384, 401, 267, 375, 414,
	272, 382, 262, 347, 371, 0, 0, 258, 399, 381,
	329, 310, 311, 257, 0, 366, 289, 302, 286, 345,
	0, 398, 426, 285, 417, 0, 409, 260, 0, 408,
	344, 395, 400, 330, 324, 259, 397, 328, 323, 314,
	293, 441, 315, 316, 306, 356, 322, 357, 307, 334,
	333, 335, 0, 0, 0, 0, 0, 437, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 411, 0, 0, 0, 0,
	0, 0, 383, 0, 0, 317, 0, 0, 0, 427,
	0, 369, 350, 0, 0, 0, 367, 320, 396, 358,
	402, 385, 410, 363, 359, 251, 386, 288, 331, 263,
	265, 283, 290, 292, 294, 295, 340, 341, 353, 374,
	387, 388, 389, 287, 273, 368, 274, 304, 275, 252,
	279, 278, 280, 376, 281, 254, 354, 393, 0, 300,
	364, 327, 255, 326, 355, 392, 391, 264, 418, 424,
	425, 0, 0, 430, 0, 0, 0, 438, 443, 444,
	445, 447, 448, 449, 450, 0, 0, 0, 0, 432,
	0, 0, 0, 0, 0, 0, 423, 298, 248, 249,
	466, 284, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 342, 422, 0, 0, 0, 451,
	465, 0, 0, 0, 0, 0, 462, 352, 0, 373,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 380, 404, 416, 433, 436, 0, 0, 0,
	0, 253, 435, 0, 0, 0, 0, 0, 0, 0,
	0, 407, 0, 0, 0, 415, 0, 0, 0, 0,
	0, 431, 0, 0, 336, 337, 338, 339, 301, 0,
	271, 434, 362, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 428, 429, 297, 303, 446, 305, 270, 351, 299,
	413, 312, 0, 439, 0, 440, 0, 0, 0, 0,
	343, 308, 309, 377, 313, 321, 365, 412, 349, 370,
	268, 403, 378, 325, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 390, 0, 246, 276, 277, 282, 463,
	460, 394, 464, 0, 250, 0, 319, 0, 360, 296,
	0, 0, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 0, 227, 228, 229, 230,
	231, 232, 233, 234, 235, 236, 237, 238, 239, 240,
	0, 348, 0, 247, 242, 243, 244, 245, 0, 0,
	0, 419, 420, 421, 442, 405, 0, 461, 291, 0,
	0, 318, 0, 0, 0, 0, 0, 0, 0, 0,
	467, 456, 0, 0, 452, 0, 453, 0, 0, 0,
	0, 0, 379, 332, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 0, 0, 0, 0, 0, 0,
	266, 197, 454, 0, 455, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 384, 401, 267,
	375, 414, 272, 382, 262, 347, 371, 0, 0, 258,
	399, 381, 329, 310, 311, 257, 0, 366, 289, 302,
	286, 345, 0, 398, 426, 285, 417, 0, 409, 260,
	0, 408, 344, 395, 400, 330, 324, 259, 397, 328,
	323, 314, 293, 441, 315, 316, 306, 356, 322, 357,
	307, 334, 333, 335, 0, 0, 0, 0, 0, 437,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 411, 0, 0,
	0, 0, 0, 0, 383, 0, 0, 317, 0, 0,
	0, 427, 0, 369, 350, 0, 0, 0, 367, 320,
	396, 358, 402, 385, 410, 363, 359, 251, 386, 288,
	331, 263, 265, 283, 290, 292, 294, 295, 340, 341,
	353, 374, 387, 388, 389, 287, 273, 368, 274, 304,
	275, 252, 279, 278, 280, 376, 281, 254, 354, 393,
	0, 300, 364, 327, 255, 326, 355, 392, 391, 264,
	418, 424, 425, 0, 0, 430, 0, 0, 0, 438,
	443, 444, 445, 447, 448, 449, 450, 0, 0, 0,
	0, 432, 0, 0, 0, 0, 0, 0, 423, 298,
	248, 249, 466, 284, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 342, 422, 0, 0,
	0, 451, 465, 0, 0, 0, 0, 0, 462, 352,
	0, 373, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 380, 404, 416, 433, 436, 0,
	0, 0, 0, 253, 435, 0, 0, 0, 0, 0,
	0, 0, 0, 407, 0, 0, 0, 415, 0, 0,
	0, 0, 0, 431, 0, 0, 336, 337, 338, 339,
	301, 0, 271, 434, 362, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 428, 429, 297, 303, 446, 305, 270,
	351, 299, 413, 312, 0, 439, 0, 440, 0, 0,
	0, 0, 343, 308, 309, 377, 313, 321, 365, 412,
	349, 370, 268, 403, 378, 325, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 390, 0, 246, 276, 277,
	282, 463, 460, 394, 464, 0, 250, 0, 319, 0,
	360, 296, 0, 0, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 0, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 0, 348, 0, 247, 242, 243, 244, 245,
	0, 0, 0, 419, 420, 421, 442, 405, 0, 461,
	291, 0, 0, 318, 0, 0, 0, 0, 0, 0,
	0, 0, 467, 456, 0, 0, 452, 0, 453, 0,
	0, 0, 0, 0, 379, 332, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 0, 0, 0, 0,
	0, 0, 266, 197, 454, 0, 455, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 256, 384,
	1227, 267, 375, 414, 272, 382, 262, 347, 371, 0,
	0, 258, 399, 381, 329, 310, 311, 257, 0, 366,
	289, 302, 286, 345, 0, 398, 426, 285, 417, 0,
	409, 260, 0, 408, 344, 395, 400, 330, 324, 259,
	397, 328, 323, 314, 293, 441, 315, 316, 306, 356,
	322, 357, 307, 334, 333, 335, 0, 0, 0, 0,
	0, 437, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 411,
	0, 0, 0, 0, 0, 0, 383, 0, 0, 317,
	0, 0, 0, 427, 0, 369, 350, 0, 0, 0,
	367, 320, 396, 358, 402, 385, 410, 363, 359, 251,
	386, 288, 331, 263, 265, 283, 290, 292, 294, 295,
	340, 341, 353, 374, 387, 388, 389, 287, 273, 368,
	274, 304, 275, 252, 279, 278, 280, 376, 281, 254,
	354, 393, 0, 300, 364, 327, 255, 326, 355, 392,
	391, 264, 418, 424, 425, 0, 0, 430, 0, 0,
	0, 438, 443, 444, 445, 447, 448, 449, 450, 0,
	0, 0, 0, 432, 0, 0, 0, 0, 0, 0,
	423, 298, 248, 249, 466, 284, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 342, 422,
	0, 0, 0, 451, 465, 0, 0, 0, 0, 0,
	462, 352, 0, 373, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 380, 404, 416, 433,
	436, 0, 0, 0, 0, 253, 435, 0, 0, 0,
	0, 0, 0, 0, 0, 407, 0, 0, 0, 415,
	0, 0, 0, 0, 0, 431, 0, 0, 336, 337,
	338, 339, 301, 0, 271, 434, 362, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 428, 429, 297, 303, 446,
	305, 270, 351, 299, 413, 312, 0, 439, 0, 440,
	0, 0, 0, 0, 343, 308, 309, 377, 313, 321,
	365, 412, 349, 370, 268, 403, 378, 325, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 390, 0, 246,
	276, 277, 282, 463, 460, 394, 464, 0, 250, 0,
	319, 0, 360, 296, 0, 0, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 0,
	227, 228, 229, 230, 231, 232, 233, 234, 235, 236,
	237, 238, 239, 240, 0, 348, 0, 247, 242, 243,
	244, 245, 0, 0, 0, 419, 420, 421, 442, 405,
	0, 461, 291, 0, 0, 318, 0, 0, 0, 0,
	0, 0, 0, 0, 467, 456, 0, 0, 452, 0,
	453, 0, 0, 0, 0, 0, 379, 332, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 0, 0,
	0, 0, 0, 0, 266, 197, 454, 0, 455, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 384, 1225, 267, 375, 414, 272, 382, 262, 347,
	371, 0, 0, 258, 399, 381, 329, 310, 311, 257,
	0, 366, 289, 302, 286, 345, 0, 398, 426, 285,
	417, 0, 409, 260, 0, 408, 344, 395, 400, 330,
	324, 259, 397, 328, 323, 314, 293, 441, 315, 316,
	306, 356, 322, 357, 307, 334, 333, 335, 0, 0,
	0, 0, 0, 437, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 411, 0, 0, 0, 0, 0, 0, 383, 0,
	0, 317, 0, 0, 0, 427, 0, 369, 350, 0,
	0, 0, 367, 320, 396, 358, 402, 385, 410, 363,
	359, 251, 386, 288, 331, 263, 265, 283, 290, 292,
	294, 295, 340, 341, 353, 374, 387, 388, 389, 287,
	273, 368, 274, 304, 275, 252, 279, 278, 280, 376,
	281, 254, 354, 393, 0, 300, 364, 327, 255, 326,
	355, 392, 391, 264, 418, 424, 425, 0, 0, 430,
	0, 0, 0, 438, 443, 444, 445, 447, 448, 449,
	450, 0, 0, 0, 0, 432, 0, 0, 0, 0,
	0, 0, 423, 298, 248, 249, 466, 284, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	342, 422, 0, 0, 0, 451, 465, 0, 0, 0,
	0, 0, 462, 352, 0, 373, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 380, 404,
	416, 433, 436, 0, 0, 0, 0, 253, 435, 0,
	0, 0, 0, 0, 0, 0, 0, 407, 0, 0,
	0, 415, 0, 0, 0, 0, 0, 431, 0, 0,
	336, 337, 338, 339, 301, 0, 271, 434, 362, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 428, 429, 297,
	303, 446, 305, 270, 351, 299, 413, 312, 0, 439,
	0, 440, 0, 0, 0, 0, 343, 308, 309, 377,
	313, 321, 365, 412, 349, 370, 268, 403, 378, 325,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 390,
	0, 246, 276, 277, 282, 463, 460, 394, 464, 0,
	250, 0, 319, 0, 360, 296, 0, 0, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 0, 227, 228, 229, 230, 231, 232, 233, 234,
	235, 236, 237, 238, 239, 240, 0, 348, 0, 247,
	242, 243, 244, 245, 0, 0, 0, 419, 420, 421,
	442, 405, 0, 461, 291, 0, 0, 318, 0, 0,
	0, 0, 0, 0, 0, 0, 467, 456, 0, 0,
	452, 0, 453, 0, 0, 0, 0, 0, 379, 332,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	0, 0, 0, 0, 0, 0, 266, 197, 454, 0,
	455, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 256, 384, 401, 267, 375, 414, 272, 382,
	262, 347, 371, 0, 0, 258, 399, 381, 329, 310,
	311, 257, 0, 366, 289, 302, 286, 345, 0, 398,
	426, 285, 417, 0, 409, 260, 0, 408, 344, 395,
	400, 330, 324, 259, 397, 328, 323, 314, 293, 441,
	315, 316, 306, 356, 322, 357, 307, 334, 333, 335,
	0, 0, 0, 0, 0, 437, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 411, 0, 0, 0, 0, 0, 0,
	383, 0, 0, 317, 0, 0, 0, 427, 0, 369,
	350, 0, 0, 0, 367, 320, 396, 358, 402, 385,
	410, 363, 359, 251, 386, 288, 331, 263, 265, 546,
	290, 292, 294, 295, 340, 341, 353, 374, 387, 388,
	389, 287, 273, 368, 274, 304, 275, 252, 279, 278,
	280, 376, 281, 254, 354, 393, 0, 300, 364, 327,
	255, 326, 355, 392, 391, 264, 418, 424, 425, 0,
	0, 430, 0, 0, 0, 438, 443, 444, 445, 447,
	448, 449, 450, 0, 0, 0, 0, 432, 0, 0,
	0, 0, 0, 0, 423, 298, 248, 249, 466, 284,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 342, 422, 0, 0, 0, 451, 465, 0,
	0, 0, 0, 0, 462, 352, 0, 373, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	380, 404, 416, 433, 436, 0, 0, 0, 0, 253,
	435, 0, 0, 0, 0, 0, 0, 0, 0, 407,
	0, 0, 0, 415, 0, 0, 0, 0, 0, 431,
	0, 0, 336, 337, 338, 339, 301, 0, 271, 434,
	362, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 428,
	429, 297, 303, 446, 305, 270, 351, 299, 413, 312,
	0, 439, 0, 440, 0, 0, 0, 0, 343, 308,
	309, 377, 313, 321, 365, 412, 349, 370, 268, 403,
	378, 325, 0, 0, 999, 1000, 1001, 998, 0, 0,
	0, 0, 0, 0, 0, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 848, 0, 0, 0, 0, 0, 0, 0,
	0, 390, 0, 246, 276, 277, 282, 463, 460, 394,
	464, 0, 250, 0, 319, 0, 360, 296, 0, 0,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 1467, 227, 228, 229, 230, 231, 232,
	233, 234, 235, 236, 237, 238, 239, 240, 0, 0,
	0, 247, 242, 243, 244, 245, 0, 0, 0, 419,
	420, 421, 442, 405, 0, 461, 174, 51, 163, 138,
	0, 0, 0, 0, 0, 0, 0, 0, 467, 456,
	174, 51, 163, 138, 164, 0, 0, 0, 0, 0,
	0, 156, 0, 0, 0, 165, 0, 0, 164, 0,
	753, 0, 0, 0, 0, 156, 0, 0, 0, 165,
	0, 0, 0, 0, 115, 0, 0, 0, 0, 0,
	0, 0, 0, 843, 838, 833, 837, 841, 115, 103,
	0, 0, 0, 0, 0, 168, 0, 0, 0, 0,
	0, 0, 0, 103, 0, 525, 524, 531, 521, 168,
	0, 846, 0, 0, 0, 836, 0, 528, 529, 0,
	530, 534, 0, 0, 516, 0, 0, 0, 0, 752,
	0, 0, 0, 0, 539, 0, 0, 0, 0, 792,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1463, 0, 0, 0, 0, 0, 1460, 0, 0, 0,
	1462, 1459, 1461, 1465, 1466, 0, 844, 0, 1464, 0,
	0, 120, 121, 847, 122, 123, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 120, 121, 0, 122, 123,
	834, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 845, 0, 0, 0, 0, 0, 0,
	0, 0, 794, 0, 0, 793, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 137, 162, 172, 0, 101, 0, 0, 0, 0,
	0, 0, 0, 835, 0, 137, 162, 172, 0, 101,
	0, 778, 0, 161, 155, 154, 1467, 0, 0, 754,
	57, 0, 0, 0, 0, 0, 0, 161, 155, 154,
	0, 0, 0, 0, 57, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 756, 0, 0, 0,
	1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457,
	1458, 1470, 1471, 1472, 1473, 1474, 1475, 1468, 1469, 0,
	517, 519, 518, 0, 0, 0, 0, 0, 0, 842,
	523, 157, 158, 159, 0, 0, 0, 0, 0, 0,
	0, 0, 527, 0, 0, 157, 158, 159, 0, 542,
	0, 0, 0, 0, 0, 0, 520, 166, 0, 777,
	776, 0, 0, 0, 0, 0, 839, 0, 840, 0,
	0, 166, 0, 0, 0, 0, 775, 111, 0, 0,
	0, 160, 0, 112, 0, 0, 0, 751, 0, 0,
	0, 111, 0, 0, 0, 160, 0, 112, 755, 787,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1666, 0, 0, 0, 0, 1628, 0, 0,
	0, 0, 783, 1463, 0, 0, 0, 0, 0, 1460,
	0, 0, 0, 1462, 1459, 1461, 1465, 1466, 0, 0,
	113, 1464, 0, 0, 0, 0, 1668, 1637, 0, 0,
	0, 0, 50, 0, 113, 0, 1669, 1670, 784, 788,
	522, 526, 532, 0, 533, 535, 50, 0, 536, 537,
	538, 0, 0, 540, 541, 0, 0, 772, 0, 770,
	774, 791, 1636, 0, 0, 771, 768, 767, 0, 773,
	758, 759, 757, 760, 761, 762, 763, 1643, 789, 0,
	790, 52, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 785, 786, 0, 0, 52, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 169, 170, 0, 171,
	0, 0, 0, 0, 139, 0, 0, 0, 781, 0,
	169, 170, 0, 171, 780, 0, 0, 0, 139, 0,
	0, 0, 0, 0, 1659, 0, 0, 0, 0, 0,
	0, 0, 893, 1448, 1449, 1450, 1451, 1452, 1453, 1454,
	1455, 1456, 1457, 1458, 1470, 1471, 1472, 1473, 1474, 1475,
	1468, 1469, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 114, 39, 0, 0, 0, 0,
	0, 49, 5, 0, 0, 0, 118, 119, 114, 39,
	0, 0, 0, 0, 0, 49, 0, 0, 0, 0,
	118, 119, 0, 779, 1627, 1629, 1626, 0, 1623, 0,
	0, 0, 0, 1647, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1653, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1641, 1675, 0, 0, 1642, 1644,
	1646, 0, 1648, 1649, 1650, 1654, 1655, 1656, 1658, 1661,
	1662, 1663, 879, 0, 0, 0, 0, 0, 0, 1651,
	1660, 1652, 0, 0, 893, 0, 0, 0, 0, 0,
	0, 1631, 901, 905, 907, 909, 911, 912, 914, 0,
	919, 915, 916, 917, 918, 0, 896, 897, 898, 899,
	877, 878, 902, 1667, 880, 0, 881, 882, 883, 884,
	885, 886, 887, 888, 889, 892, 894, 890, 891, 900,
	0, 0, 0, 1666, 1624, 1625, 0, 904, 906, 908,
	910, 913, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1664, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1668, 0, 1640,
	0, 0, 0, 0, 895, 0, 1639, 0, 0, 0,
	893, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1657, 0, 0, 0, 879, 0, 0, 0, 869, 1645,
	0, 1666, 0, 0, 0, 0, 0, 0, 1643, 0,
	0, 0, 1672, 1671, 901, 905, 907, 909, 911, 912,
	914, 0, 919, 915, 916, 917, 918, 0, 896, 897,
	898, 899, 877, 878, 902, 1668, 880, 0, 881, 882,
	883, 884, 885, 886, 887, 888, 889, 892, 894, 890,
	891, 900, 0, 0, 0, 0, 0, 0, 0, 904,
	906, 908, 910, 913, 1633, 0, 0, 0, 0, 0,
	0, 3093, 0, 0, 0, 1659, 3362, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1643, 0, 0, 0,
	879, 0, 0, 0, 0, 0, 895, 2236, 2237, 0,
	0, 0, 0, 0, 0, 0, 1674, 0, 0, 1673,
	901, 905, 907, 909, 911, 912, 914, 0, 919, 915,
	916, 917, 918, 0, 896, 897, 898, 899, 877, 878,
	902, 0, 880, 0, 881, 882, 883, 884, 885, 886,
	887, 888, 889, 892, 894, 890, 891, 900, 0, 1666,
	0, 0, 0, 1659, 1647, 904, 906, 908, 910, 913,
	0, 0, 0, 0, 0, 1653, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1668, 0, 1641, 1675, 0, 0, 1642,
	1644, 1646, 895, 1648, 1649, 1650, 1654, 1655, 1656, 1658,
	1661, 1662, 1663, 0, 0, 0, 0, 0, 0, 0,
	1651, 1660, 1652, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1647, 0, 1643, 0, 525, 524, 531, 521,
	903, 0, 0, 1653, 1667, 0, 0, 0, 528, 529,
	0, 530, 534, 0, 0, 516, 0, 0, 0, 0,
	0, 0, 0, 1641, 1675, 539, 0, 1642, 1644, 1646,
	0, 1648, 1649, 1650, 1654, 1655, 1656, 1658, 1661, 1662,
	1663, 0, 0, 1664, 0, 0, 0, 0, 1651, 1660,
	1652, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1640, 1659, 0, 0, 0, 0, 0, 1639, 543, 0,
	0, 545, 0, 0, 0, 0, 544, 0, 0, 0,
	0, 0, 1667, 525, 524, 531, 521, 0, 0, 0,
	0, 1657, 0, 0, 0, 528, 529, 0, 530, 534,
	1645, 0, 516, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 539, 0, 0, 0, 0, 0, 0, 0,
	0, 1664, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 903, 0, 0, 0, 0, 0, 1640, 0,
	1647, 0, 0, 0, 0, 1639, 0, 0, 0, 0,
	0, 1653, 0, 0, 0, 543, 0, 0, 545, 0,
	0, 0, 0, 544, 0, 0, 0, 0, 0, 1657,
	0, 1641, 1675, 0, 0, 1642, 1644, 1646, 1645, 1648,
	1649, 1650, 1654, 1655, 1656, 1658, 1661, 1662, 1663, 0,
	0, 0, 0, 0, 0, 0, 1651, 1660, 1652, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 517, 519, 518, 0, 0, 0, 0, 0, 0,
	0, 523, 0, 0, 0, 0, 0, 0, 903, 0,
	1667, 0, 0, 527, 0, 0, 0, 0, 0, 0,
	542, 0, 0, 0, 0, 0, 0, 520, 0, 0,
	0, 511, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1664,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1640, 0, 0, 0,
	0, 0, 0, 1639, 0, 0, 0, 0, 517, 519,
	518, 0, 0, 0, 0, 0, 0, 0, 523, 0,
	0, 0, 0, 0, 0, 0, 0, 1657, 0, 0,
	527, 0, 0, 0, 0, 0, 1645, 542, 0, 0,
	0, 0, 0, 0, 520, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 522, 526, 532, 0, 533, 535, 0, 0, 536,
	537, 538, 0, 0, 540, 541, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 522, 526,
	532, 0, 533, 535, 0, 0, 536, 537, 538, 0,
	0, 540, 541,
}

var yyPact = [...]int{
	37534, -1000, -1000, -1000, -320, 9792, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 35299,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 35299,
	-315, 34747, 34747, -1000, -1000, 2268, -1000, 34194, 10938, 35299,
	317, 316, 35299, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 697, -1000, 33642, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 573, 38574, 36955, 7503, -266, -1000, 2993, -103, 2088,
	831, 845, 908, 908, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 276, 718, 33090,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 37554, 322, 718, 13153, 17, 14, 2993, 343, -159,
	-157, -160, 37369, -1000, 1191, 37548, 166, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 7503, 7503,
	9792, -352, 9792, 7503, 35299, 35299, -1000, -1000, -1000, -1000,
	573, 38574, 7503, 2088, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -157, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -159, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -160, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 14, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 38194, -1000, 1329,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2518, 1328,
	2086, 527, 35299, -1000, 1327, 527, -1000, -1000, -1000, 2993,
	2993, -1000, 35299, 35299, 86, 1525, -1000, 353, 324, 312,
	1325, -1000, -1000, -1000, -1000, -1000, -1000, 447, 2978, -1000,
	35299, 35299, 2556, 35299, -1000, 1891, 469, 38661, 2800, 1345,
	675, 2564, -1000, -1000, 2517, -1000, 203, 152, 194, 390,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 226, -1000, 2873,
	-1000, -1000, 193, -1000, -1000, 202, -1000, -1000, -1000, 13,
	-1000, -1000, -1000, -1000, -1000, -1000, -80, -1000, -1000, 914,
	2055, 7503, -1000, 1580, -1000, 2831, -1000, -1000, -1000, -1000,
	4647, 9213, 9213, 9213, 9213, -1000, -1000, 2373, 7503, 2516,
	2515, 2513, -1000, -1000, -1000, -1000, -1000, 1324, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1640, -1000, -1000,
	-1000, 8643, -1000, 2509, 2508, 2506, 2488, 2485, 2484, 2483,
	2482, 2481, 2478, 2475, 2473, 2469, 2468, 2265, 10359, 2466,
	2085, 2084, 2464, 2463, 2462, 2083, 2265, 2265, 2442, 2428,
	2425, 2424, 2423, 2421, 2420, 2419, 2417, 2416, 2413, 2408,
	2406, 2405, 2404, 2402, 2401, 2398, 2391, 2390, 2386, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1150, -1000, 2385, 2778, 2904, 2313, 2958, 2856,
	2846, 2836, 2834, 1823, -1000, -1000, 67, -1000, -124, -1000,
	-1000, 830, -1000, 788, -1000, 35299, 35299, 133, 670, 571,
	571, 571, 571, 571, 659, 571, 2890, 695, 694, 691,
	571, -110, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1517,
	1514, 2647, 771, -1000, -1000, -1000, -1000, 1154, 35299, -1000,
	2329, 1395, 1395, 2883, 480, 476, 473, 1395, 371, -1000,
	1562, 1562, 1562, 1562, 1395, 406, 509, 2904, 2904, 2,
	1562, -17, 1395, 1395, -17, 1395, 1395, 1395, 156, -309,
	-1000, -1000, -1000, -1000, 1562, 1562, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2868, 2867, 573, 573, 35299, 139, 35299,
	573, 573, 573, 587, -48, 36403, 35851, 1891, 466, 462,
	1161, 1552, -1000, 1439, 35299, 35299, 1439, 1439, 17620, 17068,
	-1000, 35299, -1000, 2904, 2313, -1000, 2249, 2671, 2241, 2313,
	-164, -170, -172, 573, 573, 573, 573, 573, 170, 573,
	573, 573, 573, 573, 35299, 35299, 32538, 573, 573, 6357,
	6357, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	9792, 1717, 1779, 162, -64, -317, 196, -1000, -1000, 35299,
	2759, 176, -1000, -1000, -1000, 2277, -1000, 2322, 2322, 2322,
	2322, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2322, 2322, 2328, 2384, -1000, -1000, 2321, 2321, 2321, 2277,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2324, 2324, 2326, 2326, 2324,
	35299, 7503, 35299, 2782, 323, 2381, -1000, 35299, 318, 2904,
	2778, 2904, -1000, -1000, 1323, 1821, 2081, -1000, -1000, 353,
	1410, -1000, 897, -1000, -1000, -1000, -1000, 35299, -80, 344,
	-1000, -1000, 2037, 2380, -1000, 489, 1073, 1148, -1000, 206,
	37613, 28115, 1891, 28115, 35299, -1000, -1000, -1000, -1000, -1000,
	-1000, 3, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 191, -1000, 7503, 7503, 7503,
	7503, 7503, -1000, 681, 8073, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 9213, 9213, 9213, 9213, 9213, 9213, 9213, 9213,
	9213, 9213, 9213, 9213, 2371, 1483, 9213, 9213, 9213, 9213,
	2671, 2931, 1159, 231, -1000, -1000, -1000, -1000, -1000, 1538,
	2055, 7503, 7503, 7503, 35299, -1000, -1000, 37326, 7503, 7503,
	37599, 7503, 2830, 7503, 7503, 7503, 2239, 4051, 35299, 7503,
	-1000, 2236, 2235, -1000, -1000, 1655, 7503, -1000, -1000, 7503,
	-1000, -1000, 7503, 9213, 7503, -1000, -1000, -1000, 2164, 2830,
	2830, 1479, 7503, 7503, 2830, 2830, 2830, 1454, 2830, 2830,
	2830, 2830, 2830, 2830, 2830, 2830, 2228, 2226, 2225, 2904,
	-266, 5787, -1000, -272, 2778, 7503, -1000, -1000, 7503, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2080, 2074, -330,
	-28, 821, 793, 798, -1000, 2820, -1000, 2375, 35299, 571,
	571, -147, 571, -1000, 35299, 1558, 28115, 35299, 35299, 1891,
	35299, 35299, 35299, 571, 571, 571, 35299, -1000, 2703, 28115,
	2674, 587, -1000, 35299, 1154, 2818, 35299, 2967, 9213, 9213,
	-1000, 31986, 1562, 1395, 1395, -1000, -1000, 35299, -1000, -1000,
	-1000, 1562, 35299, 1562, 1562, 2967, 1562, -1000, -1000, -1000,
	1395, 1395, -1000, -1000, -1000, -1000, 1562, 1562, -1000, -1000,
	2967, 35299, -6, 2967, 2967, 4, -1000, -1000, -1000, 35299,
	35299, 571, 35299, -1000, 35299, 35299, -1000, -1000, 35299, 35299,
	37926, 35299, 31434, 2865, -1000, 28115, 35299, 35299, 25907, -1000,
	1124, -1000, -56, -1000, -63, -48, 1439, -48, 1439, -1000,
	488, 485, 15964, 454, 28115, 3458, -1000, -1000, 1439, 1439,
	3458, 3458, 1241, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1153, -1000, 190, 2778, -1000, -1000, -1000, -1000, -1000, 1808,
	1807, 1803, 35299, 35299, 28115, 1891, 35299, 573, 35299, 35299,
	35299, 35299, 35299, -1000, 2374, 1320, -1000, 2793, 35299, 35299,
	1080, -1000, -1000, 12601, 1317, 1080, -1000, 1550, -1000, 7503,
	9792, -291, 7503, 9792, 9792, 7503, 9792, -1000, 7503, 157,
	-1000, -1000, -1000, -1000, 1801, -1000, 1797, -1000, -1000, -1000,
	-1000, -1000, 2070, 2070, -1000, 1787, -1000, -1000, -1000, -1000,
	1786, -1000, -1000, 1784, -1000, -1000, -1000, 2224, 914, -1000,
	2023, 2563, -267, -1000, 14843, 35299, 35299, -1000, -1000, -267,
	-1000, 14274, 35299, 2778, -1000, 2778, 35299, -1000, 2879, -1000,
	353, 284, -1000, -1000, -1000, -1000, -1000, -1000, 1306, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1146, -1000,
	35299, -1000, -1000, 206, 28115, 29219, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 178, -1000, -1000, 167, -1000, 649, 119,
	1401, -1000, -1000, 136, 174, 90, 714, 2055, -1000, 1578,
	1578, 1587, -1000, 640, -1000, -1000, -1000, -1000, 2373, -1000,
	-1000, -1000, 1769, 3247, -1000, 1373, 1373, 1338, 1338, 1338,
	1338, 1338, 1519, 1519, -1000, -1000, -1000, 4647, 2371, 9213,
	9213, 9213, 9213, 552, 552, 2470, 3346, -1000, 7503, 1537,
	-1000, 7503, 2271, 2072, 1294, 1303, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2217, 2210, 2219, 2977,
	2205, 7503, -1000, -1000, 1390, 1389, 1387, -1000, 1919, 6933,
	-1000, -1000, -1000, 2202, 1301, 2191, -1000, -1000, -1000, 2187,
	1376, 1023, 2186, 2121, 2173, 1142, 7503, 7503, 7503, 2171,
	1355, 1354, 7503, 7503, 7503, 7503, 2161, 7503, 7503, 7503,
	7503, 7503, 7503, 7503, 7503, 38, 38, 38, -1000, -1000,
	1352, -1000, 2055, -1000, 2018, -1000, 1086, 1132, -1000, 1660,
	-1000, -1000, -1000, 1975, -1000, -1000, 812, 780, 805, 35299,
	1119, 2370, 35299, 35299, 571, 35299, 149, -1000, 2787, 1024,
	-1000, 119, -99, 321, 922, 2553, 2976, -184, 35299, 35299,
	35299, 2817, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	30882, -1000, 2369, 1351, -1000, -1000, 7503, -1000, -1000, 2551,
	35299, 35299, 2967, 2967, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 35299, 2967, 2967, 1395, 1562, -1000, -1000, 1562, -1000,
	-1000, 1562, -1000, 1278, -1000, 35299, -1000, -1000, -1000, 2807,
	2329, 1127, -1000, 1594, 566, 566, 847, 656, 2940, 13705,
	-1000, 1458, 913, 645, 2719, 212, -1000, 1458, -217, 1458,
	1458, 1458, 1458, 1458, 1458, 1458, 432, 421, 1458, 1458,
	1458, 1458, 1458, 1458, 1458, 1458, 1458, 1458, 1458, 842,
	1458, 1458, 1458, 1458, 1458, -1000, 1458, 2365, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 477, 142, 2859, 241, 240,
	1024, 2844, 243, 2776, 1094, -1000, -1000, -1000, -1000, 19835,
	19835, 15412, 19835, -1000, 1426, -48, -49, -1000, -1000, 1124,
	3458, 1124, 3458, -1000, -1000, 637, -1000, -1000, 922, -1000,
	35299, 35299, -1000, -1000, 2363, 1513, -1000, -1000, 10359, -1000,
	3458, 3458, -1000, -1000, 20387, 35299, -1000, -81, -1000, -70,
	2877, -1000, -1000, -1000, 1107, -1000, -1000, 1114, 922, 2562,
	35299, 1107, 1107, 1107, -1000, -1000, 11490, 35299, 35299, -1000,
	-1000, 2967, 6357, -1000, 25907, -1000, -1000, 30323, -1000, 29771,
	2967, 1521, -1000, 9792, 1746, 155, -1000, 188, -323, 153,
	1683, 151, 2055, -1000, -1000, 2157, 2155, 1347, -1000, 1344,
	2154, 1340, 1337, -1000, -22, -1000, 2772, 924, -1000, 2362,
	-1000, 1336, 2642, -1000, 1072, -1000, 1512, 1333, -1000, 924,
	1310, 2631, 1072, 2877, -1000, 1254, 85, -1000, -1000, 35299,
	2037, 1274, 29219, 1021, -1000, 618, 1243, 1235, -1000, 28115,
	195, 28115, -1000, 28115, -1000, -1000, 309, -1000, 35299, 2769,
	-1000, -1000, -1000, 1975, 1511, -338, -1000, -1000, -1000, -1000,
	-1000, 1273, -1000, 552, 552, 2470, 3290, -1000, 9213, -1000,
	9213, 2909, 1482, -1000, 7503, 1706, 38062, 38062, 725, 18724,
	35299, -1000, -1000, 7503, 7503, -1000, 2901, -1000, -1000, -1000,
	-1000, 7503, 7503, 1925, -1000, 35299, -1000, -1000, -1000, -1000,
	18724, -1000, 9213, -1000, 7503, 1112, 2842, 1270, 38, 38,
	38, 2775, 2723, 2686, 1262, 38, 2654, 2599, 2552, 2546,
	2541, 2537, 2431, 2382, -1000, 2355, -1000, -1000, 5787, -1000,
	-22, 7503, 7503, 7503, 2709, -1000, -1000, 112, -1000, 1502,
	-1000, -1000, -1000, 778, 168, 2152, 1054, -1000, -1000, 35299,
	-1000, -1000, -1000, 11490, 2329, 246, 35299, 2329, 52, 1458,
	-1000, 554, 28115, 452, -1000, 35299, 1642, 1501, 2561, 458,
	2740, 35299, 2354, 2338, 2337, 2334, 303, 38290, 35299, 1053,
	-1000, 1217, 37548, -1000, 35299, 2055, -1000, 1891, -1000, 1395,
	-1000, -1000, 2967, 1277, -1000, -1000, 2967, 1395, 1395, 1562,
	35299, -1000, 303, 38290, 2806, 37926, -1000, 35299, -1000, -1000,
	-1000, 584, -1000, 803, 571, 35299, 1616, 803, 1611, 2333,
	-1000, -1000, 35299, 35299, 35299, 35299, -1000, -1000, 35299, -1000,
	35299, 35299, 35299, 35299, -1000, 35299, 35299, -1000, 35299, 1610,
	1608, 2738, -1000, 1458, 1458, 747, -1000, -1000, 474, -1000,
	1783, 1775, 1771, 1770, 2013, 2012, 2010, 1458, 1458, 1763,
	2007, 28667, 2006, 941, 1762, 1757, 1755, 1756, 1998, 899,
	-1000, 1993, 1743, 1734, 1725, 35299, 2331, 1935, -1000, -1000,
	52, 1458, 238, 35299, 1500, 554, 319, 1832, 16516, 35299,
	25907, 25907, 25907, 25907, -1000, 2620, 2598, -1000, 2618, 2617,
	2673, 35299, 25907, 2329, -1000, 28667, -1000, -1000, -1000, 2671,
	1252, 2630, 840, 7503, -1000, -1000, -67, -76, -1000, -1000,
	-1000, 28115, 1992, 454, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2994, 35299, 35299, 582, 2151, 1029, -1000, -1000,
	-1000, 38290, 2322, 2322, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2322, 2322, 2328, -1000, -1000, 2321, 2321,
	2321, 2277, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2324, 2324, 2326, 2326, 2324, -1000, -1000, 2963, -1000,
	1028, -1000, -1000, 1216, -1000, 2963, 1554, -322, 9792, 1523,
	1456, -1000, 7503, 9792, 7503, -292, 224, -299, -1000, -1000,
	-1000, 1990, -1000, -1000, -1000, 1753, -1000, 1751, 60, 69,
	1606, -267, 5787, 332, 35299, -267, 35299, 5787, -1000, 35299,
	329, -267, -1000, 35299, 1749, -1000, -1000, -1000, 2969, 28115,
	1891, 1371, 27563, -1000, 189, -1000, 172, 463, 1981, -1000,
	683, 106, 1980, 1975, -1000, -1000, -1000, 9213, -1000, -1000,
	-1000, -1000, 2055, 7503, 2150, -1000, 792, 792, 2147, 2146,
	-1000, 2322, 2322, -1000, 2277, 2321, 2277, 792, 792, 2145,
	-1000, 1846, 2367, -1000, 2282, 2204, 7503, -1000, 2144, 3278,
	1179, -114, 38, 38, -1000, -1000, -1000, -1000, 38, 38,
	38, 38, -1000, 38, 38, 38, 38, 38, 38, 38,
	38, 529, -1000, 60, 2055, 2055, -1000, -1000, 2747, -1000,
	1975, 1971, -1000, 1968, 1967, 1119, 38290, 2143, 2804, 12042,
	2803, 2319, 2318, 2802, 1833, -1000, -1000, -1000, 27011, 455,
	-1000, -1000, -1000, 572, 266, 1748, 436, -1000, 35299, 243,
	2690, 1486, 1966, 35299, -1000, -1000, -1000, -1000, -1000, 2740,
	-1000, 1062, 287, 24803, 12042, 12042, 12042, 290, 1443, -1000,
	527, 960, 1192, 25907, 35299, -1000, 25355, 2138, -1000, 922,
	2967, -1000, 35299, -1000, 2967, 2967, 1395, -1000, 290, -1000,
	328, -1000, 2768, 38290, -1000, 35299, -1000, 35299, -1000, 35299,
	35299, 571, 7503, 2768, 35299, 591, -1000, -1000, 903, 291,
	575, 575, 1025, -1000, 2788, -1000, -1000, -1000, 35299, -1000,
	-1000, -1000, -1000, -1000, -1000, 18724, 18724, 2840, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1964, 1959, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 35299, 1247, -1000, 1474, 1833, 27011, 1472, 1439, 1958,
	455, 1642, 1471, -1000, 1954, -1000, 958, 35299, 35299, -1000,
	1092, -1000, 1468, 2523, 2559, 2523, -1000, -1000, -1000, -1000,
	2591, -1000, 2576, -1000, -1000, 1092, -1000, -1000, -1000, -1000,
	-1000, 840, -1000, 2849, 803, 803, 803, 2132, -1000, -1000,
	-1000, 1021, 2127, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 11490, 2737, 2960, 2938, 26459, 2960, -1000, -322,
	1374, -1000, 1678, 148, 1518, 35299, -1000, -1000, -1000, 2123,
	2120, -274, 77, 2937, 2936, 2991, -1000, 2116, 967, -267,
	-1000, -1000, 924, -1000, -1000, -1000, -267, -1000, 924, -1000,
	-1000, 1891, -1000, 171, -1000, -1000, -1000, -1000, -1000, -1000,
	103, -1000, 35299, -1000, 966, 102, -1000, 2055, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 7503, -1000, -1000, -1000, 2141, -1000,
	-1000, 7503, 2114, 1953, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 3004, -1000,
	2927, -274, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	692, 328, 2103, 959, -1000, -1000, -1000, -1000, 328, 23699,
	12042, 328, -1000, 1950, 118, -1000, -1000, -1000, 1944, 1937,
	1736, -1000, -1000, 1723, 915, 137, -1000, -1000, -1000, -1000,
	-1000, -1000, 1832, 1829, 1467, -344, -1000, 2317, -1000, 1458,
	1458, 1458, 35299, 1246, -1000, 1458, 1458, 2102, 2094, 1984,
	542, 1481, 1463, -1000, 1722, 19835, 25907, 25355, 1017, -1000,
	1174, -1000, -1000, -1000, 2967, -1000, -1000, 2967, 542, -1000,
	-1000, -1000, 35299, 310, 2314, -1000, 2304, 2545, 330, 2303,
	2295, 35299, 2009, -1000, 2768, 35299, 590, 2731, -1000, -1000,
	-1000, -1000, -1000, 376, -1000, 35299, -1000, -1000, 1232, -1000,
	18724, -1000, -1000, 1237, -1000, 1935, 1933, -1000, 118, 1931,
	3458, -1000, -1000, 2690, 1928, -1000, 35299, 958, 958, 3004,
	35299, 5787, -1000, -1000, 7503, 2288, -1000, 7503, -1000, -1000,
	-1000, -1000, -1000, 2286, 2677, -1000, -1000, -1000, -1000, -1000,
	-1000, 2091, -1000, 7503, 7503, -1000, -1000, 569, 9792, -301,
	221, -1000, -1000, -1000, -276, 1923, -1000, -1000, 2924, 1915,
	1864, 35299, -1000, 924, 924, 922, -1000, -1000, 4, 445,
	-1000, 1979, -1000, 1889, 38, -1000, 173, 7503, -276, 38290,
	-187, -188, 12042, -1000, 1229, -1000, 1458, 1458, 1894, -187,
	-1000, -1000, 302, -1000, -1000, 253, -1000, -1000, 1716, 497,
	-1000, -1000, -1000, 1908, 1630, 1875, 23147, 18724, 19276, 1907,
	-1000, -1000, 24803, 2091, 2091, 38493, 191, 38493, 875, 1428,
	-1000, 1713, -1000, 1707, -1000, 2967, 1017, 1174, -1000, -1000,
	1356, -1000, -1000, 875, -1000, -1000, 310, -1000, -1000, 1623,
	9213, -1000, -1000, 1906, 19276, 764, 1466, 1465, 690, 2284,
	-1000, 383, 2989, -1000, -1000, -1000, 744, 2280, -1000, 1603,
	1592, -1000, 35299, -1000, 23147, 23147, 657, 657, 23147, 23147,
	2279, 575, -1000, -1000, 9213, -1000, -1000, -1000, -1000, 1458,
	1181, -1000, -1000, -1000, -1000, -1000, -1000, 1829, -1000, -1000,
	2904, -1000, -1000, 2055, 35299, 2055, 24251, -1000, 2922, 2921,
	-1000, 2055, 914, -1000, -322, 35299, 35299, -278, 1682, -1000,
	1904, 74, -1000, -1000, 918, -285, 45, 58, 1464, -1000,
	-1000, -1000, 1863, -1000, 577, -1000, -1000, -1000, 914, -278,
	-180, -1000, -1000, 327, -1000, -1000, -1000, 23699, 2091, 2091,
	-188, -1000, 449, 1899, -1000, -1000, 245, -1000, -1000, -1000,
	-1000, -1000, 101, -1000, 1462, 1228, -1000, 2277, 7503, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 517, 38267, -1000,
	913, -1000, 4, 517, 479, 223, -1000, 1677, -1000, -1000,
	3004, -1000, 448, -1000, -1000, 2470, -1000, -1000, -1000, -1000,
	-1000, -1000, 1898, 1892, -1000, -1000, -1000, -1000, -1000, 1665,
	2276, -46, 2828, 1885, -1000, -1000, 2275, 1223, 1210, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1200, 1195, 23147, -1000,
	-1000, 2470, 18724, 1458, -1000, -1000, 1177, 1170, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2273, -1000, -1000, 2919, -1000,
	1883, 583, 62, 58, -1000, 2917, 68, 2916, 2915, 1877,
	-1000, -1000, 530, -268, 35, 34, 27, -1000, -1000, -1000,
	7503, -1000, 35299, 382, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 99, -1000, -1000, -1000, 1875, 1874, -1000, 23147, 2788,
	1858, 337, 2914, 38493, -1000, 1458, -1000, 337, -1000, 305,
	-1000, 1406, -1000, 1663, -1000, 2904, -1000, 294, -1000, -1000,
	-1000, 1851, 7503, 2265, 1458, 1760, -175, 23147, 2539, 2524,
	2433, 2394, 1162, -1000, 18724, -1000, -1000, 22595, 35299, 1864,
	-1000, 2262, 1661, 77, 63, 2912, -1000, 1864, 2911, 1864,
	1864, -1000, 1584, -1000, 31, 29, 25, -1000, -1000, -1000,
	-1000, 444, -1000, 179, -1000, -1000, -1000, 237, -1000, -1000,
	2788, -1000, 2910, 361, -1000, 18724, -1000, -1000, -1000, 1658,
	-1000, -1000, -1000, -1000, 1839, -1000, 35299, -1000, 2547, -1000,
	163, 1122, 237, 657, 237, 657, 237, 657, 237, 657,
	184, -1000, -1000, -1000, 1087, -1000, -1000, 2826, 18172, 47,
	-1000, -1000, -1000, 1871, -1000, 1864, -1000, -1000, 530, -1000,
	-1000, -1000, 1857, -1000, -1000, -1000, -1000, 1458, 1855, 279,
	-1000, -1000, -1000, 22043, 331, 375, 368, -1000, 524, -1000,
	-1000, -1000, 575, -1000, -1000, 2285, 2274, 2973, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 35299, -1000,
	35299, -1000, 1084, -1000, -1000, -1000, 1172, -1000, -1000, -1000,
	-1000, -1000, -313, 1656, -1000, 35299, -1000, 35299, 349, 1647,
	9213, 2260, 9213, 2259, 367, 2258, -1000, -1000, 2983, -1000,
	2980, 655, 655, 237, 237, 237, 237, -1000, 906, -1000,
	1440, -1000, 21491, 35299, -1000, -1000, 1849, -1000, -1000, 1078,
	2252, 2906, -1000, 2577, 35299, 2435, 35299, 2251, 1425, 9213,
	-1000, -1000, -1000, 1710, 394, -1000, 35299, 5217, -1000, 1164,
	-1000, -1000, -1000, 504, 345, -1000, 1076, -1000, 1071, 20939,
	1643, 2392, -1000, -1000, -1000, -1000, -1000, 2055, 35299, 1045,
	-1000, 35299, 333, -1000, -1000, -1000, 1016, -1000, -1000, -1000,
	-1000, 504, 2571, -1000, 1634, -1000, -1000, 38345, 664, -1000,
	-1000, 38345, 347, -1000, 494, 2165, -1000, -1000, 976, -1000,
	35299, 699, 7503, -1000, 347, 38493, -1000, 7503, 971, -1000,
	38493, 964, -1000, -1000,
}

var yyPgo = [...]int{
	0, 145, 3021, 245, 197, 3533, 71, 243, 215, 209,
	241, 3532, 3530, 3529, 2770, 2733, 3526, 3525, 3524, 3523,
	3519, 3517, 3516, 3514, 3512, 3511, 3510, 3509, 3508, 3507,
	3506, 3505, 3504, 3503, 3502, 3501, 3499, 3496, 3495, 3494,
	3479, 3478, 3477, 3476, 3475, 3474, 240, 3473, 3472, 3470,
	3469, 3468, 3467, 3466, 3465, 3464, 3463, 3462, 3461, 3460,
	3459, 3458, 3456, 3455, 3453, 3452, 3451, 3450, 3449, 3448,
	3447, 3446, 3444, 3443, 3442, 3441, 3440, 3439, 3437, 206,
	3412, 2725, 3410, 3409, 3408, 3407, 3405, 3404, 3403, 200,
	3402, 3399, 3396, 3395, 3381, 3380, 3375, 3374, 3372, 3370,
	3369, 234, 3368, 3367, 3366, 3364, 3362, 3361, 223, 3358,
	158, 210, 3356, 3355, 3354, 3353, 3352, 3351, 231, 221,
	67, 3349, 44, 3347, 212, 3346, 133, 3345, 127, 3344,
	3343, 3341, 3340, 3338, 3336, 3335, 3333, 3332, 3329, 3326,
	3325, 3324, 3323, 3321, 3320, 95, 3319, 251, 3317, 69,
	3316, 3315, 121, 492, 178, 247, 2103, 248, 246, 176,
	152, 93, 3313, 2750, 3310, 144, 230, 136, 23, 3306,
	149, 3304, 141, 45, 28, 244, 125, 54, 146, 116,
	3303, 216, 102, 101, 3302, 3301, 170, 238, 161, 3300,
	97, 3299, 3298, 3297, 3296, 3292, 188, 169, 3291, 3290,
	117, 3289, 3288, 103, 3287, 70, 184, 160, 182, 3286,
	175, 115, 109, 113, 168, 3285, 81, 3282, 3280, 3278,
	3277, 162, 3276, 3274, 124, 61, 3273, 3265, 3264, 64,
	3263, 47, 3262, 24, 3260, 65, 3259, 3258, 3257, 3256,
	3255, 3254, 3250, 3248, 3247, 3246, 3243, 75, 3242, 3241,
	12, 14, 17, 3240, 27, 3239, 147, 3237, 3236, 3235,
	89, 84, 3234, 85, 1, 48, 73, 3233, 3232, 218,
	271, 96, 138, 3231, 385, 3227, 3226, 3225, 143, 3223,
	591, 3222, 3221, 3220, 3219, 3217, 43, 3216, 208, 49,
	3212, 120, 126, 3210, 36, 42, 183, 192, 3208, 3207,
	3206, 486, 179, 88, 72, 0, 3205, 135, 3204, 3203,
	3202, 250, 3201, 226, 186, 150, 229, 276, 166, 3200,
	3198, 62, 3196, 156, 57, 55, 131, 8, 20, 201,
	3195, 13, 163, 3194, 189, 3193, 187, 33, 130, 3192,
	3191, 30, 254, 3189, 3188, 3187, 118, 3186, 3185, 112,
	74, 3183, 3182, 3181, 3180, 35, 3179, 34, 26, 3178,
	91, 3176, 239, 3175, 258, 128, 172, 155, 139, 214,
	219, 77, 76, 3174, 1488, 134, 94, 19, 3173, 217,
	3172, 278, 119, 3171, 79, 3170, 237, 374, 199, 3169,
	167, 7, 41, 32, 3168, 9, 3167, 153, 194, 3159,
	3158, 21, 51, 3157, 18, 3156, 3155, 3154, 3151, 5,
	3150, 3141, 3140, 2, 4, 3139, 3, 190, 171, 111,
	90, 68, 3135, 3133, 46, 253, 3131, 137, 132, 142,
	3127, 92, 3124, 3121, 3120, 808, 3119, 242, 3117, 3116,
	3115, 3112, 3110, 3109, 3106, 3103, 3102, 99, 38, 3101,
	3100, 3099, 3098, 78, 123, 3097, 3096, 3094, 3093, 37,
	164, 3090, 22, 3088, 31, 29, 39, 3087, 122, 3086,
	15, 173, 3085, 3082, 16, 3081, 3080, 10, 11, 3079,
	3078, 110, 3077, 87, 25, 157, 98, 3076, 3075, 82,
	205, 129, 3074, 3071, 232, 222, 185, 3070, 154, 235,
	249, 3069, 211, 3068, 3067, 3066, 3065, 3063, 3062, 1017,
	3061, 3060, 220, 66, 86, 108, 3059, 3058, 3056, 83,
	151, 106, 107, 56, 80, 3055, 105, 180, 3054, 181,
	3052, 3051, 100, 3049, 3047, 3046, 3045, 3044, 174, 3038,
	3037, 177, 225, 3035, 3034, 3031, 3030, 3026, 3024, 224,
	280, 3016,
}

//line mysql_sql.y:10559
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accessModeUnion() tree.AccessModeType {
	v, _ := st.union.(tree.AccessModeType)
	return v
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) accountsSetOptionUnion() *tree.AccountsSetOption {
	v, _ := st.union.(*tree.AccountsSetOption)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) alterAccountAuthOptionUnion() tree.AlterAccountAuthOption {
	v, _ := st.union.(tree.AlterAccountAuthOption)
	return v
}

func (st *yySymType) alterColPositionUnion() *tree.ColumnPosition {
	v, _ := st.union.(*tree.ColumnPosition)
	return v
}

func (st *yySymType) alterColumnOrderUnion() *tree.AlterColumnOrder {
	v, _ := st.union.(*tree.AlterColumnOrder)
	return v
}

func (st *yySymType) alterColumnOrderByUnion() []*tree.AlterColumnOrder {
	v, _ := st.union.([]*tree.AlterColumnOrder)
	return v
}

func (st *yySymType) alterTableUnion() tree.AlterTable {
	v, _ := st.union.(tree.AlterTable)
	return v
}

func (st *yySymType) alterTableOptionUnion() tree.AlterTableOption {
	v, _ := st.union.(tree.AlterTableOption)
	return v
}

func (st *yySymType) alterTableOptionsUnion() tree.AlterTableOptions {
	v, _ := st.union.(tree.AlterTableOptions)
	return v
}

func (st *yySymType) alterTypeOptionUnion() *tree.TypeOption {
	v, _ := st.union.(*tree.TypeOption)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) clusterByOptionUnion() *tree.ClusterByOption {
	v, _ := st.union.(*tree.ClusterByOption)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) connectorOptionUnion() *tree.ConnectorOption {
	v, _ := st.union.(*tree.ConnectorOption)
	return v
}

func (st *yySymType) connectorOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) connectorOptionsUnion() []*tree.ConnectorOption {
	v, _ := st.union.([]*tree.ConnectorOption)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cstrUnion() *tree.CStr {
	v, _ := st.union.(*tree.CStr)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) cycleOptionUnion() *tree.CycleOption {
	v, _ := st.union.(*tree.CycleOption)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) elseIfClauseUnion() *tree.ElseIfStmt {
	v, _ := st.union.(*tree.ElseIfStmt)
	return v
}

func (st *yySymType) elseIfClauseListUnion() []*tree.ElseIfStmt {
	v, _ := st.union.([]*tree.ElseIfStmt)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) frameBoundUnion() *tree.FrameBound {
	v, _ := st.union.(*tree.FrameBound)
	return v
}

func (st *yySymType) frameClauseUnion() *tree.FrameClause {
	v, _ := st.union.(*tree.FrameClause)
	return v
}

func (st *yySymType) frameTypeUnion() tree.FrameType {
	v, _ := st.union.(tree.FrameType)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcArgUnion() tree.FunctionArg {
	v, _ := st.union.(tree.FunctionArg)
	return v
}

func (st *yySymType) funcArgDeclUnion() *tree.FunctionArgDecl {
	v, _ := st.union.(*tree.FunctionArgDecl)
	return v
}

func (st *yySymType) funcArgsUnion() tree.FunctionArgs {
	v, _ := st.union.(tree.FunctionArgs)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcReturnUnion() *tree.ReturnType {
	v, _ := st.union.(*tree.ReturnType)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) functionNameUnion() *tree.FunctionName {
	v, _ := st.union.(*tree.FunctionName)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) incrementByOptionUnion() *tree.IncrementByOption {
	v, _ := st.union.(*tree.IncrementByOption)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) indexVisibilityUnion() tree.VisibleType {
	v, _ := st.union.(tree.VisibleType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) isolationLevelUnion() tree.IsolationLevelType {
	v, _ := st.union.(tree.IsolationLevelType)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) killOptionUnion() tree.KillOption {
	v, _ := st.union.(tree.KillOption)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) maxValueOptionUnion() *tree.MaxValueOption {
	v, _ := st.union.(*tree.MaxValueOption)
	return v
}

func (st *yySymType) minValueOptionUnion() *tree.MinValueOption {
	v, _ := st.union.(*tree.MinValueOption)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) procArgUnion() tree.ProcedureArg {
	v, _ := st.union.(tree.ProcedureArg)
	return v
}

func (st *yySymType) procArgDeclUnion() *tree.ProcedureArgDecl {
	v, _ := st.union.(*tree.ProcedureArgDecl)
	return v
}

func (st *yySymType) procArgTypeUnion() tree.InOutArgType {
	v, _ := st.union.(tree.InOutArgType)
	return v
}

func (st *yySymType) procArgsUnion() tree.ProcedureArgs {
	v, _ := st.union.(tree.ProcedureArgs)
	return v
}

func (st *yySymType) procNameUnion() *tree.ProcedureName {
	v, _ := st.union.(*tree.ProcedureName)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectLockInfoUnion() *tree.SelectLockInfo {
	v, _ := st.union.(*tree.SelectLockInfo)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) stageCommentUnion() tree.StageComment {
	v, _ := st.union.(tree.StageComment)
	return v
}

func (st *yySymType) stageCredentialsUnion() tree.StageCredentials {
	v, _ := st.union.(tree.StageCredentials)
	return v
}

func (st *yySymType) stageStatusUnion() tree.StageStatus {
	v, _ := st.union.(tree.StageStatus)
	return v
}

func (st *yySymType) stageUrlUnion() tree.StageUrl {
	v, _ := st.union.(tree.StageUrl)
	return v
}

func (st *yySymType) startWithOptionUnion() *tree.StartWithOption {
	v, _ := st.union.(*tree.StartWithOption)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementOptionUnion() tree.StatementOption {
	v, _ := st.union.(tree.StatementOption)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) streamOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) subscriptionOptionUnion() *tree.SubscriptionOption {
	v, _ := st.union.(*tree.SubscriptionOption)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableLockUnion() tree.TableLock {
	v, _ := st.union.(tree.TableLock)
	return v
}

func (st *yySymType) tableLockTypeUnion() tree.TableLockType {
	v, _ := st.union.(tree.TableLockType)
	return v
}

func (st *yySymType) tableLocksUnion() []tree.TableLock {
	v, _ := st.union.([]tree.TableLock)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) transactionCharacteristicUnion() *tree.TransactionCharacteristic {
	v, _ := st.union.(*tree.TransactionCharacteristic)
	return v
}

func (st *yySymType) transactionCharacteristicListUnion() []*tree.TransactionCharacteristic {
	v, _ := st.union.([]*tree.TransactionCharacteristic)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClause2Union() *tree.WhenStmt {
	v, _ := st.union.(*tree.WhenStmt)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whenClauseList2Union() []*tree.WhenStmt {
	v, _ := st.union.([]*tree.WhenStmt)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) windowSpecUnion() *tree.WindowSpec {
	v, _ := st.union.(*tree.WindowSpec)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 537, 547, 547, 5, 5, 2, 6, 6, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 116, 116, 115, 535, 535, 535, 536,
	536, 112, 133, 132, 135, 135, 134, 134, 131, 131,
	127, 130, 130, 129, 129, 128, 123, 125, 125, 124,
	126, 126, 113, 101, 114, 480, 480, 479, 479, 478,
	478, 432, 432, 477, 477, 477, 476, 476, 476, 475,
	475, 474, 474, 473, 473, 471, 471, 472, 470, 469,
	469, 469, 467, 467, 467, 463, 463, 465, 464, 464,
	466, 458, 458, 461, 461, 459, 459, 459, 459, 462,
	457, 457, 457, 456, 456, 100, 100, 100, 376, 376,
	99, 99, 390, 390, 390, 390, 390, 388, 388, 388,
	388, 388, 388, 387, 387, 386, 386, 391, 391, 389,
	389, 389, 389, 389, 389, 389, 389, 389, 389, 389,
	389, 389, 389, 389, 389, 389, 389, 389, 389, 389,
	389, 389, 389, 389, 389, 389, 389, 389, 389, 389,
	389, 389, 389, 389, 389, 389, 389, 389, 389, 389,
	389, 389, 389, 389, 389, 389, 389, 389, 389, 90,
	90, 90, 90, 90, 95, 95, 95, 542, 542, 541,
	541, 543, 543, 543, 543, 544, 544, 93, 93, 93,
	94, 385, 385, 385, 91, 92, 92, 375, 375, 380,
	380, 379, 379, 379, 379, 379, 379, 379, 379, 379,
	379, 379, 379, 379, 384, 384, 384, 382, 382, 381,
	381, 383, 383, 84, 84, 84, 87, 86, 374, 374,
	374, 374, 374, 374, 374, 374, 374, 85, 85, 85,
	85, 85, 85, 80, 80, 80, 80, 80, 79, 79,
	81, 81, 372, 372, 371, 96, 96, 97, 539, 539,
	538, 540, 540, 540, 540, 98, 104, 104, 104, 104,
	104, 104, 104, 103, 103, 106, 106, 105, 107, 89,
	89, 89, 89, 89, 89, 88, 88, 88, 88, 88,
	88, 88, 88, 88, 505, 505, 505, 507, 507, 309,
	310, 548, 312, 308, 308, 308, 501, 501, 502, 503,
	504, 504, 504, 102, 11, 11, 11, 11, 11, 11,
	11, 11, 13, 78, 83, 255, 255, 256, 256, 256,
	256, 256, 256, 256, 256, 256, 256, 256, 256, 256,
	256, 256, 256, 256, 256, 256, 256, 256, 256, 243,
	243, 243, 238, 238, 238, 238, 239, 239, 240, 240,
	241, 241, 241, 241, 242, 242, 302, 302, 260, 260,
	260, 262, 262, 261, 259, 257, 257, 257, 257, 257,
	257, 258, 258, 258, 263, 263, 76, 82, 82, 82,
	518, 518, 77, 529, 529, 435, 435, 323, 323, 322,
	322, 322, 322, 322, 322, 322, 322, 322, 322, 322,
	322, 322, 322, 322, 322, 440, 441, 319, 46, 46,
	46, 46, 46, 46, 46, 46, 46, 46, 46, 46,
	46, 46, 46, 46, 46, 46, 46, 46, 46, 46,
	46, 46, 46, 46, 46, 46, 46, 46, 53, 56,
	52, 52, 52, 361, 361, 51, 549, 549, 297, 297,
	64, 63, 55, 65, 66, 67, 68, 69, 70, 50,
	62, 62, 62, 62, 62, 62, 62, 62, 73, 73,
	452, 452, 551, 551, 551, 71, 72, 434, 434, 434,
	61, 60, 59, 58, 57, 57, 49, 49, 48, 48,
	54, 139, 140, 316, 316, 316, 318, 318, 314, 550,
	550, 404, 404, 317, 317, 47, 47, 47, 47, 74,
	315, 315, 296, 313, 313, 313, 12, 12, 10, 16,
	16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 16, 16, 25, 26, 28, 369, 369, 366, 27,
	19, 18, 18, 22, 21, 17, 17, 20, 23, 24,
	24, 9, 9, 9, 9, 14, 14, 15, 160, 160,
	211, 211, 513, 513, 509, 509, 510, 510, 510, 511,
	511, 512, 512, 108, 446, 446, 446, 446, 446, 446,
	8, 182, 182, 445, 445, 445, 445, 445, 445, 373,
	373, 490, 490, 490, 491, 181, 181, 176, 176, 447,
	447, 338, 492, 492, 455, 455, 454, 454, 453, 453,
	179, 179, 180, 180, 163, 163, 119, 119, 460, 460,
	460, 460, 468, 468, 431, 431, 247, 247, 289, 289,
	290, 290, 153, 153, 154, 154, 154, 154, 154, 154,
	498, 498, 500, 500, 499, 178, 178, 174, 174, 175,
	175, 175, 173, 173, 172, 171, 171, 170, 168, 168,
	168, 169, 169, 169, 186, 186, 156, 156, 156, 155,
	155, 155, 155, 155, 274, 274, 274, 274, 274, 274,
	274, 274, 274, 274, 274, 274, 157, 157, 506, 506,
	506, 436, 436, 436, 443, 443, 271, 271, 272, 272,
	270, 270, 158, 158, 159, 159, 159, 159, 269, 269,
	268, 161, 161, 167, 166, 166, 162, 162, 162, 162,
	279, 279, 278, 278, 278, 278, 111, 117, 117, 118,
	185, 185, 277, 276, 276, 276, 184, 184, 183, 183,
	177, 177, 165, 165, 165, 165, 275, 164, 273, 534,
	534, 533, 533, 532, 530, 530, 530, 531, 531, 531,
	531, 482, 482, 482, 482, 482, 303, 303, 303, 307,
	307, 306, 306, 306, 306, 306, 311, 7, 7, 7,
	7, 7, 7, 32, 32, 32, 32, 32, 32, 32,
	32, 32, 32, 32, 32, 32, 38, 195, 196, 39,
	197, 197, 198, 198, 199, 199, 200, 201, 202, 202,
	202, 202, 37, 187, 187, 188, 188, 189, 189, 190,
	191, 191, 191, 194, 192, 193, 193, 546, 546, 545,
	36, 36, 29, 146, 146, 147, 147, 147, 149, 149,
	244, 244, 244, 148, 148, 150, 150, 150, 514, 517,
	515, 515, 519, 519, 519, 520, 520, 520, 520, 521,
	521, 30, 136, 141, 524, 524, 524, 523, 523, 525,
	525, 526, 526, 293, 293, 294, 294, 144, 145, 145,
	143, 138, 152, 152, 152, 152, 152, 137, 142, 516,
	522, 522, 522, 370, 370, 367, 368, 368, 365, 364,
	364, 364, 528, 528, 527, 527, 527, 304, 304, 31,
	360, 360, 362, 363, 363, 363, 354, 354, 354, 354,
	35, 358, 358, 359, 359, 359, 359, 359, 355, 355,
	357, 357, 353, 353, 353, 353, 353, 34, 151, 151,
	352, 352, 349, 349, 347, 347, 348, 348, 346, 346,
	346, 350, 350, 42, 75, 43, 44, 45, 41, 41,
	41, 351, 351, 33, 33, 33, 121, 120, 120, 120,
	120, 292, 292, 291, 291, 122, 40, 223, 223, 423,
	423, 418, 418, 418, 418, 418, 438, 438, 438, 419,
	419, 419, 420, 420, 420, 422, 422, 422, 421, 421,
	421, 421, 421, 437, 437, 439, 439, 439, 392, 392,
	393, 393, 393, 396, 396, 410, 410, 411, 411, 409,
	409, 416, 416, 415, 415, 414, 414, 413, 413, 412,
	412, 412, 412, 407, 407, 406, 406, 394, 394, 394,
	394, 394, 395, 395, 395, 405, 405, 408, 408, 267,
	267, 266, 266, 231, 231, 232, 232, 265, 265, 229,
	229, 230, 230, 230, 264, 264, 264, 264, 264, 264,
	264, 264, 264, 264, 264, 264, 264, 264, 264, 264,
	264, 264, 264, 264, 264, 264, 264, 264, 264, 264,
	264, 264, 264, 264, 264, 264, 264, 264, 264, 488,
	488, 489, 234, 234, 245, 245, 245, 245, 245, 245,
	233, 233, 235, 235, 212, 212, 210, 210, 203, 203,
	204, 204, 205, 205, 205, 209, 209, 208, 208, 208,
	208, 206, 206, 207, 207, 207, 207, 207, 207, 378,
	378, 485, 485, 486, 486, 481, 481, 481, 484, 484,
	484, 484, 484, 487, 487, 487, 483, 483, 213, 287,
	287, 287, 305, 305, 305, 305, 286, 286, 286, 228,
	228, 227, 227, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 377, 377, 320, 320, 321,
	321, 254, 253, 253, 253, 253, 253, 251, 252, 250,
	250, 250, 250, 250, 249, 249, 248, 248, 248, 356,
	356, 246, 246, 237, 237, 237, 236, 236, 236, 417,
	327, 327, 327, 327, 327, 327, 327, 327, 327, 327,
	327, 327, 327, 329, 329, 329, 329, 329, 329, 329,
	329, 329, 329, 329, 329, 329, 329, 329, 329, 329,
	329, 329, 329, 329, 329, 285, 285, 285, 330, 330,
	335, 335, 497, 497, 496, 214, 214, 214, 215, 215,
	215, 215, 215, 215, 215, 215, 215, 224, 224, 224,
	401, 401, 401, 401, 402, 402, 402, 402, 403, 403,
	403, 399, 399, 400, 400, 339, 340, 340, 444, 444,
	397, 397, 398, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 451, 451, 451, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 508, 508, 508, 493, 493, 493, 494, 494, 494,
	494, 494, 494, 494, 494, 494, 494, 494, 494, 495,
	495, 495, 495, 495, 495, 495, 495, 495, 495, 495,
	495, 495, 495, 495, 495, 495, 283, 283, 283, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 341, 341, 342, 342, 448, 448,
	448, 448, 448, 448, 449, 449, 450, 450, 450, 450,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 328,
	280, 280, 280, 343, 336, 336, 337, 337, 331, 331,
	331, 331, 331, 331, 331, 333, 333, 333, 333, 333,
	333, 333, 333, 333, 333, 333, 326, 326, 326, 326,
	326, 326, 326, 326, 326, 326, 326, 332, 332, 334,
	334, 345, 345, 345, 344, 344, 344, 344, 344, 344,
	344, 226, 226, 226, 226, 325, 325, 325, 324, 324,
	324, 324, 324, 324, 324, 324, 324, 324, 324, 324,
	216, 216, 216, 216, 220, 220, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	221, 221, 221, 221, 221, 219, 219, 219, 219, 219,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 109, 110,
	110, 218, 288, 288, 424, 424, 427, 427, 425, 425,
	426, 428, 428, 428, 429, 429, 429, 430, 430, 430,
	433, 433, 295, 295, 295, 301, 301, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298,
}

var yyR2 = [...]int{
	0, 1, 1, 1, 1, 3, 3, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 6, 4, 0, 1, 1, 0,
	1, 5, 2, 2, 6, 9, 6, 9, 4, 7,
	8, 0, 1, 1, 2, 4, 6, 1, 2, 4,
	0, 2, 10, 10, 2, 0, 2, 1, 3, 3,
	3, 0, 2, 1, 3, 5, 0, 2, 3, 1,
	3, 1, 1, 1, 3, 1, 1, 1, 1, 0,
	3, 3, 0, 3, 3, 0, 1, 3, 0, 1,
	3, 0, 2, 1, 2, 3, 4, 3, 3, 1,
	0, 1, 1, 0, 1, 8, 5, 7, 0, 3,
	8, 5, 1, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 4, 1, 3, 1,
	2, 2, 2, 2, 2, 2, 1, 2, 2, 2,
	2, 1, 1, 2, 2, 1, 1, 1, 1, 1,
	2, 2, 2, 1, 2, 1, 2, 2, 1, 2,
	1, 1, 2, 2, 1, 1, 1, 3, 2, 2,
	2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 4, 4, 1, 3, 3,
	1, 2, 2, 2, 1, 2, 2, 3, 4, 4,
	6, 1, 1, 1, 2, 4, 6, 1, 4, 1,
	3, 3, 4, 4, 4, 4, 3, 3, 2, 4,
	4, 2, 2, 2, 1, 1, 1, 1, 1, 1,
	3, 1, 3, 1, 1, 1, 2, 2, 0, 1,
	4, 2, 4, 1, 5, 3, 2, 1, 2, 2,
	4, 4, 5, 2, 1, 3, 4, 4, 1, 2,
	9, 7, 1, 3, 3, 1, 1, 3, 1, 3,
	2, 1, 2, 1, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 4, 4, 2, 4, 3, 3, 1,
	1, 1, 1, 1, 1, 2, 3, 4, 7, 2,
	3, 3, 4, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 2, 1,
	1, 1, 1, 6, 1, 1, 1, 1, 1, 1,
	1, 1, 10, 7, 4, 1, 3, 2, 4, 5,
	5, 6, 5, 5, 3, 2, 2, 1, 3, 4,
	3, 7, 5, 8, 2, 2, 1, 3, 2, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 1, 0, 1,
	2, 1, 3, 2, 1, 2, 2, 1, 2, 3,
	2, 3, 3, 3, 1, 1, 7, 7, 8, 8,
	0, 4, 7, 0, 3, 0, 2, 0, 1, 1,
	1, 1, 4, 2, 2, 3, 3, 4, 5, 3,
	4, 4, 2, 2, 2, 3, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 4, 3,
	2, 5, 5, 0, 2, 7, 0, 1, 0, 1,
	5, 5, 3, 3, 2, 4, 4, 4, 4, 4,
	1, 1, 1, 3, 3, 1, 1, 1, 6, 8,
	0, 1, 1, 1, 1, 5, 5, 0, 1, 1,
	3, 3, 3, 4, 6, 7, 4, 4, 7, 8,
	3, 3, 3, 0, 2, 2, 0, 2, 2, 1,
	1, 1, 1, 0, 1, 4, 4, 5, 4, 3,
	1, 3, 1, 1, 3, 5, 2, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 4, 4, 1, 3, 1, 4,
	6, 6, 4, 4, 4, 4, 4, 3, 6, 3,
	5, 1, 1, 2, 2, 11, 8, 9, 1, 3,
	2, 4, 0, 2, 0, 1, 1, 1, 1, 0,
	1, 0, 1, 4, 2, 1, 5, 4, 4, 2,
	5, 1, 3, 2, 1, 5, 4, 4, 2, 0,
	5, 0, 1, 3, 3, 1, 3, 1, 3, 1,
	3, 4, 0, 1, 0, 1, 1, 3, 1, 1,
	0, 4, 1, 3, 2, 1, 0, 8, 0, 4,
	7, 4, 0, 2, 0, 2, 0, 2, 0, 4,
	1, 3, 1, 1, 5, 3, 4, 6, 4, 5,
	2, 3, 1, 3, 6, 0, 3, 0, 1, 2,
	4, 4, 0, 1, 3, 1, 3, 3, 0, 1,
	1, 0, 2, 2, 0, 2, 3, 3, 3, 1,
	3, 3, 3, 3, 1, 2, 2, 1, 2, 2,
	1, 2, 2, 1, 2, 2, 7, 7, 1, 1,
	1, 0, 1, 1, 1, 1, 0, 2, 0, 3,
	0, 2, 1, 3, 1, 2, 3, 5, 0, 1,
	2, 1, 3, 1, 1, 1, 4, 4, 4, 3,
	2, 2, 2, 3, 2, 3, 4, 1, 3, 4,
	0, 2, 1, 1, 2, 2, 0, 1, 2, 4,
	1, 3, 1, 3, 2, 3, 1, 4, 3, 0,
	1, 1, 2, 5, 2, 2, 2, 0, 2, 3,
	3, 0, 1, 3, 1, 3, 0, 1, 2, 1,
	1, 0, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 7, 1, 1, 7,
	1, 3, 0, 1, 1, 3, 1, 3, 0, 1,
	1, 1, 14, 1, 3, 0, 1, 1, 3, 1,
	1, 2, 4, 1, 1, 1, 1, 0, 1, 2,
	9, 9, 7, 1, 2, 3, 3, 3, 0, 4,
	1, 1, 1, 1, 1, 0, 1, 1, 1, 4,
	1, 1, 3, 4, 3, 0, 1, 1, 1, 0,
	2, 7, 8, 8, 0, 3, 3, 0, 2, 0,
	3, 0, 5, 1, 3, 0, 3, 3, 0, 2,
	9, 6, 0, 2, 2, 3, 3, 4, 4, 1,
	0, 2, 2, 1, 3, 2, 1, 3, 2, 1,
	3, 2, 0, 1, 3, 4, 3, 1, 1, 4,
	1, 3, 1, 1, 1, 1, 0, 1, 1, 1,
	11, 0, 2, 3, 2, 3, 1, 1, 1, 3,
	3, 4, 0, 2, 2, 2, 2, 6, 0, 4,
	1, 1, 0, 3, 0, 1, 1, 2, 4, 4,
	4, 0, 1, 8, 2, 4, 4, 4, 9, 10,
	8, 0, 2, 11, 9, 11, 2, 2, 8, 4,
	5, 1, 3, 0, 3, 5, 10, 0, 2, 0,
	2, 0, 3, 2, 4, 3, 0, 2, 1, 0,
	2, 3, 0, 2, 3, 0, 2, 1, 0, 3,
	2, 4, 3, 0, 1, 0, 1, 1, 0, 6,
	0, 3, 5, 0, 4, 0, 3, 1, 3, 4,
	5, 0, 3, 1, 3, 2, 3, 1, 2, 0,
	4, 6, 5, 0, 2, 0, 2, 4, 5, 4,
	5, 1, 5, 6, 5, 0, 3, 0, 1, 1,
	3, 3, 3, 0, 4, 1, 3, 3, 3, 0,
	1, 1, 3, 2, 3, 3, 3, 4, 4, 3,
	3, 3, 3, 4, 4, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 1, 5, 4, 1,
	3, 3, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 1, 3, 0, 1,
	1, 3, 1, 1, 1, 1, 1, 7, 9, 7,
	9, 2, 1, 7, 9, 7, 9, 8, 5, 0,
	1, 0, 1, 1, 1, 1, 3, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 1, 3, 1,
	3, 5, 1, 1, 1, 1, 1, 3, 5, 0,
	1, 1, 2, 1, 2, 2, 1, 1, 2, 2,
	2, 3, 3, 2, 2, 1, 5, 6, 4, 1,
	1, 1, 5, 4, 1, 1, 2, 0, 1, 1,
	2, 5, 0, 1, 1, 2, 2, 3, 3, 1,
	1, 2, 2, 2, 0, 1, 2, 2, 2, 0,
	3, 0, 3, 1, 1, 1, 1, 1, 1, 1,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 1, 1, 1, 1, 3, 5, 2, 2,
	2, 2, 1, 1, 2, 5, 6, 6, 6, 6,
	1, 1, 1, 1, 1, 4, 4, 4, 0, 2,
	0, 1, 1, 2, 4, 1, 2, 2, 1, 2,
	2, 1, 2, 2, 2, 2, 2, 0, 1, 1,
	1, 2, 2, 2, 2, 2, 2, 2, 1, 1,
	1, 2, 5, 0, 1, 3, 0, 1, 0, 2,
	0, 1, 6, 8, 6, 6, 5, 5, 5, 6,
	6, 6, 6, 5, 6, 6, 6, 6, 6, 6,
	6, 6, 1, 1, 1, 4, 4, 6, 8, 6,
	4, 5, 4, 4, 4, 3, 4, 6, 6, 7,
	4, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 8, 4,
	2, 3, 2, 4, 2, 2, 4, 6, 2, 2,
	4, 6, 4, 2, 0, 1, 2, 3, 1, 1,
	1, 1, 1, 1, 0, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	0, 1, 1, 3, 0, 1, 1, 3, 3, 3,
	3, 3, 2, 1, 1, 3, 4, 3, 4, 3,
	4, 3, 4, 3, 4, 1, 3, 4, 4, 5,
	4, 5, 3, 4, 5, 6, 1, 0, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	3, 1, 1, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 2, 1, 2, 2, 2, 2,
	2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 4, 4, 1, 2, 3,
	5, 1, 1, 3, 0, 1, 0, 3, 0, 3,
	3, 0, 3, 5, 0, 3, 5, 0, 1, 1,
	0, 1, 1, 2, 2, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -537, -547, -2, -5, 598, -1, -4, -110, -84,
	-7, -112, -113, -8, -108, -9, -10, -12, -88, -103,
	-105, -107, -106, -46, -11, -102, -79, -80, -90, -96,
	-99, -100, -101, -114, -109, -111, -153, -115, -116, 591,
	-85, -86, -87, -32, -31, -30, -29, -136, -141, 597,
	438, 13, 487, -14, -15, -498, -16, 256, -308, -309,
	-310, -312, -548, -47, -48, -49, -57, -58, -59, -60,
	-61, -71, -72, -73, -50, -51, -52, -55, -53, -64,
	-63, -65, -66, -67, -68, -69, -70, -54, -139, -140,
	-74, -56, -75, -77, -76, -82, -78, -83, -138, -143,
	-13, 231, -81, 75, -91, -92, -93, -94, -95, -97,
	-98, 363, 369, 426, 590, 60, -154, -156, 602, 603,
	157, 158, 160, 161, -33, -34, -35, -36, -37, -38,
	-40, -39, -41, -42, -43, -44, -45, 227, 15, 530,
	-17, -20, -18, -21, -19, -27, -28, -26, -23, -25,
	-137, -24, -142, -22, 251, 250, 37, 317, 318, 319,
	367, 249, 228, 14, 30, 41, 343, -155, 81, 522,
	523, 525, 229, -157, 12, 606, -6, -3, -2, -123,
	-127, -131, -134, -135, -132, -133, -4, -110, 115, 241,
	592, -305, 359, 593, 595, 594, 84, 92, -298, -300,
	363, 369, 590, 603, 535, 536, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 553, 554, 555, 556, 557, 559, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 490, 577, 578, 579, 580, 518, 576, 341, 342,
	527, 268, 292, 394, 298, 305, 157, 176, 170, 198,
	190, 523, 165, 272, 310, 273, 91, 160, 473, 105,
	450, 423, 163, 287, 289, 291, 519, 520, 294, 293,
	295, 297, 521, 274, 344, 186, 181, 286, 270, 179,
	275, 39, 276, 203, 277, 278, 532, 446, 340, 452,
	302, 421, 180, 447, 290, 449, 207, 211, 464, 465,
	174, 175, 454, 467, 202, 205, 206, 248, 42, 529,
	260, 468, 209, 201, 197, 476, 306, 304, 200, 173,
	196, 271, 64, 213, 212, 214, 417, 418, 419, 420,
	279, 280, 357, 463, 193, 182, 345, 166, 22, 471,
	255, 451, 370, 281, 299, 307, 208, 210, 262, 267,
	531, 522, 425, 266, 303, 469, 178, 259, 288, 254,
	472, 167, 525, 372, 282, 161, 296, 466, 475, 63,
	385, 172, 164, 245, 158, 264, 269, 283, 284, 285,
	516, 309, 308, 300, 524, 194, 261, 199, 184, 171,
	195, 159, 263, 474, 386, 588, 343, 404, 192, 189,
	265, 238, 470, 453, 162, 408, 387, 187, 311, 584,
	585, 586, 358, 339, 312, 313, 185, 252, 444, 445,
	316, 414, 332, 388, 424, 395, 389, 220, 320, 456,
	458, 204, 587, 321, 322, 323, 448, 324, 325, 326,
	327, 362, 55, 57, 93, 95, 604, -383, -381, -305,
	523, 590, 369, 522, 525, 363, 343, 603, -197, -305,
	605, -163, 38, -210, -305, -163, -81, -15, -14, -155,
	-156, -210, 235, -313, 23, 421, -89, 422, 231, 81,
	-305, -9, -101, -8, -108, -79, -153, 426, -311, -305,
	317, 317, -311, 235, -305, 266, 402, -435, 241, -387,
	-360, 267, -386, -362, -389, -363, 31, 227, 229, 228,
	263, 15, 367, 237, 13, 12, 368, 249, 24, 25,
	27, 14, 369, 371, 28, 372, 375, 376, 377, 41,
	380, 381, 256, 84, 92, 87, 274, -196, -305, -337,
	-331, 112, 257, -333, -326, -327, -329, -477, -471, -324,
	81, 139, 140, 147, 113, -328, -417, 35, 115, 539,
	576, 488, -281, -282, -283, -284, -285, -305, -472, -470,
	87, 96, 99, 102, 103, 101, 100, 151, 183, 98,
	88, 152, -156, 84, -493, 548, -299, 569, 577, 578,
	579, 580, 568, 60, -442, -450, 234, -448, 150, 188,
	252, 184, 13, 145, 414, 185, 545, 565, 490, 549,
	572, 541, 542, 543, 536, 537, 538, 540, 550, 552,
	564, -451, 560, 570, 571, 558, 573, 574, 575, 86,
	85, 563, 562, 551, 546, 547, 553, 535, 544, 554,
	555, 561, 566, 567, 351, 105, 352, 353, 480, 344,
	354, 241, 421, 69, 355, 356, 357, 358, 359, 487,
	360, 70, 361, 350, 256, 404, 362, 187, 204, 492,
	491, 493, 484, 481, 479, 482, 483, 485, 486, 556,
	557, 559, -117, -118, 582, -172, -173, -274, 11, 6,
	7, 8, 9, -535, 423, 531, 87, 162, 159, -374,
	162, 111, 167, 166, -374, 320, 262, -351, -146, 341,
	404, 324, 93, 266, -354, -352, 519, -437, 314, 310,
	236, 108, -147, 246, 245, 106, 480, 234, 378, 305,
	55, 57, -509, -510, 224, 225, 226, -500, 513, -499,
	-305, 353, 95, 26, 235, 364, 262, 458, 456, 457,
	459, 460, 461, 462, -62, -452, -434, 453, 452, -317,
	445, 451, 443, 455, 446, 342, 326, 325, 227, 599,
	520, 514, -295, 388, 424, 477, 478, 365, 425, 464,
	466, 447, 105, 191, 188, 236, 238, 235, 341, 480,
	404, 93, 324, -509, 159, 464, 466, 266, 402, 40,
	-380, 414, -379, -381, 465, 476, 85, 86, 463, -295,
	105, 444, 444, -173, -274, -172, -154, -156, -111, -498,
	521, 521, 521, 236, 341, 404, 266, 237, 235, 517,
	519, 238, 480, 234, 317, 364, 262, 324, 93, -436,
	-506, 31, -443, 221, 222, 223, 32, 33, -1, 119,
	606, -331, -331, -6, 609, -6, -331, -305, -305, 154,
	-216, -220, -217, -219, -218, -222, -221, 188, 189, 150,
	192, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	205, 206, 203, 30, 204, 252, 184, 185, 186, 187,
	207, 170, 190, 528, 215, 171, 216, 172, 217, 173,
	218, 174, 175, 219, 176, 179, 180, 181, 182, 178,
	153, 81, 153, 87, -179, 258, -210, 153, -179, -173,
	-172, -173, -210, -286, -305, 423, 122, -89, -89, 422,
	-501, -502, -503, -505, 231, 422, 421, 153, 274, 16,
	-311, -311, 79, -210, -362, 266, -387, -360, 35, 78,
	154, 239, 154, 78, 81, 365, 341, 404, 366, 480,
	235, 378, 238, 266, 379, 341, 404, 235, 238, 480,
	266, 341, 235, 238, 404, 266, 379, 443, 444, 238,
	26, 370, 373, 374, 444, -456, 476, 154, 111, 108,
	109, 110, -331, 129, -344, 122, 123, 124, 125, 126,
	127, 128, 136, 135, 146, 139, 140, 141, 142, 143,
	144, 145, 137, 138, 132, 112, 130, 134, 131, 114,
	-156, -331, -337, 60, -329, -329, -329, -329, -417, -335,
	-331, 81, 81, 81, 153, 100, 87, -331, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	-449, 81, 81, -341, -342, 81, 81, -324, -286, 81,
	87, 87, 81, 81, 81, 87, -342, -342, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, -173,
	154, 81, -119, 38, -175, 21, -157, -156, 20, 31,
	32, 31, 32, 31, 32, 31, 32, 96, 604, 220,
	469, 530, 165, 166, 167, -195, -305, -197, 364, 238,
	517, 516, 238, -147, -349, 241, -349, -349, -349, -349,
	237, -349, 23, 235, 235, 235, -349, 487, 122, 122,
	58, -511, 169, 154, -500, -178, 81, -316, 130, 134,
	-316, 23, 264, 264, 264, -316, 304, -549, -550, 16,
	132, -314, -550, -314, -314, -316, -551, 237, 454, 42,
	265, 264, -174, -175, -174, 448, 444, -404, 449, 450,
	-318, -550, -317, -316, -316, -317, -316, -316, -316, 235,
	238, 480, 324, 600, -549, -549, 30, 30, -435, -435,
	-210, -435, 514, -296, -305, -435, -435, -435, -512, 240,
	-542, -541, 467, -544, 469, 159, -381, 159, -381, -362,
	266, 266, 154, 122, 23, -382, 122, 133, -381, -381,
	-382, -382, -233, 40, -304, 150, -305, 87, -233, 40,
	-539, -538, -210, -174, -157, -156, 82, 82, 82, 524,
	524, 524, -435, -435, -435, -435, -435, -437, -435, -435,
	-435, -435, -435, -311, -187, -305, -197, 241, -435, -435,
	-158, -159, 141, -331, -305, -158, -3, -125, -124, 116,
	117, 119, 593, 359, 592, 596, 590, -381, 40, -430,
	386, 385, -424, -426, 81, -425, 81, -425, -425, -425,
	-425, -425, 81, 81, -427, 81, -427, -427, -424, -428,
	81, -428, -429, 81, -429, -428, -305, -336, -337, -305,
	38, -445, 60, -153, 81, 30, 81, -305, -446, 60,
	-153, 81, 30, -174, -119, -175, 153, 96, 87, -89,
	82, 154, -504, 102, 103, -507, 202, 194, -305, -104,
	87, -7, -8, -9, -10, -46, -79, -153, -473, -471,
	81, 31, 413, 78, 16, -388, 235, 480, 364, 262,
	238, 341, -386, -369, -366, -364, -304, -362, -365, -364,
	-391, -286, 444, -120, 428, 427, 316, -331, -331, -331,
	-331, -331, 101, 112, 339, 102, 103, -326, -345, 31,
	312, 313, -327, -327, -327, -327, -327, -327, -327, -327,
	-327, -327, -327, -327, -334, -343, -417, 81, 132, 130,
	134, 131, 114, -329, -329, -327, -327, 82, 154, -497,
	-496, 116, -331, -331, -331, -305, -494, -495, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 355,
	350, 356, 354, 344, 362, 357, 358, 187, 511, 512,
	505, 506, 507, 508, 509, 510, -336, -336, -331, -494,
	-336, -280, 32, 31, -337, -337, -337, 82, -331, -508,
	337, 336, 338, -176, -305, -336, 82, 82, 82, 96,
	-337, -337, -336, -327, -336, -495, -280, -280, -280, 141,
	-337, -337, -280, -280, -280, -280, 141, -280, -280, -280,
	-280, -280, -280, -280, -280, 82, 82, 82, -174, -118,
	-454, -453, -331, 40, 583, -119, -331, -171, -170, -331,
	-536, 87, 87, 607, 470, 471, 163, 166, 165, 34,
	81, -187, -349, -349, 517, -349, -514, -305, 112, -370,
	-367, -364, -305, -305, -360, -305, -305, -210, -349, -349,
	-349, -210, -244, 52, 53, 54, -364, -148, 55, 56,
	-512, -499, 34, -177, -305, -270, 17, -329, -329, -364,
	266, -549, -316, -316, -297, -296, -318, -313, -318, -318,
	-270, -550, -316, -316, -318, -314, -270, -305, 444, -270,
	-270, -404, -315, -305, -315, -349, -296, -297, -297, -210,
	-210, -255, -256, 232, 348, 349, 230, 228, 11, 229,
	-264, 305, -350, 488, -239, -240, 76, 41, -242, 390,
	383, 268, 272, 91, 273, 423, 274, 237, 276, 277,
	278, 293, 295, 248, 279, 280, 281, 414, 282, 158,
	294, 283, 284, 285, 366, -234, 6, 327, 40, 50,
	51, 437, 436, 533, 530, 269, -514, -514, 30, 30,
	-370, -305, -305, -166, -161, -165, -162, -167, -273, -275,
	-164, 81, -210, -156, -305, 154, 468, 470, 471, -542,
	-382, -542, -382, 31, 413, -385, 413, 31, -360, -379,
	464, 466, -375, 87, 414, -365, -384, 78, 150, -453,
	-382, -382, -384, -384, 149, 154, -540, 469, 470, 224,
	-119, 96, 96, 96, -212, -210, -514, -369, -360, -305,
	-435, -212, -212, -212, -305, -305, 81, 153, 35, -305,
	-305, -269, 154, -268, 16, -306, -305, 34, 87, 153,
	-269, -126, -124, 118, -331, -6, 592, -331, -6, -6,
	-331, -6, -331, -433, 387, 96, 96, -288, 87, -288,
	96, 96, 96, 82, 87, -373, 78, -447, -338, -492,
	582, -181, 82, -176, -490, -491, -176, -180, -305, -447,
	-181, 82, -490, -119, -119, -305, 23, -89, -502, 153,
	154, -177, -388, -368, -365, -390, 141, -305, -376, 154,
	530, 610, 85, 239, -528, -527, 405, 82, 154, -457,
	240, 487, 87, 607, 421, 220, 101, 339, 102, 103,
	-417, -337, -334, -329, -329, -327, -327, -332, 253, -332,
	111, -331, -330, -496, 118, -331, 34, 34, 154, 79,
	153, 82, 82, 16, 16, 82, -331, 82, 82, 82,
	82, 16, 16, -331, 82, 153, 82, 82, 82, 82,
	79, 82, 154, 82, 154, -337, -331, -337, 82, 82,
	82, -331, -331, -331, -337, 82, -331, -331, -331, -331,
	-331, -331, -331, -331, -398, 439, -398, -398, 154, 82,
	87, 154, 22, 154, -168, 36, 37, -292, -291, 87,
	164, 167, 167, 166, -196, -198, -199, -200, -201, -202,
	132, 155, 156, 81, -210, -210, -349, -210, -517, 391,
	35, -529, 154, 40, -527, 480, -144, 316, -353, 79,
	-151, 16, 530, -210, -210, -210, -223, 34, 16, -160,
	-211, -305, 81, 82, 154, -331, -361, 79, -305, -297,
	-270, -270, -210, -305, -270, -270, -316, -318, -318, -314,
	153, -296, -423, 34, -178, 154, -209, -302, -206, -208,
	243, -321, -207, 246, -486, 244, 242, 106, 247, 301,
	107, 237, -302, -302, 243, -243, 239, 34, -302, -258,
	237, 301, 244, 20, -257, 237, 107, -305, 243, 247,
	242, -301, 122, -295, 149, 239, 42, 366, -301, 534,
	-301, -301, -301, -301, -301, -301, -301, 275, 275, -301,
	-301, -301, -301, -301, -301, -301, -301, -301, -301, -301,
	159, -301, -301, -301, -301, -301, -301, 81, 270, 271,
	-518, 391, 30, 347, 347, -529, 30, -152, 341, 30,
	-276, -277, -278, -279, 67, 71, 73, 68, 69, 70,
	74, 30, 154, -303, -307, 34, -305, 87, -303, -156,
	-161, -166, -303, 81, -541, -543, 472, 469, 475, -384,
	-384, 239, 81, 122, -384, -384, 40, -304, -538, 476,
	470, -186, 23, 154, 78, -212, -188, -189, -190, -191,
	-216, -286, 189, 192, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 205, 206, 203, 204, 252, 184, 185,
	186, 187, 207, 170, 190, 171, 172, 173, 174, 175,
	176, 179, 180, 181, 182, 178, -305, -197, -270, -159,
	-161, -305, 87, -305, 141, -270, 119, -6, 117, -130,
	-129, -128, 120, 590, 596, 119, 119, 119, 82, 82,
	82, 154, 82, 82, 82, 154, 82, 154, -460, 449,
	39, 154, 81, 82, 154, 60, 154, 122, 82, 154,
	82, 60, -186, 153, 423, -305, -471, 82, -390, 154,
	239, 153, 153, -366, 369, -304, -368, 20, 530, -286,
	38, -292, 122, 607, 82, -332, -332, 111, -329, -326,
	82, 119, -331, 117, -214, -216, 385, 386, -214, -215,
	-221, 150, 188, 252, 187, 186, 184, 385, 386, -233,
	-305, -331, -331, 82, -331, -331, 16, -305, -233, -327,
	-331, -173, 82, 82, -397, -398, -397, -397, 82, 82,
	82, 82, -397, 82, 82, 82, 82, 82, 82, 82,
	82, 81, -453, -460, -331, -331, -170, -169, 43, 608,
	154, 122, 167, 377, 82, 154, -286, -188, -178, 81,
	-231, 530, -210, -178, -520, 451, 393, 403, -301, -323,
	-322, 343, 41, -440, 414, 399, 400, -367, 266, -305,
	-526, 94, 122, 78, 331, 332, 333, 334, -347, -348,
	-346, -350, -514, 81, 81, 81, 81, -418, 321, -216,
	-210, -160, -305, 16, 154, -513, 153, -1, -305, -360,
	-316, -270, -550, -270, -316, -316, -318, -305, -418, -216,
	34, -256, -213, -286, -207, -485, -486, -349, -305, 107,
	-485, 107, 81, -213, -286, -286, -259, -315, -286, -305,
	-305, -305, -262, -261, -286, -305, -305, -305, 107, 107,
	-238, 40, 47, 48, 49, -301, -301, 191, -241, 40,
	413, 415, 416, 96, 96, 96, 96, 87, 87, 87,
	-301, -301, 96, 87, -307, 87, -487, 166, 44, 45,
	96, 96, 96, 96, 40, 87, -245, 40, 286, 290,
	287, 288, 289, 87, 96, 40, 96, 40, 96, 40,
	-305, 81, -488, -489, 87, -520, -301, 347, -381, 122,
	-323, -525, 316, -145, 91, 31, -182, 232, 229, -514,
	-372, -371, -286, -165, -165, -165, -165, 67, 67, 67,
	72, 67, 72, 67, -278, -372, -167, -178, -307, 82,
	-534, -533, -532, -530, 75, 240, 76, -336, 469, 473,
	474, -368, -319, 87, -375, 14, -210, -210, -439, 296,
	297, 82, 154, -216, -272, 18, 153, -272, 115, -6,
	-126, -128, -331, -6, -331, 592, 359, 593, 87, 96,
	96, -468, 434, 429, 431, 107, -338, -455, -454, 60,
	-153, -176, -447, -491, -453, -305, 60, -153, -447, -305,
	96, 16, -365, -360, 141, 141, -305, 370, -376, 87,
	392, 87, 235, 608, 87, -292, -326, -331, 82, -224,
	175, 174, -224, 82, 82, -425, -425, -424, -427, -424,
	-224, -224, 82, 82, 23, 82, 82, 82, -331, 82,
	82, 154, -444, 489, -397, -397, -397, -397, -397, -397,
	-397, -397, -397, -397, -397, -397, -397, -397, -340, -339,
	258, -468, 44, 45, -291, 87, 87, 87, -200, -216,
	82, 34, -203, -204, -205, -213, -206, -208, 34, 81,
	81, 34, -521, 91, -515, 87, -305, -522, 91, 394,
	152, 345, 40, 395, 396, 411, 340, 96, 96, 401,
	-516, -305, -152, -524, 51, 122, 87, -210, -346, -295,
	149, 277, 324, -267, -266, -305, 87, -203, -203, -203,
	-419, 323, 20, 96, 140, -179, 79, 153, -161, -211,
	-305, 141, 82, -270, -305, -270, -270, -316, -419, -153,
	-260, 44, 46, -216, -483, -305, -481, -483, -305, -481,
	-481, -349, -331, -260, -213, 239, 30, 229, -263, 329,
	330, -377, 302, 112, -377, 154, -168, -305, -233, -233,
	30, 87, 87, -212, 82, 154, 122, -521, -515, 122,
	-382, 87, -522, -526, 122, 87, 154, -182, -182, -270,
	154, 122, -184, -183, 78, 79, -185, 78, -183, 67,
	67, -270, -532, -531, 23, -486, -486, -486, 82, 82,
	-190, 40, -271, 19, 20, 141, -271, 119, 117, 119,
	119, -305, 82, 82, -431, 584, -464, -466, 429, 20,
	20, 14, 82, -447, -447, -360, -376, 414, -210, 154,
	608, -331, 82, -331, 82, 87, -173, 20, -431, 233,
	-153, 82, 154, -153, -232, -265, -305, 87, -203, -153,
	87, -519, 405, 87, 87, 96, 40, 96, 152, 397,
	-441, -145, -523, 91, 122, 607, 81, -301, -301, -301,
	-305, 82, 154, -301, -301, 82, 82, 82, -420, 257,
	96, 140, 96, 140, 96, -303, -161, -305, -270, -513,
	153, -270, -270, -420, -286, -228, -227, -225, 101, 112,
	40, 383, -226, 91, 149, 291, 294, 293, 269, 292,
	-254, -320, 78, 389, 329, 330, -350, 584, 518, 242,
	106, 107, 371, -321, 81, 81, 79, 311, 81, 81,
	-483, 82, -260, -286, 40, -263, 40, 302, -261, 149,
	-233, 82, -489, 87, -519, 87, -384, -524, 87, -514,
	-173, -371, -453, -331, 81, -331, 81, 67, 11, 18,
	-324, -331, -337, 241, -6, 593, 359, -247, 585, 87,
	20, 87, -462, 87, -372, -122, -458, -404, 274, 82,
	82, -397, -400, -399, -403, 435, 303, 442, -337, -247,
	-192, -216, -149, 530, -231, -205, 82, 154, -301, -301,
	82, -149, 20, 530, 344, 40, 96, 40, 398, 87,
	102, 103, -293, -294, 87, -355, -357, -286, 81, -233,
	-235, -304, 150, 87, -266, -324, -324, -229, -230, -264,
	-350, -121, -120, -229, -421, 158, 96, 140, 96, 96,
	-270, -270, -421, -225, 101, -327, 87, -235, -236, 40,
	290, 286, 122, 122, -237, 40, 270, 271, -246, 81,
	301, 14, 191, 81, 107, 107, -210, -355, -355, -484,
	331, 332, 333, 335, 334, -484, -355, -355, 81, -378,
	-377, -327, -301, 149, -523, -174, -177, -482, -305, 242,
	20, 20, -305, -305, -289, 586, 96, 87, 431, -432,
	587, -467, 434, -461, -459, 429, 430, 431, 432, 122,
	82, -402, 114, 397, 401, -325, -328, 96, 99, 183,
	152, -289, 529, -150, 59, 476, -265, -324, -324, -231,
	87, 392, 87, 344, 608, 154, 122, 82, 154, -424,
	-331, -392, 258, 154, -264, -295, -122, -392, -438, 166,
	322, 530, 96, 140, 96, -173, -422, 166, 322, 87,
	87, 96, 81, -448, 30, 87, -356, 81, 82, 82,
	82, 82, -355, -233, -301, 82, 82, 154, 81, 20,
	87, -469, 240, -465, -466, 433, -459, 20, 431, 20,
	20, 87, -401, -402, 401, -325, -328, 582, 440, 440,
	440, -194, -305, 301, 414, -294, 87, -358, -357, -168,
	82, -393, 310, 20, -264, -301, -393, 322, 96, 140,
	96, -174, 322, 82, -331, -341, -301, 82, -249, -248,
	526, -355, -358, 79, -358, 79, -358, 79, -358, 79,
	82, -233, -305, 242, -290, -305, -462, -476, 81, 96,
	-464, -463, -465, 20, -462, 20, -462, -462, 111, 441,
	441, 441, -193, 34, 436, 370, -359, 248, 91, 530,
	329, 330, -168, 20, -394, 303, 304, -395, -408, 306,
	-233, 96, 82, -305, -253, -251, -252, 78, 447, 299,
	300, 82, -484, -484, -484, -484, -254, 82, 154, -480,
	30, 82, -475, -474, -287, -470, -305, 434, 435, 87,
	-462, -401, 87, -301, 87, 328, -286, 81, -406, 307,
	81, -404, 81, -404, 107, 332, -377, -252, 78, -251,
	78, 15, 14, -358, -358, -358, -358, -305, -479, -478,
	-477, 82, 154, 153, -546, -545, 601, 96, -305, -391,
	-396, 308, 96, -327, 81, -327, 81, -405, 305, 81,
	-250, 296, 297, 30, 166, -250, 154, 122, -474, -305,
	87, 82, -410, 81, 20, 82, -391, 82, -391, 81,
	122, -327, 101, 40, 298, -478, 40, -331, 153, -411,
	-409, 258, -395, 82, 82, 82, -391, 96, 82, -305,
	82, 154, -305, -407, 309, 82, -409, -412, 60, 96,
	-416, -413, 81, -264, 260, 132, -416, -264, -415, -414,
	308, 261, 81, 82, 154, -305, 257, 81, -337, -414,
	-413, -337, 82, 82,
}

var yyDef = [...]int{
	23, -2, 1, 2, 3, 19, 4, 20, 21, 22,
	24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
	34, 35, 36, 37, 38, 39, 40, 41, 42, 43,
	44, 45, 46, 47, 48, 49, 50, 51, 52, 0,
	263, 264, 265, 827, 828, 829, 830, 831, 832, 0,
	0, 0, 0, 601, 602, 0, 568, 0, 0, 0,
	0, 0, 0, 458, 459, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 354, 355, 356, 357, 358, 359, 360,
	361, 0, 288, 284, 209, 210, 211, 212, 213, 295,
	296, 435, 0, 0, 0, 0, 682, -2, 56, 0,
	277, 0, 268, 268, 833, 834, 835, 836, 837, 838,
	839, 840, 841, 842, 843, 844, 845, -2, 614, 0,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 343, 344, 345, 339, 340, 342,
	341, -2, 0, 614, 0, 0, 0, 702, 0, 0,
	0, 0, 0, 719, 741, 23, 0, 7, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 0, 0,
	19, 0, 19, 0, 0, 0, 1212, 1213, 1214, 1215,
	-2, 1710, 1688, 1858, 1870, 1871, 1872, 1873, 1874, 1875,
	1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885,
	1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895,
	1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905,
	1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1647, 1648,
	1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658,
	1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668,
	1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678,
	1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1689,
	1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699,
	1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709,
	1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720,
	1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730,
	1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740,
	1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750,
	1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760,
	1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770,
	1771, 1772, 1773, 1775, 1776, 1777, 1778, 1779, 1780, 1781,
	1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791,
	1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801,
	1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811,
	1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821,
	1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831,
	1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841,
	1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851,
	1852, 1853, 1854, 1855, 1856, 1857, 1859, 0, 261, 259,
	1660, 1688, 1710, 1762, 1773, 1774, 1808, 1858, 0, 850,
	0, 660, 0, 665, 1166, 660, 289, 603, 604, 702,
	702, 566, 0, 325, 0, 1701, 329, 0, 0, 0,
	563, 319, 320, 321, 322, 323, 324, 0, 0, 826,
	0, 0, 315, 0, 283, 1764, 0, 0, 0, 0,
	0, 0, 153, 960, 155, 962, 159, 166, 0, 0,
	171, 172, 175, 176, 177, 178, 179, 0, 183, 0,
	185, 188, 0, 190, 191, 0, 194, 195, 196, 0,
	206, 207, 208, 963, 964, 965, -2, 84, 848, 1618,
	1506, 0, 1513, 1514, 1525, 1536, 1292, 1293, 1294, 1295,
	0, 0, 0, 0, 0, 1302, 1303, 0, 1320, 1874,
	1913, 0, 1310, 1311, 1312, 1313, 1314, 93, 105, 106,
	1558, 1559, 1560, 1561, 1562, 1563, 1564, 0, 1566, 1567,
	1568, 1479, 1279, 1212, 0, 1883, 0, 1903, 1908, 1909,
	1910, 1911, 1902, 0, 0, 1464, 0, 1454, 0, 0,
	-2, -2, 0, 0, 1833, -2, 1880, 1899, 1907, 1884,
	1906, 1876, 1877, 1878, 1871, 1872, 1873, 1875, 1885, 1887,
	1898, 0, 1894, 1904, 1905, 0, 0, 0, 0, 107,
	108, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, 1470, -2, 1472, 1473, 1475, -2,
	1477, 1478, -2, 1481, 1482, 1483, -2, -2, 1486, 1487,
	1488, 1489, 1490, 1491, 1494, -2, -2, -2, -2, 1466,
	1467, 1468, 1469, 1458, 1459, 1460, 1461, 1462, 1463, -2,
	-2, -2, 702, 777, 0, -2, 0, 0, 0, 724,
	727, 730, 733, 0, 57, 58, 0, 278, 279, 267,
	269, 0, 273, 0, 266, 0, 0, 0, 0, 992,
	992, 992, 992, 992, 0, 992, 0, 0, 0, 0,
	992, 0, 883, 967, 968, 969, 990, 991, 1054, 0,
	0, 0, 619, 615, 616, 617, 618, 690, 0, 692,
	695, 543, 543, 490, 0, 0, 0, 543, 0, 504,
	496, 0, 0, 0, 543, 0, 0, 697, 697, 0,
	546, 553, 543, 543, -2, 543, 543, 543, 0, 0,
	1004, 510, 511, 512, 496, 496, 515, 516, 517, 528,
	529, 554, 1642, 0, 0, 435, 435, 0, 435, 0,
	435, 435, 435, 621, 1803, 1708, 1779, 1764, 0, 0,
	234, 1833, 239, 0, 1709, 1726, 0, 0, 1744, 0,
	-2, 0, 305, 697, 0, 703, 0, 702, 0, 0,
	0, 0, 0, 435, 435, 435, 435, 435, 1053, 435,
	435, 435, 435, 435, 0, 0, 0, 435, 435, 0,
	0, 742, 743, 738, 739, 740, 744, 745, 5, 6,
	19, 0, 0, 0, 0, 0, 0, 63, 62, 0,
	1619, 1637, 1571, 1572, 1573, 1624, 1575, 1628, 1628, 1628,
	1628, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612,
	1628, 1628, 0, 0, 1617, 1595, 1626, 1626, 1626, 1624,
	1621, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584,
	1585, 1586, 1587, 1588, 1589, 1631, 1631, 1634, 1634, 1631,
	0, 1504, 0, 0, 0, 0, 664, 0, 0, 697,
	-2, 0, 567, 326, 1216, 0, 0, 330, 331, 0,
	0, 346, 0, 349, 334, 335, 336, 0, 133, 0,
	317, 318, 0, 0, 285, 0, 0, 0, 436, 0,
	0, 0, 0, 0, 0, 163, 160, 167, 170, 180,
	187, 0, 199, 201, 204, 161, 168, 173, 174, 181,
	202, 162, 164, 165, 169, 203, 205, 182, 186, 200,
	184, 189, 192, 193, 198, 0, 134, 0, 0, 0,
	0, 0, 1512, 0, 0, 1544, 1545, 1546, 1547, 1548,
	1549, 1550, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	-2, 1506, 0, 0, 1298, 1299, 1300, 1301, 1304, 0,
	1321, 0, 0, 0, 0, 1565, 1569, 0, 1504, 1504,
	0, 1504, 1500, 0, 0, 0, 0, 0, 0, 1504,
	1440, 0, 0, 1442, 1455, 0, 0, 1444, 1445, 0,
	1448, 1449, 1504, 0, 1504, 1453, 1436, 1437, 0, 1500,
	1500, 1500, 0, 0, 1500, 1500, 1500, 1500, 1500, 1500,
	1500, 1500, 1500, 1500, 1500, 1500, 0, 0, 0, 697,
	0, 0, 685, 0, 666, 0, 721, 723, 0, 725,
	726, 728, 729, 731, 732, 734, 735, 59, 0, 0,
	0, 0, 271, 0, 276, 0, 847, 0, 0, 992,
	992, 0, 992, 884, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 992, 992, 992, 0, 1012, 0, 0,
	0, 621, 620, 0, 691, 0, 0, 750, 0, 0,
	489, 0, 496, 543, 543, 502, 503, 498, 497, 549,
	550, 546, 0, 546, 546, 750, 0, 522, 523, 524,
	543, 543, 530, 698, 531, 532, 546, 0, 551, 552,
	750, 0, 0, 750, 750, 0, 540, 541, 542, 0,
	0, 992, 0, 559, 498, 498, 1643, 1644, 0, 0,
	1001, 0, 0, 0, 562, 0, 0, 0, 0, 622,
	214, 217, 0, 220, 0, 1803, 0, 1803, 0, 227,
	0, 0, 0, 0, 0, 0, 257, 258, 0, 0,
	0, 0, 248, 251, 1160, 1161, 957, 958, 252, 253,
	297, 298, 0, 666, 720, 722, 716, 717, 718, 0,
	0, 0, 0, 0, 0, 0, 0, 435, 0, 0,
	0, 0, 0, 597, 0, 863, 599, 0, 0, 0,
	758, 752, 754, 821, 93, 758, 8, 80, 77, 0,
	19, 0, 0, 19, 19, 0, 19, 262, 0, 1640,
	1638, 1639, 1574, 1625, 0, 1600, 0, 1601, 1602, 1603,
	1613, 1614, 0, 0, 1596, 0, 1597, 1598, 1599, 1590,
	0, 1591, 1592, 0, 1593, 1594, 260, 0, 1505, 851,
	0, 639, 652, 634, 0, 641, 0, 1167, 623, 652,
	625, 0, 641, 666, 688, 666, 0, 327, 0, 332,
	0, 0, 348, 350, 351, 352, 337, 338, 564, 313,
	314, 306, 307, 308, 309, 310, 311, 312, 316, 103,
	0, 286, 287, 0, 0, 0, 147, 148, 149, 150,
	151, 152, 154, 138, 586, 588, 949, 961, 0, 952,
	0, 157, 197, 130, 0, 0, 0, 1507, 1508, 1509,
	1510, 1511, 1515, 0, 1517, 1519, 1521, 1523, 0, 1541,
	-2, -2, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287,
	1288, 1289, 1290, 1291, 1526, 1539, 1540, 0, 0, 0,
	0, 0, 0, 1537, 1537, 1532, 0, 1296, 0, 1318,
	1322, 0, 0, 0, 0, 94, 1499, 1407, 1408, 1409,
	1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419,
	1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429,
	1430, 1431, 1432, 1433, 1434, 1435, 0, 0, 1506, 0,
	0, 0, 1501, 1502, 0, 0, 0, 1395, 0, 0,
	1401, 1402, 1403, 0, 647, 0, 1465, 1441, 1456, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 776, 778,
	0, 656, 658, 659, 0, 686, 699, 704, 705, 708,
	55, 60, 53, 1023, 280, 281, 0, 0, 275, 0,
	-2, 0, 0, 0, 992, 0, 0, 898, 0, 433,
	943, 0, 0, 0, 959, 982, 988, 0, 0, 0,
	0, 1027, 885, 890, 891, 892, 886, 887, 893, 894,
	0, 693, 0, 0, 790, 488, 0, 544, 545, 493,
	1764, 498, 750, 750, 505, 499, 506, 548, 507, 508,
	509, 0, 750, 750, 543, 546, 533, 547, 546, 536,
	537, 0, 555, 560, 556, 0, 558, 513, 514, 1029,
	695, 364, 365, 406, 406, 406, 389, 406, 0, 0,
	377, 1645, 0, 0, 0, 0, 386, 1645, 0, 1645,
	1645, 1645, 1645, 1645, 1645, 1645, 0, 0, 1645, 1645,
	1645, 1645, 1645, 1645, 1645, 1645, 1645, 1645, 1645, 0,
	1645, 1645, 1645, 1645, 1645, 1146, 1645, 0, 1002, 396,
	397, 398, 399, 404, 405, 0, 430, 0, 0, 0,
	433, 0, 932, 763, 0, 764, 765, 761, 792, 816,
	816, 0, 816, 796, 1166, 0, 0, 225, 226, 215,
	0, 216, 0, 228, 229, 0, 231, 232, 233, 240,
	1708, 1779, 235, 237, 0, 0, 241, 254, 255, 256,
	0, 0, 246, 247, 0, 0, 300, 301, 303, 0,
	714, 1005, 1006, 1007, 583, 1164, 584, 585, 589, 0,
	0, 592, 593, 594, 595, 596, 865, 0, 0, 937,
	938, 750, 0, 759, 0, 755, 822, 0, 824, 0,
	750, 0, 78, 19, 0, 71, 68, 0, 0, 0,
	0, 0, 1620, 1570, 1641, 0, 0, 0, 1622, 0,
	0, 0, 0, 61, 668, 630, 0, 633, 649, 0,
	653, 0, 0, 645, 638, 642, 0, 0, 662, 624,
	0, 0, 629, 714, 689, 1217, 0, 333, 347, 0,
	0, 0, 0, 141, 946, 0, 142, 146, 136, 0,
	0, 0, 951, 0, 948, 953, 0, 156, 0, 0,
	131, 132, 1017, 1023, 0, 0, 1516, 1518, 1520, 1522,
	1524, 0, 1527, 1537, 1537, 1533, 0, 1528, 0, 1530,
	0, 1507, 0, 1323, 0, 0, 0, 0, 0, 0,
	0, 1385, 1386, 0, 0, 1390, 0, 1392, 1393, 1394,
	1396, 0, 0, 0, 1400, 0, 1439, 1457, 1443, 1446,
	0, 1450, 0, 1452, 0, 702, 0, 0, 1360, 1360,
	1360, 0, 0, 0, 0, 1360, 0, 0, 0, 0,
	0, 0, 0, 0, 1315, 0, 1316, 1317, 0, 779,
	668, 0, 0, 0, 711, 709, 710, 0, 1021, 0,
	282, 270, 272, 0, 0, 0, 853, 854, 856, 0,
	859, 860, 861, 865, 695, 1103, 0, 695, 905, 1645,
	993, 437, 0, 0, 945, 0, 921, 0, 0, 0,
	-2, 0, 0, 0, 0, 0, 1031, 0, 0, 0,
	608, 612, 23, 696, 0, 751, 491, 0, 492, 543,
	500, 501, 750, 1166, 525, 526, 750, 543, 543, 546,
	0, 557, 1031, 0, 0, 1001, 367, 0, 1175, 1176,
	407, 0, 1182, 1191, 992, 1249, 0, 1191, 0, 0,
	1193, 1194, 0, 0, 0, 0, 390, 391, 0, 376,
	0, 0, 0, 0, 375, 0, 0, 417, 0, 0,
	0, 0, 1646, 1645, 1645, 0, 384, 385, 0, 388,
	0, 0, 0, 0, 0, 0, 0, 1645, 1645, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1137, 0, 0, 0, 0, 0, 0, 0, 1152, 1153,
	905, 1645, 0, 0, 0, 437, 919, 928, 0, 0,
	0, 0, 0, 0, 783, 0, 0, 782, 0, 0,
	0, 0, 0, 695, 817, 0, 819, 820, 794, -2,
	0, 763, 799, 1504, 218, 219, 0, 0, 224, 242,
	244, 0, 0, 0, 243, 245, 249, 250, 299, 302,
	304, 684, 0, 0, 0, 1055, 0, 866, 867, 869,
	870, 0, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, 1693, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, 864, 600, 748, 753,
	760, 823, 825, 94, 756, 748, 0, 81, 19, 80,
	72, 73, 0, 19, 0, 0, 0, 0, 1630, 1629,
	1615, 0, 1616, 1627, 1632, 0, 1635, 0, 672, 0,
	0, 652, 654, 0, 0, 652, 0, 0, 661, 0,
	0, 652, 687, 0, 0, 565, 104, 353, 0, 0,
	0, 0, 0, 587, 0, 950, 138, 0, 0, 158,
	0, 0, 0, 1023, 1503, 1529, 1531, 0, 1538, 1534,
	1297, 1305, 1319, 0, 0, 1325, 1337, 1337, 0, 0,
	1328, 1628, 1628, 1331, 1624, 1626, 1624, 1337, 1337, 0,
	95, 0, 0, 1391, 0, 0, 0, 648, 0, 0,
	0, 1358, 1360, 1360, 1366, 1361, 1367, 1368, 1360, 1360,
	1360, 1360, 1373, 1360, 1360, 1360, 1360, 1360, 1360, 1360,
	1360, 1356, 657, 672, 700, 701, 706, 707, 0, 54,
	1023, 0, 274, 0, 0, 858, 0, 0, 0, 1168,
	0, 0, 0, 0, 909, 906, 907, 908, 0, 940,
	438, 439, 440, 441, 0, 0, 0, 944, 0, 932,
	914, 0, 0, 0, 983, 984, 985, 986, 987, -2,
	996, 0, 0, 0, 1168, 1168, 1168, 1039, 0, 1028,
	660, 0, -2, 0, 0, 610, 0, 0, 791, 494,
	750, 518, 0, 534, 750, 750, 543, 561, 1039, 1030,
	0, 366, 408, 0, 1181, 1206, 1192, 1206, 1250, 1206,
	1206, 992, 0, 408, 0, 0, 378, 414, 0, 0,
	0, 0, 374, 411, 708, 415, 416, 418, 0, 420,
	380, 392, 393, 394, 395, 0, 0, 0, 387, 400,
	401, 402, 403, 1114, 1115, 1116, 1119, 1120, 1121, 1122,
	0, 0, 1125, 1126, 1127, 1128, 1129, 1203, 1204, 1205,
	1130, 1131, 1132, 1133, 1134, 1135, 1136, 1154, 1155, 1156,
	1157, 1158, 1159, 1138, 1139, 1140, 1141, 1142, 1143, 1144,
	1145, 0, 0, 1149, 0, 909, 0, 0, 0, 0,
	940, 921, 0, 931, 0, 933, 934, 0, 0, 631,
	750, 292, 0, 786, 780, 0, 769, 784, 785, 772,
	0, 774, 0, 770, 771, 750, 762, 793, 818, 795,
	798, 800, 801, 807, 0, 0, 0, 0, 221, 222,
	223, 230, 0, 457, 236, 715, 1165, 590, 591, 1056,
	1057, 598, 0, 871, 746, 0, 0, 746, 76, 79,
	0, 74, 0, 0, 0, 0, 66, 64, 1623, 0,
	0, 674, 118, 0, 0, 0, 650, 0, 655, 652,
	637, 646, 636, 643, 644, 663, 652, 628, 627, 1218,
	328, 0, 947, 138, 143, 144, 145, 139, 137, 954,
	0, 956, 0, 1019, 0, 0, 1535, 1324, 1306, 1326,
	1338, 1339, 1327, 1307, 1308, 1329, 1330, 1332, 1333, 1334,
	1335, 1336, 1309, 1387, 0, 1389, 1397, 1398, 0, 1447,
	1451, 0, 0, 0, 1364, 1365, 1369, 1370, 1371, 1372,
	1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 702, 1357,
	0, 674, 712, 713, 1022, 1024, 846, 849, 855, 857,
	0, 0, 0, 1169, 1170, 1172, 1173, 1174, 0, 0,
	1168, 0, 882, 0, 0, 900, 901, 911, 0, 0,
	0, 443, 444, 0, 0, 0, 456, 452, 453, 454,
	434, 939, 928, 917, 0, 0, 927, 0, 997, 1645,
	1645, 1645, 0, 0, 1099, 1645, 1645, 0, 0, 0,
	1042, 0, 0, 1033, 0, 816, 0, 0, 750, 609,
	612, 613, 694, 495, 750, 538, 535, 750, 1042, 363,
	379, 409, 0, -2, 0, 1207, 0, 1195, 1207, 0,
	0, 1206, 0, 368, 408, 0, 0, 0, 421, 424,
	425, 422, 1245, 0, 423, 0, 413, 419, 1117, 1118,
	0, 1123, 1124, 0, 1148, 0, 0, 426, 0, 0,
	0, 427, 432, 914, 0, 929, 0, 935, 936, 702,
	0, 0, 766, 787, 0, 0, 767, 0, 768, 773,
	775, 291, 802, 0, 0, 804, 805, 806, 797, 238,
	868, 0, 736, 0, 0, 757, 737, 0, 19, 0,
	0, 69, 1633, 1636, 676, 0, 673, 119, 0, 0,
	0, 0, 651, 635, 626, 140, 135, 955, 121, 0,
	1020, 0, 1399, 0, 1360, 1359, 1353, 0, 676, 0,
	888, 1103, 0, 1010, 0, 1105, 1645, 1645, 0, 888,
	910, 899, 0, 941, 942, 0, 445, 446, 0, 449,
	455, 912, 913, 0, 0, 925, 0, 0, 0, 0,
	989, 1003, 0, 0, 0, -2, 0, -2, 1048, 0,
	1040, 0, 1032, 0, 1035, 750, 750, -2, 606, 611,
	0, 519, 539, 1048, 410, 1208, -2, 1221, 1223, 0,
	1002, 1226, 1227, 0, 0, 0, 0, 0, 0, 1271,
	1235, 0, 0, 1239, 1240, 1241, 0, 0, 1244, 0,
	1553, 1554, 0, 1248, 0, 0, 0, 0, 0, 0,
	0, 1189, 369, 370, 0, 372, 373, 1246, 412, 1645,
	382, 1147, 1150, 1151, 431, 428, 429, 917, 920, 632,
	697, 293, 294, 788, 0, 781, 811, 808, 0, 0,
	872, 747, 749, 70, 75, 0, 0, 678, 0, 675,
	0, 669, 671, 129, 640, 91, 112, 0, 0, 1388,
	1438, 1363, 0, 1354, 0, 1348, 1349, 1350, 1355, 678,
	0, 874, 881, 895, 1008, 1171, 1104, 0, 0, 0,
	1103, 880, 0, 0, 442, 447, 0, 450, 451, 918,
	915, 916, 0, 923, 0, 0, 978, 1624, 0, 998,
	999, 1162, 1163, 1000, 1100, 1101, 1102, 1058, -2, 1111,
	0, 1014, 121, 1058, 1036, 0, 1043, 0, 1041, 1034,
	702, 607, 1045, 1222, 1224, 1225, 1228, 1229, 1230, 1276,
	1277, 1278, 0, 0, 1233, 1273, 1274, 1275, 1234, 0,
	0, 0, 0, 0, 1551, 1552, 1269, 0, 0, 1196,
	1198, 1199, 1200, 1201, 1202, 1197, 0, 0, 0, 1188,
	1190, 371, 0, 1645, 930, 290, 0, 0, 812, 814,
	809, 810, 65, 67, 82, 0, 677, 120, 0, 83,
	0, 109, 0, 122, 123, 0, 0, 0, 0, 0,
	1362, 1351, 0, 0, 0, 0, 0, 1555, 1556, 1557,
	0, 667, 0, 0, 896, 897, 1106, 1107, 1108, 1009,
	902, 0, 904, 448, 922, 925, 0, 971, 0, 708,
	0, 1060, 0, 1001, 1113, 1645, 1016, 1060, 1026, 0,
	1038, 0, 1050, 0, 1044, 697, 362, 0, 1047, 1231,
	1232, 0, 0, 1454, 1645, 0, 1264, 0, 971, 971,
	971, 971, 0, 381, 0, 789, 803, 0, 0, 0,
	92, 96, 0, 118, 115, 0, 124, 0, 0, 0,
	0, 1018, 0, 1340, 0, 0, 0, 1344, 1345, 1346,
	1347, 0, 873, 0, 903, 924, 926, 970, 979, 980,
	708, 1013, 0, 1097, 1112, 0, 1015, 1037, 1049, 0,
	1052, 605, 1046, 1272, 0, 1238, 0, 1243, 1252, 1265,
	0, 0, 1177, 0, 1179, 0, 1183, 0, 1185, 0,
	0, 383, 813, 815, 0, 680, 670, 85, 0, 0,
	113, 114, 116, 0, 125, 0, 127, 128, 0, 1341,
	1342, 1343, 0, 875, 876, 889, 972, 1645, 0, 0,
	976, 977, 981, 0, 1085, 0, 0, 1091, 0, 1098,
	1117, 1051, 1236, 1242, 1251, 1253, 1254, 0, 1266, 1267,
	1268, 1270, 971, 971, 971, 971, 1187, 679, 0, 1025,
	0, 97, 0, 99, 101, 102, 1209, 110, 111, 117,
	126, 1352, 877, 0, 974, 0, 1061, 0, 1063, 0,
	0, 0, 0, 0, 1095, 0, 1237, 1255, 0, 1256,
	0, 0, 0, 1178, 1180, 1184, 1186, 681, 86, 87,
	0, 98, 0, 0, 862, 878, 0, 973, 975, 0,
	1065, 0, 1086, 0, 0, 0, 0, 0, 0, 0,
	1257, 1259, 1260, 0, 0, 1258, 0, 0, 100, 1210,
	879, 1062, 1059, 0, 1097, 1087, 0, 1089, 0, 0,
	0, 0, 1261, 1263, 1262, 88, 89, 90, 0, 0,
	1067, 0, 1083, 1088, 1090, 1092, 0, 1096, 1094, 1211,
	1066, 0, 1079, 1064, 0, 1093, 1068, -2, 0, 1084,
	1069, -2, 0, 1077, 0, 0, 1070, 1078, 0, 1073,
	0, 0, 0, 1072, 0, -2, 1080, 0, 0, 1074,
	-2, 0, 1082, 1081,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 113, 3, 3, 3, 144, 136, 3,
	81, 82, 141, 139, 154, 140, 153, 142, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 609, 606,
	123, 122, 124, 3, 610, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 146, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 607, 135, 608, 147,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 95, 96, 97, 98, 99, 100, 101, 102, 103,
	104, 105, 106, 107, 108, 109, 110, 111, 112, 114,
	115, 116, 117, 118, 119, 120, 121, 125, 126, 127,
	128, 129, 130, 131, 132, 133, 134, 137, 138, 143,
	145, 148, 149, 150, 151, 152, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:766
		{
			yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:773
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:779
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 6:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:787
		{
			yyLOCAL = tree.NewCompoundStmt(yyDollar[2].statementsUnion())
		}
		yyVAL.union = yyLOCAL
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:793
		{
			yyLOCAL = []tree.Statement{yyDollar[1].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 8:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:797
		{
			yyLOCAL = append(yyDollar[1].statementsUnion(), yyDollar[3].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:812
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 19:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:816
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:822
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:827
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 23:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:831
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:863
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:871
		{
			yyLOCAL = &tree.BackupStart{
				Timestamp: yyDollar[2].str,
				IsS3:      false,
				Dir:       yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:879
		{
			yyLOCAL = &tree.BackupStart{
				Timestamp: yyDollar[2].str,
				IsS3:      true,
				Option:    yyDollar[5].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:889
		{
			var connectionId uint64
			switch v := yyDollar[3].item.(type) {
			case uint64:
				connectionId = v
			case int64:
				connectionId = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}

			yyLOCAL = &tree.Kill{
				Option:       yyDollar[2].killOptionUnion(),
				ConnectionId: connectionId,
				StmtOption:   yyDollar[4].statementOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:909
		{
			yyLOCAL = tree.KillOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:915
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeConnection,
			}
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:922
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeQuery,
			}
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:930
		{
			yyLOCAL = tree.StatementOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:936
		{
			yyLOCAL = tree.StatementOption{
				Exist:       true,
				StatementId: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:945
		{
			yyLOCAL = &tree.CallStmt{
				Name: yyDollar[2].procNameUnion(),
				Args: yyDollar[4].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:955
		{
			yyLOCAL = &tree.LeaveStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:963
		{
			yyLOCAL = &tree.IterateStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:971
		{
			yyLOCAL = &tree.WhileStmt{
				Name: "",
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:979
		{
			yyLOCAL = &tree.WhileStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Cond: yyDollar[4].exprUnion(),
				Body: yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:989
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
				Cond: yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:997
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
				Cond: yyDollar[6].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1007
		{
			yyLOCAL = &tree.LoopStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1014
		{
			yyLOCAL = &tree.LoopStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1023
		{
			yyLOCAL = &tree.IfStmt{
				Cond:  yyDollar[2].exprUnion(),
				Body:  yyDollar[4].statementsUnion(),
				Elifs: yyDollar[5].elseIfClauseListUnion(),
				Else:  yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1033
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1037
		{
			yyLOCAL = yyDollar[1].elseIfClauseListUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1043
		{
			yyLOCAL = []*tree.ElseIfStmt{yyDollar[1].elseIfClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1047
		{
			yyLOCAL = append(yyDollar[1].elseIfClauseListUnion(), yyDollar[2].elseIfClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ElseIfStmt
//line mysql_sql.y:1053
		{
			yyLOCAL = &tree.ElseIfStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1062
		{
			yyLOCAL = &tree.CaseStmt{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseList2Union(),
				Else:  yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1072
		{
			yyLOCAL = []*tree.WhenStmt{yyDollar[1].whenClause2Union()}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1076
		{
			yyLOCAL = append(yyDollar[1].whenClauseList2Union(), yyDollar[2].whenClause2Union())
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.WhenStmt
//line mysql_sql.y:1082
		{
			yyLOCAL = &tree.WhenStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1091
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1095
		{
			yyLOCAL = yyDollar[2].statementsUnion()
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1101
		{
			ep := &tree.ExportParam{
				Outfile:     true,
				QueryId:     yyDollar[3].str,
				FilePath:    yyDollar[5].str,
				Fields:      yyDollar[6].fieldsUnion(),
				Lines:       yyDollar[7].linesUnion(),
				Header:      yyDollar[8].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[9].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[10].strsUnion(),
			}
			yyLOCAL = &tree.MoDump{
				ExportParams: ep,
			}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1122
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[9].tailParamUnion()
			yyLOCAL.(*tree.Load).Param.Parallel = yyDollar[10].unsignedOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1135
		{
			yyLOCAL = &tree.LoadExtension{
				Name: tree.Identifier(yyDollar[2].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1142
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1146
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1152
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1156
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1162
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1169
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1177
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1181
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error parallel flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1195
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1199
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1203
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1208
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1212
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1216
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1222
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1231
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1242
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1246
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1252
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1256
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1262
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1266
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1272
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1296
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1315
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1319
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1323
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1328
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1332
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1339
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[3].str,
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1347
		{
			yyVAL.str = ""
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1354
		{
			yyVAL.str = yyDollar[3].str
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1359
		{
			yyVAL.str = "\n"
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1366
		{
			yyVAL.str = yyDollar[3].str
		}
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1371
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1375
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1399
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1403
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1409
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1415
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1433
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1450
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1473
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1477
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1481
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1486
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1490
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1496
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1509
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1520
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1533
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1537
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1547
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1560
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1573
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1579
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1585
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1592
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].cstrUnion().Compare(),
				TabName: yyDollar[3].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1600
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1609
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1613
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1617
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1621
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1625
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1629
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1636
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1640
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1646
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1653
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1662
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1666
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1672
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1676
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1680
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1684
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1688
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1692
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1696
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1700
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1704
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1708
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1712
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1716
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1720
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1724
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1728
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1732
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1736
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1740
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1744
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1748
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1752
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1756
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1760
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1764
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1768
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1772
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1776
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1780
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1784
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1788
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1792
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1796
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1800
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1804
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1808
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1812
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1816
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1820
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1824
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1828
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1832
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1836
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1840
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1844
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1848
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1852
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1856
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1860
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1864
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1868
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1881
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        false,
				CharacterList: yyDollar[3].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1888
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        true,
				CharacterList: yyDollar[4].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1895
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        false,
				CharacterList: yyDollar[4].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.TransactionCharacteristic
//line mysql_sql.y:1905
		{
			yyLOCAL = []*tree.TransactionCharacteristic{yyDollar[1].transactionCharacteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.TransactionCharacteristic
//line mysql_sql.y:1909
		{
			yyLOCAL = append(yyDollar[1].transactionCharacteristicListUnion(), yyDollar[3].transactionCharacteristicUnion())
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TransactionCharacteristic
//line mysql_sql.y:1915
		{
			yyLOCAL = &tree.TransactionCharacteristic{
				IsLevel:   true,
				Isolation: yyDollar[3].isolationLevelUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TransactionCharacteristic
//line mysql_sql.y:1922
		{
			yyLOCAL = &tree.TransactionCharacteristic{
				Access: yyDollar[1].accessModeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1930
		{
			yyLOCAL = tree.ISOLATION_LEVEL_REPEATABLE_READ
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1934
		{
			yyLOCAL = tree.ISOLATION_LEVEL_READ_COMMITTED
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1938
		{
			yyLOCAL = tree.ISOLATION_LEVEL_READ_UNCOMMITTED
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1942
		{
			yyLOCAL = tree.ISOLATION_LEVEL_SERIALIZABLE
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccessModeType
//line mysql_sql.y:1948
		{
			yyLOCAL = tree.ACCESS_MODE_READ_WRITE
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccessModeType
//line mysql_sql.y:1952
		{
			yyLOCAL = tree.ACCESS_MODE_READ_ONLY
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1958
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1965
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1972
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1981
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:2011
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:2015
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:2019
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2025
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2031
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2035
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:2042
		{
			yyVAL.str = yyDollar[3].str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:2048
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:2052
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2058
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2066
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2075
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2084
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2092
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2100
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2123
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2146
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2153
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2160
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     strings.ToLower(yyDollar[1].str),
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2168
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2175
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2182
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2191
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2195
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2199
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2205
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2209
		{
			yyVAL.str = yyDollar[1].str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2215
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2219
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare() + "." + yyDollar[3].cstrUnion().Compare()
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2225
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2229
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2240
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2246
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2251
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2255
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2259
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2263
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2267
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2271
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2275
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2279
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2283
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2289
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2293
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2297
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2301
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2306
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2311
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2317
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].cstrUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2324
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2330
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2337
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2344
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2354
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2361
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2372
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2383
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2387
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:2393
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2403
		{
			yyLOCAL = &tree.LockTableStmt{TableLocks: yyDollar[3].tableLocksUnion()}
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2409
		{
			yyLOCAL = []tree.TableLock{yyDollar[1].tableLockUnion()}
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2413
		{
			yyLOCAL = append(yyDollar[1].tableLocksUnion(), yyDollar[3].tableLockUnion())
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLock
//line mysql_sql.y:2419
		{
			yyLOCAL = tree.TableLock{Table: *yyDollar[1].tableNameUnion(), LockType: yyDollar[2].tableLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2425
		{
			yyLOCAL = tree.TableLockRead
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2429
		{
			yyLOCAL = tree.TableLockReadLocal
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2433
		{
			yyLOCAL = tree.TableLockWrite
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2437
		{
			yyLOCAL = tree.TableLockLowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2443
		{
			yyLOCAL = &tree.UnLockTableStmt{}
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2455
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2461
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2465
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2471
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2475
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2481
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2487
		{
			yyLOCAL = tree.NewReset(tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2498
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2504
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2508
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2512
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2516
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2520
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2524
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2532
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2540
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2550
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2591
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2595
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:2601
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2607
		{
			yyVAL.str = yyDollar[1].str
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2612
		{
			yyVAL.str = "true"
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2613
		{
			yyVAL.str = "false"
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2614
		{
			yyVAL.str = yyDollar[1].str
		}
	case 353:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2619
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2636
		{
			yyLOCAL = &tree.AlterSequence{
				IfExists:    yyDollar[3].boolValUnion(),
				Name:        yyDollar[4].tableNameUnion(),
				Type:        yyDollar[5].alterTypeOptionUnion(),
				IncrementBy: yyDollar[6].incrementByOptionUnion(),
				MinValue:    yyDollar[7].minValueOptionUnion(),
				MaxValue:    yyDollar[8].maxValueOptionUnion(),
				StartWith:   yyDollar[9].startWithOptionUnion(),
				Cycle:       yyDollar[10].cycleOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2652
		{
			yyLOCAL = &tree.AlterView{
				Name:     yyDollar[4].tableNameUnion(),
				ColNames: yyDollar[5].identifierListUnion(),
				AsSource: yyDollar[7].selectUnion(),
				IfExists: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2663
		{
			yyLOCAL = &tree.AlterTable{
				Table:   yyDollar[3].tableNameUnion(),
				Options: yyDollar[4].alterTableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2672
		{
			yyLOCAL = []tree.AlterTableOption{yyDollar[1].alterTableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2676
		{
			yyLOCAL = append(yyDollar[1].alterTableOptionsUnion(), yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2682
		{
			opt := &tree.AlterOptionAdd{
				Def: yyDollar[2].tableDefUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2689
		{
			opt := &tree.AlterTableModifyColumnClause{
				Typ:       tree.AlterTableModifyColumn,
				NewColumn: yyDollar[3].columnTableDefUnion(),
				Position:  yyDollar[4].alterColPositionUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2698
		{
			opt := &tree.AlterTableChangeColumnClause{
				Typ:           tree.AlterTableChangeColumn,
				OldColumnName: yyDollar[3].unresolvedNameUnion(),
				NewColumn:     yyDollar[4].columnTableDefUnion(),
				Position:      yyDollar[5].alterColPositionUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2708
		{
			opt := &tree.AlterTableRenameColumnClause{
				Typ:           tree.AlterTableRenameColumn,
				OldColumnName: yyDollar[3].unresolvedNameUnion(),
				NewColumnName: yyDollar[5].unresolvedNameUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2717
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:         tree.AlterTableAlterColumn,
				ColumnName:  yyDollar[3].unresolvedNameUnion(),
				DefalutExpr: tree.NewAttributeDefault(yyDollar[6].exprUnion()),
				OptionType:  tree.AlterColumnOptionSetDefault,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2727
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:        tree.AlterTableAlterColumn,
				ColumnName: yyDollar[3].unresolvedNameUnion(),
				Visibility: yyDollar[5].indexVisibilityUnion(),
				OptionType: tree.AlterColumnOptionSetVisibility,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2737
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:        tree.AlterTableAlterColumn,
				ColumnName: yyDollar[3].unresolvedNameUnion(),
				OptionType: tree.AlterColumnOptionDropDefault,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2746
		{
			opt := &tree.AlterTableOrderByColumnClause{
				Typ:              tree.AlterTableOrderByColumn,
				AlterOrderByList: yyDollar[3].alterColumnOrderByUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2754
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2758
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2762
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[1].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2766
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2770
		{
			yyLOCAL = tree.AlterTableOption(
				&tree.AlterAddCol{
					Column:   yyDollar[3].columnTableDefUnion(),
					Position: yyDollar[4].alterColPositionUnion(),
				},
			)
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2779
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2785
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2789
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2793
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2797
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2801
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2805
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2809
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2813
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2818
		{
			yyVAL.str = ""
		}
	case 406:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2849
		{
			yyVAL.str = ""
		}
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2853
		{
			yyVAL.str = string("COLUMN")
		}
	case 408:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2858
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ: tree.ColumnPositionNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2864
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ: tree.ColumnPositionFirst,
			}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2870
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ:            tree.ColumnPositionAfter,
				RelativeColumn: yyDollar[2].unresolvedNameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.AlterColumnOrder
//line mysql_sql.y:2879
		{
			yyLOCAL = []*tree.AlterColumnOrder{yyDollar[1].alterColumnOrderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.AlterColumnOrder
//line mysql_sql.y:2883
		{
			yyLOCAL = append(yyDollar[1].alterColumnOrderByUnion(), yyDollar[3].alterColumnOrderUnion())
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AlterColumnOrder
//line mysql_sql.y:2889
		{
			yyLOCAL = &tree.AlterColumnOrder{Column: yyDollar[1].unresolvedNameUnion(), Direction: yyDollar[2].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2896
		{
			yyLOCAL = &tree.AlterTableName{
				Name: yyDollar[1].unresolvedObjectNameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2904
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropIndex,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2911
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropKey,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2918
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[1].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2925
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2932
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropForeignKey,
				Name: tree.Identifier(yyDollar[3].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2939
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ: tree.AlterTableDropPrimaryKey,
			}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2947
		{
			yyLOCAL = &tree.AlterOptionAlterIndex{
				Visibility: yyDollar[3].indexVisibilityUnion(),
				Name:       tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2954
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type:    yyDollar[1].str,
				Enforce: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2961
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type:    yyDollar[1].str,
				Enforce: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2970
		{
			yyLOCAL = tree.VISIBLE_TYPE_VISIBLE
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2974
		{
			yyLOCAL = tree.VISIBLE_TYPE_INVISIBLE
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2981
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].alterAccountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2993
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				DbName:         yyDollar[3].str,
				UpdateConfig:   yyDollar[7].str,
				IsAccountLevel: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3001
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				AccountName:    yyDollar[4].str,
				UpdateConfig:   yyDollar[8].str,
				IsAccountLevel: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3009
		{
			assignments := []*tree.VarAssignmentExpr{
				&tree.VarAssignmentExpr{
					System: true,
					Global: true,
					Name:   yyDollar[6].str,
					Value:  yyDollar[8].exprUnion(),
				},
			}
			yyLOCAL = &tree.SetVar{Assignments: assignments}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:3022
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:3028
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist:          true,
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3039
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:3050
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:3054
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3059
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3063
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3068
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3072
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3088
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3092
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3096
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3100
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3104
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3108
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3112
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3116
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3120
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3124
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3128
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3132
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3136
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3140
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3144
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3148
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3154
		{
			yyVAL.item = nil
		}
	case 456:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3159
		{
			yyVAL.item = nil
		}
	case 488:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3200
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3206
		{
			yyLOCAL = &tree.ShowStages{
				Like: yyDollar[3].comparisionExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3214
		{
			yyLOCAL = &tree.ShowGrants{ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3218
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion(), ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3222
		{
			s := &tree.ShowGrants{}
			roles := []*tree.Role{tree.NewRole(yyDollar[5].cstrUnion().Compare())}
			s.Roles = roles
			s.ShowGrantType = tree.GrantForRole
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:3231
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:3235
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3241
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3246
		{
		}
	case 498:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3250
		{
		}
	case 500:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3255
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3265
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3275
		{
			yyLOCAL = &tree.ShowRolesStmt{
				Like: yyDollar[3].comparisionExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3283
		{
			yyLOCAL = &tree.ShowNodeList{}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3289
		{
			yyLOCAL = &tree.ShowLocks{}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3295
		{
			yyLOCAL = &tree.ShowTableNumber{DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3301
		{
			yyLOCAL = &tree.ShowColumnNumber{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3307
		{
			yyLOCAL = &tree.ShowTableValues{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3313
		{
			yyLOCAL = &tree.ShowTableSize{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3319
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3328
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3332
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3336
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3340
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3344
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3348
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3352
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3356
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3362
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3369
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[7].cstrUnion().Compare()), ExplicitSchema: true}
			tbl := tree.NewTableName(tree.Identifier(yyDollar[5].cstrUnion().Compare()), prefix)
			yyLOCAL = &tree.ShowIndex{
				TableName: *tbl,
				Where:     yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3379
		{
		}
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3381
		{
		}
	case 525:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3390
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3400
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3409
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3413
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3417
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3423
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3429
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3435
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3441
		{
			yyLOCAL = &tree.ShowSequences{
				DBName: yyDollar[3].str,
				Where:  yyDollar[4].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3450
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3460
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3472
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3476
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3482
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3494
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3508
		{
			yyLOCAL = &tree.ShowAccounts{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3514
		{
			yyLOCAL = &tree.ShowPublications{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3521
		{
			yyLOCAL = &tree.ShowSubscriptions{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3526
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3530
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3534
		{
			yyLOCAL = tree.NewComparisonExpr(tree.ILIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3539
		{
			yyVAL.str = ""
		}
	case 547:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3543
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 548:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3549
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3562
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3566
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3572
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3577
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3581
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3585
		{
			yyLOCAL = &tree.ShowCreatePublications{Name: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3591
		{
			yyLOCAL = &tree.ShowBackendServers{}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3597
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3601
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3607
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3613
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3617
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3621
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3627
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3631
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3656
		{
			yyLOCAL = &tree.DropSequence{
				IfExists: yyDollar[3].boolValUnion(),
				Names:    yyDollar[4].tableNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3665
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3674
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3683
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3687
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:3693
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3702
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3711
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3721
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[4].boolValUnion(), Names: yyDollar[5].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3725
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3731
		{
			yyLOCAL = &tree.DropConnector{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3737
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3743
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3747
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3753
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3759
		{
			yyLOCAL = &tree.DropFunction{
				Name: yyDollar[3].functionNameUnion(),
				Args: yyDollar[5].funcArgsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3768
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[3].procNameUnion(),
				IfExists: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3775
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[5].procNameUnion(),
				IfExists: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3786
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3791
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3798
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3814
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3827
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3838
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3842
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3848
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3853
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3860
		{
		}
	case 613:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3862
		{
		}
	case 614:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3865
		{
		}
	case 619:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3874
		{
		}
	case 621:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3878
		{
		}
	case 623:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3883
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3892
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3899
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3905
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3913
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3920
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3927
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3947
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateExprsUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3957
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3961
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3967
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3974
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3980
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3988
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3995
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:4002
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:4021
		{
			yyLOCAL = []*tree.UpdateExpr{}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:4025
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:4030
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:4034
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:4038
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:4044
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4053
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4057
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4063
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4067
		{
			yyVAL.str = yyDollar[3].cstrUnion().Compare()
		}
	case 649:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4073
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4077
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4083
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4088
		{
		}
	case 654:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4092
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4099
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4103
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4110
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4115
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4119
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4125
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4129
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4135
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4139
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:4144
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:4148
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4161
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4168
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4175
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4193
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:4212
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:4218
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4225
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4229
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4242
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4246
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4251
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4255
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4262
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4267
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4274
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4280
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion(), SelectLockInfo: yyDollar[5].selectLockInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4284
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4288
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4292
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), SelectLockInfo: yyDollar[6].selectLockInfoUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4296
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4300
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:4306
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:4313
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:4322
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:4326
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:4332
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4340
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4344
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4349
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4353
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4359
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4363
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4367
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4372
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4376
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4382
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4388
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4392
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:4398
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4403
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4407
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4411
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4416
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4420
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4424
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SelectLockInfo
//line mysql_sql.y:4429
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SelectLockInfo
//line mysql_sql.y:4433
		{
			yyLOCAL = &tree.SelectLockInfo{
				LockType: tree.SelectLockForUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4441
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4445
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4449
		{
			valuesStmt := yyDollar[2].statementUnion().(*tree.ValuesStatement)
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{
				Select: &tree.ValuesClause{
					Rows:    valuesStmt.Rows,
					RowWord: true,
				},
				OrderBy: valuesStmt.OrderBy,
				Limit:   valuesStmt.Limit,
			}}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4463
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4467
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4477
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4487
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4497
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4509
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4517
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4525
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4534
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4542
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4550
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4558
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4566
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4574
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4582
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4590
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4598
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4608
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4619
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4633
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 739:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4637
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4641
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 741:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4646
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4650
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4654
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4663
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4667
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4672
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4676
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4681
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4685
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4691
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4695
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4701
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4705
		{
			yyDollar[2].cstrUnion().SetConfig(0)
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].cstrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4710
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4714
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4719
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4727
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4733
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4741
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4749
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4759
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4765
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4774
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4783
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4792
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4802
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 771:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4806
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 772:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4816
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4820
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 774:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4824
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 775:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4828
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 776:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4834
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4844
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4848
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4854
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4860
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4864
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4870
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4876
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 784:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4880
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 785:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4884
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 786:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4890
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4894
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4900
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4904
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4910
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4914
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4920
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4924
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4934
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4947
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:4953
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4959
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].cstrUnion().Compare()))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:4972
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4983
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4990
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4994
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:5000
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:5010
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:5014
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:5018
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:5023
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:5027
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:5031
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:5035
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5040
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5044
		{
			yyLOCAL = []string{yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5048
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5052
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5056
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5061
		{
			yyVAL.str = ""
		}
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5065
		{
			yyVAL.str = yyDollar[1].str
		}
	case 818:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5069
		{
			yyVAL.str = yyDollar[2].str
		}
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5075
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 821:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5081
		{
			yyLOCAL = tree.NewCStr("", yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5085
		{
			yyLOCAL = yyDollar[1].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5089
		{
			yyLOCAL = yyDollar[2].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5093
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5097
		{
			yyLOCAL = tree.NewCStr(yyDollar[2].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5103
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 846:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5142
		{
			yyLOCAL = &tree.CreateExtension{
				Language: yyDollar[3].str,
				Name:     tree.Identifier(yyDollar[5].str),
				Filename: tree.Identifier(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5152
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5158
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 849:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5164
		{
			yyLOCAL = &tree.CreateProcedure{
				Name: yyDollar[3].procNameUnion(),
				Args: yyDollar[5].procArgsUnion(),
				Body: yyDollar[7].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:5174
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[1].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:5179
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().ToLower()), ExplicitSchema: true}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[3].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5185
		{
			yyLOCAL = tree.ProcedureArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5192
		{
			yyLOCAL = tree.ProcedureArgs{yyDollar[1].procArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5196
		{
			yyLOCAL = append(yyDollar[1].procArgsUnion(), yyDollar[3].procArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArg
//line mysql_sql.y:5202
		{
			yyLOCAL = tree.ProcedureArg(yyDollar[1].procArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureArgDecl
//line mysql_sql.y:5208
		{
			yyLOCAL = tree.NewProcedureArgDecl(yyDollar[1].procArgTypeUnion(), yyDollar[2].unresolvedNameUnion(), yyDollar[3].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5213
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5217
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5221
		{
			yyLOCAL = tree.TYPE_OUT
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5225
		{
			yyLOCAL = tree.TYPE_INOUT
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5232
		{
			if yyDollar[13].str == "" {
				yylex.Error("no function body error")
				return 1
			}
			if yyDollar[11].str == "python" && yyDollar[14].str == "" {
				yylex.Error("no handler error")
				return 1
			}

			yyLOCAL = &tree.CreateFunction{
				Replace:    yyDollar[2].streamOptionalUnion(),
				Name:       yyDollar[4].functionNameUnion(),
				Args:       yyDollar[6].funcArgsUnion(),
				ReturnType: yyDollar[9].funcReturnUnion(),
				Language:   yyDollar[11].str,
				Import:     yyDollar[12].boolValUnion(),
				Body:       yyDollar[13].str,
				Handler:    yyDollar[14].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:5256
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:5261
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5267
		{
			yyLOCAL = tree.FunctionArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5274
		{
			yyLOCAL = tree.FunctionArgs{yyDollar[1].funcArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5278
		{
			yyLOCAL = append(yyDollar[1].funcArgsUnion(), yyDollar[3].funcArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArg
//line mysql_sql.y:5284
		{
			yyLOCAL = tree.FunctionArg(yyDollar[1].funcArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5290
		{
			yyLOCAL = tree.NewFunctionArgDecl(nil, yyDollar[1].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5294
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5298
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5304
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReturnType
//line mysql_sql.y:5310
		{
			yyLOCAL = tree.NewReturnType(yyDollar[1].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5316
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5320
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5326
		{
			yyVAL.str = ""
		}
	case 879:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5333
		{
			yyVAL.str = yyDollar[2].str
		}
	case 880:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5339
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[5].tableNameUnion(),
				ColNames:    yyDollar[6].identifierListUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5348
		{
			yyLOCAL = &tree.CreateView{
				Replace:     yyDollar[2].streamOptionalUnion(),
				Name:        yyDollar[5].tableNameUnion(),
				ColNames:    yyDollar[6].identifierListUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5360
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5372
		{
			yyVAL.str = yyDollar[1].str
		}
	case 884:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5376
		{
			yyVAL.str = yyVAL.str + yyDollar[2].str
		}
	case 885:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5382
		{
			yyVAL.str = "ALGORITHM = " + yyDollar[3].str
		}
	case 886:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5386
		{
			yyVAL.str = "DEFINER = "
		}
	case 887:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5390
		{
			yyVAL.str = "SQL SECURITY " + yyDollar[3].str
		}
	case 888:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5395
		{
			yyVAL.str = ""
		}
	case 889:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:5399
		{
			yyVAL.str = "WITH " + yyDollar[2].str + " CHECK OPTION"
		}
	case 895:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5413
		{
			yyVAL.str = ""
		}
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5421
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 899:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:5427
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5437
		{
			yyVAL.str = yyDollar[1].str
		}
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5441
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 902:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5447
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5454
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5460
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5468
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5474
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5481
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5488
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusRestricted,
			}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5496
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5502
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5511
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5523
		{
			yyLOCAL = &tree.CreatePublication{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Database:    tree.Identifier(yyDollar[6].cstrUnion().Compare()),
				AccountsSet: yyDollar[7].accountsSetOptionUnion(),
				Comment:     yyDollar[8].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5535
		{
			yyLOCAL = &tree.CreateStage{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Url:         yyDollar[5].str,
				Credentials: yyDollar[6].stageCredentialsUnion(),
				Status:      yyDollar[7].stageStatusUnion(),
				Comment:     yyDollar[8].stageCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5547
		{
			yyLOCAL = tree.StageStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5553
		{
			yyLOCAL = tree.StageStatus{
				Exist:  true,
				Option: tree.StageStatusEnabled,
			}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5560
		{
			yyLOCAL = tree.StageStatus{
				Exist:  true,
				Option: tree.StageStatusDisabled,
			}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageComment
//line mysql_sql.y:5568
		{
			yyLOCAL = tree.StageComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.StageComment
//line mysql_sql.y:5574
		{
			yyLOCAL = tree.StageComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageUrl
//line mysql_sql.y:5582
		{
			yyLOCAL = tree.StageUrl{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageUrl
//line mysql_sql.y:5588
		{
			yyLOCAL = tree.StageUrl{
				Exist: true,
				Url:   yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageCredentials
//line mysql_sql.y:5596
		{
			yyLOCAL = tree.StageCredentials{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.StageCredentials
//line mysql_sql.y:5602
		{
			yyLOCAL = tree.StageCredentials{
				Exist:       true,
				Credentials: yyDollar[4].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5611
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5615
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5620
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5624
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5631
		{
			yyVAL.str = yyDollar[3].str
		}
	case 928:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5636
		{
			yyVAL.str = ""
		}
	case 929:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5640
		{
			yyVAL.str = yyDollar[2].str
		}
	case 930:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5646
		{
			yyLOCAL = &tree.AlterStage{
				IfNotExists:       yyDollar[3].boolValUnion(),
				Name:              tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				UrlOption:         yyDollar[6].stageUrlUnion(),
				CredentialsOption: yyDollar[7].stageCredentialsUnion(),
				StatusOption:      yyDollar[8].stageStatusUnion(),
				Comment:           yyDollar[9].stageCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5660
		{
			yyLOCAL = &tree.AlterPublication{
				IfExists:    yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				AccountsSet: yyDollar[5].accountsSetOptionUnion(),
				Comment:     yyDollar[6].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5670
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5674
		{
			yyLOCAL = &tree.AccountsSetOption{
				All: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5680
		{
			yyLOCAL = &tree.AccountsSetOption{
				SetAccounts: yyDollar[2].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5686
		{
			yyLOCAL = &tree.AccountsSetOption{
				AddAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5692
		{
			yyLOCAL = &tree.AccountsSetOption{
				DropAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5701
		{
			yyLOCAL = &tree.DropPublication{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5710
		{
			yyLOCAL = &tree.DropStage{
				IfNotExists: yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5719
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 940:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5724
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5730
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5738
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5844
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5848
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5854
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5864
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5868
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5874
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5884
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5888
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5892
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5897
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5901
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5907
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5914
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5920
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5929
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 959:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5936
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:5945
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:5949
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:5955
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5969
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5973
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5977
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5982
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5986
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5990
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5994
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6000
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6019
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6023
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6045
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6049
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6053
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6057
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6061
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6067
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6071
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:6077
		{
			// Order is parsed but just ignored as MySQL dtree.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:6082
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6087
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6091
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6095
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6099
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6103
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6109
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Name:               tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				SubscriptionOption: yyDollar[5].subscriptionOptionUnion(),
				CreateOptions:      yyDollar[6].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:6120
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:6124
		{
			yyLOCAL = &tree.SubscriptionOption{From: tree.Identifier(yyDollar[2].str), Publication: tree.Identifier(yyDollar[4].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6134
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6138
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6143
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6147
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6153
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6157
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6163
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6167
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6171
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6176
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6180
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6186
		{
			yyLOCAL = &tree.CreateConnector{
				TableName: yyDollar[4].tableNameUnion(),
				Options:   yyDollar[7].connectorOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6195
		{
			yyLOCAL = &tree.ShowConnectors{}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6201
		{
			var taskID uint64
			switch v := yyDollar[4].item.(type) {
			case uint64:
				taskID = v
			case int64:
				taskID = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
			yyLOCAL = &tree.PauseDaemonTask{
				TaskID: taskID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6219
		{
			var taskID uint64
			switch v := yyDollar[4].item.(type) {
			case uint64:
				taskID = v
			case int64:
				taskID = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
			yyLOCAL = &tree.CancelDaemonTask{
				TaskID: taskID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6237
		{
			var taskID uint64
			switch v := yyDollar[4].item.(type) {
			case uint64:
				taskID = v
			case int64:
				taskID = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
			yyLOCAL = &tree.ResumeDaemonTask{
				TaskID: taskID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6255
		{
			yyLOCAL = &tree.CreateStream{
				Replace:     yyDollar[2].streamOptionalUnion(),
				Source:      false,
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				StreamName:  yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Options:     yyDollar[9].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6266
		{
			yyLOCAL = &tree.CreateStream{
				Replace:     yyDollar[2].streamOptionalUnion(),
				Source:      true,
				IfNotExists: yyDollar[5].ifNotExistsUnion(),
				StreamName:  yyDollar[6].tableNameUnion(),
				Defs:        yyDollar[8].tableDefsUnion(),
				Options:     yyDollar[10].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6277
		{
			yyLOCAL = &tree.CreateStream{
				Replace:     yyDollar[2].streamOptionalUnion(),
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				StreamName:  yyDollar[5].tableNameUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				Options:     yyDollar[6].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6288
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6292
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6298
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6310
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6319
		{
			yyLOCAL = &tree.CreateTable{
				IsClusterTable:  true,
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6332
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6339
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Filepath:     yyDollar[2].str,
					CompressType: tree.AUTO,
					Format:       tree.CSV,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6349
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.INLINE,
					Format:   yyDollar[4].str,
					Data:     yyDollar[8].str,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6359
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Option: yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6367
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.S3,
					Option:   yyDollar[4].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6378
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6382
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6387
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6391
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:6398
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6409
		{
			yyLOCAL = &tree.CreateSequence{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        yyDollar[4].tableNameUnion(),
				Type:        yyDollar[5].columnTypeUnion(),
				IncrementBy: yyDollar[6].incrementByOptionUnion(),
				MinValue:    yyDollar[7].minValueOptionUnion(),
				MaxValue:    yyDollar[8].maxValueOptionUnion(),
				StartWith:   yyDollar[9].startWithOptionUnion(),
				Cycle:       yyDollar[10].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6422
		{
			locale := ""
			fstr := "bigint"
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: fstr,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6436
		{
			yyLOCAL = yyDollar[2].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.TypeOption
//line mysql_sql.y:6440
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TypeOption
//line mysql_sql.y:6444
		{
			yyLOCAL = &tree.TypeOption{
				Type: yyDollar[2].columnTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6450
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6454
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6461
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6468
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6475
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6482
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6486
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6490
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6494
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6498
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6505
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6512
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6516
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6523
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.CycleOption
//line mysql_sql.y:6530
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CycleOption
//line mysql_sql.y:6534
		{
			yyLOCAL = &tree.CycleOption{
				Cycle: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CycleOption
//line mysql_sql.y:6540
		{
			yyLOCAL = &tree.CycleOption{
				Cycle: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6546
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6550
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6557
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6564
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6571
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6578
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6582
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6587
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6591
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6595
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:6600
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:6604
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6614
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6618
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: []*tree.UnresolvedName{yyDollar[3].unresolvedNameUnion()},
			}

		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6625
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: yyDollar[4].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6632
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6636
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6645
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6649
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6655
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6659
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:6665
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:6674
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6684
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6688
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6694
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6698
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:6704
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:6711
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6720
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6724
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6729
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6733
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6738
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6742
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6747
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6751
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6761
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6765
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6776
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6784
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6792
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6800
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6811
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6820
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6830
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6840
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6844
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6849
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6853
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ConnectorOption
//line mysql_sql.y:6859
		{
			yyLOCAL = []*tree.ConnectorOption{yyDollar[1].connectorOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.ConnectorOption
//line mysql_sql.y:6863
		{
			yyLOCAL = append(yyDollar[1].connectorOptionsUnion(), yyDollar[3].connectorOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ConnectorOption
//line mysql_sql.y:6869
		{
			yyLOCAL = &tree.ConnectorOption{Key: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ConnectorOption
//line mysql_sql.y:6873
		{
			yyLOCAL = &tree.ConnectorOption{Key: tree.Identifier(yyDollar[1].str), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6878
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6882
		{
			yyLOCAL = yyDollar[3].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6888
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6892
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6898
		{
			yyLOCAL = &tree.CreateStreamWithOption{Key: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6902
		{
			yyLOCAL = &tree.CreateStreamWithOption{Key: tree.Identifier(yyDollar[1].str), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6907
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6911
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6917
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6921
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6925
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6931
		{
			yyLOCAL = tree.NewTableOptionAUTOEXTEND_SIZE(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6935
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6939
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6943
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6947
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6951
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6955
		{
			str := util.DealCommentString(yyDollar[3].str)
			yyLOCAL = tree.NewTableOptionComment(str)
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6960
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6964
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6968
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6972
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6976
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6980
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6984
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6988
		{
			yyLOCAL = tree.NewTableOptionEngineAttr(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6992
		{
			yyLOCAL = tree.NewTableOptionInsertMethod(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6996
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7000
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7004
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7008
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7012
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7016
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7020
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7024
		{
			yyLOCAL = tree.NewTTableOptionStartTrans(true)
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7028
		{
			yyLOCAL = tree.NewTTableOptionSecondaryEngineAttr(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7032
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7036
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7040
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7044
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7048
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7052
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7056
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].cstrUnion().Compare(), "")
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7060
		{
			yyLOCAL = tree.NewTableOptionTablespace("", yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7064
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7068
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:7074
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:7078
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:7084
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7090
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1153:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7094
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:7100
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:7104
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:7108
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:7112
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:7116
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:7120
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:7134
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:7138
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:7147
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:7152
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:7158
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:7165
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:7169
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7175
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7179
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7183
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7189
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7193
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7199
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7208
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7217
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7240
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7265
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.ForeignKey:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.UniqueIndex:
					v.ConstraintSymbol = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7279
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7285
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7294
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7303
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7312
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7321
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7331
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7339
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7345
		{
			yyVAL.str = ""
		}
	case 1192:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7349
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7359
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7365
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7371
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].cstrUnion().Compare()
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7390
		{
			yyVAL.str = ""
		}
	case 1207:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7394
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 1208:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:7400
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7406
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7410
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7414
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7420
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7424
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7428
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7432
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7438
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7442
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7446
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7451
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7455
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7461
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7465
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7471
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7475
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7479
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7483
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7487
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7491
		{
			str := util.DealCommentString(yyDollar[2].str)
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7496
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7500
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7504
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7508
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7512
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7516
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7520
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7524
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7528
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7532
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7545
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7549
		{
			yyLOCAL = tree.NewAttributeVisable(true)
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7553
		{
			yyLOCAL = tree.NewAttributeVisable(false)
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7557
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7561
		{
			yyLOCAL = tree.NewAttributeHeader(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7565
		{
			yyLOCAL = tree.NewAttributeHeaders()
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7571
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7575
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7580
		{
			yyVAL.str = ""
		}
	case 1248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7584
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7590
		{
			yyVAL.str = ""
		}
	case 1250:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7594
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 1251:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:7600
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7612
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7619
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7626
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7633
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7640
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7649
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7655
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7661
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7665
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7669
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7673
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7677
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7682
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7689
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7693
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7697
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:7702
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:7706
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:7711
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:7715
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:7731
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7737
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7741
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7745
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7749
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7753
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7757
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7761
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7765
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7769
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7773
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7777
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7781
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7785
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7791
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7795
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7799
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7803
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7807
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7811
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7815
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7819
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7823
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7827
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7831
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7835
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7840
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7848
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7852
		{
			yyLOCAL = tree.NewBitCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7856
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7860
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7869
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7873
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7877
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7881
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7885
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7891
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7899
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7907
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7916
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7920
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7925
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7929
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:7935
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:7939
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:7945
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7954
		{
			t := yyVAL.columnTypeUnion()
			str := strings.ToLower(t.InternalType.FamilyString)
			if str == "binary" {
				t.InternalType.Scale = -1
			} else if str == "char" {
				if t.InternalType.DisplayWith == -1 {
					t.InternalType.FamilyString = "varchar"
					t.InternalType.Oid = uint32(defines.MYSQL_TYPE_VARCHAR)
				}
			}
		}
	case 1326:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7966
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7983
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8000
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8013
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8026
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8038
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8052
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Scale:              yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8067
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Scale:              yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8082
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8099
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8114
		{
		}
	case 1341:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8121
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8125
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8129
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8135
		{
			yyLOCAL = &tree.FrameBound{Type: tree.CurrentRow}
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8139
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8143
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8147
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:8153
		{
			yyLOCAL = tree.Rows
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:8157
		{
			yyLOCAL = tree.Range
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:8161
		{
			yyLOCAL = tree.Groups
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8167
		{
			yyLOCAL = &tree.FrameClause{
				Type:  yyDollar[1].frameTypeUnion(),
				Start: yyDollar[2].frameBoundUnion(),
				End:   &tree.FrameBound{Type: tree.CurrentRow},
			}
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8175
		{
			yyLOCAL = &tree.FrameClause{
				Type:   yyDollar[1].frameTypeUnion(),
				HasEnd: true,
				Start:  yyDollar[3].frameBoundUnion(),
				End:    yyDollar[5].frameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8185
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8189
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8196
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8201
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8205
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8210
		{
			yyVAL.str = ","
		}
	case 1359:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:8214
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1360:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:8219
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:8226
		{
			hasFrame := true
			var f *tree.FrameClause
			if yyDollar[5].frameClauseUnion() != nil {
				f = yyDollar[5].frameClauseUnion()
			} else {
				hasFrame = false
				f = &tree.FrameClause{Type: tree.Range}
				if yyDollar[4].orderByUnion() == nil {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.Following, UnBounded: true}
				} else {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.CurrentRow}
				}
			}
			yyLOCAL = &tree.WindowSpec{
				PartitionBy: yyDollar[3].exprsUnion(),
				OrderBy:     yyDollar[4].orderByUnion(),
				Frame:       f,
				HasFrame:    hasFrame,
			}
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8252
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      append(yyDollar[4].exprsUnion(), tree.NewNumValWithType(constant.MakeString(yyDollar[6].str), yyDollar[6].str, false, tree.P_char)),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[8].windowSpecUnion(),
				OrderBy:    yyDollar[5].orderByUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8263
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8273
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8283
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8293
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8302
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8311
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8321
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8331
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8341
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8351
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8361
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8371
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8381
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8391
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8401
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8411
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8421
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8431
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1385:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8450
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1386:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8458
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1387:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8466
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1388:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8474
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1389:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8482
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			timeUinit := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1390:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8492
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8500
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8509
		{
			name := tree.SetUnresolvedName("nextval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1393:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8517
		{
			name := tree.SetUnresolvedName("setval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1394:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8525
		{
			name := tree.SetUnresolvedName("currval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8533
		{
			name := tree.SetUnresolvedName("lastval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8541
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(0), "0", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1397:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8552
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(1), "1", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1398:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8562
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(2), "2", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1399:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8574
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(3), "3", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1400:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8585
		{
			column := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1407:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:8607
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1436:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8643
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1437:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8655
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1438:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8667
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1439:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8678
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1440:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8686
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1441:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8693
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1442:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8700
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1443:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8712
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1444:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8720
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].exprUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1445:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8730
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].unresolvedNameUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1446:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8740
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1447:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8748
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1448:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8759
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1449:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8768
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1450:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8777
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1451:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8785
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1452:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8795
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1453:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8803
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1454:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8813
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1455:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8817
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1456:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8823
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1457:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8827
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1464:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8846
		{
		}
	case 1465:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:8848
		{
		}
	case 1499:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8889
		{
			name := tree.SetUnresolvedName("interval")
			str := strings.ToLower(yyDollar[3].str)
			arg2 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1500:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8900
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1501:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8904
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1502:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8908
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1503:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:8914
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1504:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8919
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1505:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8923
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1506:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8929
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1507:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8933
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1508:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8940
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1509:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8944
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1510:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8948
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1511:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8956
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1512:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8960
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1513:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8964
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1514:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8968
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1515:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8974
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1516:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8978
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1517:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8982
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1518:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8986
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1519:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8990
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1520:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8994
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1521:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8998
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1522:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9002
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1523:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9006
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1524:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9010
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1526:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9018
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1527:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9022
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1528:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9026
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1529:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9030
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1530:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9034
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.ILIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1531:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9038
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_ILIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1532:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9042
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1533:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9046
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1534:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9050
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1535:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9054
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1537:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9060
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1538:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9064
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1539:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9070
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1540:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9074
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1541:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9081
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1542:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9085
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1543:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9089
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1544:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9095
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1545:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9099
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1546:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9103
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1547:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9107
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1548:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9111
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1549:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9115
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1550:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9119
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1551:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:9125
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1552:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:9129
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1553:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:9133
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1554:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:9137
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1555:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9143
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1556:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9156
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1557:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9161
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1558:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9167
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1559:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9171
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1560:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9184
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1561:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9189
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1562:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9193
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1563:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9197
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1564:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9201
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1565:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9205
		{
			if strings.HasPrefix(yyDollar[2].str, "0x") {
				yyDollar[2].str = yyDollar[2].str[2:]
			}
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_bit)
		}
		yyVAL.union = yyLOCAL
	case 1566:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9212
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1567:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9216
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1568:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9230
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1569:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9234
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_ScoreBinary)
		}
		yyVAL.union = yyLOCAL
	case 1570:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9241
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1574:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9252
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1575:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9257
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1576:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9263
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1577:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9275
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1578:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9287
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1579:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9299
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1580:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9312
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1581:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9325
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1582:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9338
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1583:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9351
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1584:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9364
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1585:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9377
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1586:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9390
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1587:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9403
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1588:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9416
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1589:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9429
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1590:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9444
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for double out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1591:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9471
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for float out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for float out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1592:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9513
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1593:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9549
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1594:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9585
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1595:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9602
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1596:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9614
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        yyDollar[2].lengthOptUnion(),
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1597:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9634
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        yyDollar[2].lengthOptUnion(),
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1598:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9654
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        yyDollar[2].lengthOptUnion(),
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1599:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9674
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1600:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9690
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1601:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9703
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1602:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9716
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1603:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9729
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1604:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9742
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1605:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9754
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1606:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9766
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1607:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9778
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1608:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9790
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1609:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9802
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1610:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9814
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1611:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9826
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1612:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9838
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1613:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9850
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.ArrayFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1614:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9863
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.ArrayFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1615:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9876
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1616:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9889
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1617:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9902
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1618:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9917
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1619:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9925
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1620:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9934
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1621:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9944
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1622:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:9967
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1623:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:9972
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1624:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9978
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1626:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9985
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1627:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9989
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1628:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9994
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1629:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9998
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1630:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:10004
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1631:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:10010
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1632:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:10017
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1633:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:10024
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1634:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:10033
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 38, // this is the default precision for decimal
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1635:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:10040
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1636:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:10047
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1637:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:10056
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1638:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:10060
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1639:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:10064
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1640:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:10070
		{
		}
	case 1641:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:10072
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1645:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:10082
		{
			yyVAL.str = ""
		}
	case 1646:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:10086
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}
